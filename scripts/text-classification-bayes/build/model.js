/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(global, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/backend_cpu.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/backend_cpu.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MathBackendCPU\": () => (/* binding */ MathBackendCPU)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst whereImpl = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.kernel_impls.whereImpl;\n\nclass MathBackendCPU extends _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.KernelBackend {\n    constructor() {\n        super();\n        this.blockSize = 48;\n        this.firstUse = true;\n        this.data = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DataStorage(this, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.engine)());\n    }\n    nextDataId() {\n        return MathBackendCPU.nextDataId++;\n    }\n    write(values, shape, dtype) {\n        if (this.firstUse) {\n            this.firstUse = false;\n            if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().get('IS_NODE')) {\n                _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.warn('\\n============================\\n' +\n                    'Hi there 👋. Looks like you are running TensorFlow.js in ' +\n                    'Node.js. To speed things up dramatically, install our node ' +\n                    'backend, which binds to TensorFlow C++, by running ' +\n                    'npm i @tensorflow/tfjs-node, ' +\n                    'or npm i @tensorflow/tfjs-node-gpu if you have CUDA. ' +\n                    'Then call require(\\'@tensorflow/tfjs-node\\'); (-gpu ' +\n                    'suffix for CUDA) at the start of your program. ' +\n                    'Visit https://github.com/tensorflow/tfjs-node for more details.' +\n                    '\\n============================');\n            }\n        }\n        const dataId = { id: this.nextDataId() };\n        this.data.set(dataId, { values, dtype, refCount: 1 });\n        return dataId;\n    }\n    /**\n     * Create a data bucket in cpu backend.\n     * @param shape Shape of the `TensorInfo`.\n     * @param dtype DType of the `TensorInfo`.\n     * @param values The value of the `TensorInfo` stored as a flattened array.\n     */\n    makeTensorInfo(shape, dtype, values) {\n        let outId;\n        if (dtype === 'string' && values != null && values.length > 0 &&\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.isString(values[0])) {\n            const encodedValues = values.map(d => _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.encodeString(d));\n            outId = this.write(encodedValues, shape, dtype);\n        }\n        else {\n            outId = this.write(values, shape, dtype);\n        }\n        return { dataId: outId, shape, dtype };\n    }\n    /** Return refCount of a `TensorData`. */\n    refCount(dataId) {\n        if (this.data.has(dataId)) {\n            const tensorData = this.data.get(dataId);\n            return tensorData.refCount;\n        }\n        return 0;\n    }\n    /** Increase refCount of a `TensorData`. */\n    incRef(dataId) {\n        const tensorData = this.data.get(dataId);\n        tensorData.refCount++;\n    }\n    /** Decrease refCount of a `TensorData`. */\n    decRef(dataId) {\n        if (this.data.has(dataId)) {\n            const tensorData = this.data.get(dataId);\n            tensorData.refCount--;\n        }\n    }\n    move(dataId, values, shape, dtype, refCount) {\n        this.data.set(dataId, { values, dtype, refCount });\n    }\n    numDataIds() {\n        return this.data.numDataIds();\n    }\n    async read(dataId) {\n        return this.readSync(dataId);\n    }\n    readSync(dataId) {\n        const { dtype, complexTensorInfos } = this.data.get(dataId);\n        if (dtype === 'complex64') {\n            const realValues = this.readSync(complexTensorInfos.real.dataId);\n            const imagValues = this.readSync(complexTensorInfos.imag.dataId);\n            return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.mergeRealAndImagArrays(realValues, imagValues);\n        }\n        return this.data.get(dataId).values;\n    }\n    bufferSync(t) {\n        const data = this.readSync(t.dataId);\n        let decodedData = data;\n        if (t.dtype === 'string') {\n            try {\n                // Decode the bytes into string.\n                decodedData = data.map(d => _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.decodeString(d));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode encoded string bytes into utf-8');\n            }\n        }\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(t.shape, t.dtype, decodedData);\n    }\n    makeOutput(values, shape, dtype) {\n        const dataId = this.write(values, shape, dtype);\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.engine)().makeTensorFromDataId(dataId, shape, dtype, this);\n    }\n    /**\n     * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n     * is released or memory is not managed in this backend, false if memory is\n     * not cleared.\n     * @param dataId\n     * @oaram force Optional, remove the data regardless of refCount\n     */\n    disposeData(dataId, force = false) {\n        if (this.data.has(dataId)) {\n            this.data.get(dataId).refCount--;\n            if (!force && this.data.get(dataId).refCount > 0) {\n                return false;\n            }\n            const { complexTensorInfos } = this.data.get(dataId);\n            if (complexTensorInfos != null) {\n                this.disposeData(complexTensorInfos.real.dataId, true);\n                this.disposeData(complexTensorInfos.imag.dataId, true);\n            }\n            this.data.delete(dataId);\n        }\n        return true;\n    }\n    disposeIntermediateTensorInfo(tensorInfo) {\n        this.disposeData(tensorInfo.dataId);\n    }\n    async time(f) {\n        const start = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.now();\n        f();\n        const kernelMs = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.now() - start;\n        return { kernelMs };\n    }\n    memory() {\n        return {\n            // Unreliable due to automatic gc. The numbers above are cumulative.\n            unreliable: true,\n            reasons: ['The reported memory is an upper bound. Due to automatic garbage ' +\n                    'collection, the true allocated memory may be less.']\n        };\n    }\n    where(condition) {\n        (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([condition], 'where');\n        const condVals = this.readSync(condition.dataId);\n        return whereImpl(condition.shape, condVals);\n    }\n    dispose() { }\n    floatPrecision() {\n        return 32;\n    }\n    /** Returns the smallest representable number.  */\n    epsilon() {\n        return super.epsilon();\n    }\n}\nMathBackendCPU.nextDataId = 0;\n//# sourceMappingURL=backend_cpu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/backend_cpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/base.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/base.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MathBackendCPU\": () => (/* reexport safe */ _backend_cpu__WEBPACK_IMPORTED_MODULE_1__.MathBackendCPU),\n/* harmony export */   \"version_cpu\": () => (/* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_2__.version),\n/* harmony export */   \"shared\": () => (/* reexport module object */ _shared__WEBPACK_IMPORTED_MODULE_3__)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _backend_cpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./backend_cpu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/backend_cpu.js\");\n/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shared */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/shared.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./version */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/version.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/*\n * base.ts contains all the exports from tfjs-backend-cpu\n * without auto-kernel registration\n */\n\n\n\n\n\n\n// Side effects for default initialization of MathBackendCPU\n(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.registerBackend)('cpu', () => new _backend_cpu__WEBPACK_IMPORTED_MODULE_1__.MathBackendCPU(), 1 /* priority */);\n//# sourceMappingURL=base.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/base.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"assertNotComplex\": () => (/* binding */ assertNotComplex)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction assertNotComplex(tensor, opName) {\n    if (!Array.isArray(tensor)) {\n        tensor = [tensor];\n    }\n    tensor.forEach(t => {\n        if (t != null) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(t.dtype !== 'complex64', () => `${opName} does not support complex64 tensors in the CPU backend.`);\n        }\n    });\n}\n//# sourceMappingURL=cpu_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MathBackendCPU\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.MathBackendCPU),\n/* harmony export */   \"shared\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.shared),\n/* harmony export */   \"version_cpu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.version_cpu)\n/* harmony export */ });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/base.js\");\n/* harmony import */ var _register_all_kernels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./register_all_kernels */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/register_all_kernels.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// All exports from this package should be in base.\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/index.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"simpleAbsImpl\": () => (/* binding */ simpleAbsImpl),\n/* harmony export */   \"abs\": () => (/* binding */ abs),\n/* harmony export */   \"absConfig\": () => (/* binding */ absConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction simpleAbsImpl(vals) {\n    const resultValues = new Float32Array(vals.length);\n    for (let i = 0; i < vals.length; ++i) {\n        resultValues[i] = Math.abs(vals[i]);\n    }\n    return resultValues;\n}\nconst abs = (args) => {\n    const { x } = args.inputs;\n    const cpuBackend = args.backend;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'abs');\n    let resultValues = new Float32Array(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape));\n    const values = cpuBackend.data.get(x.dataId).values;\n    resultValues = simpleAbsImpl(values);\n    return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\nconst absConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Abs,\n    backendName: 'cpu',\n    kernelFunc: abs,\n};\n//# sourceMappingURL=Abs.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Acos.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Acos.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"acos\": () => (/* binding */ acos),\n/* harmony export */   \"acosConfig\": () => (/* binding */ acosConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst acos = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Acos, (xi) => Math.acos(xi));\nconst acosConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Acos,\n    backendName: 'cpu',\n    kernelFunc: acos,\n};\n//# sourceMappingURL=Acos.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Acos.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Acosh.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Acosh.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"acosh\": () => (/* binding */ acosh),\n/* harmony export */   \"acoshConfig\": () => (/* binding */ acoshConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst acosh = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Acosh, (xi) => Math.acosh(xi));\nconst acoshConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Acosh,\n    backendName: 'cpu',\n    kernelFunc: acosh,\n};\n//# sourceMappingURL=Acosh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Acosh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addImpl\": () => (/* binding */ addImpl),\n/* harmony export */   \"addComplexImpl\": () => (/* binding */ addComplexImpl),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"addConfig\": () => (/* binding */ addConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst addImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((a, b) => a + b));\nconst addComplexImpl = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.createComplexBinaryKernelImpl)(((aReal, aImag, bReal, bImag) => {\n    return { real: aReal + bReal, imag: aImag + bImag };\n}));\nconst add = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Add, addImpl, addComplexImpl);\nconst addConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Add,\n    backendName: 'cpu',\n    kernelFunc: add\n};\n//# sourceMappingURL=Add.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AddN.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AddN.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addN\": () => (/* binding */ addN),\n/* harmony export */   \"addNConfig\": () => (/* binding */ addNConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction addN(args) {\n    const { inputs, backend } = args;\n    const tensors = inputs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(inputs, 'addN');\n    const vals = tensors.map(t => backend.data.get(t.dataId).values);\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(tensors[0].shape, tensors[0].dtype);\n    const outVals = outBuf.values;\n    for (let i = 0; i < tensors.length; i++) {\n        const currVals = vals[i];\n        for (let j = 0; j < outVals.length; j++) {\n            outVals[j] += currVals[j];\n        }\n    }\n    return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n}\nconst addNConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.AddN,\n    backendName: 'cpu',\n    kernelFunc: addN\n};\n//# sourceMappingURL=AddN.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AddN.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/All.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/All.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"all\": () => (/* binding */ all),\n/* harmony export */   \"allConfig\": () => (/* binding */ allConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction all(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'all');\n    const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    if (permutedAxes != null) {\n        $x = (0,_Transpose__WEBPACK_IMPORTED_MODULE_2__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, x.shape.length);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('all', axes, $x.shape.length);\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes($x.shape, axes);\n    const reduceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const vals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape), $x.dtype);\n    const aVals = backend.data.get($x.dataId).values;\n    for (let i = 0; i < vals.length; ++i) {\n        const offset = i * reduceSize;\n        let all = aVals[offset];\n        for (let j = 0; j < reduceSize; ++j) {\n            const value = aVals[offset + j];\n            all = all && value;\n        }\n        vals[i] = all;\n    }\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo($x);\n    }\n    const result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n    if (keepDims) {\n        const expandedShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(outShape, origAxes);\n        const reshapedResult = (0,_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: { x: result }, backend, attrs: { shape: expandedShape } });\n        backend.disposeIntermediateTensorInfo(result);\n        return reshapedResult;\n    }\n    return result;\n}\nconst allConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.All,\n    backendName: 'cpu',\n    kernelFunc: all\n};\n//# sourceMappingURL=All.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/All.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Any.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Any.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"any\": () => (/* binding */ any),\n/* harmony export */   \"anyConfig\": () => (/* binding */ anyConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction any(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'any');\n    const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    if (permutedAxes != null) {\n        $x = (0,_Transpose__WEBPACK_IMPORTED_MODULE_2__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, x.shape.length);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('any', axes, $x.shape.length);\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes($x.shape, axes);\n    const reduceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const vals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape), $x.dtype);\n    const aVals = backend.data.get($x.dataId).values;\n    for (let i = 0; i < vals.length; ++i) {\n        const offset = i * reduceSize;\n        let anyVal = aVals[offset];\n        for (let j = 0; j < reduceSize; ++j) {\n            const value = aVals[offset + j];\n            anyVal = anyVal || value;\n        }\n        vals[i] = anyVal;\n    }\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo($x);\n    }\n    const result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n    if (keepDims) {\n        const expandedShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(outShape, origAxes);\n        const reshapedResult = (0,_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: { x: result }, backend, attrs: { shape: expandedShape } });\n        backend.disposeIntermediateTensorInfo(result);\n        return reshapedResult;\n    }\n    return result;\n}\nconst anyConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Any,\n    backendName: 'cpu',\n    kernelFunc: any\n};\n//# sourceMappingURL=Any.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Any.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ArgMax.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ArgMax.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"argMax\": () => (/* binding */ argMax),\n/* harmony export */   \"argMaxConfig\": () => (/* binding */ argMaxConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction argMax(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'argMax');\n    let axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = (0,_Transpose__WEBPACK_IMPORTED_MODULE_2__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    axes = [axes[0]];\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('argMax', axes, $x.shape.length);\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes($x.shape, axes);\n    const outSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape);\n    const vals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(outSize, 'int32');\n    const reduceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const aVals = backend.data.get($x.dataId).values;\n    for (let i = 0; i < vals.length; ++i) {\n        const offset = i * reduceSize;\n        let max = aVals[offset];\n        let maxIndex = 0;\n        for (let j = 0; j < reduceSize; ++j) {\n            const value = aVals[offset + j];\n            if (value > max) {\n                max = value;\n                maxIndex = j;\n            }\n        }\n        vals[i] = maxIndex;\n    }\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return backend.makeTensorInfo(outShape, 'int32', vals);\n}\nconst argMaxConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ArgMax,\n    backendName: 'cpu',\n    kernelFunc: argMax\n};\n//# sourceMappingURL=ArgMax.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ArgMax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ArgMin.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ArgMin.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"argMin\": () => (/* binding */ argMin),\n/* harmony export */   \"argMinConfig\": () => (/* binding */ argMinConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction argMin(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'argMin');\n    let axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = (0,_Transpose__WEBPACK_IMPORTED_MODULE_2__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    axes = [axes[0]];\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('argMin', axes, $x.shape.length);\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes($x.shape, axes);\n    const outSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape);\n    const vals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(outSize, 'int32');\n    const reduceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const aVals = backend.data.get($x.dataId).values;\n    for (let i = 0; i < vals.length; ++i) {\n        const offset = i * reduceSize;\n        let min = aVals[offset];\n        let minIndex = 0;\n        for (let j = 0; j < reduceSize; ++j) {\n            const value = aVals[offset + j];\n            if (value < min) {\n                min = value;\n                minIndex = j;\n            }\n        }\n        vals[i] = minIndex;\n    }\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return backend.makeTensorInfo(outShape, 'int32', vals);\n}\nconst argMinConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ArgMin,\n    backendName: 'cpu',\n    kernelFunc: argMin\n};\n//# sourceMappingURL=ArgMin.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ArgMin.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Asin.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Asin.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"asin\": () => (/* binding */ asin),\n/* harmony export */   \"asinConfig\": () => (/* binding */ asinConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst asin = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Asin, (xi) => Math.asin(xi));\nconst asinConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Asin,\n    backendName: 'cpu',\n    kernelFunc: asin,\n};\n//# sourceMappingURL=Asin.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Asin.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Asinh.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Asinh.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"asinh\": () => (/* binding */ asinh),\n/* harmony export */   \"asinhConfig\": () => (/* binding */ asinhConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst asinh = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Asinh, (xi) => Math.asinh(xi));\nconst asinhConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Asinh,\n    backendName: 'cpu',\n    kernelFunc: asinh,\n};\n//# sourceMappingURL=Asinh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Asinh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atan\": () => (/* binding */ atan),\n/* harmony export */   \"atanConfig\": () => (/* binding */ atanConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst atan = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Atan, (xi) => Math.atan(xi));\nconst atanConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Atan,\n    backendName: 'cpu',\n    kernelFunc: atan,\n};\n//# sourceMappingURL=Atan.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan2.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan2.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atan2Impl\": () => (/* binding */ atan2Impl),\n/* harmony export */   \"atan2\": () => (/* binding */ atan2),\n/* harmony export */   \"atan2Config\": () => (/* binding */ atan2Config)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst atan2Impl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((aValue, bValue) => Math.atan2(aValue, bValue));\nconst atan2 = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Atan2, atan2Impl);\nconst atan2Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Atan2,\n    backendName: 'cpu',\n    kernelFunc: atan2,\n};\n//# sourceMappingURL=Atan2.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atanh.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atanh.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atanh\": () => (/* binding */ atanh),\n/* harmony export */   \"atanhConfig\": () => (/* binding */ atanhConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst atanh = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Atanh, (xi) => Math.atanh(xi));\nconst atanhConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Atanh,\n    backendName: 'cpu',\n    kernelFunc: atanh,\n};\n//# sourceMappingURL=Atanh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atanh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPool\": () => (/* binding */ avgPool),\n/* harmony export */   \"avgPoolConfig\": () => (/* binding */ avgPoolConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _utils_pool_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/pool_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction avgPool(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'avgPool');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = 1;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    let res;\n    if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n        res = (0,_Identity__WEBPACK_IMPORTED_MODULE_2__.identity)({ inputs: { x }, backend });\n    }\n    else {\n        const xValues = backend.data.get(x.dataId).values;\n        const strides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape);\n        const buffer = (0,_utils_pool_utils__WEBPACK_IMPORTED_MODULE_3__.pool)(xValues, x.shape, x.dtype, strides, convInfo, 'avg');\n        res = backend.makeTensorInfo(convInfo.outShape, x.dtype, buffer.values);\n    }\n    return res;\n}\nconst avgPoolConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.AvgPool,\n    backendName: 'cpu',\n    kernelFunc: avgPool\n};\n//# sourceMappingURL=AvgPool.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool3D.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool3D.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPool3D\": () => (/* binding */ avgPool3D),\n/* harmony export */   \"avgPool3DConfig\": () => (/* binding */ avgPool3DConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _utils_pool_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/pool_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction avgPool3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dimRoundingMode, dataFormat } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'avgPool3d');\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool3DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode, dataFormat);\n    const xValues = backend.data.get(x.dataId).values;\n    const outBuf = (0,_utils_pool_utils__WEBPACK_IMPORTED_MODULE_2__.pool3d)(xValues, x.shape, x.dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape), convInfo, 'avg');\n    return backend.makeTensorInfo(outBuf.shape, 'float32', outBuf.values);\n}\nconst avgPool3DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.AvgPool3D,\n    backendName: 'cpu',\n    kernelFunc: avgPool3D\n};\n//# sourceMappingURL=AvgPool3D.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool3D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool3DGrad.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool3DGrad.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPool3DGrad\": () => (/* binding */ avgPool3DGrad),\n/* harmony export */   \"avgPool3DGradConfig\": () => (/* binding */ avgPool3DGradConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction avgPool3DGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([dy, input], 'avgPool3DGrad');\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool3DInfo(input.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const filterDepth = convInfo.filterDepth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const dilationDepth = convInfo.dilationDepth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n    const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n    const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n    const dx = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(input.shape, 'float32');\n    const avgMultiplier = 1 / (filterDepth * filterHeight * filterWidth);\n    const dyBuf = backend.bufferSync(dy);\n    for (let batch = 0; batch < convInfo.batchSize; ++batch) {\n        for (let channel = 0; channel < convInfo.inChannels; ++channel) {\n            for (let dxDepth = 0; dxDepth < convInfo.inDepth; ++dxDepth) {\n                for (let dxRow = 0; dxRow < convInfo.inHeight; ++dxRow) {\n                    for (let dxCol = 0; dxCol < convInfo.inWidth; ++dxCol) {\n                        // Shader code begins.\n                        const dyDepthCorner = dxDepth - padFront;\n                        const dyRowCorner = dxRow - padTop;\n                        const dyColCorner = dxCol - padLeft;\n                        let dotProd = 0;\n                        for (let wDepth = 0; wDepth < effectiveFilterDepth; wDepth += dilationDepth) {\n                            const dyDepth = (dyDepthCorner + wDepth) / strideDepth;\n                            if (dyDepth < 0 || dyDepth >= convInfo.outDepth ||\n                                Math.floor(dyDepth) !== dyDepth) {\n                                continue;\n                            }\n                            for (let wRow = 0; wRow < effectiveFilterHeight; wRow += dilationHeight) {\n                                const dyRow = (dyRowCorner + wRow) / strideHeight;\n                                if (dyRow < 0 || dyRow >= convInfo.outHeight ||\n                                    Math.floor(dyRow) !== dyRow) {\n                                    continue;\n                                }\n                                for (let wCol = 0; wCol < effectiveFilterWidth; wCol += dilationWidth) {\n                                    const dyCol = (dyColCorner + wCol) / strideWidth;\n                                    if (dyCol < 0 || dyCol >= convInfo.outWidth ||\n                                        Math.floor(dyCol) !== dyCol) {\n                                        continue;\n                                    }\n                                    const pixel = dyBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                                    dotProd += pixel;\n                                }\n                            }\n                        }\n                        dx.set(dotProd * avgMultiplier, batch, dxDepth, dxRow, dxCol, channel);\n                    }\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nconst avgPool3DGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.AvgPool3DGrad,\n    backendName: 'cpu',\n    kernelFunc: avgPool3DGrad\n};\n//# sourceMappingURL=AvgPool3DGrad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool3DGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPoolGrad.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPoolGrad.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPoolGrad\": () => (/* binding */ avgPoolGrad),\n/* harmony export */   \"avgPoolGradConfig\": () => (/* binding */ avgPoolGradConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction avgPoolGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([dy, input], 'avgPoolGrad');\n    const { filterSize, strides, pad } = attrs;\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad);\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n    const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n    const dx = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(x.shape, 'float32');\n    const avgMultiplier = 1 / (filterHeight * filterWidth);\n    const dyData = backend.data.get(dy.dataId).values;\n    const dyBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(dy.shape, 'float32', dyData);\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n        for (let d = 0; d < convInfo.inChannels; ++d) {\n            for (let dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n                for (let dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n                    // Shader code begins.\n                    const dyRCorner = dxR - padTop;\n                    const dyCCorner = dxC - padLeft;\n                    let dotProd = 0;\n                    for (let wR = 0; wR < effectiveFilterHeight; wR += dilationHeight) {\n                        const dyR = (dyRCorner + wR) / strideHeight;\n                        if (dyR < 0 || dyR >= convInfo.outHeight ||\n                            Math.floor(dyR) !== dyR) {\n                            continue;\n                        }\n                        for (let wC = 0; wC < effectiveFilterWidth; wC += dilationWidth) {\n                            const dyC = (dyCCorner + wC) / strideWidth;\n                            if (dyC < 0 || dyC >= convInfo.outWidth ||\n                                Math.floor(dyC) !== dyC) {\n                                continue;\n                            }\n                            const pixel = dyBuf.get(b, dyR, dyC, d);\n                            dotProd += pixel;\n                        }\n                    }\n                    dx.set(dotProd * avgMultiplier, b, dxR, dxC, d);\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nconst avgPoolGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.AvgPoolGrad,\n    backendName: 'cpu',\n    kernelFunc: avgPoolGrad\n};\n//# sourceMappingURL=AvgPoolGrad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPoolGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchMatMul.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchMatMul.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchMatMul\": () => (/* binding */ batchMatMul),\n/* harmony export */   \"batchMatMulConfig\": () => (/* binding */ batchMatMulConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction batchMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b } = inputs;\n    const { transposeA, transposeB } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([a, b], 'matMul');\n    const aRank = a.shape.length;\n    const bRank = b.shape.length;\n    const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n    const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n    const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n    const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n    const outerDimsA = a.shape.slice(0, -2);\n    const outerDimsB = b.shape.slice(0, -2);\n    const batchDimA = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outerDimsA);\n    const batchDimB = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outerDimsB);\n    const batchDimsCompatible = batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(aRank >= 2 && bRank >= 2 && batchDimsCompatible, () => `Error in matMul: the input batch dimensions must either be the ` +\n        `same or at least one input batch dimension must be 1. Got input ` +\n        `batch dimensions of (${outerDimsA}) and (${outerDimsB}).`);\n    const outShapeOuterDims = batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\n    const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(innerShapeA === innerShapeB, () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n        `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n        `${b.shape} and transposeA=${transposeA}` +\n        ` and transposeB=${transposeB} must match.`);\n    const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n        [batchDimA, outerShapeA, innerShapeA];\n    const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n        [batchDimB, innerShapeB, outerShapeB];\n    // The rest of the implementation is designed to operate on rank-3 tensors\n    const a3d = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: a }, backend, attrs: { shape: a3dShape } });\n    const b3d = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: b }, backend, attrs: { shape: b3dShape } });\n    const sharedDim = transposeA ? a3d.shape[1] : a3d.shape[2];\n    const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n    const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n    const batchDim = Math.max(batchDimA, batchDimB);\n    const a3dValues = backend.data.get(a3d.dataId).values;\n    const b3dValues = backend.data.get(b3d.dataId).values;\n    const a3dStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(a3d.shape);\n    const b3dStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(b3d.shape);\n    const [aBatch, aOuterStep, aInnerStep] = transposeA ?\n        [a3dStrides[0], 1, a3dStrides[1]] :\n        [a3dStrides[0], a3dStrides[1], 1];\n    const [bInnerStep, bOuterStep, bBatch] = transposeB ?\n        [1, b3dStrides[1], b3dStrides[0]] :\n        [b3dStrides[1], 1, b3dStrides[0]];\n    const size = leftDim * rightDim;\n    const result = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)([batchDim, leftDim, rightDim], a3d.dtype);\n    const resVals = result.values;\n    const blockSize = backend.blockSize;\n    for (let bi = 0; bi < batchDim; bi++) {\n        for (let i0 = 0; i0 < leftDim; i0 += blockSize) {\n            for (let j0 = 0; j0 < rightDim; j0 += blockSize) {\n                for (let k0 = 0; k0 < sharedDim; k0 += blockSize) {\n                    // for when blockSize doesn't evenly divide the input\n                    const iBlock = Math.min(i0 + blockSize, leftDim);\n                    const jBlock = Math.min(j0 + blockSize, rightDim);\n                    const kBlock = Math.min(k0 + blockSize, sharedDim);\n                    for (let i = i0; i < iBlock; i++) {\n                        for (let j = j0; j < jBlock; j++) {\n                            let sum = 0.0;\n                            for (let k = k0; k < kBlock; k++) {\n                                const batchOffsetA = Math.min(bi, batchDimA - 1) * aBatch;\n                                const batchOffsetB = Math.min(bi, batchDimB - 1) * bBatch;\n                                const aVal = a3dValues[batchOffsetA + i * aOuterStep + k * aInnerStep];\n                                const bVal = b3dValues[k * bInnerStep + j * bOuterStep + batchOffsetB];\n                                sum += aVal * bVal;\n                            }\n                            resVals[bi * size + (i * rightDim + j)] += sum;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    backend.disposeIntermediateTensorInfo(a3d);\n    backend.disposeIntermediateTensorInfo(b3d);\n    // set correct shape on output.\n    return backend.makeTensorInfo(outShape, result.dtype, result.values);\n}\nconst batchMatMulConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.BatchMatMul,\n    backendName: 'cpu',\n    kernelFunc: batchMatMul,\n};\n//# sourceMappingURL=BatchMatMul.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchMatMul.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchNorm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchNorm.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchNorm\": () => (/* binding */ batchNorm),\n/* harmony export */   \"batchNormConfig\": () => (/* binding */ batchNormConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction batchNorm(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, scale, offset, mean, variance } = inputs;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(mean.shape.length === variance.shape.length, () => 'Batch normalization gradient requires mean and variance to have ' +\n        'equal ranks.');\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(offset == null || mean.shape.length === offset.shape.length, () => 'Batch normalization gradient requires mean and offset to have ' +\n        'equal ranks.');\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(scale == null || mean.shape.length === scale.shape.length, () => 'Batch normalization gradient requires mean and scale to have ' +\n        'equal ranks.');\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x, mean, variance, scale, offset], 'batchNorm');\n    let { varianceEpsilon } = attrs;\n    if (varianceEpsilon == null) {\n        varianceEpsilon = 0.001;\n    }\n    const xVals = backend.data.get(x.dataId).values;\n    const mVals = backend.data.get(mean.dataId).values;\n    const varVals = backend.data.get(variance.dataId).values;\n    const sVals = scale ? backend.data.get(scale.dataId).values :\n        new Float32Array([1]);\n    const offVals = offset ?\n        backend.data.get(offset.dataId).values :\n        new Float32Array([0]);\n    const outVals = new Float32Array(xVals.length);\n    const offValsLength = offVals.length;\n    const sValsLength = sVals.length;\n    const varValsLength = varVals.length;\n    const mValsLength = mVals.length;\n    let offi = 0;\n    let mi = 0;\n    let si = 0;\n    let vi = 0;\n    for (let i = 0; i < xVals.length; ++i) {\n        outVals[i] = offVals[offi++] +\n            (xVals[i] - mVals[mi++]) * sVals[si++] /\n                Math.sqrt(varVals[vi++] + varianceEpsilon);\n        if (offi >= offValsLength) {\n            offi = 0;\n        }\n        if (mi >= mValsLength) {\n            mi = 0;\n        }\n        if (si >= sValsLength) {\n            si = 0;\n        }\n        if (vi >= varValsLength) {\n            vi = 0;\n        }\n    }\n    return backend.makeTensorInfo(x.shape, x.dtype, outVals);\n}\nconst batchNormConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FusedBatchNorm,\n    backendName: 'cpu',\n    kernelFunc: batchNorm,\n};\n//# sourceMappingURL=BatchNorm.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchNorm.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchToSpaceND.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchToSpaceND.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchToSpaceND\": () => (/* binding */ batchToSpaceND),\n/* harmony export */   \"batchToSpaceNDConfig\": () => (/* binding */ batchToSpaceNDConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _Slice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Slice */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\nfunction batchToSpaceND(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, crops } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x], 'batchToSpaceND');\n    const prod = blockShape.reduce((a, b) => a * b);\n    const reshaped = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getReshaped(x.shape, blockShape, prod);\n    const permuted = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getPermuted(reshaped.length, blockShape.length);\n    const reshapedPermuted = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n    const sliceBeginCoords = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getSliceBeginCoords(crops, blockShape.length);\n    const sliceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n    const xReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x }, backend, attrs: { shape: reshaped } });\n    const xTransposed = (0,_Transpose__WEBPACK_IMPORTED_MODULE_3__.transpose)({ inputs: { x: xReshaped }, backend, attrs: { perm: permuted } });\n    const xTransposedReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: xTransposed }, backend, attrs: { shape: reshapedPermuted } });\n    const result = (0,_Slice__WEBPACK_IMPORTED_MODULE_4__.slice)({\n        inputs: { x: xTransposedReshaped },\n        backend,\n        attrs: { begin: sliceBeginCoords, size: sliceSize }\n    });\n    backend.disposeIntermediateTensorInfo(xReshaped);\n    backend.disposeIntermediateTensorInfo(xTransposed);\n    backend.disposeIntermediateTensorInfo(xTransposedReshaped);\n    return result;\n}\nconst batchToSpaceNDConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.BatchToSpaceND,\n    backendName: 'cpu',\n    kernelFunc: batchToSpaceND\n};\n//# sourceMappingURL=BatchToSpaceND.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchToSpaceND.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bincount\": () => (/* binding */ bincount),\n/* harmony export */   \"bincountConfig\": () => (/* binding */ bincountConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Bincount_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bincount_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction bincount(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, weights } = inputs;\n    const { size } = attrs;\n    const xVals = backend.data.get(x.dataId).values;\n    const weightsVals = backend.data.get(weights.dataId).values;\n    const outVals = (0,_Bincount_impl__WEBPACK_IMPORTED_MODULE_1__.bincountImpl)(xVals, weightsVals, weights.dtype, weights.shape, size);\n    return backend.makeTensorInfo([size], weights.dtype, outVals);\n}\nconst bincountConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Bincount,\n    backendName: 'cpu',\n    kernelFunc: bincount\n};\n//# sourceMappingURL=Bincount.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bincountImpl\": () => (/* binding */ bincountImpl),\n/* harmony export */   \"bincountReduceImpl\": () => (/* binding */ bincountReduceImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction bincountImpl(xVals, weightsVals, weightsDtype, weightsShape, size) {\n    const weightsSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(weightsShape);\n    const outVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(size, weightsDtype);\n    for (let i = 0; i < xVals.length; i++) {\n        const value = xVals[i];\n        if (value < 0) {\n            throw new Error('Input x must be non-negative!');\n        }\n        if (value >= size) {\n            continue;\n        }\n        if (weightsSize > 0) {\n            outVals[value] += weightsVals[i];\n        }\n        else {\n            outVals[value] += 1;\n        }\n    }\n    return outVals;\n}\nfunction bincountReduceImpl(xBuf, weightsBuf, size, binaryOutput = false) {\n    const numRows = xBuf.shape[0];\n    const numCols = xBuf.shape[1];\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)([numRows, size], weightsBuf.dtype);\n    for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < numCols; j++) {\n            const value = xBuf.get(i, j);\n            if (value < 0) {\n                throw new Error('Input x must be non-negative!');\n            }\n            if (value >= size) {\n                continue;\n            }\n            if (binaryOutput) {\n                outBuf.set(1, i, value);\n            }\n            else {\n                if (weightsBuf.size > 0) {\n                    outBuf.set(outBuf.get(i, value) + weightsBuf.get(i, j), i, value);\n                }\n                else {\n                    outBuf.set(outBuf.get(i, value) + 1, i, value);\n                }\n            }\n        }\n    }\n    return outBuf;\n}\n//# sourceMappingURL=Bincount_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cast\": () => (/* binding */ cast),\n/* harmony export */   \"castConfig\": () => (/* binding */ castConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_zeros_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/zeros_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js\");\n/* harmony import */ var _Real__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Real */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\nfunction cast(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dtype } = attrs;\n    // Casting to complex64.\n    if (dtype === 'complex64') {\n        if (x.dtype === 'complex64') {\n            return (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x }, backend });\n        }\n        const zerosTensorInfo = (0,_utils_zeros_impl__WEBPACK_IMPORTED_MODULE_2__.zeros)(backend, x.shape, x.dtype);\n        const floatX = cast({ inputs: { x }, backend, attrs: { dtype: 'float32' } });\n        const result = (0,_Complex__WEBPACK_IMPORTED_MODULE_3__.complex)({ inputs: { real: floatX, imag: zerosTensorInfo }, backend });\n        backend.disposeIntermediateTensorInfo(zerosTensorInfo);\n        backend.disposeIntermediateTensorInfo(floatX);\n        return result;\n    }\n    // Casting from complex64\n    if (x.dtype === 'complex64') {\n        const realPart = (0,_Real__WEBPACK_IMPORTED_MODULE_4__.real)({ inputs: { input: x }, backend });\n        const result = cast({ inputs: { x: realPart }, backend, attrs: { dtype } });\n        backend.disposeIntermediateTensorInfo(realPart);\n        return result;\n    }\n    if (!_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.hasEncodingLoss(x.dtype, dtype)) {\n        // We don't change the underlying data, since we cast to higher\n        // precision.\n        const result = (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x }, backend });\n        return { dataId: result.dataId, shape: result.shape, dtype };\n    }\n    if (dtype === 'int32') {\n        const values = backend.data.get(x.dataId).values;\n        const resultValues = Int32Array.from(values);\n        return backend.makeTensorInfo(x.shape, 'int32', resultValues);\n    }\n    if (dtype === 'bool') {\n        // This is essentially the result of notEqual(x, 0). We avoid using\n        // kernel notEqual to avoid circular dependency, i.e. binary_utils ->\n        // cast -> notEqual -> binary_utils.\n        const xVals = backend.data.get(x.dataId).values;\n        const zero = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toTypedArray([0], x.dtype);\n        const [resultData, resultShape] = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_5__.createSimpleBinaryKernelImpl)((a, b) => (a !== b) ? 1 : 0)(x.shape, [], xVals, zero, 'bool');\n        return backend.makeTensorInfo(resultShape, 'bool', resultData);\n    }\n    throw new Error(`Error in Cast: failed to cast ${x.dtype} to ${dtype}`);\n}\nconst castConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cast,\n    backendName: 'cpu',\n    kernelFunc: cast\n};\n//# sourceMappingURL=Cast.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ceilImpl\": () => (/* binding */ ceilImpl),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"ceilConfig\": () => (/* binding */ ceilConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst ceilImpl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => Math.ceil(xi));\nconst ceil = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ceil, ceilImpl);\nconst ceilConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ceil,\n    backendName: 'cpu',\n    kernelFunc: ceil,\n};\n//# sourceMappingURL=Ceil.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Clip.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Clip.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clip\": () => (/* binding */ clip),\n/* harmony export */   \"clipConfig\": () => (/* binding */ clipConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst clip = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ClipByValue, (xi, attrs) => {\n    const clipAttrs = attrs;\n    if (xi > clipAttrs.clipValueMax) {\n        return clipAttrs.clipValueMax;\n    }\n    return xi < clipAttrs.clipValueMin ? clipAttrs.clipValueMin : xi;\n});\nconst clipConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ClipByValue,\n    backendName: 'cpu',\n    kernelFunc: clip,\n};\n//# sourceMappingURL=Clip.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Clip.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"complex\": () => (/* binding */ complex),\n/* harmony export */   \"complexConfig\": () => (/* binding */ complexConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction complex(args) {\n    const { inputs, backend } = args;\n    const { real, imag } = inputs;\n    const realVals = backend.data.get(real.dataId).values;\n    const imagVals = backend.data.get(imag.dataId).values;\n    const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n    const complex = backend.data.get(complexInfo.dataId);\n    // The complex tensor owns the underlying real and imag tensorInfos, only the\n    // complex tensor tracks refCount, when complexData is disposed the\n    // underlying tensorData will be disposed.\n    complex.complexTensorInfos = {\n        real: backend.makeTensorInfo(real.shape, 'float32', realVals),\n        imag: backend.makeTensorInfo(imag.shape, 'float32', imagVals)\n    };\n    return complexInfo;\n}\nconst complexConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Complex,\n    backendName: 'cpu',\n    kernelFunc: complex\n};\n//# sourceMappingURL=Complex.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ComplexAbs.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ComplexAbs.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"complexAbs\": () => (/* binding */ complexAbs),\n/* harmony export */   \"complexAbsConfig\": () => (/* binding */ complexAbsConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst complexAbs = (args) => {\n    const { x } = args.inputs;\n    const cpuBackend = args.backend;\n    const resultValues = new Float32Array(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape));\n    const complexVals = cpuBackend.data.get(x.dataId);\n    const real = complexVals.complexTensorInfos.real;\n    const imag = complexVals.complexTensorInfos.imag;\n    const realVals = cpuBackend.data.get(real.dataId).values;\n    const imagVals = cpuBackend.data.get(imag.dataId).values;\n    for (let i = 0; i < realVals.length; i++) {\n        const real = realVals[i];\n        const imag = imagVals[i];\n        resultValues[i] = Math.hypot(real, imag);\n    }\n    return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\nconst complexAbsConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ComplexAbs,\n    backendName: 'cpu',\n    kernelFunc: complexAbs,\n};\n//# sourceMappingURL=ComplexAbs.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ComplexAbs.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat\": () => (/* binding */ concat),\n/* harmony export */   \"concatConfig\": () => (/* binding */ concatConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/* harmony import */ var _Concat_impl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Concat_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js\");\n/* harmony import */ var _Imag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Imag */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Imag.js\");\n/* harmony import */ var _Real__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Real */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\nfunction concat(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    const $axis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, inputs[0].shape)[0];\n    let outShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutShape(inputs.map(t => t.shape), $axis);\n    if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape) === 0) {\n        return backend.makeTensorInfo(outShape, inputs[0].dtype, []);\n    }\n    // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n    const $inputs = inputs.filter(t => _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(t.shape) > 0);\n    if ($inputs.length === 1) {\n        return (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x: $inputs[0] }, backend });\n    }\n    const shapes = $inputs.map(t => t.shape);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertParamsConsistent(shapes, $axis);\n    if ($inputs[0].dtype === 'complex64') {\n        const reals = $inputs.map((t) => (0,_Real__WEBPACK_IMPORTED_MODULE_2__.real)({ inputs: { input: t }, backend }));\n        const imags = $inputs.map((t) => (0,_Imag__WEBPACK_IMPORTED_MODULE_3__.imag)({ inputs: { input: t }, backend }));\n        const realConcated = concat({ inputs: reals, backend, attrs: { axis: $axis } });\n        const imagConcated = concat({ inputs: imags, backend, attrs: { axis: $axis } });\n        const result = (0,_Complex__WEBPACK_IMPORTED_MODULE_4__.complex)({ inputs: { real: realConcated, imag: imagConcated }, backend });\n        reals.forEach(r => backend.disposeIntermediateTensorInfo(r));\n        imags.forEach(i => backend.disposeIntermediateTensorInfo(i));\n        backend.disposeIntermediateTensorInfo(realConcated);\n        backend.disposeIntermediateTensorInfo(imagConcated);\n        return result;\n    }\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const inputs2D = $inputs.map(t => {\n        const innerSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(t.shape.slice($axis));\n        const shape = [-1, innerSize];\n        return (0,_Reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)({ inputs: { x: t }, backend, attrs: { shape } });\n    });\n    const inputsValShapes = inputs2D.map(t => {\n        return { vals: backend.data.get(t.dataId).values, shape: t.shape };\n    });\n    // Concats 2d tensors along axis=1.\n    outShape =\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n    const simplyConcat = inputs2D[0].shape[0] === 1;\n    const outVals = (0,_Concat_impl__WEBPACK_IMPORTED_MODULE_6__.concatImpl)(inputsValShapes, outShape, inputs[0].dtype, simplyConcat);\n    const finalOutShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutShape($inputs.map(t => t.shape), $axis);\n    const outInfo = backend.makeTensorInfo(finalOutShape, inputs[0].dtype, outVals);\n    inputs2D.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return outInfo;\n}\nconst concatConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Concat,\n    backendName: 'cpu',\n    kernelFunc: concat\n};\n//# sourceMappingURL=Concat.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concatImpl\": () => (/* binding */ concatImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction concatImpl(inputs, outShape, dtype, simplyConcat) {\n    const outVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType(dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape));\n    if (simplyConcat && dtype !== 'string') {\n        // Use built-in TypedArray.set() method for speed.\n        let offset = 0;\n        inputs.forEach(input => {\n            const size = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(input.shape);\n            outVals.set(input.vals, offset);\n            offset += size;\n        });\n    }\n    else {\n        let colOffset = 0;\n        inputs.forEach(input => {\n            const decodedData = dtype === 'string' ?\n                _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.fromUint8ToStringArray(input.vals) :\n                input.vals;\n            let tIdx = 0;\n            for (let row = 0; row < input.shape[0]; ++row) {\n                const resIdx = row * outShape[1] + colOffset;\n                for (let col = 0; col < input.shape[1]; ++col) {\n                    outVals[resIdx + col] = decodedData[tIdx++];\n                }\n            }\n            colOffset += input.shape[1];\n        });\n    }\n    return outVals;\n}\n//# sourceMappingURL=Concat_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2D.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2D.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2D\": () => (/* binding */ conv2D),\n/* harmony export */   \"conv2DConfig\": () => (/* binding */ conv2DConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction conv2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x, filter], 'conv2d');\n    const $dataFormat = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const padLeft = convInfo.padInfo.left;\n    const padTop = convInfo.padInfo.top;\n    const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n    const y = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(convInfo.outShape, x.dtype);\n    const xStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape);\n    const filterStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(filter.shape);\n    const xBatchStride = xStrides[0];\n    const xRowStride = isChannelsLast ? xStrides[1] : xStrides[2];\n    const xColStride = isChannelsLast ? xStrides[2] : 1;\n    const xChannelStride = isChannelsLast ? 1 : xStrides[1];\n    const yBatchStride = y.strides[0];\n    const yRowStride = isChannelsLast ? y.strides[1] : y.strides[2];\n    const yColStride = isChannelsLast ? y.strides[2] : 1;\n    const yChannelStride = isChannelsLast ? 1 : y.strides[1];\n    const xVals = backend.data.get(x.dataId).values;\n    const wVals = backend.data.get(filter.dataId).values;\n    const yVals = y.values;\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n        const xOffset1 = b * xBatchStride;\n        const yOffset1 = b * yBatchStride;\n        for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n            const yOffset2 = yOffset1 + yR * yRowStride;\n            const xRCorner = yR * convInfo.strideHeight - padTop;\n            for (let wR = 0; wR < filterHeight; ++wR) {\n                const xR = xRCorner + wR * dilationHeight;\n                if (xR < 0 || xR >= convInfo.inHeight) {\n                    continue;\n                }\n                const wOffset1 = wR * filterStrides[0];\n                const xOffset2 = xOffset1 + xR * xRowStride;\n                for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n                    const yOffset3 = yOffset2 + yC * yColStride;\n                    const xCCorner = yC * convInfo.strideWidth - padLeft;\n                    for (let wC = 0; wC < filterWidth; ++wC) {\n                        const xC = xCCorner + wC * dilationWidth;\n                        if (xC < 0 || xC >= convInfo.inWidth) {\n                            continue;\n                        }\n                        const wOffset2 = wOffset1 + wC * filterStrides[1];\n                        const xOffset3 = xOffset2 + xC * xColStride;\n                        let wOffset3 = wOffset2;\n                        for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                            const xVal = xVals[xOffset3 + d1 * xChannelStride];\n                            for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                                yVals[yOffset3 + d2 * yChannelStride] +=\n                                    xVal * wVals[wOffset3 + d2];\n                            }\n                            wOffset3 += convInfo.outChannels;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(y.shape, y.dtype, yVals);\n}\nconst conv2DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv2D,\n    backendName: 'cpu',\n    kernelFunc: conv2D\n};\n//# sourceMappingURL=Conv2D.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2DBackpropFilter.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2DBackpropFilter.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2DBackpropFilter\": () => (/* binding */ conv2DBackpropFilter),\n/* harmony export */   \"conv2DBackpropFilterConfig\": () => (/* binding */ conv2DBackpropFilterConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction conv2DBackpropFilter(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, pad, dataFormat, dimRoundingMode, filterShape } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x, dy], 'conv2dBackpropFilter');\n    const $dataFormat = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    const { strideHeight, strideWidth, filterHeight, filterWidth } = convInfo;\n    const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n    const dW = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(convInfo.filterShape, 'float32');\n    const leftPad = convInfo.padInfo.left;\n    const topPad = convInfo.padInfo.top;\n    const xVals = backend.data.get(x.dataId).values;\n    const dyVals = backend.data.get(dy.dataId).values;\n    const xBuf = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(x.shape, x.dtype, xVals);\n    const dyBuf = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(dy.shape, dy.dtype, dyVals);\n    for (let wR = 0; wR < filterHeight; ++wR) {\n        const yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n        const yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n        for (let wC = 0; wC < filterWidth; ++wC) {\n            const yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n            const yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n            for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                    let dotProd = 0;\n                    for (let b = 0; b < convInfo.batchSize; ++b) {\n                        for (let yR = yRMin; yR < yRMax; ++yR) {\n                            const xR = wR + yR * strideHeight - topPad;\n                            for (let yC = yCMin; yC < yCMax; ++yC) {\n                                const xC = wC + yC * strideWidth - leftPad;\n                                if (isChannelsLast) {\n                                    dotProd += xBuf.get(b, xR, xC, d1) *\n                                        dyBuf.get(b, yR, yC, d2);\n                                }\n                                else {\n                                    dotProd += xBuf.get(b, d1, xR, xC) *\n                                        dyBuf.get(b, d2, yR, yC);\n                                }\n                            }\n                        }\n                    }\n                    dW.set(dotProd, wR, wC, d1, d2);\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(dW.shape, dW.dtype, dW.values);\n}\nconst conv2DBackpropFilterConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv2DBackpropFilter,\n    backendName: 'cpu',\n    kernelFunc: conv2DBackpropFilter\n};\n//# sourceMappingURL=Conv2DBackpropFilter.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2DBackpropFilter.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2DBackpropInput.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2DBackpropInput.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2DBackpropInput\": () => (/* binding */ conv2DBackpropInput),\n/* harmony export */   \"conv2DBackpropInputConfig\": () => (/* binding */ conv2DBackpropInputConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction conv2DBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { inputShape, strides, pad, dataFormat, dimRoundingMode } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([dy, filter], 'conv2dBackpropInput');\n    const filterStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(filter.shape);\n    const dyStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(dy.shape);\n    let $dataFormat = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n    const dx = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(convInfo.inShape, 'float32');\n    const dxValues = dx.values;\n    const dyValues = backend.data.get(dy.dataId).values;\n    const fltValues = backend.data.get(filter.dataId).values;\n    const [fltS0, fltS1, fltS2] = filterStrides;\n    const { batchSize, filterHeight, filterWidth, inChannels, inHeight, inWidth, outChannels, outHeight, outWidth, strideHeight, strideWidth } = convInfo;\n    $dataFormat = convInfo.dataFormat;\n    const topPad = filterHeight - 1 - convInfo.padInfo.top;\n    const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n    const isChannelsLast = $dataFormat === 'channelsLast';\n    const xBatchStride = dx.strides[0];\n    const xRowStride = isChannelsLast ? dx.strides[1] : dx.strides[2];\n    const xColStride = isChannelsLast ? dx.strides[2] : 1;\n    const xChannelStride = isChannelsLast ? 1 : dx.strides[1];\n    const yBatchStride = dyStrides[0];\n    const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n    const yColStride = isChannelsLast ? dyStrides[2] : 1;\n    const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n    for (let b = 0; b < batchSize; ++b) {\n        for (let d1 = 0; d1 < inChannels; ++d1) {\n            for (let xR = 0; xR < inHeight; ++xR) {\n                const xRCorner = xR - topPad;\n                const xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n                const yRMax = Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n                for (let xC = 0; xC < inWidth; ++xC) {\n                    const xCCorner = xC - leftPad;\n                    const xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n                    const yCMax = Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n                    let dotProd = 0;\n                    for (let yR = xRMin; yR < yRMax; ++yR) {\n                        const wR = yR * strideHeight - xRCorner;\n                        for (let yC = xCMin; yC < yCMax; ++yC) {\n                            const wC = yC * strideWidth - xCCorner;\n                            const dyOffset = yBatchStride * b + yRowStride * yR + yColStride * yC;\n                            const fltOffset = fltS0 * (filterHeight - 1 - wR) +\n                                fltS1 * (filterWidth - 1 - wC) + fltS2 * d1;\n                            for (let d2 = 0; d2 < outChannels; ++d2) {\n                                const pixel = dyValues[dyOffset + yChannelStride * d2];\n                                const weight = fltValues[fltOffset + d2];\n                                dotProd += pixel * weight;\n                            }\n                        }\n                    }\n                    const dxOffset = xBatchStride * b + xRowStride * xR +\n                        xColStride * xC + xChannelStride * d1;\n                    dxValues[dxOffset] = dotProd;\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nconst conv2DBackpropInputConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv2DBackpropInput,\n    backendName: 'cpu',\n    kernelFunc: conv2DBackpropInput\n};\n//# sourceMappingURL=Conv2DBackpropInput.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2DBackpropInput.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3D.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3D.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3D\": () => (/* binding */ conv3D),\n/* harmony export */   \"conv3DConfig\": () => (/* binding */ conv3DConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction conv3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x, filter], 'conv3d');\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv3DInfo(x.shape, filter.shape, strides, dilations, pad);\n    const { filterDepth, filterHeight, filterWidth, dilationDepth, dilationHeight, dilationWidth, padInfo } = convInfo;\n    const padFront = padInfo.front;\n    const padLeft = padInfo.left;\n    const padTop = padInfo.top;\n    const y = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(convInfo.outShape, x.dtype);\n    const xVals = backend.data.get(x.dataId).values;\n    const wVals = backend.data.get(filter.dataId).values;\n    const yVals = y.values;\n    const xStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape);\n    const filterStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(filter.shape);\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n        const xOffset1 = b * xStrides[0];\n        const yOffset1 = b * y.strides[0];\n        for (let yF = 0; yF < convInfo.outDepth; ++yF) {\n            const yOffset2 = yOffset1 + yF * y.strides[1];\n            const xFCorner = yF * convInfo.strideDepth - padFront;\n            for (let wF = 0; wF < filterDepth; ++wF) {\n                const xF = xFCorner + wF * dilationDepth;\n                if (xF < 0 || xF >= convInfo.inDepth) {\n                    continue;\n                }\n                const wOffset1 = wF * filterStrides[0];\n                const xOffset2 = xOffset1 + xF * xStrides[1];\n                for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n                    const yOffset3 = yOffset2 + yR * y.strides[2];\n                    const xRCorner = yR * convInfo.strideHeight - padTop;\n                    for (let wR = 0; wR < filterHeight; ++wR) {\n                        const xR = xRCorner + wR * dilationHeight;\n                        if (xR < 0 || xR >= convInfo.inHeight) {\n                            continue;\n                        }\n                        const wOffset2 = wOffset1 + wR * filterStrides[1];\n                        const xOffset3 = xOffset2 + xR * xStrides[2];\n                        for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n                            const yOffset4 = yOffset3 + yC * convInfo.outChannels;\n                            const xCCorner = yC * convInfo.strideWidth - padLeft;\n                            for (let wC = 0; wC < filterWidth; ++wC) {\n                                const xC = xCCorner + wC * dilationWidth;\n                                if (xC < 0 || xC >= convInfo.inWidth) {\n                                    continue;\n                                }\n                                const wOffset3 = wOffset2 + wC * filterStrides[2];\n                                const xOffset4 = xOffset3 + xC * convInfo.inChannels;\n                                let wOffset4 = wOffset3;\n                                for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                                    const xVal = xVals[xOffset4 + d1];\n                                    for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                                        yVals[yOffset4 + d2] += xVal * wVals[wOffset4 + d2];\n                                    }\n                                    wOffset4 += convInfo.outChannels;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(y.shape, y.dtype, y.values);\n}\nconst conv3DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv3D,\n    backendName: 'cpu',\n    kernelFunc: conv3D\n};\n//# sourceMappingURL=Conv3D.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3DBackpropFilterV2.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3DBackpropFilterV2.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3DBackpropFilterV2\": () => (/* binding */ conv3DBackpropFilterV2),\n/* harmony export */   \"conv3DBackpropFilterV2Config\": () => (/* binding */ conv3DBackpropFilterV2Config)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction conv3DBackpropFilterV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, pad, filterShape } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x, dy], 'conv3dBackpropFilterV2');\n    const xStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape);\n    const dyStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(dy.shape);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv3DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad);\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const filterDepth = convInfo.filterDepth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const dw = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(convInfo.filterShape, 'float32');\n    const dwValues = dw.values;\n    const [dwS0, dwS1, dwS2, dwS3] = dw.strides;\n    const dyValues = backend.data.get(dy.dataId).values;\n    const [dyS0, dyS1, dyS2, dyS3] = dyStrides;\n    const xValues = backend.data.get(x.dataId).values;\n    const [xS0, xS1, xS2, xS3] = xStrides;\n    const frontPad = convInfo.padInfo.front;\n    const leftPad = convInfo.padInfo.left;\n    const topPad = convInfo.padInfo.top;\n    for (let wF = 0; wF < filterDepth; ++wF) {\n        const yFMin = Math.max(0, Math.ceil((frontPad - wF) / strideDepth));\n        const yFMax = Math.min(convInfo.outDepth, (convInfo.inDepth + frontPad - wF) / strideDepth);\n        const wOffset1 = wF * dwS0;\n        for (let wR = 0; wR < filterHeight; ++wR) {\n            const yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n            const yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n            const wOffset2 = wR * dwS1 + wOffset1;\n            for (let wC = 0; wC < filterWidth; ++wC) {\n                const yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n                const yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n                const wOffset3 = wC * dwS2 + wOffset2;\n                for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                    const wOffset4 = d1 * dwS3 + wOffset3;\n                    for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                        let dotProd = 0;\n                        for (let b = 0; b < convInfo.batchSize; ++b) {\n                            const xOffset1 = b * xS0;\n                            const yOffset1 = b * dyS0;\n                            for (let yF = yFMin; yF < yFMax; ++yF) {\n                                const xF = wF + yF * strideDepth - frontPad;\n                                const xOffset2 = xF * xS1 + xOffset1;\n                                const yOffset2 = yF * dyS1 + yOffset1;\n                                for (let yR = yRMin; yR < yRMax; ++yR) {\n                                    const xR = wR + yR * strideHeight - topPad;\n                                    const xOffset3 = xR * xS2 + xOffset2;\n                                    const yOffset3 = yR * dyS2 + yOffset2;\n                                    for (let yC = yCMin; yC < yCMax; ++yC) {\n                                        const xC = wC + yC * strideWidth - leftPad;\n                                        const xOffset4 = xC * xS3 + xOffset3;\n                                        const yOffset4 = yC * dyS3 + yOffset3;\n                                        dotProd += xValues[xOffset4 + d1] * dyValues[yOffset4 + d2];\n                                    }\n                                }\n                            }\n                        }\n                        dwValues[wOffset4 + d2] = dotProd;\n                    }\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(dw.shape, dw.dtype, dw.values);\n}\nconst conv3DBackpropFilterV2Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv3DBackpropFilterV2,\n    backendName: 'cpu',\n    kernelFunc: conv3DBackpropFilterV2\n};\n//# sourceMappingURL=Conv3DBackpropFilterV2.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3DBackpropFilterV2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3DBackpropInputV2.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3DBackpropInputV2.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3DBackpropInputV2\": () => (/* binding */ conv3DBackpropInputV2),\n/* harmony export */   \"conv3DBackpropInputV2Config\": () => (/* binding */ conv3DBackpropInputV2Config)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction conv3DBackpropInputV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { pad, strides, inputShape } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([dy], 'conv3dBackpropInputV2');\n    const dyStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(dy.shape);\n    const filterStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(filter.shape);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv3DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad);\n    const dx = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(convInfo.inShape, 'float32');\n    const dxValues = dx.values;\n    const [dxS0, dxS1, dxS2, dxS3] = dx.strides;\n    const dyValues = backend.data.get(dy.dataId).values;\n    const [dyS0, dyS1, dyS2, dyS3] = dyStrides;\n    const fltValues = backend.data.get(filter.dataId).values;\n    const [fltS0, fltS1, fltS2, fltS3] = filterStrides;\n    const { batchSize, filterDepth, filterHeight, filterWidth, inChannels, inDepth, inHeight, inWidth, outChannels, outDepth, outHeight, outWidth, strideDepth, strideHeight, strideWidth } = convInfo;\n    const frontPad = filterDepth - 1 - convInfo.padInfo.front;\n    const topPad = filterHeight - 1 - convInfo.padInfo.top;\n    const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n    for (let b = 0; b < batchSize; ++b) {\n        for (let d1 = 0; d1 < inChannels; ++d1) {\n            // Frames of depth\n            for (let xF = 0; xF < inDepth; ++xF) {\n                const xFCorner = xF - frontPad;\n                const xFMin = Math.max(0, Math.ceil(xFCorner / strideDepth));\n                const yFMax = Math.min(outDepth, (filterDepth + xFCorner) / strideDepth);\n                // Rows as per standard 2d matrix notation\n                for (let xR = 0; xR < inHeight; ++xR) {\n                    const xRCorner = xR - topPad;\n                    const xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n                    const yRMax = Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n                    // Columns as per standard 2d matrix notation\n                    for (let xC = 0; xC < inWidth; ++xC) {\n                        const xCCorner = xC - leftPad;\n                        const xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n                        const yCMax = Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n                        let dotProd = 0;\n                        for (let yF = xFMin; yF < yFMax; ++yF) {\n                            const wF = yF * strideDepth - xFCorner;\n                            for (let yR = xRMin; yR < yRMax; ++yR) {\n                                const wR = yR * strideHeight - xRCorner;\n                                for (let yC = xCMin; yC < yCMax; ++yC) {\n                                    const wC = yC * strideWidth - xCCorner;\n                                    const dyOffset = dyS0 * b + dyS1 * yF + dyS2 * yR + dyS3 * yC;\n                                    const fltOffset = fltS0 * (filterDepth - 1 - wF) +\n                                        fltS1 * (filterHeight - 1 - wR) +\n                                        fltS2 * (filterWidth - 1 - wC) + fltS3 * d1;\n                                    for (let d2 = 0; d2 < outChannels; ++d2) {\n                                        const pixel = dyValues[dyOffset + d2];\n                                        const weight = fltValues[fltOffset + d2];\n                                        dotProd += pixel * weight;\n                                    }\n                                }\n                            }\n                        }\n                        dxValues[dxS0 * b + dxS1 * xF + dxS2 * xR + dxS3 * xC + d1] =\n                            dotProd;\n                    }\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nconst conv3DBackpropInputV2Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv3DBackpropInputV2,\n    backendName: 'cpu',\n    kernelFunc: conv3DBackpropInputV2\n};\n//# sourceMappingURL=Conv3DBackpropInputV2.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3DBackpropInputV2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cos.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cos.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cos\": () => (/* binding */ cos),\n/* harmony export */   \"cosConfig\": () => (/* binding */ cosConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst cos = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cos, (xi) => Math.cos(xi));\nconst cosConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cos,\n    backendName: 'cpu',\n    kernelFunc: cos,\n};\n//# sourceMappingURL=Cos.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cos.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cosh.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cosh.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cosh\": () => (/* binding */ cosh),\n/* harmony export */   \"coshConfig\": () => (/* binding */ coshConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst cosh = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cosh, (xi) => Math.cosh(xi));\nconst coshConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cosh,\n    backendName: 'cpu',\n    kernelFunc: cosh,\n};\n//# sourceMappingURL=Cosh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cosh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/CropAndResize.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/CropAndResize.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cropAndResize\": () => (/* binding */ cropAndResize),\n/* harmony export */   \"cropAndResizeConfig\": () => (/* binding */ cropAndResizeConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction cropAndResize(args) {\n    const { inputs, backend, attrs } = args;\n    const { image, boxes, boxInd } = inputs;\n    const { cropSize, method, extrapolationValue } = attrs;\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n    const numBoxes = boxes.shape[0];\n    const [cropHeight, cropWidth] = cropSize;\n    const output = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)([numBoxes, cropHeight, cropWidth, numChannels], 'float32');\n    const boxVals = backend.data.get(boxes.dataId).values;\n    const boxIndVals = backend.data.get(boxInd.dataId).values;\n    const imageVals = backend.data.get(image.dataId).values;\n    const inStride = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(image.shape); // to calculate flat indexes into image\n    const outStride = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(output.shape); // to calculate flat indexes into output\n    // Reference implementation\n    // tslint:disable-next-line:max-line-length\n    // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op.cc\n    for (let b = 0; b < numBoxes; b++) {\n        const startInd = b * 4;\n        const y1 = boxVals[startInd];\n        const x1 = boxVals[startInd + 1];\n        const y2 = boxVals[startInd + 2];\n        const x2 = boxVals[startInd + 3];\n        const bInd = boxIndVals[b];\n        if (bInd >= batch) {\n            continue;\n        }\n        const heightScale = (cropHeight > 1) ? (y2 - y1) * (imageHeight - 1) / (cropHeight - 1) : 0;\n        const widthScale = (cropWidth > 1) ? (x2 - x1) * (imageWidth - 1) / (cropWidth - 1) : 0;\n        for (let y = 0; y < cropHeight; y++) {\n            const yInd = (cropHeight > 1) ?\n                y1 * (imageHeight - 1) + y * (heightScale) :\n                0.5 * (y1 + y2) * (imageHeight - 1);\n            if (yInd < 0 || yInd > imageHeight - 1) {\n                for (let x = 0; x < cropWidth; x++) {\n                    for (let c = 0; c < numChannels; c++) {\n                        const ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                        output.values[ind] = extrapolationValue;\n                    }\n                }\n                continue;\n            }\n            if (method === 'bilinear') {\n                const topInd = Math.floor(yInd);\n                const bottomInd = Math.ceil(yInd);\n                const yLerp = yInd - topInd;\n                for (let x = 0; x < cropWidth; x++) {\n                    const xInd = (cropWidth > 1) ?\n                        x1 * (imageWidth - 1) + x * widthScale :\n                        0.5 * (x1 + x2) * (imageWidth - 1);\n                    if (xInd < 0 || xInd > imageWidth - 1) {\n                        for (let c = 0; c < numChannels; c++) {\n                            const ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                            output.values[ind] = extrapolationValue;\n                        }\n                        continue;\n                    }\n                    const leftInd = Math.floor(xInd);\n                    const rightInd = Math.ceil(xInd);\n                    const xLerp = xInd - leftInd;\n                    for (let c = 0; c < numChannels; c++) {\n                        let ind = c + leftInd * inStride[2] + topInd * inStride[1] +\n                            bInd * inStride[0];\n                        const topLeft = imageVals[ind];\n                        ind = c + rightInd * inStride[2] + topInd * inStride[1] +\n                            bInd * inStride[0];\n                        const topRight = imageVals[ind];\n                        ind = c + leftInd * inStride[2] + bottomInd * inStride[1] +\n                            bInd * inStride[0];\n                        const bottomLeft = imageVals[ind];\n                        ind = c + rightInd * inStride[2] + bottomInd * inStride[1] +\n                            bInd * inStride[0];\n                        const bottomRight = imageVals[ind];\n                        const top = topLeft + (topRight - topLeft) * xLerp;\n                        const bottom = bottomLeft + (bottomRight - bottomLeft) * xLerp;\n                        ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                        output.values[ind] = top + ((bottom - top) * yLerp);\n                    }\n                }\n            }\n            else { // method == \"nearest\"\n                for (let x = 0; x < cropWidth; ++x) {\n                    const xInd = (cropWidth > 1) ?\n                        x1 * (imageWidth - 1) + x * widthScale :\n                        0.5 * (x1 + x2) * (imageWidth - 1);\n                    if (xInd < 0 || xInd > imageWidth - 1) {\n                        for (let c = 0; c < numChannels; c++) {\n                            const ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                            output.values[ind] = extrapolationValue;\n                        }\n                        continue;\n                    }\n                    const closestX = Math.round(xInd);\n                    const closestY = Math.round(yInd);\n                    for (let c = 0; c < numChannels; c++) {\n                        const inInd = c + closestX * inStride[2] + closestY * inStride[1] +\n                            bInd * inStride[0];\n                        const outInd = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                        output.values[outInd] = imageVals[inInd];\n                    }\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(output.shape, output.dtype, output.values);\n}\nconst cropAndResizeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.CropAndResize,\n    backendName: 'cpu',\n    kernelFunc: cropAndResize\n};\n//# sourceMappingURL=CropAndResize.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/CropAndResize.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cumsum.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cumsum.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cumsum\": () => (/* binding */ cumsum),\n/* harmony export */   \"cumsumConfig\": () => (/* binding */ cumsumConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction cumsum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, exclusive, reverse } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'cumsum');\n    const permutation = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation([axis], x.shape.length);\n    let $x = x;\n    if (permutation != null) {\n        $x = (0,_Transpose__WEBPACK_IMPORTED_MODULE_2__.transpose)({ inputs: { x }, backend, attrs: { perm: permutation } });\n    }\n    const permutedAxis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(1, x.shape.length)[0];\n    if (permutedAxis !== $x.shape.length - 1) {\n        throw new Error(`backend.cumsum in CPU expects an inner-most ` +\n            `axis=${$x.shape.length - 1} but got axis=${permutedAxis}`);\n    }\n    const resultDtype = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.upcastType)($x.dtype, 'int32');\n    const vals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape($x.shape), resultDtype);\n    const aVals = backend.data.get($x.dataId).values;\n    const finalDim = $x.shape[$x.shape.length - 1];\n    const indexAdjuster = reverse ?\n        (i, j) => i + finalDim - j - 1 :\n        (i, j) => i + j;\n    for (let i = 0; i < aVals.length; i += finalDim) {\n        for (let j = 0; j < finalDim; j++) {\n            const idx = indexAdjuster(i, j);\n            if (j === 0) {\n                vals[idx] = exclusive ? 0 : aVals[idx];\n            }\n            else {\n                const prevIdx = indexAdjuster(i, j - 1);\n                vals[idx] = exclusive ? aVals[prevIdx] + vals[prevIdx] :\n                    aVals[idx] + vals[prevIdx];\n            }\n        }\n    }\n    const result = backend.makeTensorInfo($x.shape, resultDtype, vals);\n    if (permutation != null) {\n        const reversePermutation = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getUndoAxesPermutation(permutation);\n        const reverseTransposedResult = (0,_Transpose__WEBPACK_IMPORTED_MODULE_2__.transpose)({ inputs: { x: result }, backend, attrs: { perm: reversePermutation } });\n        backend.disposeIntermediateTensorInfo(result);\n        backend.disposeIntermediateTensorInfo($x);\n        return reverseTransposedResult;\n    }\n    return result;\n}\nconst cumsumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cumsum,\n    backendName: 'cpu',\n    kernelFunc: cumsum\n};\n//# sourceMappingURL=Cumsum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cumsum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DenseBincount.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DenseBincount.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"denseBincount\": () => (/* binding */ denseBincount),\n/* harmony export */   \"denseBincountConfig\": () => (/* binding */ denseBincountConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Bincount_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bincount_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction denseBincount(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, weights } = inputs;\n    const { size, binaryOutput } = attrs;\n    if (x.shape.length === 1) {\n        const xVals = backend.data.get(x.dataId).values;\n        const weightsVals = backend.data.get(weights.dataId).values;\n        const outVals = (0,_Bincount_impl__WEBPACK_IMPORTED_MODULE_1__.bincountImpl)(xVals, weightsVals, weights.dtype, weights.shape, size);\n        return backend.makeTensorInfo([size], weights.dtype, outVals);\n    }\n    else if (x.shape.length === 2) {\n        const xBuf = backend.bufferSync(x);\n        const weightsBuf = backend.bufferSync(weights);\n        const outBuf = (0,_Bincount_impl__WEBPACK_IMPORTED_MODULE_1__.bincountReduceImpl)(xBuf, weightsBuf, size, binaryOutput);\n        return backend.makeTensorInfo(outBuf.shape, weights.dtype, outBuf.values);\n    }\n    throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank` +\n        `${x.shape.length}.`);\n}\nconst denseBincountConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DenseBincount,\n    backendName: 'cpu',\n    kernelFunc: denseBincount\n};\n//# sourceMappingURL=DenseBincount.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DenseBincount.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthToSpace.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthToSpace.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthToSpace\": () => (/* binding */ depthToSpace),\n/* harmony export */   \"depthToSpaceConfig\": () => (/* binding */ depthToSpaceConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction depthToSpace(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockSize, dataFormat } = attrs;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(dataFormat === 'NHWC', () => `Only NHWC dataFormat supported on CPU for depthToSpace. Got ${dataFormat}`);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(blockSize > 1, () => `blockSize should be > 1 for depthToSpace, but was: ${blockSize}`);\n    const batchSize = x.shape[0];\n    const inputHeight = x.shape[1];\n    const inputWidth = x.shape[2];\n    const inputDepth = x.shape[3];\n    const outputHeight = inputHeight * blockSize;\n    const outputWidth = inputWidth * blockSize;\n    const outputDepth = inputDepth / (blockSize * blockSize);\n    const xValues = backend.data.get(x.dataId).values;\n    const result = new Float32Array(batchSize * outputHeight * outputWidth * outputDepth);\n    let outputIdx = 0;\n    for (let b = 0; b < batchSize; ++b) {\n        for (let h = 0; h < outputHeight; ++h) {\n            const inH = Math.floor(h / blockSize);\n            const offsetH = (h % blockSize);\n            for (let w = 0; w < outputWidth; ++w) {\n                const inW = Math.floor(w / blockSize);\n                const offsetW = (w % blockSize);\n                const offsetD = (offsetH * blockSize + offsetW) * outputDepth;\n                for (let d = 0; d < outputDepth; ++d) {\n                    const inD = d + offsetD;\n                    const inputIdx = inD + inputDepth * (inW + inputWidth * (inH + inputHeight * b));\n                    result[outputIdx++] = xValues[inputIdx];\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo([batchSize, outputHeight, outputWidth, outputDepth], x.dtype, result);\n}\nconst depthToSpaceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DepthToSpace,\n    backendName: 'cpu',\n    kernelFunc: depthToSpace\n};\n//# sourceMappingURL=DepthToSpace.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthToSpace.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNative.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNative.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2dNative\": () => (/* binding */ depthwiseConv2dNative),\n/* harmony export */   \"depthwiseConv2dNativeConfig\": () => (/* binding */ depthwiseConv2dNativeConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction depthwiseConv2dNative(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations, dimRoundingMode } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x, filter], 'depthwiseConv2DNative');\n    const xStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape);\n    const filterStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(filter.shape);\n    let $dilations = dilations;\n    if ($dilations == null) {\n        $dilations = [1, 1];\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), () => 'Error in depthwiseConv2d: Either strides or dilations must be ' +\n        `1. Got strides ${strides} and dilations '${$dilations}'`);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */);\n    const { filterHeight, filterWidth, dilationHeight, dilationWidth, padInfo } = convInfo;\n    const padLeft = padInfo.left;\n    const padTop = padInfo.top;\n    const chMul = convInfo.outChannels / convInfo.inChannels;\n    const y = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(convInfo.outShape, x.dtype);\n    const xVals = backend.data.get(x.dataId).values;\n    const wVals = backend.data.get(filter.dataId).values;\n    const yVals = y.values;\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n        const xOffset1 = b * xStrides[0];\n        const yOffset1 = b * y.strides[0];\n        for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n            const yOffset2 = yOffset1 + yR * y.strides[1];\n            const xRCorner = yR * convInfo.strideHeight - padTop;\n            for (let wR = 0; wR < filterHeight; ++wR) {\n                const xR = xRCorner + wR * dilationHeight;\n                if (xR < 0 || xR >= convInfo.inHeight) {\n                    continue;\n                }\n                const wOffset1 = wR * filterStrides[0];\n                const xOffset2 = xOffset1 + xR * xStrides[1];\n                for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n                    const yOffset3 = yOffset2 + yC * y.strides[2];\n                    const xCCorner = yC * convInfo.strideWidth - padLeft;\n                    for (let wC = 0; wC < filterWidth; ++wC) {\n                        const xC = xCCorner + wC * dilationWidth;\n                        if (xC < 0 || xC >= convInfo.inWidth) {\n                            continue;\n                        }\n                        const wOffset2 = wOffset1 + wC * filterStrides[1];\n                        const xOffset3 = xOffset2 + xC * convInfo.inChannels;\n                        let yOffset4 = yOffset3;\n                        let wOffset3 = wOffset2;\n                        for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                            const xVal = xVals[xOffset3 + d1];\n                            for (let q = 0; q < chMul; ++q) {\n                                yVals[yOffset4 + q] += xVal * wVals[wOffset3 + q];\n                            }\n                            yOffset4 += chMul;\n                            wOffset3 += chMul;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(y.shape, y.dtype, y.values);\n}\nconst depthwiseConv2dNativeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DepthwiseConv2dNative,\n    backendName: 'cpu',\n    kernelFunc: depthwiseConv2dNative\n};\n//# sourceMappingURL=DepthwiseConv2dNative.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNative.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2dNativeBackpropFilter\": () => (/* binding */ depthwiseConv2dNativeBackpropFilter),\n/* harmony export */   \"depthwiseConv2dNativeBackpropFilterConfig\": () => (/* binding */ depthwiseConv2dNativeBackpropFilterConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction depthwiseConv2dNativeBackpropFilter(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, dilations, pad, dimRoundingMode, filterShape } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x, dy], 'depthwiseConv2dNativeBackpropFilter');\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(x.shape, filterShape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    const { strideHeight, strideWidth, filterHeight, filterWidth } = convInfo;\n    const dW = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(convInfo.filterShape, 'float32');\n    const leftPad = convInfo.padInfo.left;\n    const topPad = convInfo.padInfo.top;\n    const chMul = convInfo.outChannels / convInfo.inChannels;\n    const xVals = backend.data.get(x.dataId).values;\n    const xBuf = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(x.shape, x.dtype, xVals);\n    const dyVals = backend.data.get(dy.dataId).values;\n    const dyBuf = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(dy.shape, dy.dtype, dyVals);\n    for (let wR = 0; wR < filterHeight; ++wR) {\n        const yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n        const yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n        for (let wC = 0; wC < filterWidth; ++wC) {\n            const yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n            const yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n            for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                const d1 = Math.trunc(d2 / chMul);\n                const dm = d2 % chMul;\n                let dotProd = 0;\n                for (let b = 0; b < convInfo.batchSize; ++b) {\n                    for (let yR = yRMin; yR < yRMax; ++yR) {\n                        const xR = wR + yR * strideHeight - topPad;\n                        for (let yC = yCMin; yC < yCMax; ++yC) {\n                            const xC = wC + yC * strideWidth - leftPad;\n                            dotProd += xBuf.get(b, xR, xC, d1) *\n                                dyBuf.get(b, yR, yC, d2);\n                        }\n                    }\n                }\n                dW.set(dotProd, wR, wC, d1, dm);\n            }\n        }\n    }\n    return backend.makeTensorInfo(dW.shape, dW.dtype, dW.values);\n}\nconst depthwiseConv2dNativeBackpropFilterConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DepthwiseConv2dNativeBackpropFilter,\n    backendName: 'cpu',\n    kernelFunc: depthwiseConv2dNativeBackpropFilter\n};\n//# sourceMappingURL=DepthwiseConv2dNativeBackpropFilter.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNativeBackpropInput.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNativeBackpropInput.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2dNativeBackpropInput\": () => (/* binding */ depthwiseConv2dNativeBackpropInput),\n/* harmony export */   \"depthwiseConv2dNativeBackpropInputConfig\": () => (/* binding */ depthwiseConv2dNativeBackpropInputConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction depthwiseConv2dNativeBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { strides, dilations, pad, dimRoundingMode, inputShape } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([dy, filter], 'depthwiseConv2DNativeBackpropInput');\n    const dyStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(dy.shape);\n    const filterStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(filter.shape);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    const dx = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(convInfo.inShape, 'float32');\n    const dxValues = dx.values;\n    const [dxS0, dxS1, dxS2] = dx.strides;\n    const dyValues = backend.data.get(dy.dataId).values;\n    const [dyS0, dyS1, dyS2] = dyStrides;\n    const fltValues = backend.data.get(filter.dataId).values;\n    const [fltS0, fltS1, fltS2] = filterStrides;\n    const { batchSize, filterHeight, filterWidth, inChannels, inHeight, inWidth, outChannels, outHeight, outWidth, strideHeight, strideWidth } = convInfo;\n    const topPad = filterHeight - 1 - convInfo.padInfo.top;\n    const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n    const chMul = outChannels / inChannels;\n    for (let b = 0; b < batchSize; ++b) {\n        for (let d1 = 0; d1 < inChannels; ++d1) {\n            for (let xR = 0; xR < inHeight; ++xR) {\n                const xRCorner = xR - topPad;\n                const xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n                const yRMax = Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n                for (let xC = 0; xC < inWidth; ++xC) {\n                    const xCCorner = xC - leftPad;\n                    const xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n                    const yCMax = Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n                    let dotProd = 0;\n                    for (let yR = xRMin; yR < yRMax; ++yR) {\n                        const wR = yR * strideHeight - xRCorner;\n                        for (let yC = xCMin; yC < yCMax; ++yC) {\n                            const wC = yC * strideWidth - xCCorner;\n                            const dyOffset = dyS0 * b + dyS1 * yR + dyS2 * yC;\n                            const fltOffset = fltS0 * (filterHeight - 1 - wR) +\n                                fltS1 * (filterWidth - 1 - wC) + fltS2 * d1;\n                            for (let dm = 0; dm < chMul; ++dm) {\n                                const d2 = d1 * chMul + dm;\n                                const pixel = dyValues[dyOffset + d2];\n                                const weight = fltValues[fltOffset + dm];\n                                dotProd += pixel * weight;\n                            }\n                        }\n                    }\n                    dxValues[dxS0 * b + dxS1 * xR + dxS2 * xC + d1] = dotProd;\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nconst depthwiseConv2dNativeBackpropInputConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DepthwiseConv2dNativeBackpropInput,\n    backendName: 'cpu',\n    kernelFunc: depthwiseConv2dNativeBackpropInput\n};\n//# sourceMappingURL=DepthwiseConv2dNativeBackpropInput.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNativeBackpropInput.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Diag.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Diag.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"diag\": () => (/* binding */ diag),\n/* harmony export */   \"diagConfig\": () => (/* binding */ diagConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction diag(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    const xVals = backend.data.get(x.dataId).values;\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)([xSize, xSize], x.dtype);\n    const vals = outBuf.values;\n    for (let i = 0; i < xVals.length; i++) {\n        vals[i * xSize + i] = xVals[i];\n    }\n    const outShape = [...x.shape, ...x.shape];\n    return backend.makeTensorInfo(outShape, outBuf.dtype, outBuf.values);\n}\nconst diagConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Diag,\n    backendName: 'cpu',\n    kernelFunc: diag\n};\n//# sourceMappingURL=Diag.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Diag.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2D.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2D.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dilation2dConfig\": () => (/* binding */ dilation2dConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst dilation2dConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Dilation2D,\n    backendName: 'cpu',\n    kernelFunc: ({ inputs, backend, attrs }) => {\n        const { x, filter } = inputs;\n        const { strides, pad, dilations } = attrs;\n        const cpuBackend = backend;\n        const xVals = cpuBackend.data.get(x.dataId).values;\n        const xRank = x.shape.length;\n        const filterVals = cpuBackend.data.get(filter.dataId).values;\n        const filterRank = filter.shape.length;\n        const { batchSize, inHeight, inWidth, inChannels, outHeight, outWidth, padInfo, strideHeight, strideWidth, filterHeight, filterWidth, dilationHeight, dilationWidth, outShape } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC' /* dataFormat */, dilations);\n        const outSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape);\n        const outRank = outShape.length;\n        const outputVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType(x.dtype, outSize);\n        // Upsampling the input by fill in `dilation size - 1` values between each\n        // input value.\n        // This implementation follows the TF c++ implementation:\n        // https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc\n        for (let b = 0; b < batchSize; ++b) {\n            for (let hOut = 0; hOut < outHeight; ++hOut) {\n                const hBeg = hOut * strideHeight - padInfo.top;\n                for (let wOut = 0; wOut < outWidth; ++wOut) {\n                    const wBeg = wOut * strideWidth - padInfo.left;\n                    for (let d = 0; d < inChannels; ++d) {\n                        let curVal = Number.MIN_SAFE_INTEGER;\n                        for (let h = 0; h < filterHeight; ++h) {\n                            const hIn = hBeg + h * dilationHeight;\n                            if (hIn >= 0 && hIn < inHeight) {\n                                for (let w = 0; w < filterWidth; ++w) {\n                                    const wIn = wBeg + w * dilationWidth;\n                                    if (wIn >= 0 && wIn < inWidth) {\n                                        const xIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex([b, hIn, wIn, d], xRank, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape));\n                                        const filterIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex([h, w, d], filterRank, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(filter.shape));\n                                        const val = xVals[xIndex] + filterVals[filterIndex];\n                                        if (val > curVal) {\n                                            curVal = val;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        const outputIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex([b, hOut, wOut, d], outRank, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(outShape));\n                        outputVals[outputIndex] = curVal;\n                    }\n                }\n            }\n        }\n        const dataId = cpuBackend.write(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toTypedArray(outputVals, x.dtype), outShape, x.dtype);\n        return { dataId, shape: outShape, dtype: x.dtype };\n    }\n};\n//# sourceMappingURL=Dilation2D.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2DBackpropFilter.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2DBackpropFilter.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dilation2dBackpropFilterConfig\": () => (/* binding */ dilation2dBackpropFilterConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst dilation2dBackpropFilterConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Dilation2DBackpropFilter,\n    backendName: 'cpu',\n    kernelFunc: ({ inputs, backend, attrs }) => {\n        const { x, filter, dy } = inputs;\n        const { strides, pad, dilations } = attrs;\n        const cpuBackend = backend;\n        const $x = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toNestedArray(x.shape, cpuBackend.data.get(x.dataId).values);\n        const $filter = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toNestedArray(filter.shape, cpuBackend.data.get(filter.dataId).values);\n        const { batchSize, inHeight, inWidth, inChannels, outHeight, outWidth, padInfo, strideHeight, strideWidth, filterHeight, filterWidth, dilationHeight, dilationWidth, outShape } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC' /* dataFormat */, dilations);\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(dy.rank === outShape.length, () => `Error in ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Dilation2DBackpropFilter}, dy ` +\n            `must have the same rank as output ${outShape.length}, but got ` +\n            `${dy.rank}`);\n        const $dy = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toNestedArray(outShape, cpuBackend.data.get(dy.dataId).values);\n        // The computed filter gradients has the same dimensions as the filter:\n        // [filterHeight, filterWidth, depth]\n        const gradients = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosNestedTypedArray(filter.shape, filter.dtype);\n        // In the case of multiple argmax branches, we only back-propagate along the\n        // last branch, i.e., the one with largest value of `h * filter_cols + w`,\n        // similarly to the max-pooling backward routines.\n        // This implementation follows the TF c++ implementation:\n        // https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc\n        for (let b = 0; b < batchSize; ++b) {\n            for (let hOut = 0; hOut < outHeight; ++hOut) {\n                const hBeg = hOut * strideHeight - padInfo.top;\n                for (let wOut = 0; wOut < outWidth; ++wOut) {\n                    const wBeg = wOut * strideWidth - padInfo.left;\n                    for (let d = 0; d < inChannels; ++d) {\n                        let curVal = Number.MIN_SAFE_INTEGER;\n                        let hMax = 0;\n                        let wMax = 0;\n                        for (let h = 0; h < filterHeight; ++h) {\n                            const hIn = hBeg + h * dilationHeight;\n                            if (hIn >= 0 && hIn < inHeight) {\n                                for (let w = 0; w < filterWidth; ++w) {\n                                    const wIn = wBeg + w * dilationWidth;\n                                    if (wIn >= 0 && wIn < inWidth) {\n                                        const val = $x[b][hIn][wIn][d] + $filter[h][w][d];\n                                        if (val > curVal) {\n                                            curVal = val;\n                                            hMax = h;\n                                            wMax = w;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        gradients[hMax][wMax][d] += $dy[b][hOut][wOut][d];\n                    }\n                }\n            }\n        }\n        const dataId = cpuBackend.write(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toTypedArray(gradients, x.dtype), filter.shape, filter.dtype);\n        return { dataId, shape: filter.shape, dtype: filter.dtype };\n    }\n};\n//# sourceMappingURL=Dilation2DBackpropFilter.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2DBackpropFilter.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2DBackpropInput.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2DBackpropInput.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dilation2dBackpropInputConfig\": () => (/* binding */ dilation2dBackpropInputConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst dilation2dBackpropInputConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Dilation2DBackpropInput,\n    backendName: 'cpu',\n    kernelFunc: ({ inputs, backend, attrs }) => {\n        const { x, filter, dy } = inputs;\n        const { strides, pad, dilations } = attrs;\n        const cpuBackend = backend;\n        const $x = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toNestedArray(x.shape, cpuBackend.data.get(x.dataId).values);\n        const $filter = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toNestedArray(filter.shape, cpuBackend.data.get(filter.dataId).values);\n        const { batchSize, inHeight, inWidth, inChannels, outHeight, outWidth, padInfo, strideHeight, strideWidth, filterHeight, filterWidth, dilationHeight, dilationWidth, outShape } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC' /* dataFormat */, dilations);\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(dy.rank === outShape.length, () => `Error in ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Dilation2DBackpropInput}, dy ` +\n            `must have the same rank as output ${outShape.length}, but got ` +\n            `${dy.rank}`);\n        const $dy = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toNestedArray(outShape, cpuBackend.data.get(dy.dataId).values);\n        // The computed gradients has the same dimensions as the input:\n        // [batch, inputHeight, inputCols, inChannel]\n        const gradients = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosNestedTypedArray(x.shape, x.dtype);\n        // In the case of multiple argmax branches, we only back-propagate along the\n        // last branch, i.e., the one with largest value of `h * filter_cols + w`,\n        // similarly to the max-pooling backward routines.\n        // This implementation follows the TF c++ implementation:\n        // https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc\n        for (let b = 0; b < batchSize; ++b) {\n            for (let hOut = 0; hOut < outHeight; ++hOut) {\n                const hBeg = hOut * strideHeight - padInfo.top;\n                for (let wOut = 0; wOut < outWidth; ++wOut) {\n                    const wBeg = wOut * strideWidth - padInfo.left;\n                    for (let d = 0; d < inChannels; ++d) {\n                        let curVal = Number.MIN_SAFE_INTEGER;\n                        let hInMax = (hBeg < 0) ? 0 : hBeg;\n                        let wInMax = (wBeg < 0) ? 0 : wBeg;\n                        for (let h = 0; h < filterHeight; ++h) {\n                            const hIn = hBeg + h * dilationHeight;\n                            if (hIn >= 0 && hIn < inHeight) {\n                                for (let w = 0; w < filterWidth; ++w) {\n                                    const wIn = wBeg + w * dilationWidth;\n                                    if (wIn >= 0 && wIn < inWidth) {\n                                        const val = $x[b][hIn][wIn][d] + $filter[h][w][d];\n                                        if (val > curVal) {\n                                            curVal = val;\n                                            hInMax = hIn;\n                                            wInMax = wIn;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        gradients[b][hInMax][wInMax][d] += $dy[b][hOut][wOut][d];\n                    }\n                }\n            }\n        }\n        const dataId = cpuBackend.write(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toTypedArray(gradients, x.dtype), x.shape, x.dtype);\n        return { dataId, shape: x.shape, dtype: x.dtype };\n    }\n};\n//# sourceMappingURL=Dilation2DBackpropInput.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2DBackpropInput.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Einsum.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Einsum.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"einsum\": () => (/* binding */ einsum),\n/* harmony export */   \"einsumConfig\": () => (/* binding */ einsumConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Multiply */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _Sum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Sum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sum.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\nfunction einsum(args) {\n    const { inputs, backend, attrs } = args;\n    const { equation } = attrs;\n    const tensors = inputs;\n    const { allDims, summedDims, idDims } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.decodeEinsumEquation(equation, tensors.length);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.checkEinsumDimSizes(allDims.length, idDims, tensors);\n    const { path, steps } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getEinsumComputePath(summedDims, idDims);\n    const nSteps = steps.length;\n    let out = null;\n    let numDimsRemaining = allDims.length;\n    const tensorsToDispose = [];\n    for (let i = 0; i < nSteps; ++i) {\n        for (const idTerm of steps[i]) {\n            const { permutationIndices: perm, expandDims: dimsToExpand } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getEinsumPermutation(numDimsRemaining, idDims[idTerm]);\n            let x;\n            if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.isIdentityPermutation(perm)) {\n                x = tensors[idTerm];\n            }\n            else {\n                x = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x: tensors[idTerm] }, backend, attrs: { perm } });\n                tensorsToDispose.push(x);\n            }\n            const targetShape = x.shape.slice();\n            for (let k = 0; k < dimsToExpand.length; ++k) {\n                targetShape.splice(dimsToExpand[k], 0, 1);\n            }\n            if (!_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(x.shape, targetShape)) {\n                x = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x }, backend, attrs: { shape: targetShape } });\n                tensorsToDispose.push(x);\n            }\n            if (out === null) {\n                out = x;\n            }\n            else {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                out = (0,_Multiply__WEBPACK_IMPORTED_MODULE_3__.multiply)({ inputs: { a: x, b: out }, backend });\n                tensorsToDispose.push(out);\n            }\n        }\n        if (i < nSteps - 1) {\n            if (path[i] >= 0) {\n                out = (0,_Sum__WEBPACK_IMPORTED_MODULE_4__.sum)({\n                    inputs: { x: out },\n                    backend,\n                    attrs: {\n                        axis: path[i] - (allDims.length - numDimsRemaining),\n                        keepDims: false\n                    }\n                });\n                tensorsToDispose.push(out);\n            }\n            numDimsRemaining--;\n        }\n    }\n    // Clean up intermediate tensors.\n    for (const tensorInfo of tensorsToDispose) {\n        if (tensorInfo === out) {\n            continue;\n        }\n        backend.disposeIntermediateTensorInfo(tensorInfo);\n    }\n    return out;\n}\nconst einsumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Einsum,\n    backendName: 'cpu',\n    kernelFunc: einsum\n};\n//# sourceMappingURL=Einsum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Einsum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Elu.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Elu.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"elu\": () => (/* binding */ elu),\n/* harmony export */   \"eluConfig\": () => (/* binding */ eluConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst elu = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Elu, (xi) => xi >= 0 ? xi : (Math.exp(xi) - 1));\nconst eluConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Elu,\n    backendName: 'cpu',\n    kernelFunc: elu,\n};\n//# sourceMappingURL=Elu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Elu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/EluGrad.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/EluGrad.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eluGrad\": () => (/* binding */ eluGrad),\n/* harmony export */   \"eluGradConfig\": () => (/* binding */ eluGradConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction eluGrad(args) {\n    const { inputs, backend } = args;\n    const { dy, y } = inputs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([dy, y], 'eluGrad');\n    const resultValues = new Float32Array(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(y.shape));\n    const values = backend.data.get(y.dataId).values;\n    const dyValues = backend.data.get(dy.dataId).values;\n    for (let i = 0; i < values.length; ++i) {\n        const v = values[i];\n        if (v >= 1) {\n            resultValues[i] = dyValues[i];\n        }\n        else {\n            resultValues[i] = dyValues[i] * (v + 1);\n        }\n    }\n    return backend.makeTensorInfo(y.shape, 'float32', resultValues);\n}\nconst eluGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.EluGrad,\n    backendName: 'cpu',\n    kernelFunc: eluGrad\n};\n//# sourceMappingURL=EluGrad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/EluGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Equal.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Equal.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"equalImpl\": () => (/* binding */ equalImpl),\n/* harmony export */   \"equal\": () => (/* binding */ equal),\n/* harmony export */   \"equalConfig\": () => (/* binding */ equalConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst equalImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => (a === b) ? 1 : 0);\nconst equal = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Equal, equalImpl, null /* complexImpl */, 'bool');\nconst equalConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Equal,\n    backendName: 'cpu',\n    kernelFunc: equal\n};\n//# sourceMappingURL=Equal.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Equal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Erf.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Erf.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"erf\": () => (/* binding */ erf),\n/* harmony export */   \"erfConfig\": () => (/* binding */ erfConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst p = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_P;\nconst a1 = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_A1;\nconst a2 = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_A2;\nconst a3 = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_A3;\nconst a4 = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_A4;\nconst a5 = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_A5;\nconst erf = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Erf, (xi) => {\n    const sign = Math.sign(xi);\n    const v = Math.abs(xi);\n    const t = 1.0 / (1.0 + p * v);\n    return sign *\n        (1.0 -\n            (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t *\n                Math.exp(-v * v));\n});\nconst erfConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Erf,\n    backendName: 'cpu',\n    kernelFunc: erf,\n};\n//# sourceMappingURL=Erf.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Erf.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expImpl\": () => (/* binding */ expImpl),\n/* harmony export */   \"exp\": () => (/* binding */ exp),\n/* harmony export */   \"expConfig\": () => (/* binding */ expConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst expImpl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => Math.exp(xi));\nconst exp = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Exp, expImpl);\nconst expConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Exp,\n    backendName: 'cpu',\n    kernelFunc: exp,\n};\n//# sourceMappingURL=Exp.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ExpandDims.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ExpandDims.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expandDims\": () => (/* binding */ expandDims),\n/* harmony export */   \"expandDimsConfig\": () => (/* binding */ expandDimsConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction expandDims(args) {\n    const { inputs, backend, attrs } = args;\n    const { input } = inputs;\n    const { dim } = attrs;\n    const inputRank = input.shape.length;\n    const newShape = input.shape.slice();\n    let $dim = dim;\n    if (dim < 0) {\n        // Negative value is counted from the tail of rank.\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(-(inputRank + 1) <= dim, () => `Axis must be in the interval [${-(inputRank + 1)}, ${inputRank}]`);\n        $dim = inputRank + dim + 1;\n    }\n    newShape.splice($dim, 0, 1);\n    return (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: input }, backend, attrs: { shape: newShape } });\n}\nconst expandDimsConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ExpandDims,\n    backendName: 'cpu',\n    kernelFunc: expandDims\n};\n//# sourceMappingURL=ExpandDims.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ExpandDims.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expm1Impl\": () => (/* binding */ expm1Impl),\n/* harmony export */   \"expm1\": () => (/* binding */ expm1),\n/* harmony export */   \"expm1Config\": () => (/* binding */ expm1Config)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst expm1Impl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => Math.expm1(xi));\nconst expm1 = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Expm1, expm1Impl);\nconst expm1Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Expm1,\n    backendName: 'cpu',\n    kernelFunc: expm1,\n};\n//# sourceMappingURL=Expm1.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FFT.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FFT.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fft\": () => (/* binding */ fft),\n/* harmony export */   \"fftConfig\": () => (/* binding */ fftConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_fft_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/fft_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fft_utils.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction fft(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const inputSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(input.shape);\n    // Collapse all outer dimensions to a single batch dimension.\n    const innerDimensionSize = input.shape[input.shape.length - 1];\n    const batch = inputSize / innerDimensionSize;\n    const input2D = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({\n        inputs: { x: input },\n        backend,\n        attrs: { shape: [batch, innerDimensionSize] }\n    });\n    const result = (0,_utils_fft_utils__WEBPACK_IMPORTED_MODULE_2__.fftBatch)(input2D, false, backend);\n    const resultReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: result }, backend, attrs: { shape: input.shape } });\n    backend.disposeIntermediateTensorInfo(input2D);\n    backend.disposeIntermediateTensorInfo(result);\n    return resultReshaped;\n}\nconst fftConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FFT,\n    backendName: 'cpu',\n    kernelFunc: fft\n};\n//# sourceMappingURL=FFT.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FFT.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Fill.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Fill.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fill\": () => (/* binding */ fill),\n/* harmony export */   \"fillConfig\": () => (/* binding */ fillConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction fill(args) {\n    const { backend, attrs } = args;\n    const { shape, value, dtype } = attrs;\n    const $dtype = dtype || _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.inferDtype(value);\n    const values = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType($dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(shape));\n    fillValues(values, value, $dtype);\n    return backend.makeTensorInfo(shape, $dtype, values);\n}\nconst fillConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Fill,\n    backendName: 'cpu',\n    kernelFunc: fill\n};\nfunction fillValues(values, value, dtype) {\n    if (dtype === 'string') {\n        values.fill(value);\n    }\n    else {\n        values.fill(value);\n    }\n}\n//# sourceMappingURL=Fill.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Fill.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FlipLeftRight.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FlipLeftRight.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"flipLeftRightConfig\": () => (/* binding */ flipLeftRightConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst flipLeftRightConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FlipLeftRight,\n    backendName: 'cpu',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { image } = inputs;\n        const cpuBackend = backend;\n        const output = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(image.dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(image.shape));\n        const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n        const imageVals = cpuBackend.data.get(image.dataId).values;\n        for (let batchIdx = 0; batchIdx < batch; batchIdx++) {\n            const batchOffset = batchIdx * imageWidth * imageHeight * numChannels;\n            for (let row = 0; row < imageHeight; row++) {\n                const rowOffset = row * (imageWidth * numChannels);\n                for (let col = 0; col < imageWidth; col++) {\n                    const colOffset = col * numChannels;\n                    for (let channel = 0; channel < numChannels; channel++) {\n                        const coordX = Math.round(imageWidth - col - 1);\n                        const outIdx = batchOffset + rowOffset + colOffset + channel;\n                        let outputValue = imageVals[outIdx];\n                        // If the coordinate position falls within the image boundaries...\n                        if (coordX >= 0 && coordX < imageWidth) {\n                            // set the output to the image value at the coordinate position.\n                            const rotatedColOffset = coordX * numChannels;\n                            const imageIdx = batchOffset + rowOffset + rotatedColOffset + channel;\n                            outputValue = imageVals[imageIdx];\n                        }\n                        output[outIdx] = outputValue;\n                    }\n                }\n            }\n        }\n        const dataId = cpuBackend.write(output, image.shape, image.dtype);\n        return { dataId, shape: image.shape, dtype: image.dtype };\n    }\n};\n//# sourceMappingURL=FlipLeftRight.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FlipLeftRight.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floorImpl\": () => (/* binding */ floorImpl),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"floorConfig\": () => (/* binding */ floorConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst floorImpl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => Math.floor(xi));\nconst floor = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Floor, floorImpl);\nconst floorConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Floor,\n    backendName: 'cpu',\n    kernelFunc: floor,\n};\n//# sourceMappingURL=Floor.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FloorDiv.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FloorDiv.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floorDivImpl\": () => (/* binding */ floorDivImpl),\n/* harmony export */   \"floorDiv\": () => (/* binding */ floorDiv),\n/* harmony export */   \"floorDivConfig\": () => (/* binding */ floorDivConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst floorDivImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => Math.floor(a / b));\nconst floorDiv = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FloorDiv, floorDivImpl, null /* complexImpl */, 'int32');\nconst floorDivConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FloorDiv,\n    backendName: 'cpu',\n    kernelFunc: floorDiv\n};\n//# sourceMappingURL=FloorDiv.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FloorDiv.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FusedConv2D.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FusedConv2D.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fusedConv2D\": () => (/* binding */ fusedConv2D),\n/* harmony export */   \"fusedConv2DConfig\": () => (/* binding */ fusedConv2DConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_fused_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/fused_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fused_utils.js\");\n/* harmony import */ var _Add__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Add */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js\");\n/* harmony import */ var _Conv2D__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Conv2D */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2D.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction fusedConv2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    let result = (0,_Conv2D__WEBPACK_IMPORTED_MODULE_1__.conv2D)({\n        inputs: { x, filter },\n        backend,\n        attrs: { strides, pad, dataFormat, dilations, dimRoundingMode }\n    });\n    if (bias) {\n        const resultOld = result;\n        result = (0,_Add__WEBPACK_IMPORTED_MODULE_2__.add)({ inputs: { a: result, b: bias }, backend });\n        backend.disposeIntermediateTensorInfo(resultOld);\n    }\n    if (activation) {\n        const resultOld = result;\n        result = (0,_utils_fused_utils__WEBPACK_IMPORTED_MODULE_3__.applyActivation)(backend, result, activation, preluActivationWeights, leakyreluAlpha);\n        backend.disposeIntermediateTensorInfo(resultOld);\n    }\n    return result;\n}\nconst fusedConv2DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FusedConv2D,\n    backendName: 'cpu',\n    kernelFunc: fusedConv2D\n};\n//# sourceMappingURL=FusedConv2D.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FusedConv2D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FusedDepthwiseConv2D.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FusedDepthwiseConv2D.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fusedDepthwiseConv2D\": () => (/* binding */ fusedDepthwiseConv2D),\n/* harmony export */   \"fusedDepthwiseConv2DConfig\": () => (/* binding */ fusedDepthwiseConv2DConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_fused_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/fused_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fused_utils.js\");\n/* harmony import */ var _Add__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Add */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js\");\n/* harmony import */ var _DepthwiseConv2dNative__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DepthwiseConv2dNative */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNative.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction fusedDepthwiseConv2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    let result = (0,_DepthwiseConv2dNative__WEBPACK_IMPORTED_MODULE_1__.depthwiseConv2dNative)({\n        inputs: { x, filter },\n        backend,\n        attrs: { strides, pad, dataFormat, dilations, dimRoundingMode }\n    });\n    if (bias) {\n        const oldResult = result;\n        result = (0,_Add__WEBPACK_IMPORTED_MODULE_2__.add)({ inputs: { a: result, b: bias }, backend });\n        backend.disposeIntermediateTensorInfo(oldResult);\n    }\n    if (activation) {\n        const oldResult = result;\n        result = (0,_utils_fused_utils__WEBPACK_IMPORTED_MODULE_3__.applyActivation)(backend, result, activation, preluActivationWeights, leakyreluAlpha);\n        backend.disposeIntermediateTensorInfo(oldResult);\n    }\n    return result;\n}\nconst fusedDepthwiseConv2DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FusedDepthwiseConv2D,\n    backendName: 'cpu',\n    kernelFunc: fusedDepthwiseConv2D\n};\n//# sourceMappingURL=FusedDepthwiseConv2D.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FusedDepthwiseConv2D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gatherNd\": () => (/* binding */ gatherNd),\n/* harmony export */   \"gatherNdConfig\": () => (/* binding */ gatherNdConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _GatherNd_Impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GatherNd_Impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd_Impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction gatherNd(args) {\n    const { inputs, backend } = args;\n    const { params, indices } = inputs;\n    const paramsSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(params.shape);\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    const [resultShape, numSlices, sliceSize, strides] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.prepareAndValidate(params, indices);\n    if (numSlices === 0) {\n        return backend.makeTensorInfo(resultShape, params.dtype, []);\n    }\n    const indicesData = backend.data.get(indices.dataId).values;\n    const paramsBuf = backend.bufferSync(params);\n    const outBuf = (0,_GatherNd_Impl__WEBPACK_IMPORTED_MODULE_1__.gatherNdImpl)(indicesData, paramsBuf, params.dtype, numSlices, sliceRank, sliceSize, strides, params.shape, paramsSize);\n    return backend.makeTensorInfo(resultShape, params.dtype, outBuf.values);\n}\nconst gatherNdConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.GatherNd,\n    backendName: 'cpu',\n    kernelFunc: gatherNd\n};\n//# sourceMappingURL=GatherNd.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd_Impl.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd_Impl.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gatherNdImpl\": () => (/* binding */ gatherNdImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction gatherNdImpl(indicesData, paramsBuf, dtype, numSlices, sliceRank, sliceSize, strides, paramsShape, paramsSize) {\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)([numSlices, sliceSize], dtype);\n    for (let i = 0; i < numSlices; i++) {\n        const index = [];\n        let flattenIndex = 0;\n        for (let j = 0; j < sliceRank; j++) {\n            const dim = indicesData[i * sliceRank + j];\n            flattenIndex += dim * strides[j];\n            index.push(dim);\n        }\n        if (flattenIndex < 0 || flattenIndex >= paramsSize / sliceSize) {\n            throw new Error(`Invalid indices: ${index} does not index into ${paramsShape}`);\n        }\n        for (let k = 0; k < sliceSize; k++) {\n            outBuf.values[i * sliceSize + k] =\n                paramsBuf.get(...paramsBuf.indexToLoc(flattenIndex * sliceSize + k));\n        }\n    }\n    return outBuf;\n}\n//# sourceMappingURL=GatherNd_Impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd_Impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gatherV2\": () => (/* binding */ gatherV2),\n/* harmony export */   \"gatherV2Config\": () => (/* binding */ gatherV2Config)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _GatherV2_impl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GatherV2_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction gatherV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, indices } = inputs;\n    const { axis, batchDims } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x, indices], 'gatherV2');\n    let $batchDims = batchDims;\n    if (batchDims == null) {\n        $batchDims = 0;\n    }\n    const indicesSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(indices.shape);\n    const parsedAxis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape)[0];\n    const shapeInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.segment_util.collectGatherOpShapeInfo(x, indices, parsedAxis, $batchDims);\n    const flattenX = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({\n        inputs: { x },\n        backend,\n        attrs: {\n            shape: [\n                shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n                shapeInfo.sliceSize\n            ]\n        }\n    });\n    const flattenIndex = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({\n        inputs: { x: indices },\n        backend,\n        attrs: { shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize] }\n    });\n    const flattenOutputShape = [\n        shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n        shapeInfo.sliceSize\n    ];\n    const indicesBuf = backend.bufferSync(flattenIndex);\n    const xBuf = backend.bufferSync(flattenX);\n    const outBuf = (0,_GatherV2_impl__WEBPACK_IMPORTED_MODULE_3__.gatherV2Impl)(xBuf, indicesBuf, flattenOutputShape);\n    backend.disposeIntermediateTensorInfo(flattenX);\n    backend.disposeIntermediateTensorInfo(flattenIndex);\n    return backend.makeTensorInfo(shapeInfo.outputShape, outBuf.dtype, outBuf.values);\n}\nconst gatherV2Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.GatherV2,\n    backendName: 'cpu',\n    kernelFunc: gatherV2\n};\n//# sourceMappingURL=GatherV2.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gatherV2Impl\": () => (/* binding */ gatherV2Impl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction gatherV2Impl(xBuf, indicesBuf, flattenOutputShape) {\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(flattenOutputShape, xBuf.dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const newLoc = outBuf.indexToLoc(i);\n        const originalLoc = newLoc.slice();\n        const batchIdx = originalLoc[0];\n        const indicesIdx = originalLoc[2];\n        const indicesIndex = indicesBuf.locToIndex([batchIdx, indicesIdx]);\n        originalLoc[2] = indicesBuf.values[indicesIndex];\n        const originalIndex = xBuf.locToIndex(originalLoc);\n        outBuf.values[i] = xBuf.values[originalIndex];\n    }\n    return outBuf;\n}\n//# sourceMappingURL=GatherV2_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"greaterImpl\": () => (/* binding */ greaterImpl),\n/* harmony export */   \"greater\": () => (/* binding */ greater),\n/* harmony export */   \"greaterConfig\": () => (/* binding */ greaterConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst greaterImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => (a > b) ? 1 : 0);\nconst greater = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Greater, greaterImpl, null /* complexImpl */, 'bool');\nconst greaterConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Greater,\n    backendName: 'cpu',\n    kernelFunc: greater\n};\n//# sourceMappingURL=Greater.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GreaterEqual.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GreaterEqual.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"greaterEqualImpl\": () => (/* binding */ greaterEqualImpl),\n/* harmony export */   \"greaterEqual\": () => (/* binding */ greaterEqual),\n/* harmony export */   \"greaterEqualConfig\": () => (/* binding */ greaterEqualConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst greaterEqualImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => (a >= b) ? 1 : 0);\nconst greaterEqual = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.GreaterEqual, greaterEqualImpl, null /* complexImpl */, 'bool');\nconst greaterEqualConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.GreaterEqual,\n    backendName: 'cpu',\n    kernelFunc: greaterEqual\n};\n//# sourceMappingURL=GreaterEqual.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GreaterEqual.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IFFT.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IFFT.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ifft\": () => (/* binding */ ifft),\n/* harmony export */   \"ifftConfig\": () => (/* binding */ ifftConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_fft_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/fft_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fft_utils.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction ifft(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const inputSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(input.shape);\n    // Collapse all outer dimensions to a single batch dimension.\n    const innerDimensionSize = input.shape[input.shape.length - 1];\n    const batch = inputSize / innerDimensionSize;\n    const input2D = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({\n        inputs: { x: input },\n        backend,\n        attrs: { shape: [batch, innerDimensionSize] }\n    });\n    const result = (0,_utils_fft_utils__WEBPACK_IMPORTED_MODULE_2__.fftBatch)(input2D, true, backend);\n    const resultReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: result }, backend, attrs: { shape: input.shape } });\n    backend.disposeIntermediateTensorInfo(input2D);\n    backend.disposeIntermediateTensorInfo(result);\n    return resultReshaped;\n}\nconst ifftConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IFFT,\n    backendName: 'cpu',\n    kernelFunc: ifft\n};\n//# sourceMappingURL=IFFT.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IFFT.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"identityConfig\": () => (/* binding */ identityConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction identity(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    backend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: x.shape, dtype: x.dtype };\n}\nconst identityConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Identity,\n    backendName: 'cpu',\n    kernelFunc: identity\n};\n//# sourceMappingURL=Identity.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Imag.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Imag.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"imag\": () => (/* binding */ imag),\n/* harmony export */   \"imagConfig\": () => (/* binding */ imagConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction imag(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const imag = backend.data.get(input.dataId).complexTensorInfos.imag;\n    const imagVal = backend.data.get(imag.dataId).values;\n    // When complex tensor is disposed, its underlying parts will be disposed too.\n    // Make new tensor out of the imag value of the complex. This makes sure the\n    // value is still accessible even if complex tensor is disposed.\n    return backend.makeTensorInfo(imag.shape, imag.dtype, imagVal);\n}\nconst imagConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Imag,\n    backendName: 'cpu',\n    kernelFunc: imag\n};\n//# sourceMappingURL=Imag.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Imag.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsFinite.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsFinite.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isFinite\": () => (/* binding */ isFinite),\n/* harmony export */   \"isFiniteConfig\": () => (/* binding */ isFiniteConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst isFinite = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IsFinite, (xi) => Number.isFinite(xi) ? 1 : 0, 'bool');\nconst isFiniteConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IsFinite,\n    backendName: 'cpu',\n    kernelFunc: isFinite,\n};\n//# sourceMappingURL=IsFinite.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsFinite.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsInf.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsInf.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isInf\": () => (/* binding */ isInf),\n/* harmony export */   \"isInfConfig\": () => (/* binding */ isInfConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst isInf = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IsInf, (xi) => Math.abs(xi) === Infinity ? 1 : 0, 'bool');\nconst isInfConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IsInf,\n    backendName: 'cpu',\n    kernelFunc: isInf,\n};\n//# sourceMappingURL=IsInf.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsInf.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsNaN.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsNaN.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNaN\": () => (/* binding */ isNaN),\n/* harmony export */   \"isNaNConfig\": () => (/* binding */ isNaNConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst isNaN = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IsNan, (xi) => Number.isNaN(xi) ? 1 : 0, 'bool');\nconst isNaNConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IsNan,\n    backendName: 'cpu',\n    kernelFunc: isNaN,\n};\n//# sourceMappingURL=IsNaN.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsNaN.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LRN.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LRN.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lRN\": () => (/* binding */ lRN),\n/* harmony export */   \"lRNConfig\": () => (/* binding */ lRNConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction lRN(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { depthRadius, bias, alpha, beta } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'LRN');\n    const channels = x.shape[3];\n    const maxD = channels - 1;\n    const xValues = backend.data.get(x.dataId).values;\n    const size = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    const result = new Float32Array(size);\n    function sumAcrossChannels(offset) {\n        const currentChannel = offset % channels;\n        let beginSumOffset = offset - currentChannel + Math.max(0, currentChannel - depthRadius);\n        const endSumOffset = offset - currentChannel + Math.min(currentChannel + depthRadius, maxD);\n        let sum = 0.0;\n        for (; beginSumOffset <= endSumOffset; beginSumOffset++) {\n            const z = xValues[beginSumOffset];\n            sum += z * z;\n        }\n        return sum;\n    }\n    for (let offset = 0; offset < size; offset++) {\n        const sum = sumAcrossChannels(offset);\n        const val = xValues[offset] * Math.pow(bias + alpha * sum, -beta);\n        result[offset] = val;\n    }\n    return backend.makeTensorInfo(x.shape, x.dtype, result);\n}\nconst lRNConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LRN,\n    backendName: 'cpu',\n    kernelFunc: lRN\n};\n//# sourceMappingURL=LRN.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LRN.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LRNGrad.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LRNGrad.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lRNGrad\": () => (/* binding */ lRNGrad),\n/* harmony export */   \"lRNGradConfig\": () => (/* binding */ lRNGradConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction lRNGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, y, dy } = inputs;\n    const { depthRadius, bias, alpha, beta } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(dy, 'LRNGrad');\n    const dySize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(dy.shape);\n    const channels = dy.shape[3];\n    const dyValues = backend.data.get(dy.dataId).values;\n    const xValues = backend.data.get(x.dataId).values;\n    const yValues = backend.data.get(y.dataId).values;\n    const result = new Float32Array(dySize);\n    const size = dySize;\n    for (let offset = 0; offset < size; offset++) {\n        const currentChannel = offset % channels;\n        const depthBegin = (offset - currentChannel) + Math.max(0, currentChannel - depthRadius);\n        const depthEnd = (offset - currentChannel) +\n            Math.min(channels, currentChannel + depthRadius + 1);\n        let norm = 0;\n        for (let k = depthBegin; k < depthEnd; k++) {\n            norm += Math.pow(xValues[k], 2);\n        }\n        norm = alpha * norm + bias;\n        for (let k = depthBegin; k < depthEnd; k++) {\n            let dyi = -2 * alpha * beta * xValues[k] * yValues[offset] / norm;\n            if (offset === k) {\n                dyi += Math.pow(norm, -beta);\n            }\n            dyi *= dyValues[offset];\n            result[k] += dyi;\n        }\n    }\n    return backend.makeTensorInfo(dy.shape, x.dtype, result);\n}\nconst lRNGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LRNGrad,\n    backendName: 'cpu',\n    kernelFunc: lRNGrad\n};\n//# sourceMappingURL=LRNGrad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LRNGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LeakyRelu.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LeakyRelu.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"leakyRelu\": () => (/* binding */ leakyRelu),\n/* harmony export */   \"leakyReluConfig\": () => (/* binding */ leakyReluConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction leakyRelu(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { alpha } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x], 'leakyRelu');\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    const xVals = backend.data.get(x.dataId).values;\n    const outVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType('float32', xSize);\n    for (let i = 0; i < xVals.length; i++) {\n        outVals[i] = xVals[i] < 0 ? alpha * xVals[i] : xVals[i];\n    }\n    return backend.makeTensorInfo(x.shape, 'float32', outVals);\n}\nconst leakyReluConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LeakyRelu,\n    backendName: 'cpu',\n    kernelFunc: leakyRelu\n};\n//# sourceMappingURL=LeakyRelu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LeakyRelu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lessImpl\": () => (/* binding */ lessImpl),\n/* harmony export */   \"less\": () => (/* binding */ less),\n/* harmony export */   \"lessConfig\": () => (/* binding */ lessConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst lessImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => (a < b) ? 1 : 0);\nconst less = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Less, lessImpl, null /* complexImpl */, 'bool');\nconst lessConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Less,\n    backendName: 'cpu',\n    kernelFunc: less\n};\n//# sourceMappingURL=Less.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LessEqual.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LessEqual.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lessEqualImpl\": () => (/* binding */ lessEqualImpl),\n/* harmony export */   \"lessEqual\": () => (/* binding */ lessEqual),\n/* harmony export */   \"lessEqualConfig\": () => (/* binding */ lessEqualConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst lessEqualImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => (a <= b) ? 1 : 0);\nconst lessEqual = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LessEqual, lessEqualImpl, null /* complexImpl */, 'bool');\nconst lessEqualConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LessEqual,\n    backendName: 'cpu',\n    kernelFunc: lessEqual\n};\n//# sourceMappingURL=LessEqual.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LessEqual.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"linSpace\": () => (/* binding */ linSpace),\n/* harmony export */   \"linSpaceConfig\": () => (/* binding */ linSpaceConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _LinSpace_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LinSpace_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction linSpace(args) {\n    const { backend, attrs } = args;\n    const { start, stop, num } = attrs;\n    const outVals = (0,_LinSpace_impl__WEBPACK_IMPORTED_MODULE_1__.linSpaceImpl)(start, stop, num);\n    return backend.makeTensorInfo([outVals.length], 'float32', outVals);\n}\nconst linSpaceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LinSpace,\n    backendName: 'cpu',\n    kernelFunc: linSpace\n};\n//# sourceMappingURL=LinSpace.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"linSpaceImpl\": () => (/* binding */ linSpaceImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction linSpaceImpl(start, stop, num) {\n    const step = (stop - start) / (num - 1);\n    const values = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(num, 'float32');\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=LinSpace_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logImpl\": () => (/* binding */ logImpl),\n/* harmony export */   \"log\": () => (/* binding */ log),\n/* harmony export */   \"logConfig\": () => (/* binding */ logConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst logImpl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => Math.log(xi));\nconst log = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Log, logImpl);\nconst logConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Log,\n    backendName: 'cpu',\n    kernelFunc: log,\n};\n//# sourceMappingURL=Log.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log1p.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log1p.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"log1p\": () => (/* binding */ log1p),\n/* harmony export */   \"log1pConfig\": () => (/* binding */ log1pConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst log1p = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Log1p, (xi) => Math.log1p(xi));\nconst log1pConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Log1p,\n    backendName: 'cpu',\n    kernelFunc: log1p,\n};\n//# sourceMappingURL=Log1p.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log1p.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalAnd.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalAnd.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalAndImpl\": () => (/* binding */ logicalAndImpl),\n/* harmony export */   \"logicalAnd\": () => (/* binding */ logicalAnd),\n/* harmony export */   \"logicalAndConfig\": () => (/* binding */ logicalAndConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst logicalAndImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => a && b);\nconst logicalAnd = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LogicalAnd, logicalAndImpl, null /* complexImpl */, 'bool');\nconst logicalAndConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LogicalAnd,\n    backendName: 'cpu',\n    kernelFunc: logicalAnd\n};\n//# sourceMappingURL=LogicalAnd.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalAnd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalNot.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalNot.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalNot\": () => (/* binding */ logicalNot),\n/* harmony export */   \"logicalNotConfig\": () => (/* binding */ logicalNotConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst logicalNot = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LogicalNot, (xi) => xi ? 0 : 1, 'bool');\nconst logicalNotConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LogicalNot,\n    backendName: 'cpu',\n    kernelFunc: logicalNot,\n};\n//# sourceMappingURL=LogicalNot.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalNot.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalOr.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalOr.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalOrImpl\": () => (/* binding */ logicalOrImpl),\n/* harmony export */   \"logicalOr\": () => (/* binding */ logicalOr),\n/* harmony export */   \"logicalOrConfig\": () => (/* binding */ logicalOrConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst logicalOrImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => a || b);\nconst logicalOr = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LogicalOr, logicalOrImpl, null /* complexImpl */, 'bool');\nconst logicalOrConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LogicalOr,\n    backendName: 'cpu',\n    kernelFunc: logicalOr\n};\n//# sourceMappingURL=LogicalOr.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalOr.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"maxConfig\": () => (/* binding */ maxConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Max_impl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Max_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js\");\n/* harmony import */ var _Transpose_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\nfunction max(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { reductionIndices, keepDims } = attrs;\n    const cpuBackend = backend;\n    let xShape = x.shape;\n    const xRank = xShape.length;\n    const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(reductionIndices, xShape);\n    let axes = origAxes;\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n    let xVals = cpuBackend.data.get(x.dataId).values;\n    if (permutedAxes != null) {\n        const newShape = new Array(xRank);\n        for (let i = 0; i < newShape.length; i++) {\n            newShape[i] = xShape[permutedAxes[i]];\n        }\n        xVals = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_1__.transposeImpl)(xVals, xShape, x.dtype, permutedAxes, newShape);\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, xRank);\n        xShape = newShape;\n    }\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_2__.assertNotComplex)(x, 'max');\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('max', axes, xRank);\n    const [maxOutShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(xShape, axes);\n    const reduceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const result = (0,_Max_impl__WEBPACK_IMPORTED_MODULE_3__.maxImpl)(xVals, reduceSize, maxOutShape, x.dtype);\n    const dataId = cpuBackend.write(result, maxOutShape, x.dtype);\n    let outShape = maxOutShape;\n    if (keepDims) {\n        // reshape\n        const newShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(maxOutShape, origAxes);\n        outShape = newShape;\n    }\n    return { dataId, shape: outShape, dtype: x.dtype };\n}\nconst maxConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Max,\n    backendName: 'cpu',\n    kernelFunc: max\n};\n//# sourceMappingURL=Max.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPool\": () => (/* binding */ maxPool),\n/* harmony export */   \"maxPoolConfig\": () => (/* binding */ maxPoolConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _utils_pool_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/pool_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction maxPool(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'maxPool');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = 1;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    let res;\n    if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n        res = (0,_Identity__WEBPACK_IMPORTED_MODULE_2__.identity)({ inputs: { x }, backend });\n    }\n    else {\n        const xValues = backend.data.get(x.dataId).values;\n        const strides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape);\n        const buffer = (0,_utils_pool_utils__WEBPACK_IMPORTED_MODULE_3__.pool)(xValues, x.shape, x.dtype, strides, convInfo, 'max');\n        res = backend.makeTensorInfo(convInfo.outShape, x.dtype, buffer.values);\n    }\n    return res;\n}\nconst maxPoolConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MaxPool,\n    backendName: 'cpu',\n    kernelFunc: maxPool\n};\n//# sourceMappingURL=MaxPool.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3D.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3D.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPool3D\": () => (/* binding */ maxPool3D),\n/* harmony export */   \"maxPool3DConfig\": () => (/* binding */ maxPool3DConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _utils_pool_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/pool_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction maxPool3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dimRoundingMode, dataFormat } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'maxPool3d');\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool3DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode, dataFormat);\n    const xValues = backend.data.get(x.dataId).values;\n    const outBuf = (0,_utils_pool_utils__WEBPACK_IMPORTED_MODULE_2__.pool3d)(xValues, x.shape, x.dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape), convInfo, 'max');\n    return backend.makeTensorInfo(outBuf.shape, 'float32', outBuf.values);\n}\nconst maxPool3DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MaxPool3D,\n    backendName: 'cpu',\n    kernelFunc: maxPool3D\n};\n//# sourceMappingURL=MaxPool3D.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3DGrad.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3DGrad.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPool3DGrad\": () => (/* binding */ maxPool3DGrad),\n/* harmony export */   \"maxPool3DGradConfig\": () => (/* binding */ maxPool3DGradConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _utils_pool_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/pool_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction maxPool3DGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([dy, input], 'maxPool3DGrad');\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool3DInfo(input.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const inputBuf = backend.bufferSync(input);\n    const maxPosBuf = (0,_utils_pool_utils__WEBPACK_IMPORTED_MODULE_2__.maxPool3dPositions)(inputBuf, convInfo);\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationDepth = convInfo.dilationDepth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n    const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n    const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n    const dx = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(input.shape, 'float32');\n    const dyBuf = backend.bufferSync(dy);\n    for (let batch = 0; batch < convInfo.batchSize; ++batch) {\n        for (let channel = 0; channel < convInfo.inChannels; ++channel) {\n            for (let dxDepth = 0; dxDepth < convInfo.inDepth; ++dxDepth) {\n                for (let dxRow = 0; dxRow < convInfo.inHeight; ++dxRow) {\n                    for (let dxCol = 0; dxCol < convInfo.inWidth; ++dxCol) {\n                        // Shader code begins\n                        const dyDepthCorner = dxDepth - padFront;\n                        const dyRowCorner = dxRow - padTop;\n                        const dyColCorner = dxCol - padLeft;\n                        let dotProd = 0;\n                        for (let wDepth = 0; wDepth < effectiveFilterDepth; wDepth += dilationDepth) {\n                            const dyDepth = (dyDepthCorner + wDepth) / strideDepth;\n                            if (dyDepth < 0 || dyDepth >= convInfo.outDepth ||\n                                Math.floor(dyDepth) !== dyDepth) {\n                                continue;\n                            }\n                            for (let wRow = 0; wRow < effectiveFilterHeight; wRow += dilationHeight) {\n                                const dyRow = (dyRowCorner + wRow) / strideHeight;\n                                if (dyRow < 0 || dyRow >= convInfo.outHeight ||\n                                    Math.floor(dyRow) !== dyRow) {\n                                    continue;\n                                }\n                                for (let wCol = 0; wCol < effectiveFilterWidth; wCol += dilationWidth) {\n                                    const dyCol = (dyColCorner + wCol) / strideWidth;\n                                    if (dyCol < 0 || dyCol >= convInfo.outWidth ||\n                                        Math.floor(dyCol) !== dyCol) {\n                                        continue;\n                                    }\n                                    const maxPos = effectiveFilterDepth * effectiveFilterHeight *\n                                        effectiveFilterWidth -\n                                        1 -\n                                        maxPosBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                                    const curPos = wDepth * effectiveFilterHeight * effectiveFilterWidth +\n                                        wRow * effectiveFilterWidth + wCol;\n                                    const mask = maxPos === curPos ? 1 : 0;\n                                    if (mask === 0) {\n                                        continue;\n                                    }\n                                    const pixel = dyBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                                    dotProd += pixel * mask;\n                                }\n                            }\n                        }\n                        dx.set(dotProd, batch, dxDepth, dxRow, dxCol, channel);\n                    }\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nconst maxPool3DGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MaxPool3DGrad,\n    backendName: 'cpu',\n    kernelFunc: maxPool3DGrad\n};\n//# sourceMappingURL=MaxPool3DGrad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3DGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolGrad.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolGrad.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPoolGrad\": () => (/* binding */ maxPoolGrad),\n/* harmony export */   \"maxPoolGradConfig\": () => (/* binding */ maxPoolGradConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _utils_pool_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/pool_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction maxPoolGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input, output } = inputs;\n    const x = input;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([input, output], 'maxPoolGrad');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const xValues = backend.data.get(x.dataId).values;\n    const maxPosBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(convInfo.outShape, x.dtype, (0,_utils_pool_utils__WEBPACK_IMPORTED_MODULE_2__.maxPoolPositions)(xValues, x.shape, x.dtype, convInfo).values);\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n    const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n    const dx = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(x.shape, 'float32');\n    const dyData = backend.data.get(dy.dataId).values;\n    const dyBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(dy.shape, 'float32', dyData);\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n        for (let d = 0; d < convInfo.inChannels; ++d) {\n            for (let dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n                for (let dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n                    // Shader code begins.\n                    const dyRCorner = dxR - padTop;\n                    const dyCCorner = dxC - padLeft;\n                    let dotProd = 0;\n                    for (let wR = 0; wR < effectiveFilterHeight; wR += dilationHeight) {\n                        const dyR = (dyRCorner + wR) / strideHeight;\n                        if (dyR < 0 || dyR >= convInfo.outHeight ||\n                            Math.floor(dyR) !== dyR) {\n                            continue;\n                        }\n                        for (let wC = 0; wC < effectiveFilterWidth; wC += dilationWidth) {\n                            const dyC = (dyCCorner + wC) / strideWidth;\n                            if (dyC < 0 || dyC >= convInfo.outWidth ||\n                                Math.floor(dyC) !== dyC) {\n                                continue;\n                            }\n                            const maxPos = effectiveFilterHeight * effectiveFilterWidth - 1 -\n                                maxPosBuf.get(b, dyR, dyC, d);\n                            const curPos = wR * effectiveFilterWidth + wC;\n                            const mask = maxPos === curPos ? 1 : 0;\n                            if (mask === 0) {\n                                continue;\n                            }\n                            const pixel = dyBuf.get(b, dyR, dyC, d);\n                            dotProd += pixel * mask;\n                        }\n                    }\n                    dx.set(dotProd, b, dxR, dxC, d);\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nconst maxPoolGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MaxPoolGrad,\n    backendName: 'cpu',\n    kernelFunc: maxPoolGrad\n};\n//# sourceMappingURL=MaxPoolGrad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolWithArgmax.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolWithArgmax.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPoolWithArgmaxConfig\": () => (/* binding */ maxPoolWithArgmaxConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _MaxPoolWithArgmax_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MaxPoolWithArgmax_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolWithArgmax_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nconst maxPoolWithArgmaxConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MaxPoolWithArgmax,\n    backendName: 'cpu',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        const { filterSize, strides, pad, includeBatchInIndex } = attrs;\n        const cpuBackend = backend;\n        (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'MaxPoolWithArgmax');\n        const values = cpuBackend.data.get(x.dataId).values;\n        const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool2DInfo(x.shape, filterSize, strides, [1, 1], pad);\n        const [pooled, indexes] = (0,_MaxPoolWithArgmax_impl__WEBPACK_IMPORTED_MODULE_2__.maxPoolWithArgmaxImpl)(values, x.shape, x.dtype, includeBatchInIndex, convInfo);\n        const pooledDataId = cpuBackend.write(pooled, convInfo.outShape, x.dtype);\n        const indexesDataId = cpuBackend.write(indexes, convInfo.outShape, x.dtype);\n        return [\n            { dataId: pooledDataId, shape: convInfo.outShape, dtype: x.dtype },\n            { dataId: indexesDataId, shape: convInfo.outShape, dtype: 'int32' }\n        ];\n    }\n};\n//# sourceMappingURL=MaxPoolWithArgmax.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolWithArgmax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolWithArgmax_impl.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolWithArgmax_impl.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPoolWithArgmaxImpl\": () => (/* binding */ maxPoolWithArgmaxImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_pool_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/pool_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction maxPoolWithArgmaxImpl(xValues, xShape, dtype, includeBatchInIndex, convInfo) {\n    const strides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(xShape);\n    const maxPools = (0,_utils_pool_utils__WEBPACK_IMPORTED_MODULE_1__.pool)(xValues, xShape, dtype, strides, convInfo, 'max');\n    const maxPositions = (0,_utils_pool_utils__WEBPACK_IMPORTED_MODULE_1__.maxPoolPositions)(xValues, xShape, dtype, convInfo, true, includeBatchInIndex);\n    return [maxPools.values, maxPositions.values];\n}\n//# sourceMappingURL=MaxPoolWithArgmax_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolWithArgmax_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxImpl\": () => (/* binding */ maxImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction maxImpl(aVals, reduceSize, outShape, dtype) {\n    const vals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape));\n    for (let i = 0; i < vals.length; ++i) {\n        const offset = i * reduceSize;\n        let max = aVals[offset];\n        for (let j = 0; j < reduceSize; ++j) {\n            const value = aVals[offset + j];\n            if (Number.isNaN(value) ||\n                value > max) { // comparison with NaN always return false\n                max = value;\n            }\n        }\n        vals[i] = max;\n    }\n    return vals;\n}\n//# sourceMappingURL=Max_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maximumImpl\": () => (/* binding */ maximumImpl),\n/* harmony export */   \"maximum\": () => (/* binding */ maximum),\n/* harmony export */   \"maximumConfig\": () => (/* binding */ maximumConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst maximumImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((aValue, bValue) => Math.max(aValue, bValue)));\nconst maximum = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Maximum, maximumImpl);\nconst maximumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Maximum,\n    backendName: 'cpu',\n    kernelFunc: maximum\n};\n//# sourceMappingURL=Maximum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mean.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mean.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mean\": () => (/* binding */ mean),\n/* harmony export */   \"meanConfig\": () => (/* binding */ meanConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Cast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cast */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js\");\n/* harmony import */ var _RealDiv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RealDiv */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RealDiv.js\");\n/* harmony import */ var _Sum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Sum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sum.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction mean(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    const shapes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(x.shape, axes);\n    const reduceShape = shapes[1];\n    const reduceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const toDispose = [];\n    const reduceSizeScalar = backend.makeTensorInfo([], 'float32', new Float32Array([reduceSize]));\n    toDispose.push(reduceSizeScalar);\n    const $x = (0,_Cast__WEBPACK_IMPORTED_MODULE_1__.cast)({ inputs: { x }, backend, attrs: { dtype: 'float32' } });\n    toDispose.push($x);\n    const res = (0,_RealDiv__WEBPACK_IMPORTED_MODULE_2__.div)({ inputs: { a: $x, b: reduceSizeScalar }, backend });\n    toDispose.push(res);\n    const result = (0,_Sum__WEBPACK_IMPORTED_MODULE_3__.sum)({ inputs: { x: res }, backend, attrs: { axis, keepDims } });\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nconst meanConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Mean,\n    backendName: 'cpu',\n    kernelFunc: mean\n};\n//# sourceMappingURL=Mean.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mean.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Min.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Min.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"minConfig\": () => (/* binding */ minConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction min(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'min');\n    const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    if (permutedAxes != null) {\n        $x = (0,_Transpose__WEBPACK_IMPORTED_MODULE_2__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, x.shape.length);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('min', axes, $x.shape.length);\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes($x.shape, axes);\n    const reduceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const vals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape), $x.dtype);\n    const aVals = backend.data.get($x.dataId).values;\n    for (let i = 0; i < vals.length; ++i) {\n        const offset = i * reduceSize;\n        let min = aVals[offset];\n        for (let j = 0; j < reduceSize; ++j) {\n            const value = aVals[offset + j];\n            if (Number.isNaN(value) ||\n                value < min) { // comparison with NaN always return false\n                min = value;\n            }\n        }\n        vals[i] = min;\n    }\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo($x);\n    }\n    const result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n    if (keepDims) {\n        const expandedShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(outShape, origAxes);\n        const reshapedResult = (0,_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: { x: result }, backend, attrs: { shape: expandedShape } });\n        backend.disposeIntermediateTensorInfo(result);\n        return reshapedResult;\n    }\n    return result;\n}\nconst minConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Min,\n    backendName: 'cpu',\n    kernelFunc: min\n};\n//# sourceMappingURL=Min.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Min.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"minimumImpl\": () => (/* binding */ minimumImpl),\n/* harmony export */   \"minimum\": () => (/* binding */ minimum),\n/* harmony export */   \"minimumConfig\": () => (/* binding */ minimumConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst minimumImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((aValue, bValue) => Math.min(aValue, bValue)));\nconst minimum = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Minimum, minimumImpl);\nconst minimumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Minimum,\n    backendName: 'cpu',\n    kernelFunc: minimum\n};\n//# sourceMappingURL=Minimum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MirrorPad.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MirrorPad.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mirrorPad\": () => (/* binding */ mirrorPad),\n/* harmony export */   \"mirrorPadConfig\": () => (/* binding */ mirrorPadConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction mirrorPad(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { paddings, mode } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'mirrorPad');\n    const outShape = paddings.map((p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n    const start = paddings.map(p => p[0]);\n    const end = paddings.map((p, i) => p[0] + x.shape[i]);\n    const offset = mode === 'reflect' ? 0 : 1;\n    const xVals = backend.data.get(x.dataId).values;\n    const xRank = x.shape.length;\n    const xStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape);\n    const resultSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape);\n    const resultRank = outShape.length;\n    const resultStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(outShape);\n    const resVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(x.dtype, resultSize);\n    for (let i = 0; i < resultSize; i++) {\n        let coords = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.indexToLoc(i, resultRank, resultStrides);\n        for (let i = 0; i < resultRank; i++) {\n            if (coords[i] < start[i]) {\n                coords[i] = start[i] * 2 - coords[i] - offset;\n            }\n            else if (coords[i] >= end[i]) {\n                coords[i] = (end[i] - 1) * 2 - coords[i] + offset;\n            }\n        }\n        coords = coords.map((c, i) => c - start[i]);\n        const inIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(coords, xRank, xStrides);\n        resVals[i] = xVals[inIndex];\n    }\n    const outId = backend.write(resVals, outShape, x.dtype);\n    return { dataId: outId, shape: outShape, dtype: x.dtype };\n}\nconst mirrorPadConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MirrorPad,\n    backendName: 'cpu',\n    kernelFunc: mirrorPad\n};\n//# sourceMappingURL=MirrorPad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MirrorPad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mod.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mod.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"modImpl\": () => (/* binding */ modImpl),\n/* harmony export */   \"mod\": () => (/* binding */ mod),\n/* harmony export */   \"modConfig\": () => (/* binding */ modConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst modImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((aValue, bValue) => {\n    const rem = aValue % bValue;\n    if ((aValue < 0 && bValue < 0) || (aValue >= 0 && bValue >= 0)) {\n        return rem;\n    }\n    else {\n        return (rem + bValue) % bValue;\n    }\n}));\nconst mod = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Mod, modImpl);\nconst modConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Mod,\n    backendName: 'cpu',\n    kernelFunc: mod\n};\n//# sourceMappingURL=Mod.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mod.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multinomial.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multinomial.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multinomial\": () => (/* binding */ multinomial),\n/* harmony export */   \"multinomialConfig\": () => (/* binding */ multinomialConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! seedrandom */ \"./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/index.js\");\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(seedrandom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Softmax__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Softmax */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softmax.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction multinomial(args) {\n    const { inputs, backend, attrs } = args;\n    const { logits } = inputs;\n    const { numSamples, seed, normalized } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_2__.assertNotComplex)(logits, 'multinomial');\n    const probabilities = normalized ?\n        logits :\n        (0,_Softmax__WEBPACK_IMPORTED_MODULE_3__.softmax)({ inputs: { logits }, backend, attrs: { dim: -1 } });\n    const batchSize = probabilities.shape[0];\n    const numEvents = probabilities.shape[1];\n    const probVals = backend.data.get(probabilities.dataId).values;\n    const resShape = [batchSize, numSamples];\n    const resVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(resShape), 'int32');\n    for (let b = 0; b < batchSize; ++b) {\n        const offset = b * numEvents;\n        // The cdf won't include the last event. It will be implicit if no other\n        // event happened.\n        const cdf = new Float32Array(numEvents - 1);\n        cdf[0] = probVals[offset];\n        for (let event = 1; event < cdf.length; ++event) {\n            cdf[event] = cdf[event - 1] + probVals[offset + event];\n        }\n        const random = seedrandom__WEBPACK_IMPORTED_MODULE_1__.alea(seed.toString());\n        const outOffset = b * numSamples;\n        for (let sampleId = 0; sampleId < numSamples; ++sampleId) {\n            const r = random();\n            // Assume last event happened by default.\n            resVals[outOffset + sampleId] = cdf.length;\n            for (let event = 0; event < cdf.length; event++) {\n                if (r < cdf[event]) {\n                    resVals[outOffset + sampleId] = event;\n                    break;\n                }\n            }\n        }\n    }\n    if (!normalized) {\n        backend.disposeIntermediateTensorInfo(probabilities);\n    }\n    return backend.makeTensorInfo(resShape, 'int32', resVals);\n}\nconst multinomialConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Multinomial,\n    backendName: 'cpu',\n    kernelFunc: multinomial\n};\n//# sourceMappingURL=Multinomial.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multinomial.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multiplyImpl\": () => (/* binding */ multiplyImpl),\n/* harmony export */   \"multiplyComplexImpl\": () => (/* binding */ multiplyComplexImpl),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"multiplyConfig\": () => (/* binding */ multiplyConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst multiplyImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((aValue, bValue) => aValue * bValue));\nconst multiplyComplexImpl = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.createComplexBinaryKernelImpl)(((aReal, aImag, bReal, bImag) => {\n    return {\n        real: aReal * bReal - aImag * bImag,\n        imag: aReal * bImag + aImag * bReal\n    };\n}));\nconst multiply = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Multiply, multiplyImpl, multiplyComplexImpl);\nconst multiplyConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Multiply,\n    backendName: 'cpu',\n    kernelFunc: multiply\n};\n//# sourceMappingURL=Multiply.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"negImpl\": () => (/* binding */ negImpl),\n/* harmony export */   \"neg\": () => (/* binding */ neg),\n/* harmony export */   \"negConfig\": () => (/* binding */ negConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Multiply */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction negImpl(xVals, xShape, xDtype) {\n    const minusOne = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.createScalarValue(-1, xDtype);\n    return (0,_Multiply__WEBPACK_IMPORTED_MODULE_1__.multiplyImpl)([], xShape, minusOne, xVals, xDtype);\n}\nfunction neg(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_2__.assertNotComplex)(x, 'neg');\n    const xVals = backend.data.get(x.dataId).values;\n    const [res, newShape] = negImpl(xVals, x.shape, x.dtype);\n    return backend.makeTensorInfo(newShape, x.dtype, res);\n}\nconst negConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Neg,\n    backendName: 'cpu',\n    kernelFunc: neg\n};\n//# sourceMappingURL=Neg.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV3.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV3.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionV3\": () => (/* binding */ nonMaxSuppressionV3),\n/* harmony export */   \"nonMaxSuppressionV3Config\": () => (/* binding */ nonMaxSuppressionV3Config)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst nonMaxSuppressionV3Impl = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.kernel_impls.nonMaxSuppressionV3Impl;\n\nfunction nonMaxSuppressionV3(args) {\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(boxes, 'NonMaxSuppression');\n    const boxesVals = backend.data.get(boxes.dataId).values;\n    const scoresVals = backend.data.get(scores.dataId).values;\n    const { selectedIndices } = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    return backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\nconst nonMaxSuppressionV3Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NonMaxSuppressionV3,\n    backendName: 'cpu',\n    kernelFunc: nonMaxSuppressionV3\n};\n//# sourceMappingURL=NonMaxSuppressionV3.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV3.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV4.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV4.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionV4\": () => (/* binding */ nonMaxSuppressionV4),\n/* harmony export */   \"nonMaxSuppressionV4Config\": () => (/* binding */ nonMaxSuppressionV4Config)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst nonMaxSuppressionV4Impl = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.kernel_impls.nonMaxSuppressionV4Impl;\n\nfunction nonMaxSuppressionV4(args) {\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(boxes, 'NonMaxSuppressionPadded');\n    const boxesVals = backend.data.get(boxes.dataId).values;\n    const scoresVals = backend.data.get(scores.dataId).values;\n    const { selectedIndices, validOutputs } = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))\n    ];\n}\nconst nonMaxSuppressionV4Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NonMaxSuppressionV4,\n    backendName: 'cpu',\n    kernelFunc: nonMaxSuppressionV4\n};\n//# sourceMappingURL=NonMaxSuppressionV4.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV4.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV5.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV5.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionV5\": () => (/* binding */ nonMaxSuppressionV5),\n/* harmony export */   \"nonMaxSuppressionV5Config\": () => (/* binding */ nonMaxSuppressionV5Config)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst nonMaxSuppressionV5Impl = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.kernel_impls.nonMaxSuppressionV5Impl;\n\nfunction nonMaxSuppressionV5(args) {\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(boxes, 'NonMaxSuppressionWithScore');\n    const boxesVals = backend.data.get(boxes.dataId).values;\n    const scoresVals = backend.data.get(scores.dataId).values;\n    const maxOutputSizeVal = maxOutputSize;\n    const iouThresholdVal = iouThreshold;\n    const scoreThresholdVal = scoreThreshold;\n    const softNmsSigmaVal = softNmsSigma;\n    const { selectedIndices, selectedScores } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))\n    ];\n}\nconst nonMaxSuppressionV5Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NonMaxSuppressionV5,\n    backendName: 'cpu',\n    kernelFunc: nonMaxSuppressionV5\n};\n//# sourceMappingURL=NonMaxSuppressionV5.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV5.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"notEqualImpl\": () => (/* binding */ notEqualImpl),\n/* harmony export */   \"notEqual\": () => (/* binding */ notEqual),\n/* harmony export */   \"notEqualConfig\": () => (/* binding */ notEqualConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst notEqualImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((a, b) => (a !== b) ? 1 : 0));\nconst notEqual = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NotEqual, notEqualImpl, null /* complexOp */, 'bool');\nconst notEqualConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NotEqual,\n    backendName: 'cpu',\n    kernelFunc: notEqual\n};\n//# sourceMappingURL=NotEqual.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/OneHot.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/OneHot.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"oneHot\": () => (/* binding */ oneHot),\n/* harmony export */   \"oneHotConfig\": () => (/* binding */ oneHotConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction oneHot(args) {\n    const { inputs, backend, attrs } = args;\n    const { indices } = inputs;\n    const { depth, onValue, offValue } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(indices, 'oneHot');\n    const indicesSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(indices.shape);\n    const res = new Float32Array(indicesSize * depth);\n    res.fill(offValue);\n    const indicesVal = backend.data.get(indices.dataId).values;\n    for (let event = 0; event < indicesSize; ++event) {\n        if (indicesVal[event] >= 0 && indicesVal[event] < depth) {\n            res[event * depth + indicesVal[event]] = onValue;\n        }\n    }\n    return backend.makeTensorInfo([...indices.shape, depth], 'int32', res);\n}\nconst oneHotConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.OneHot,\n    backendName: 'cpu',\n    kernelFunc: oneHot\n};\n//# sourceMappingURL=OneHot.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/OneHot.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/OnesLike.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/OnesLike.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onesLike\": () => (/* binding */ onesLike),\n/* harmony export */   \"onesLikeConfig\": () => (/* binding */ onesLikeConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/* harmony import */ var _Fill__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Fill */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Fill.js\");\n/* harmony import */ var _Imag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Imag */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Imag.js\");\n/* harmony import */ var _Real__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Real */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js\");\n/* harmony import */ var _ZerosLike__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ZerosLike */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ZerosLike.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\nfunction onesLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'string') {\n        throw new Error('onesLike is not supported for string tensors');\n    }\n    else if (x.dtype === 'complex64') {\n        const realPart = (0,_Real__WEBPACK_IMPORTED_MODULE_1__.real)({ inputs: { input: x }, backend });\n        const r = onesLike({ inputs: { x: realPart }, backend });\n        const imagPart = (0,_Imag__WEBPACK_IMPORTED_MODULE_2__.imag)({ inputs: { input: x }, backend });\n        const i = (0,_ZerosLike__WEBPACK_IMPORTED_MODULE_3__.zerosLike)({ inputs: { x: imagPart }, backend });\n        const result = (0,_Complex__WEBPACK_IMPORTED_MODULE_4__.complex)({ inputs: { real: r, imag: i }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(r);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        backend.disposeIntermediateTensorInfo(i);\n        return result;\n    }\n    else {\n        return (0,_Fill__WEBPACK_IMPORTED_MODULE_5__.fill)({ backend, attrs: { shape: x.shape, value: 1, dtype: x.dtype } });\n    }\n}\nconst onesLikeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.OnesLike,\n    backendName: 'cpu',\n    kernelFunc: onesLike\n};\n//# sourceMappingURL=OnesLike.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/OnesLike.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pack.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pack.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pack\": () => (/* binding */ pack),\n/* harmony export */   \"packConfig\": () => (/* binding */ packConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Concat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Concat */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat.js\");\n/* harmony import */ var _ExpandDims__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ExpandDims */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ExpandDims.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction pack(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    if (inputs.length === 1) {\n        return (0,_ExpandDims__WEBPACK_IMPORTED_MODULE_1__.expandDims)({ inputs: { input: inputs[0] }, backend, attrs: { dim: axis } });\n    }\n    const shape = inputs[0].shape;\n    const dtype = inputs[0].dtype;\n    inputs.forEach(t => {\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(dtype === t.dtype, () => 'All tensors passed to stack must have matching dtypes');\n    });\n    const intermediateTensorInfos = [];\n    const expandedTensors = inputs.map(t => {\n        const expandedT = (0,_ExpandDims__WEBPACK_IMPORTED_MODULE_1__.expandDims)({ inputs: { input: t }, backend, attrs: { dim: axis } });\n        intermediateTensorInfos.push(expandedT);\n        return expandedT;\n    });\n    const result = (0,_Concat__WEBPACK_IMPORTED_MODULE_2__.concat)({ inputs: expandedTensors, backend, attrs: { axis } });\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nconst packConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Pack,\n    backendName: 'cpu',\n    kernelFunc: pack\n};\n//# sourceMappingURL=Pack.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pack.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/PadV2.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/PadV2.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"padV2\": () => (/* binding */ padV2),\n/* harmony export */   \"padV2Config\": () => (/* binding */ padV2Config)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction padV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { paddings, constantValue } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'pad');\n    const outShape = paddings.map((p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n    const start = paddings.map(p => p[0]);\n    const xVals = backend.data.get(x.dataId).values;\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    const xRank = x.shape.length;\n    const xStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape);\n    const resultSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape);\n    const resultRank = outShape.length;\n    const resultStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(outShape);\n    const resVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(x.dtype, resultSize);\n    if (constantValue !== 0) {\n        resVals.fill(constantValue);\n    }\n    for (let i = 0; i < xSize; i++) {\n        const coords = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.indexToLoc(i, xRank, xStrides);\n        const outCoords = coords.map((c, i) => c + start[i]);\n        const outIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(outCoords, resultRank, resultStrides);\n        resVals[outIndex] = xVals[i];\n    }\n    const outId = backend.write(resVals, outShape, x.dtype);\n    return { dataId: outId, shape: outShape, dtype: x.dtype };\n}\nconst padV2Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.PadV2,\n    backendName: 'cpu',\n    kernelFunc: padV2\n};\n//# sourceMappingURL=PadV2.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/PadV2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pow.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pow.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"powImpl\": () => (/* binding */ powImpl),\n/* harmony export */   \"pow\": () => (/* binding */ pow),\n/* harmony export */   \"powConfig\": () => (/* binding */ powConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst powImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => Math.pow(a, b));\nconst pow = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Pow, powImpl);\nconst powConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Pow,\n    backendName: 'cpu',\n    kernelFunc: pow\n};\n//# sourceMappingURL=Pow.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pow.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prelu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prelu.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prelu\": () => (/* binding */ prelu),\n/* harmony export */   \"preluConfig\": () => (/* binding */ preluConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst preluImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((xValue, aValue) => xValue < 0 ? aValue * xValue : xValue);\nfunction prelu(args) {\n    const { inputs, backend } = args;\n    const { x, alpha } = inputs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_2__.assertNotComplex)([x, alpha], 'prelu');\n    const aVals = backend.data.get(x.dataId).values;\n    const bVals = backend.data.get(alpha.dataId).values;\n    const [resultData, resultShape] = preluImpl(x.shape, alpha.shape, aVals, bVals, x.dtype);\n    return backend.makeTensorInfo(resultShape, x.dtype, resultData);\n}\nconst preluConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Prelu,\n    backendName: 'cpu',\n    kernelFunc: prelu,\n};\n//# sourceMappingURL=Prelu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prelu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prodImpl\": () => (/* binding */ prodImpl),\n/* harmony export */   \"prod\": () => (/* binding */ prod),\n/* harmony export */   \"prodConfig\": () => (/* binding */ prodConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction prodImpl(xShape, xDtype, xVals, reductionAxes) {\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(xShape, reductionAxes);\n    const outDtype = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.upcastType)(xDtype, 'int32');\n    const outVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape), outDtype);\n    const reduceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    for (let i = 0; i < outVals.length; ++i) {\n        const offset = i * reduceSize;\n        let prod = 1;\n        for (let j = 0; j < reduceSize; ++j) {\n            prod *= xVals[offset + j];\n        }\n        outVals[i] = prod;\n    }\n    return { outVals, outShape, outDtype };\n}\nfunction prod(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'prod');\n    const xRank = x.shape.length;\n    const axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    const permutation = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n    let reductionAxes = axes;\n    let permutedX = x;\n    const intermediateTensorInfos = [];\n    if (permutation != null) {\n        permutedX = (0,_Transpose__WEBPACK_IMPORTED_MODULE_2__.transpose)({ inputs: { x }, backend, attrs: { perm: permutation } });\n        intermediateTensorInfos.push(permutedX);\n        reductionAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(reductionAxes.length, xRank);\n    }\n    const xVals = backend.data.get(permutedX.dataId).values;\n    const { outVals, outShape, outDtype } = prodImpl(permutedX.shape, permutedX.dtype, xVals, reductionAxes);\n    let resultShape = outShape;\n    if (keepDims) {\n        resultShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(outShape, axes);\n    }\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return backend.makeTensorInfo(resultShape, outDtype, outVals);\n}\nconst prodConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Prod,\n    backendName: 'cpu',\n    kernelFunc: prod\n};\n//# sourceMappingURL=Prod.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"range\": () => (/* binding */ range),\n/* harmony export */   \"rangeConfig\": () => (/* binding */ rangeConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Range_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Range_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction range(args) {\n    const { backend, attrs } = args;\n    const { start, stop, dtype, step } = attrs;\n    const values = (0,_Range_impl__WEBPACK_IMPORTED_MODULE_1__.rangeImpl)(start, stop, step, dtype);\n    return backend.makeTensorInfo([values.length], dtype, values);\n}\nconst rangeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Range,\n    backendName: 'cpu',\n    kernelFunc: range\n};\n//# sourceMappingURL=Range.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rangeImpl\": () => (/* binding */ rangeImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction rangeImpl(start, stop, step, dtype) {\n    const sameStartStop = start === stop;\n    const increasingRangeNegativeStep = start < stop && step < 0;\n    const decreasingRangePositiveStep = stop < start && step > 1;\n    if (sameStartStop || increasingRangeNegativeStep ||\n        decreasingRangePositiveStep) {\n        return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(0, dtype);\n    }\n    const numElements = Math.abs(Math.ceil((stop - start) / step));\n    const values = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(numElements, dtype);\n    if (stop < start && step === 1) {\n        // Auto adjust the step's sign if it hasn't been set\n        // (or was set to 1)\n        step = -1;\n    }\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=Range_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"real\": () => (/* binding */ real),\n/* harmony export */   \"realConfig\": () => (/* binding */ realConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction real(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const real = backend.data.get(input.dataId).complexTensorInfos.real;\n    const realVal = backend.data.get(real.dataId).values;\n    // When complex tensor is disposed, its underlying parts will be disposed too.\n    // Make new tensor out of the real value of the complex. This makes sure the\n    // value is still accessible even if complex tensor is disposed.\n    return backend.makeTensorInfo(real.shape, real.dtype, realVal);\n}\nconst realConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Real,\n    backendName: 'cpu',\n    kernelFunc: real\n};\n//# sourceMappingURL=Real.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RealDiv.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RealDiv.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"realDivImpl\": () => (/* binding */ realDivImpl),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"realDivConfig\": () => (/* binding */ realDivConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst realDivImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => a / b);\nconst div = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.RealDiv, realDivImpl);\nconst realDivConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.RealDiv,\n    backendName: 'cpu',\n    kernelFunc: div\n};\n//# sourceMappingURL=RealDiv.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RealDiv.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reciprocal.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reciprocal.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reciprocal\": () => (/* binding */ reciprocal),\n/* harmony export */   \"reciprocalConfig\": () => (/* binding */ reciprocalConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst reciprocal = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Reciprocal, (xi) => 1 / xi);\nconst reciprocalConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Reciprocal,\n    backendName: 'cpu',\n    kernelFunc: reciprocal,\n};\n//# sourceMappingURL=Reciprocal.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reciprocal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"relu\": () => (/* binding */ relu),\n/* harmony export */   \"reluConfig\": () => (/* binding */ reluConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst relu = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Relu, (xi) => Math.max(0, xi));\nconst reluConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Relu,\n    backendName: 'cpu',\n    kernelFunc: relu,\n};\n//# sourceMappingURL=Relu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu6.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu6.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"relu6\": () => (/* binding */ relu6),\n/* harmony export */   \"relu6Config\": () => (/* binding */ relu6Config)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst relu6 = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Relu6, (xi) => Math.min(Math.max(0, xi), 6));\nconst relu6Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Relu6,\n    backendName: 'cpu',\n    kernelFunc: relu6,\n};\n//# sourceMappingURL=Relu6.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu6.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reshape\": () => (/* binding */ reshape),\n/* harmony export */   \"reshapeConfig\": () => (/* binding */ reshapeConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction reshape(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { shape } = attrs;\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    const $shape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.inferFromImplicitShape(shape, xSize);\n    const $xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape($shape);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(xSize === $xSize, () => `The new shape (${$shape}) has ${$xSize} elements and the old ` +\n        `shape (${x.shape}) has ${xSize} elements. The new shape and old ` +\n        `shape must have the same number of elements.`);\n    backend.incRef(x.dataId);\n    const xData = backend.data.get(x.dataId);\n    if (xData.complexTensorInfos != null) {\n        const real = xData.complexTensorInfos.real;\n        const imag = xData.complexTensorInfos.imag;\n        real.shape = $shape;\n        imag.shape = $shape;\n    }\n    return { dataId: x.dataId, shape: $shape, dtype: x.dtype };\n}\nconst reshapeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Reshape,\n    backendName: 'cpu',\n    kernelFunc: reshape\n};\n//# sourceMappingURL=Reshape.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeBilinear.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeBilinear.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeBilinear\": () => (/* binding */ resizeBilinear),\n/* harmony export */   \"resizeBilinearConfig\": () => (/* binding */ resizeBilinearConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction resizeBilinear(args) {\n    const { inputs, backend, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, halfPixelCenters, size } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(images, 'resizeBilinear');\n    const imagesStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(images.shape);\n    const [newHeight, newWidth] = size;\n    const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n    const xValues = backend.data.get(images.dataId).values;\n    const result = new Float32Array(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape([batch, newHeight, newWidth, numChannels]));\n    const effectiveInputSize = [\n        (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n        (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n    ];\n    const effectiveOutputSize = [\n        (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n        (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n    ];\n    let outputIdx = 0;\n    const effectiveRowSizeRatio = effectiveInputSize[0] / effectiveOutputSize[0];\n    const effectiveColSizeRatio = effectiveInputSize[1] / effectiveOutputSize[1];\n    for (let b = 0; b < batch; b++) {\n        for (let r = 0; r < newHeight; r++) {\n            let sourceFracRow;\n            if (halfPixelCenters) {\n                sourceFracRow = effectiveRowSizeRatio * (r + 0.5) - 0.5;\n            }\n            else {\n                sourceFracRow = effectiveRowSizeRatio * r;\n            }\n            const sourceRowFloor = Math.max(0, Math.floor(sourceFracRow));\n            const rowFrac = sourceFracRow - sourceRowFloor;\n            const sourceRowCeil = Math.min(oldHeight - 1, Math.ceil(sourceFracRow));\n            const topRowOffset = b * imagesStrides[0] + sourceRowFloor * imagesStrides[1];\n            const botRowOffset = b * imagesStrides[0] + sourceRowCeil * imagesStrides[1];\n            for (let c = 0; c < newWidth; c++) {\n                let sourceFracCol;\n                if (halfPixelCenters) {\n                    sourceFracCol = effectiveColSizeRatio * (c + 0.5) - 0.5;\n                }\n                else {\n                    sourceFracCol = effectiveColSizeRatio * c;\n                }\n                const sourceColFloor = Math.max(0, Math.floor(sourceFracCol));\n                const colFrac = sourceFracCol - sourceColFloor;\n                const sourceColCeil = Math.min(oldWidth - 1, Math.ceil(sourceFracCol));\n                const topLeftOffest = topRowOffset + sourceColFloor * imagesStrides[2];\n                const botLeftOffset = botRowOffset + sourceColFloor * imagesStrides[2];\n                const topRightOffset = topRowOffset + sourceColCeil * imagesStrides[2];\n                const botRightOffest = botRowOffset + sourceColCeil * imagesStrides[2];\n                for (let d = 0; d < numChannels; d++) {\n                    // Begin shader.\n                    // Compute the fractional index of the source.\n                    const topLeft = xValues[topLeftOffest + d];\n                    const bottomLeft = xValues[botLeftOffset + d];\n                    const topRight = xValues[topRightOffset + d];\n                    const bottomRight = xValues[botRightOffest + d];\n                    const top = topLeft + (topRight - topLeft) * colFrac;\n                    const bottom = bottomLeft + (bottomRight - bottomLeft) * colFrac;\n                    const newValue = top + (bottom - top) * rowFrac;\n                    result[outputIdx++] = newValue;\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo([batch, newHeight, newWidth, numChannels], 'float32', result);\n}\nconst resizeBilinearConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ResizeBilinear,\n    backendName: 'cpu',\n    kernelFunc: resizeBilinear\n};\n//# sourceMappingURL=ResizeBilinear.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeBilinear.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeBilinearGrad.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeBilinearGrad.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeBilinearGrad\": () => (/* binding */ resizeBilinearGrad),\n/* harmony export */   \"resizeBilinearGradConfig\": () => (/* binding */ resizeBilinearGradConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction resizeBilinearGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { images, dy } = inputs;\n    const { alignCorners } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([dy, images], 'resizeBilinearGrad');\n    const imagesStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(images.shape);\n    const [batch, xHeight, xWidth, depth] = images.shape;\n    const [, yHeight, yWidth] = dy.shape;\n    const output = new Float32Array(batch * xHeight * xWidth * depth);\n    // In the backwards pass, we want to find the pixels that were generated\n    // for each pixel in the input image the forward pass and add the\n    // corresponding coefficient from dy to the gradient (with some\n    // interpolation).\n    const effectiveXSize = [\n        (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n        (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n    ];\n    const effectiveYSize = [\n        (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n        (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n    ];\n    const heightScale = effectiveXSize[0] / effectiveYSize[0];\n    const widthScale = effectiveXSize[1] / effectiveYSize[1];\n    // Reference implementation\n    // tslint:disable-next-line:max-line-length\n    // https://github.com/tensorflow/tensorflow/blob/3039375c86a5bbc9610c7725dcaa95d635f87ba2/tensorflow/core/kernels/resize_bilinear_op.cc#L275\n    const dyValues = backend.data.get(dy.dataId).values;\n    let offset = 0;\n    for (let b = 0; b < batch; b++) {\n        const bOffset = b * imagesStrides[0];\n        for (let r = 0; r < yHeight; r++) {\n            const dxR = r * heightScale;\n            const topDxRIndex = Math.floor(dxR);\n            const bottomDxRIndex = Math.min(Math.ceil(dxR), xHeight - 1);\n            const topDxROffset = bOffset + topDxRIndex * imagesStrides[1];\n            const bottomDxROffset = bOffset + bottomDxRIndex * imagesStrides[1];\n            const dxRLerp = dxR - topDxRIndex;\n            const inverseDxRLerp = 1.0 - dxRLerp;\n            for (let c = 0; c < yWidth; c++) {\n                const dxC = c * widthScale;\n                const leftDxCIndex = Math.floor(dxC);\n                const rightDxCIndex = Math.min(Math.ceil(dxC), xWidth - 1);\n                const dxCLerp = dxC - leftDxCIndex;\n                const inverseDxCLerp = 1.0 - dxCLerp;\n                const topLeftRCOffset = topDxROffset + leftDxCIndex * imagesStrides[2];\n                const topRightRCOffset = topDxROffset + rightDxCIndex * imagesStrides[2];\n                const bottomLeftRCOffset = bottomDxROffset + leftDxCIndex * imagesStrides[2];\n                const bottomRightRCOffset = bottomDxROffset + rightDxCIndex * imagesStrides[2];\n                const inverseDxRLerpTimesInverseDxCLerp = inverseDxRLerp * inverseDxCLerp;\n                const inverseDxRLerpTimesDxCLerp = inverseDxRLerp * dxCLerp;\n                const dxRLerpTimesInverseDxCLerp = dxRLerp * inverseDxCLerp;\n                const dxRLerpTimesDxCLerp = dxRLerp * dxCLerp;\n                for (let d = 0; d < depth; d++) {\n                    const dyVal = dyValues[offset++];\n                    output[topLeftRCOffset + d] +=\n                        dyVal * inverseDxRLerpTimesInverseDxCLerp;\n                    output[topRightRCOffset + d] += dyVal * inverseDxRLerpTimesDxCLerp;\n                    output[bottomLeftRCOffset + d] += dyVal * dxRLerpTimesInverseDxCLerp;\n                    output[bottomRightRCOffset + d] += dyVal * dxRLerpTimesDxCLerp;\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo([batch, xWidth, xHeight, depth], 'float32', output);\n}\nconst resizeBilinearGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ResizeBilinearGrad,\n    backendName: 'cpu',\n    kernelFunc: resizeBilinearGrad\n};\n//# sourceMappingURL=ResizeBilinearGrad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeBilinearGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeNearestNeighbor.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeNearestNeighbor.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeNearestNeighbor\": () => (/* binding */ resizeNearestNeighbor),\n/* harmony export */   \"resizeNearestNeighborConfig\": () => (/* binding */ resizeNearestNeighborConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction resizeNearestNeighbor(args) {\n    const { inputs, backend, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, halfPixelCenters, size } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(images, 'resizeNearestNeighbor');\n    const imagesStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(images.shape);\n    const [newHeight, newWidth] = size;\n    const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n    const xValues = backend.data.get(images.dataId).values;\n    const output = new Float32Array(batch * newHeight * newWidth * numChannels);\n    const effectiveInputSize = [\n        (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n        (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n    ];\n    const effectiveOutputSize = [\n        (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n        (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n    ];\n    const effectiveRowSizeRatio = effectiveInputSize[0] / effectiveOutputSize[0];\n    const effectiveColSizeRatio = effectiveInputSize[1] / effectiveOutputSize[1];\n    let outputOffset = 0;\n    for (let b = 0; b < batch; b++) {\n        const batchOffset = b * imagesStrides[0];\n        for (let r = 0; r < newHeight; r++) {\n            const sourceFracRow = halfPixelCenters ?\n                effectiveRowSizeRatio * (r + 0.5) :\n                effectiveRowSizeRatio * r;\n            let sourceNearestRow = Math.min(oldHeight - 1, alignCorners ? Math.round(sourceFracRow) : Math.floor(sourceFracRow));\n            if (halfPixelCenters) {\n                sourceNearestRow = Math.max(0, sourceNearestRow);\n            }\n            const rowOffset = batchOffset + sourceNearestRow * imagesStrides[1];\n            for (let c = 0; c < newWidth; c++) {\n                const sourceFracCol = halfPixelCenters ?\n                    effectiveColSizeRatio * (c + 0.5) :\n                    effectiveColSizeRatio * c;\n                let sourceNearestCol = Math.min(oldWidth - 1, alignCorners ? Math.round(sourceFracCol) :\n                    Math.floor(sourceFracCol));\n                if (halfPixelCenters) {\n                    sourceNearestCol = Math.max(0, sourceNearestCol);\n                }\n                const colOffset = rowOffset + sourceNearestCol * imagesStrides[2];\n                for (let d = 0; d < numChannels; d++) {\n                    // Begin shader.\n                    // Compute the fractional index of the source.\n                    const newVal = xValues[colOffset + d];\n                    output[outputOffset++] = newVal;\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo([batch, newHeight, newWidth, numChannels], images.dtype, output);\n}\nconst resizeNearestNeighborConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ResizeNearestNeighbor,\n    backendName: 'cpu',\n    kernelFunc: resizeNearestNeighbor\n};\n//# sourceMappingURL=ResizeNearestNeighbor.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeNearestNeighbor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeNearestNeighborGrad.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeNearestNeighborGrad.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeNearestNeighborGrad\": () => (/* binding */ resizeNearestNeighborGrad),\n/* harmony export */   \"resizeNearestNeighborGradConfig\": () => (/* binding */ resizeNearestNeighborGradConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction resizeNearestNeighborGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { images, dy } = inputs;\n    const { alignCorners } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([dy, images], 'resizeNearestNeighborGrad');\n    const imagesStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(images.shape);\n    const dyStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(dy.shape);\n    const [batch, xHeight, xWidth, depth] = images.shape;\n    const [, yHeight, yWidth] = dy.shape;\n    const output = new Float32Array(batch * xHeight * xWidth * depth);\n    const dyValues = backend.data.get(dy.dataId).values;\n    // In the backwards pass, we want to find the pixels that were generated\n    // for each pixel in the input image the forward pass\n    const effectiveXSize = [\n        (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n        (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n    ];\n    const effectiveYSize = [\n        (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n        (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n    ];\n    const heightScale = effectiveXSize[0] / effectiveYSize[0];\n    const widthScale = effectiveXSize[1] / effectiveYSize[1];\n    const invHeightScale = 1 / heightScale;\n    const invWidthScale = 1 / widthScale;\n    // This defines the size of the window of values around a particular\n    // index in dy that we want to search for contributions to dx.\n    const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n    const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n    // Loop over the output space.\n    for (let b = 0; b < batch; b++) {\n        const batchOffset = b * imagesStrides[0];\n        for (let r = 0; r < xHeight; r++) {\n            const rowOffset = batchOffset + r * imagesStrides[1];\n            // Compute bounds for where in dy we will look\n            const startRLerp = Math.floor(r * invHeightScale);\n            const startDyR = Math.floor(startRLerp - (winHeight / 2));\n            for (let c = 0; c < xWidth; c++) {\n                const colOffset = rowOffset + c * imagesStrides[2];\n                // Compute bounds for where in dy we will look\n                const startCLerp = Math.floor(c * invWidthScale);\n                const startDyC = Math.floor(startCLerp - (winWidth / 2));\n                for (let d = 0; d < depth; d++) {\n                    let accum = 0;\n                    // loop over dy\n                    for (let dyRIndex = 0; dyRIndex < winHeight; dyRIndex++) {\n                        const dyR = dyRIndex + startDyR;\n                        // Guard against the window exceeding the bounds of dy\n                        if (dyR < 0 || dyR >= yHeight) {\n                            continue;\n                        }\n                        const dyROffset = batchOffset + dyR * dyStrides[1];\n                        const sourceFracRow = dyR * heightScale;\n                        const sourceNearestRow = Math.min(xHeight - 1, alignCorners ? Math.round(sourceFracRow) :\n                            Math.floor(sourceFracRow));\n                        if (r !== sourceNearestRow) {\n                            continue;\n                        }\n                        for (let dyCIndex = 0; dyCIndex < winWidth; dyCIndex++) {\n                            const dyC = dyCIndex + startDyC;\n                            // Guard against the window exceeding the bounds of dy\n                            if (dyC < 0 || dyC >= yWidth) {\n                                continue;\n                            }\n                            const dyCOffset = dyROffset + dyC * dyStrides[2];\n                            const sourceFracCol = dyC * widthScale;\n                            const sourceNearestCol = Math.min(xWidth - 1, alignCorners ? Math.round(sourceFracCol) :\n                                Math.floor(sourceFracCol));\n                            if (c === sourceNearestCol) {\n                                accum += dyValues[dyCOffset + d];\n                            }\n                        }\n                    }\n                    output[colOffset + d] = accum;\n                }\n            }\n        }\n    }\n    return backend.makeTensorInfo(images.shape, images.dtype, output);\n}\nconst resizeNearestNeighborGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ResizeNearestNeighborGrad,\n    backendName: 'cpu',\n    kernelFunc: resizeNearestNeighborGrad\n};\n//# sourceMappingURL=ResizeNearestNeighborGrad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeNearestNeighborGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reverse.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reverse.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse\": () => (/* binding */ reverse),\n/* harmony export */   \"reverseConfig\": () => (/* binding */ reverseConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction reverse(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dims } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'reverse');\n    const xRank = x.shape.length;\n    const $dims = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(dims, x.shape);\n    if (xRank === 0) {\n        return (0,_Identity__WEBPACK_IMPORTED_MODULE_2__.identity)({ inputs: { x }, backend });\n    }\n    const outBuf = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(x.shape, x.dtype);\n    const xBuf = backend.bufferSync(x);\n    for (let i = 0; i < outBuf.size; i++) {\n        const outLoc = outBuf.indexToLoc(i);\n        const inLoc = outLoc.slice();\n        $dims.forEach(d => inLoc[d] = x.shape[d] - 1 - inLoc[d]);\n        outBuf.set(xBuf.get(...inLoc), ...outLoc);\n    }\n    return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n}\nconst reverseConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Reverse,\n    backendName: 'cpu',\n    kernelFunc: reverse\n};\n//# sourceMappingURL=Reverse.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reverse.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RotateWithOffset.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RotateWithOffset.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rotateWithOffsetConfig\": () => (/* binding */ rotateWithOffsetConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst rotateWithOffsetConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.RotateWithOffset,\n    backendName: 'cpu',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { image } = inputs;\n        const { radians, fillValue, center } = attrs;\n        const cpuBackend = backend;\n        const output = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(image.dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(image.shape));\n        const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n        const [centerX, centerY] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getImageCenter(center, imageHeight, imageWidth);\n        const fullOpacityValue = 255;\n        const sinFactor = Math.sin(radians);\n        const cosFactor = Math.cos(radians);\n        const imageVals = cpuBackend.data.get(image.dataId).values;\n        for (let batchIdx = 0; batchIdx < batch; batchIdx++) {\n            const batchOffset = batchIdx * imageWidth * imageHeight * numChannels;\n            for (let row = 0; row < imageHeight; row++) {\n                const rowOffset = row * (imageWidth * numChannels);\n                for (let col = 0; col < imageWidth; col++) {\n                    const colOffset = col * numChannels;\n                    for (let channel = 0; channel < numChannels; channel++) {\n                        const coords = [batch, row, col, channel];\n                        const x = coords[2];\n                        const y = coords[1];\n                        // coordX/coordY are the result of rotating and translating x/y.\n                        let coordX = (x - centerX) * cosFactor - (y - centerY) * sinFactor;\n                        let coordY = (x - centerX) * sinFactor + (y - centerY) * cosFactor;\n                        coordX = Math.round(coordX + centerX);\n                        coordY = Math.round(coordY + centerY);\n                        let outputValue = fillValue;\n                        if (typeof fillValue !== 'number') {\n                            if (channel === 3) {\n                                outputValue = fullOpacityValue;\n                            }\n                            else {\n                                outputValue = fillValue[channel];\n                            }\n                        }\n                        // If the coordinate position falls within the image boundaries...\n                        if (coordX >= 0 && coordX < imageWidth && coordY >= 0 &&\n                            coordY < imageHeight) {\n                            // set the output to the image value at the coordinate position.\n                            const rotatedRowOffset = coordY * (imageWidth * numChannels);\n                            const rotatedColOffset = coordX * numChannels;\n                            const imageIdx = batchOffset + rotatedRowOffset + rotatedColOffset + channel;\n                            outputValue = imageVals[imageIdx];\n                        }\n                        const outIdx = batchOffset + rowOffset + colOffset + channel;\n                        output[outIdx] = outputValue;\n                    }\n                }\n            }\n        }\n        const dataId = cpuBackend.write(output, image.shape, image.dtype);\n        return { dataId, shape: image.shape, dtype: image.dtype };\n    }\n};\n//# sourceMappingURL=RotateWithOffset.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RotateWithOffset.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Round.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Round.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"roundConfig\": () => (/* binding */ roundConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst round = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Round, (xi) => {\n    // The algorithm is based on banker's rounding.\n    const base = Math.floor(xi);\n    if (xi - base < 0.5) {\n        return Math.floor(xi);\n    }\n    else if (xi - base > 0.5) {\n        return Math.ceil(xi);\n    }\n    else {\n        if (base % 2.0 === 0.0) {\n            return base;\n        }\n        else {\n            return base + 1.0;\n        }\n    }\n});\nconst roundConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Round,\n    backendName: 'cpu',\n    kernelFunc: round,\n};\n//# sourceMappingURL=Round.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Round.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rsqrtImpl\": () => (/* binding */ rsqrtImpl),\n/* harmony export */   \"rsqrt\": () => (/* binding */ rsqrt),\n/* harmony export */   \"rsqrtConfig\": () => (/* binding */ rsqrtConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst rsqrtImpl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => 1 / Math.sqrt(xi));\nconst rsqrt = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Rsqrt, rsqrtImpl);\nconst rsqrtConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Rsqrt,\n    backendName: 'cpu',\n    kernelFunc: rsqrt,\n};\n//# sourceMappingURL=Rsqrt.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ScatterNd.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ScatterNd.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scatterNd\": () => (/* binding */ scatterNd),\n/* harmony export */   \"scatterNdConfig\": () => (/* binding */ scatterNdConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Scatter_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Scatter_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Scatter_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction scatterNd(args) {\n    const { inputs, backend, attrs } = args;\n    const { indices, updates } = inputs;\n    const { shape } = attrs;\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.calculateShapes(updates, indices, shape);\n    const sumDupeIndices = true;\n    const indicesBuf = backend.bufferSync(indices);\n    const updatesBuf = backend.bufferSync(updates);\n    const outBuf = (0,_Scatter_impl__WEBPACK_IMPORTED_MODULE_1__.scatterImpl)(indicesBuf, updatesBuf, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, 0 /* defaultValue */, sumDupeIndices);\n    return backend.makeTensorInfo(shape, outBuf.dtype, outBuf.values);\n}\nconst scatterNdConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ScatterNd,\n    backendName: 'cpu',\n    kernelFunc: scatterNd\n};\n//# sourceMappingURL=ScatterNd.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ScatterNd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Scatter_impl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Scatter_impl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scatterImpl\": () => (/* binding */ scatterImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction scatterImpl(indices, updates, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, defaultValue, sumDupeIndices) {\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n    const indicesData = indices.values;\n    const updatesData = updates.values;\n    if (outputSize === 0) {\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(shape, updates.dtype);\n    }\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(flattenShape, updates.dtype);\n    outBuf.values.fill(defaultValue);\n    for (let i = 0; i < numUpdates; i++) {\n        const index = [];\n        let flattenIndex = 0;\n        for (let j = 0; j < sliceRank; j++) {\n            const dim = indicesData[i * sliceRank + j];\n            index.push(dim);\n            flattenIndex += dim * strides[j];\n        }\n        if (flattenIndex < 0 || flattenIndex >= outputSize / sliceSize) {\n            throw new Error(`Invalid indices: ${index} does not index into ${shape}`);\n        }\n        for (let k = 0; k < sliceSize; k++) {\n            if (sumDupeIndices) {\n                outBuf.values[flattenIndex * sliceSize + k] +=\n                    updatesData[i * sliceSize + k];\n            }\n            else {\n                outBuf.values[flattenIndex * sliceSize + k] = updates.rank === 0 ?\n                    updatesData[0] :\n                    updatesData[i * sliceSize + k];\n            }\n        }\n    }\n    return outBuf;\n}\n//# sourceMappingURL=Scatter_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Scatter_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Select.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Select.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"select\": () => (/* binding */ select),\n/* harmony export */   \"selectConfig\": () => (/* binding */ selectConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction select(args) {\n    const { inputs, backend } = args;\n    const { condition, t, e } = inputs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([condition, t, e], 'select');\n    const conditionRank = condition.shape.length;\n    const values = backend.data.get(condition.dataId).values;\n    const tValues = backend.data.get(t.dataId).values;\n    const eValues = backend.data.get(e.dataId).values;\n    const resultDtype = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.upcastType)(t.dtype, e.dtype);\n    const newValues = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(t.shape), resultDtype);\n    let index = 0;\n    const offset = conditionRank === 0 || conditionRank > 1 || t.shape.length === 1 ?\n        1 :\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(t.shape.slice(1));\n    for (let i = 0; i < values.length; i++) {\n        for (let j = 0; j < offset; j++) {\n            if (values[i] === 1) {\n                newValues[index++] = tValues[i];\n            }\n            else {\n                newValues[index++] = eValues[i];\n            }\n        }\n    }\n    return backend.makeTensorInfo(t.shape, resultDtype, newValues);\n}\nconst selectConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Select,\n    backendName: 'cpu',\n    kernelFunc: select\n};\n//# sourceMappingURL=Select.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Select.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Selu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Selu.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"selu\": () => (/* binding */ selu),\n/* harmony export */   \"seluConfig\": () => (/* binding */ seluConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst scaleAlpha = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.SELU_SCALEALPHA;\nconst scale = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.SELU_SCALE;\nconst selu = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Selu, (xi) => {\n    if (xi >= 0) {\n        return scale * xi;\n    }\n    else {\n        return scaleAlpha * (Math.exp(xi) - 1);\n    }\n});\nconst seluConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Selu,\n    backendName: 'cpu',\n    kernelFunc: selu,\n};\n//# sourceMappingURL=Selu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Selu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sigmoid.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sigmoid.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sigmoid\": () => (/* binding */ sigmoid),\n/* harmony export */   \"sigmoidConfig\": () => (/* binding */ sigmoidConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst sigmoid = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sigmoid, (xi) => 1 / (1 + Math.exp(-xi)));\nconst sigmoidConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sigmoid,\n    backendName: 'cpu',\n    kernelFunc: sigmoid,\n};\n//# sourceMappingURL=Sigmoid.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sigmoid.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sign.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sign.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sign\": () => (/* binding */ sign),\n/* harmony export */   \"signConfig\": () => (/* binding */ signConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst sign = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sign, (xi) => {\n    if (xi < 0) {\n        return -1;\n    }\n    else if (xi > 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n});\nconst signConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sign,\n    backendName: 'cpu',\n    kernelFunc: sign,\n};\n//# sourceMappingURL=Sign.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sign.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sin.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sin.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sin\": () => (/* binding */ sin),\n/* harmony export */   \"sinConfig\": () => (/* binding */ sinConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst sin = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sin, (xi) => Math.sin(xi));\nconst sinConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sin,\n    backendName: 'cpu',\n    kernelFunc: sin,\n};\n//# sourceMappingURL=Sin.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sin.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sinh.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sinh.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sinh\": () => (/* binding */ sinh),\n/* harmony export */   \"sinhConfig\": () => (/* binding */ sinhConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst sinh = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sinh, (xi) => Math.sinh(xi));\nconst sinhConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sinh,\n    backendName: 'cpu',\n    kernelFunc: sinh,\n};\n//# sourceMappingURL=Sinh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sinh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sliceImpl\": () => (/* binding */ sliceImpl),\n/* harmony export */   \"slice\": () => (/* binding */ slice),\n/* harmony export */   \"sliceConfig\": () => (/* binding */ sliceConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction sliceImpl(vals, begin, size, shape, dtype) {\n    const isContinous = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.isSliceContinous(shape, begin, size);\n    const length = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(size);\n    const xStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(shape);\n    if (isContinous) {\n        const flatOffset = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.computeFlatOffset(begin, xStrides);\n        if (dtype === 'string') {\n            return vals.slice(flatOffset, flatOffset + length);\n        }\n        return vals.subarray(flatOffset, flatOffset + length);\n    }\n    const decodedData = dtype === 'string' ?\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.fromUint8ToStringArray(vals) :\n        vals;\n    const inBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(shape, dtype, decodedData);\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(size, dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const outLoc = outBuf.indexToLoc(i);\n        const inLoc = outLoc.map((idx, j) => idx + begin[j]);\n        outBuf.set(inBuf.get(...inLoc), ...outLoc);\n    }\n    if (dtype === 'string') {\n        return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.fromStringArrayToUint8(outBuf.values);\n    }\n    return outBuf.values;\n}\nfunction slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'slice');\n    const [$begin, $size] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.parseSliceParams(x, begin, size);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.assertParamsValid(x, $begin, $size);\n    const vals = backend.data.get(x.dataId).values;\n    const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n    return backend.makeTensorInfo($size, x.dtype, outVals);\n}\nconst sliceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Slice,\n    backendName: 'cpu',\n    kernelFunc: slice\n};\n//# sourceMappingURL=Slice.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softmax.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softmax.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"softmax\": () => (/* binding */ softmax),\n/* harmony export */   \"softmaxConfig\": () => (/* binding */ softmaxConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Exp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Exp */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js\");\n/* harmony import */ var _Max__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Max */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max.js\");\n/* harmony import */ var _RealDiv__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RealDiv */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RealDiv.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _Sub__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Sub */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js\");\n/* harmony import */ var _Sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Sum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sum.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\nfunction softmax(args) {\n    const { inputs, backend, attrs } = args;\n    const { logits } = inputs;\n    const { dim } = attrs;\n    const logitsRank = logits.shape.length;\n    let $dim = dim;\n    if ($dim === -1) {\n        $dim = logitsRank - 1;\n    }\n    if ($dim !== logitsRank - 1) {\n        throw Error('Softmax along a non-last dimension is not yet supported. ' +\n            `Logits was rank ${logitsRank} and dim was ${$dim}`);\n    }\n    const axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam([$dim], logits.shape);\n    const maxLogit = (0,_Max__WEBPACK_IMPORTED_MODULE_1__.max)({\n        inputs: { x: logits },\n        backend,\n        attrs: { reductionIndices: axes, keepDims: false }\n    });\n    const expandedShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(maxLogit.shape, axes);\n    const maxLogitReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: maxLogit }, backend, attrs: { shape: expandedShape } });\n    const a = (0,_Sub__WEBPACK_IMPORTED_MODULE_3__.sub)({ inputs: { a: logits, b: maxLogitReshaped }, backend });\n    const b = (0,_Exp__WEBPACK_IMPORTED_MODULE_4__.exp)({ inputs: { x: a }, backend });\n    const sumExp = (0,_Sum__WEBPACK_IMPORTED_MODULE_5__.sum)({ inputs: { x: b }, backend, attrs: { axis: axes, keepDims: false } });\n    const sumReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: sumExp }, backend, attrs: { shape: expandedShape } });\n    const result = (0,_RealDiv__WEBPACK_IMPORTED_MODULE_6__.div)({ inputs: { a: b, b: sumReshaped }, backend });\n    backend.disposeIntermediateTensorInfo(maxLogit);\n    backend.disposeIntermediateTensorInfo(maxLogitReshaped);\n    backend.disposeIntermediateTensorInfo(a);\n    backend.disposeIntermediateTensorInfo(b);\n    backend.disposeIntermediateTensorInfo(sumExp);\n    backend.disposeIntermediateTensorInfo(sumReshaped);\n    return result;\n}\nconst softmaxConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Softmax,\n    backendName: 'cpu',\n    kernelFunc: softmax\n};\n//# sourceMappingURL=Softmax.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softmax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softplus.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softplus.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"softplus\": () => (/* binding */ softplus),\n/* harmony export */   \"softplusConfig\": () => (/* binding */ softplusConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n// mirrors the implementation of tf.nn.softplus: https://goo.gl/vkcvwX\n// epsilon is the difference between 1.0 and the next representable float.\n// For a single precision 32 bit float this should be 2^-23, see:\n// https://math.byu.edu/~schow/work/IEEEFloatingPoint.htm\nconst epsilon = 1.1920928955078125e-7;\nconst threshold = Math.log(epsilon) + 2.0;\nconst softplus = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Softplus, (xi) => {\n    // Value above which exp(x) may overflow, but softplus(x) == x\n    // is within machine epsilon.\n    const tooLarge = xi > -threshold;\n    // Value below which exp(x) may underflow, but softplus(x) == exp(x)\n    // is within machine epsilon.\n    const tooSmall = xi < threshold;\n    const expX = Math.exp(xi);\n    let result;\n    if (tooSmall) {\n        result = expX;\n    }\n    else if (tooLarge) {\n        result = xi;\n    }\n    else {\n        result = Math.log(1.0 + expX);\n    }\n    return result;\n});\nconst softplusConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Softplus,\n    backendName: 'cpu',\n    kernelFunc: softplus,\n};\n//# sourceMappingURL=Softplus.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softplus.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SpaceToBatchND.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SpaceToBatchND.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"spaceToBatchND\": () => (/* binding */ spaceToBatchND),\n/* harmony export */   \"spaceToBatchNDConfig\": () => (/* binding */ spaceToBatchNDConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _PadV2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PadV2 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/PadV2.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\nfunction spaceToBatchND(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, paddings } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([x], 'spaceToBatchND');\n    const prod = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(blockShape);\n    const completePaddings = [[0, 0]];\n    completePaddings.push(...paddings);\n    for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n        completePaddings.push([0, 0]);\n    }\n    const paddedX = _PadV2__WEBPACK_IMPORTED_MODULE_2__.padV2Config.kernelFunc({\n        inputs: { x },\n        backend,\n        attrs: { paddings: completePaddings, constantValue: 0 }\n    });\n    const reshapedPaddedShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n    const permutedReshapedPaddedPermutation = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n    const flattenShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n    const reshapeInputs = { x: paddedX };\n    const reshapeAttrs = { shape: reshapedPaddedShape };\n    const paddedXReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: reshapeInputs, backend, attrs: reshapeAttrs });\n    const transposeInputs = { x: paddedXReshaped };\n    const transposeAttrs = { perm: permutedReshapedPaddedPermutation };\n    const paddedXT = (0,_Transpose__WEBPACK_IMPORTED_MODULE_4__.transpose)({ inputs: transposeInputs, backend, attrs: transposeAttrs });\n    const resultReshapeInputs = { x: paddedXT };\n    const resultReshapeAttrs = { shape: flattenShape };\n    const result = (0,_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: resultReshapeInputs, backend, attrs: resultReshapeAttrs });\n    backend.disposeIntermediateTensorInfo(paddedX);\n    backend.disposeIntermediateTensorInfo(paddedXReshaped);\n    backend.disposeIntermediateTensorInfo(paddedXT);\n    return result;\n}\nconst spaceToBatchNDConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SpaceToBatchND,\n    backendName: 'cpu',\n    kernelFunc: spaceToBatchND\n};\n//# sourceMappingURL=SpaceToBatchND.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SpaceToBatchND.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseFillEmptyRows.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseFillEmptyRows.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseFillEmptyRows\": () => (/* binding */ sparseFillEmptyRows),\n/* harmony export */   \"sparseFillEmptyRowsConfig\": () => (/* binding */ sparseFillEmptyRowsConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _SparseFillEmptyRows_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SparseFillEmptyRows_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseFillEmptyRows_impl.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction sparseFillEmptyRows(args) {\n    const { inputs, backend } = args;\n    const { indices, values, denseShape, defaultValue } = inputs;\n    if (denseShape.shape.length !== 1) {\n        throw new Error(`Dense shape must be a vector, saw:\n        ${denseShape.shape}`);\n    }\n    if (indices.shape.length !== 2) {\n        throw new Error(`Indices must be a matrix, saw:\n        ${indices.shape}`);\n    }\n    if (values.shape.length !== 1) {\n        throw new Error(`Values must be a vector, saw:\n        ${values.shape}`);\n    }\n    if (defaultValue.shape.length !== 0) {\n        throw new Error(`Default value must be a scalar, saw:\n        ${defaultValue.shape}`);\n    }\n    const $indices = backend.data.get(indices.dataId).values;\n    const $values = backend.data.get(values.dataId).values;\n    const $denseShape = backend.data.get(denseShape.dataId).values;\n    const $defaultValue = backend.data.get(defaultValue.dataId).values[0];\n    const [outputIndices, outputIndicesShape, outputValues, emptyRowIndicator, reverseIndexMap] = (0,_SparseFillEmptyRows_impl__WEBPACK_IMPORTED_MODULE_1__.sparseFillEmptyRowsImpl)($indices, indices.shape, indices.dtype, $values, values.dtype, $denseShape, $defaultValue);\n    return [\n        backend.makeTensorInfo(outputIndicesShape, indices.dtype, outputIndices),\n        backend.makeTensorInfo([outputIndicesShape[0]], values.dtype, outputValues),\n        backend.makeTensorInfo([emptyRowIndicator.length], 'bool', new Uint8Array(emptyRowIndicator.map((value) => Number(value)))),\n        backend.makeTensorInfo([reverseIndexMap.length], indices.dtype, new Int32Array(reverseIndexMap)),\n    ];\n}\nconst sparseFillEmptyRowsConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SparseFillEmptyRows,\n    backendName: 'cpu',\n    kernelFunc: sparseFillEmptyRows,\n};\n//# sourceMappingURL=SparseFillEmptyRows.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseFillEmptyRows.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseFillEmptyRows_impl.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseFillEmptyRows_impl.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseFillEmptyRowsImpl\": () => (/* binding */ sparseFillEmptyRowsImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction sparseFillEmptyRowsImpl(indices, indicesShape, indicesDType, values, valuesDType, denseShape, defaultValue) {\n    const indicesCount = indicesShape[0];\n    const denseRows = denseShape[0];\n    const emptyRowIndicator = new Array(denseRows);\n    const reverseIndexMap = new Array(indicesCount);\n    const rank = indicesShape[1];\n    if (denseRows === 0) {\n        if (indicesCount !== 0) {\n            throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${indicesCount}`);\n        }\n        const outputIndices = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType(indicesDType, 0);\n        const outputValues = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType(valuesDType, 0);\n        return [\n            outputIndices, [0, rank], outputValues, emptyRowIndicator, reverseIndexMap\n        ];\n    }\n    let rowsAreOrdered = true;\n    let lastIndicesRow = 0;\n    const csrOffset = new Array(denseRows).fill(0);\n    for (let i = 0; i < indicesCount; ++i) {\n        // indices is a 2d tensor with shape of [N, rank]\n        const row = indices[i * rank];\n        if (row < 0) {\n            throw new Error(`indices(${i}, 0) is invalid: ${row} < 0`);\n        }\n        if (row >= denseRows) {\n            throw new Error(`indices(${i}, 0) is invalid: ${row} >= ${denseRows}`);\n        }\n        ++csrOffset[row];\n        rowsAreOrdered = rowsAreOrdered && (row >= lastIndicesRow);\n        lastIndicesRow = row;\n    }\n    let allRowsFull = true;\n    for (let row = 0; row < denseRows; ++row) {\n        // csrOffset here describes the number of elements in this dense row\n        const rowEmpty = (csrOffset[row] === 0);\n        emptyRowIndicator[row] = rowEmpty;\n        allRowsFull = allRowsFull && !rowEmpty;\n        // In filled version, each row has at least one element.\n        csrOffset[row] = Math.max(csrOffset[row], 1);\n        // Update csrOffset to represent the number of elements up to and\n        // including denseRows + 1:\n        //  csrOffset[0] == #{elements of row 0}\n        //  csrOffset[1] == #{elements of row 1} + #{elements of row 0}\n        //  ..\n        //  csrOffset[i] == starting index for elements in row i + 1.\n        if (row > 0) {\n            csrOffset[row] += csrOffset[row - 1];\n        }\n    }\n    if (allRowsFull && rowsAreOrdered) {\n        const outputIndices = indices;\n        const outputValues = values;\n        for (let i = 0; i < indicesCount; ++i) {\n            reverseIndexMap[i] = i;\n        }\n        return [\n            outputIndices, [indicesCount, rank], outputValues, emptyRowIndicator,\n            reverseIndexMap\n        ];\n    }\n    else {\n        const fullIndicesCount = csrOffset[denseRows - 1];\n        const outputIndices = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType(indicesDType, fullIndicesCount * rank);\n        const outputValues = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType(valuesDType, fullIndicesCount);\n        const filledCount = new Array(denseRows).fill(0);\n        // Fill in values for rows that are not missing\n        for (let i = 0; i < indicesCount; ++i) {\n            // indices is a 2d tensor with shape of [N, rank]\n            const row = indices[i * rank];\n            const offset = filledCount[row];\n            const outputI = ((row === 0) ? 0 : csrOffset[row - 1]) + offset;\n            filledCount[row]++; // Increment the filled count for this row.\n            for (let j = 0; j < rank; ++j) {\n                // indices and outputIndices are 2d tensors with shape of [N, rank]\n                outputIndices[outputI * rank + j] = indices[i * rank + j];\n            }\n            outputValues[outputI] = values[i];\n            // We'll need this reverse index map to backprop correctly.\n            reverseIndexMap[i] = outputI;\n        }\n        // Fill in values for rows that are missing\n        for (let row = 0; row < denseRows; ++row) {\n            const rowCount = filledCount[row];\n            if (rowCount === 0) { // We haven't filled this row\n                const startingIndex = (row === 0) ? 0 : csrOffset[row - 1];\n                // Remaining index values were set to zero already.\n                // Just need to set the row index in the right location.\n                // outputIndices is a 2d tensor with shape of [N, rank]\n                outputIndices[startingIndex * rank + 0] = row;\n                for (let col = 1; col < rank; ++col) {\n                    outputIndices[startingIndex * rank + col] = 0;\n                }\n                outputValues[startingIndex] = defaultValue;\n            }\n        }\n        return [\n            outputIndices, [fullIndicesCount, rank], outputValues, emptyRowIndicator,\n            reverseIndexMap\n        ];\n    }\n}\n//# sourceMappingURL=SparseFillEmptyRows_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseFillEmptyRows_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseReshape.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseReshape.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseReshape\": () => (/* binding */ sparseReshape),\n/* harmony export */   \"sparseReshapeConfig\": () => (/* binding */ sparseReshapeConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _SparseReshape_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SparseReshape_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseReshape_impl.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction sparseReshape(args) {\n    const { inputs, backend } = args;\n    const { inputIndices, inputShape, newShape } = inputs;\n    if (inputIndices.shape.length !== 2) {\n        throw new Error(`Input indices should be a matrix but received shape\n        ${inputIndices.shape}`);\n    }\n    if (inputShape.shape.length !== 1) {\n        throw new Error(`Input shape should be a vector but received shape\n        ${inputShape.shape}`);\n    }\n    if (newShape.shape.length !== 1) {\n        throw new Error(`Target shape should be a vector but received shape ${newShape.shape}`);\n    }\n    const $inputShape = Array.from(backend.data.get(inputShape.dataId).values);\n    const $inputIndices = backend.data.get(inputIndices.dataId).values;\n    const targetShape = Array.from(backend.data.get(newShape.dataId).values);\n    const [newIndices, indicesShape, outputShape] = (0,_SparseReshape_impl__WEBPACK_IMPORTED_MODULE_1__.sparseReshapeImpl)($inputIndices, inputIndices.shape, inputIndices.dtype, $inputShape, targetShape);\n    return [\n        backend.makeTensorInfo(indicesShape, inputIndices.dtype, newIndices),\n        backend.makeTensorInfo([outputShape.length], newShape.dtype, new Int32Array(outputShape)),\n    ];\n}\nconst sparseReshapeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SparseReshape,\n    backendName: 'cpu',\n    kernelFunc: sparseReshape,\n};\n//# sourceMappingURL=SparseReshape.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseReshape.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseReshape_impl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseReshape_impl.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseReshapeImpl\": () => (/* binding */ sparseReshapeImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction sparseReshapeImpl(inputIndices, inputIndicesShape, inputDType, inputShape, targetShape) {\n    const denseSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(inputShape);\n    const nnz = inputIndicesShape[0];\n    const outputRank = targetShape.length;\n    // Compute the output shape. Determine product of specified dimensions, and\n    // find the index of the unspecified one.\n    const outputShape = [];\n    let product = 1;\n    let unknownIndex = -1;\n    for (let d = 0; d < outputRank; ++d) {\n        const size = targetShape[d];\n        if (size === -1) {\n            if (unknownIndex !== -1) {\n                throw new Error(`only one output dimension may be -1, not both ${unknownIndex} and ${d}`);\n            }\n            unknownIndex = d;\n            outputShape.push(1);\n        }\n        else {\n            if (size < 0) {\n                throw new Error(`size ${d} must be non-negative, not ${size}`);\n            }\n            product *= size;\n            outputShape.push(size);\n        }\n    }\n    if (unknownIndex !== -1) {\n        if (product <= 0) {\n            throw new Error('reshape cannot infer the missing ' +\n                'input size for an empty tensor unless all ' +\n                'specified input sizes are non-zero');\n        }\n        const missing = Math.trunc(denseSize / product);\n        if (product * missing !== denseSize) {\n            throw new Error(`Input to reshape is a SparseTensor with ${denseSize}\n          dense values, but the requested shape requires a multiple of ${product}. inputShape=${inputShape} outputShape= ${outputShape}`);\n        }\n        outputShape[unknownIndex] = missing;\n    }\n    const outputSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outputShape);\n    if (outputSize !== denseSize) {\n        throw new Error(`Input to reshape is a tensor with ${denseSize} dense values, but the requested shape has ${outputSize}. inputShape=${inputShape} outputShape=${outputShape}`);\n    }\n    const inputRank = inputShape.length;\n    const inputStrides = [];\n    if (inputRank > 0) {\n        inputStrides[inputRank - 1] = 1;\n        for (let d = inputRank - 2; d >= 0; --d) {\n            inputStrides[d] = inputStrides[d + 1] * inputShape[d + 1];\n        }\n    }\n    const outputStrides = [];\n    if (outputRank > 0) {\n        outputStrides[outputRank - 1] = 1;\n        for (let d = outputRank - 2; d >= 0; --d) {\n            outputStrides[d] = outputStrides[d + 1] * outputShape[d + 1];\n        }\n    }\n    const newIndices = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType(inputDType, nnz * outputRank);\n    for (let i = 0; i < nnz; ++i) {\n        let id = 0;\n        for (let j = 0; j < inputRank; ++j) {\n            // inputIndices is a 2d tensor with shape of [nnz, inputRank]\n            id += inputIndices[i * inputRank + j] * inputStrides[j];\n        }\n        for (let j = 0; j < outputRank; ++j) {\n            // newIndices is a 2d tensor with shape of [nnz, outputRank]\n            newIndices[i * outputRank + j] = Math.trunc(id / outputStrides[j]);\n            id %= outputStrides[j];\n        }\n    }\n    return [newIndices, [nnz, outputRank], outputShape];\n}\n//# sourceMappingURL=SparseReshape_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseReshape_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentMean.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentMean.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseSegmentMean\": () => (/* binding */ sparseSegmentMean),\n/* harmony export */   \"sparseSegmentMeanConfig\": () => (/* binding */ sparseSegmentMeanConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _SparseSegmentReduction_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SparseSegmentReduction_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentReduction_impl.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction sparseSegmentMean(args) {\n    const { inputs, backend } = args;\n    const { data, indices, segmentIds } = inputs;\n    if (data.shape.length < 1) {\n        throw new Error(`Data should be at least 1 dimensional but received scalar`);\n    }\n    if (indices.shape.length !== 1) {\n        throw new Error(`Indices should be a vector but received shape\n          ${indices.shape}`);\n    }\n    if (segmentIds.shape.length !== 1) {\n        throw new Error(`Segment ids should be a vector but received shape\n          ${segmentIds.shape}`);\n    }\n    const $data = backend.data.get(data.dataId).values;\n    const $indices = backend.data.get(indices.dataId).values;\n    const $segmentIds = backend.data.get(segmentIds.dataId).values;\n    const [outputData, outputDataShape] = (0,_SparseSegmentReduction_impl__WEBPACK_IMPORTED_MODULE_1__.sparseSegmentReductionImpl)($data, data.shape, data.dtype, $indices, $segmentIds, true);\n    return backend.makeTensorInfo(outputDataShape, data.dtype, outputData);\n}\nconst sparseSegmentMeanConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SparseSegmentMean,\n    backendName: 'cpu',\n    kernelFunc: sparseSegmentMean,\n};\n//# sourceMappingURL=SparseSegmentMean.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentMean.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentReduction_impl.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentReduction_impl.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseSegmentReductionImpl\": () => (/* binding */ sparseSegmentReductionImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction sparseSegmentReductionImpl(input, inputShape, inputDType, indices, segmentIds, isMean = false, defaultValue = 0) {\n    const numIndices = indices.length;\n    if (numIndices !== segmentIds.length) {\n        throw new Error(`segmentIds and indices should have same size.`);\n    }\n    // Flatten the array to two dimensions\n    const inputFlat = [inputShape[0], input.length / inputShape[0]];\n    const numCol = inputFlat[1];\n    // Note that the current implementation assumes that segmentIds values are\n    // sorted.\n    const lastSegmentIdPlusOne = numIndices > 0 ? segmentIds[numIndices - 1] + 1 : 0;\n    const outputRows = lastSegmentIdPlusOne;\n    if (outputRows < 0) {\n        throw new Error(`segment ids must be >= 0`);\n    }\n    const outputShape = inputShape.slice();\n    outputShape[0] = outputRows;\n    const outputLength = outputShape.reduce((product, value) => product * value, 1);\n    // Output array is initialized with the value 0 by default.\n    const output = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType(inputDType, outputLength);\n    // Note that we do not initialize the output buffer with a default value, so\n    // we need to explicitly set missing indices to the default value.\n    if (numIndices === 0) {\n        if (outputRows > 0) {\n            output.fill(defaultValue);\n        }\n        return [output, outputShape];\n    }\n    if (outputRows <= 0) {\n        throw new Error(`segment ids must be >= 0`);\n    }\n    let start = 0, end = 1;\n    // Index from which the output is not initialized.\n    let uninitializedIndex = 0;\n    let outIndex = segmentIds[start];\n    while (true) {\n        // We initialize nextIndex to 0 to avoid may be uninitialized warning\n        let nextIndex = 0;\n        if (end < numIndices) {\n            nextIndex = segmentIds[end];\n            if (outIndex === nextIndex) {\n                ++end;\n                continue;\n            }\n            // We have a new segment here.  Verify that the segment ids are growing.\n            if (outIndex >= nextIndex) {\n                throw new Error(`segment ids are not increasing`);\n            }\n        }\n        if (outIndex < 0 || outIndex >= outputRows) {\n            throw new Error(`Segment id ${outIndex} out of range [0, ${outputRows}), possibly because segmentIds input is not sorted.`);\n        }\n        // If there is a gap between two indices, we need to set that gap to the\n        // default value.\n        if (outIndex > uninitializedIndex) {\n            output.fill(defaultValue, uninitializedIndex * numCol, outIndex * numCol);\n        }\n        for (let i = start; i < end; ++i) {\n            const index = indices[i];\n            if (index < 0 || index >= inputFlat[0]) {\n                throw new Error(`Bad: indices[${i}] == ${indices[i]} out of range [0, ${inputFlat[0]})`);\n            }\n            for (let j = 0; j < numCol; j++) {\n                output[outIndex * numCol + j] += input[index * numCol + j];\n            }\n        }\n        if (isMean) {\n            for (let j = 0; j < numCol; j++) {\n                output[outIndex * numCol + j] /= end - start;\n            }\n        }\n        start = end;\n        ++end;\n        uninitializedIndex = outIndex + 1;\n        outIndex = nextIndex;\n        if (end > numIndices) {\n            break;\n        }\n    }\n    // Fill the gap at the end with the default value.\n    if (uninitializedIndex < outputRows) {\n        output.fill(defaultValue, uninitializedIndex * numCol, outputRows * numCol);\n    }\n    return [output, outputShape];\n}\n//# sourceMappingURL=SparseSegmentReduction_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentReduction_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentSum.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentSum.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseSegmentSum\": () => (/* binding */ sparseSegmentSum),\n/* harmony export */   \"sparseSegmentSumConfig\": () => (/* binding */ sparseSegmentSumConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _SparseSegmentReduction_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SparseSegmentReduction_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentReduction_impl.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction sparseSegmentSum(args) {\n    const { inputs, backend } = args;\n    const { data, indices, segmentIds } = inputs;\n    if (data.shape.length < 1) {\n        throw new Error(`Data should be at least 1 dimensional but received scalar`);\n    }\n    if (indices.shape.length !== 1) {\n        throw new Error(`Indices should be a vector but received shape\n         ${indices.shape}`);\n    }\n    if (segmentIds.shape.length !== 1) {\n        throw new Error(`Segment ids should be a vector but received shape\n         ${segmentIds.shape}`);\n    }\n    const $data = backend.data.get(data.dataId).values;\n    const $indices = backend.data.get(indices.dataId).values;\n    const $segmentIds = backend.data.get(segmentIds.dataId).values;\n    const [outputData, outputDataShape] = (0,_SparseSegmentReduction_impl__WEBPACK_IMPORTED_MODULE_1__.sparseSegmentReductionImpl)($data, data.shape, data.dtype, $indices, $segmentIds);\n    return backend.makeTensorInfo(outputDataShape, data.dtype, outputData);\n}\nconst sparseSegmentSumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SparseSegmentSum,\n    backendName: 'cpu',\n    kernelFunc: sparseSegmentSum,\n};\n//# sourceMappingURL=SparseSegmentSum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentSum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseToDense.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseToDense.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseToDense\": () => (/* binding */ sparseToDense),\n/* harmony export */   \"sparseToDenseConfig\": () => (/* binding */ sparseToDenseConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Scatter_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Scatter_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Scatter_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction sparseToDense(args) {\n    const { inputs, backend, attrs } = args;\n    const { sparseIndices, sparseValues, defaultValue } = inputs;\n    const { outputShape } = attrs;\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n    const sumDupeIndices = false;\n    const indicesBuf = backend.bufferSync(sparseIndices);\n    const updatesBuf = backend.bufferSync(sparseValues);\n    const $defaultValue = backend.data.get(defaultValue.dataId).values[0];\n    const outBuf = (0,_Scatter_impl__WEBPACK_IMPORTED_MODULE_1__.scatterImpl)(indicesBuf, updatesBuf, outputShape, outputSize, sliceSize, numUpdates, sliceRank, strides, $defaultValue, sumDupeIndices);\n    return backend.makeTensorInfo(outputShape, outBuf.dtype, outBuf.values);\n}\nconst sparseToDenseConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SparseToDense,\n    backendName: 'cpu',\n    kernelFunc: sparseToDense\n};\n//# sourceMappingURL=SparseToDense.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseToDense.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SplitV.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SplitV.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"splitV\": () => (/* binding */ splitV),\n/* harmony export */   \"splitVConfig\": () => (/* binding */ splitVConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Slice */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction splitV(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { numOrSizeSplits, axis } = attrs;\n    const $axis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape)[0];\n    const splitSizes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n    const begin = new Array(x.shape.length).fill(0);\n    const size = x.shape.slice();\n    return splitSizes.map(s => {\n        const sliceSize = [...size];\n        sliceSize[$axis] = s;\n        const sliceT = (0,_Slice__WEBPACK_IMPORTED_MODULE_1__.slice)({ inputs: { x }, backend, attrs: { begin, size: sliceSize } });\n        begin[$axis] += s;\n        return sliceT;\n    });\n}\nconst splitVConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SplitV,\n    backendName: 'cpu',\n    kernelFunc: splitV\n};\n//# sourceMappingURL=SplitV.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SplitV.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sqrt.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sqrt.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sqrt\": () => (/* binding */ sqrt),\n/* harmony export */   \"sqrtConfig\": () => (/* binding */ sqrtConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst sqrt = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sqrt, (xi) => Math.sqrt(xi));\nconst sqrtConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sqrt,\n    backendName: 'cpu',\n    kernelFunc: sqrt,\n};\n//# sourceMappingURL=Sqrt.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sqrt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Square.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Square.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"squareConfig\": () => (/* binding */ squareConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst squareConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Square,\n    backendName: 'cpu',\n    kernelFunc: ({ inputs, backend }) => {\n        const { x } = inputs;\n        const cpuBackend = backend;\n        (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'square');\n        const values = cpuBackend.data.get(x.dataId).values;\n        const newValues = new Float32Array(values.length);\n        for (let i = 0; i < values.length; ++i) {\n            const value = values[i];\n            newValues[i] = value * value;\n        }\n        const dataId = cpuBackend.write(newValues, x.shape, x.dtype);\n        return { dataId, shape: x.shape, dtype: x.dtype };\n    }\n};\n//# sourceMappingURL=Square.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Square.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"squaredDifferenceImpl\": () => (/* binding */ squaredDifferenceImpl),\n/* harmony export */   \"squaredDifference\": () => (/* binding */ squaredDifference),\n/* harmony export */   \"squaredDifferenceConfig\": () => (/* binding */ squaredDifferenceConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst squaredDifferenceImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((a, b) => {\n    const diff = a - b;\n    return diff * diff;\n}));\nconst squaredDifference = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SquaredDifference, squaredDifferenceImpl);\nconst squaredDifferenceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SquaredDifference,\n    backendName: 'cpu',\n    kernelFunc: squaredDifference\n};\n//# sourceMappingURL=SquaredDifference.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Step.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Step.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"step\": () => (/* binding */ step),\n/* harmony export */   \"stepConfig\": () => (/* binding */ stepConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst step = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Step, (xi, attrs) => {\n    const stepAttrs = attrs;\n    if (isNaN(xi)) {\n        return NaN;\n    }\n    else {\n        return xi > 0 ? 1 : stepAttrs.alpha;\n    }\n});\nconst stepConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Step,\n    backendName: 'cpu',\n    kernelFunc: step,\n};\n//# sourceMappingURL=Step.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Step.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stridedSlice\": () => (/* binding */ stridedSlice),\n/* harmony export */   \"stridedSliceConfig\": () => (/* binding */ stridedSliceConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _Slice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Slice */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js\");\n/* harmony import */ var _StridedSlice_impl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StridedSlice_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\nfunction stridedSlice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'stridedSlice');\n    const { nonStrided, $begin, $strides, size, newShape, outShape } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.sliceInfo(x.shape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\n    const $x = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x }, backend, attrs: { shape: newShape } });\n    let result;\n    if (nonStrided) {\n        const sliced = (0,_Slice__WEBPACK_IMPORTED_MODULE_3__.slice)({ inputs: { x: $x }, backend, attrs: { begin: $begin, size } });\n        result = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: sliced }, backend, attrs: { shape: outShape } });\n        backend.disposeIntermediateTensorInfo(sliced);\n    }\n    else if (outShape.some(axis => axis === 0)) {\n        result = backend.makeTensorInfo(outShape, x.dtype, []);\n    }\n    else {\n        const xBuf = backend.bufferSync($x);\n        const outBuf = (0,_StridedSlice_impl__WEBPACK_IMPORTED_MODULE_4__.stridedSliceImpl)(outShape, xBuf, $strides, $begin);\n        result = backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n    }\n    const resultReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: result }, backend, attrs: { shape: outShape } });\n    backend.disposeIntermediateTensorInfo($x);\n    backend.disposeIntermediateTensorInfo(result);\n    return resultReshaped;\n}\nconst stridedSliceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.StridedSlice,\n    backendName: 'cpu',\n    kernelFunc: stridedSlice\n};\n//# sourceMappingURL=StridedSlice.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stridedSliceImpl\": () => (/* binding */ stridedSliceImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction stridedSliceImpl(outShape, xBuf, strides, begin) {\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(outShape, xBuf.dtype);\n    for (let i = 0; i < outBuf.size; i++) {\n        const loc = outBuf.indexToLoc(i);\n        const newLoc = new Array(loc.length);\n        for (let j = 0; j < newLoc.length; j++) {\n            newLoc[j] = loc[j] * strides[j] + begin[j];\n        }\n        outBuf.set(xBuf.get(...newLoc), ...loc);\n    }\n    return outBuf;\n}\n//# sourceMappingURL=StridedSlice_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringNGrams.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringNGrams.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringNGrams\": () => (/* binding */ stringNGrams),\n/* harmony export */   \"stringNGramsConfig\": () => (/* binding */ stringNGramsConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _StringNGrams_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StringNGrams_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringNGrams_impl.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction stringNGrams(args) {\n    const { inputs, backend, attrs } = args;\n    const { separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences } = attrs;\n    const { data, dataSplits } = inputs;\n    const $data = backend.data.get(data.dataId).values;\n    const $dataSplits = backend.data.get(dataSplits.dataId).values;\n    const [nGrams, nGramsSplits] = (0,_StringNGrams_impl__WEBPACK_IMPORTED_MODULE_1__.stringNGramsImpl)($data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences);\n    return [\n        backend.makeTensorInfo([nGrams.length], 'string', nGrams),\n        backend.makeTensorInfo(dataSplits.shape, 'int32', nGramsSplits),\n    ];\n}\nconst stringNGramsConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.StringNGrams,\n    backendName: 'cpu',\n    kernelFunc: stringNGrams,\n};\n//# sourceMappingURL=StringNGrams.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringNGrams.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringNGrams_impl.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringNGrams_impl.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringNGramsImpl\": () => (/* binding */ stringNGramsImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * The StringNGramsOp class creates ngrams from ragged string data.\n * The constructor contains all attributes related to the operation such as\n * padding widths and strings, and the compute function can be used to\n * compute the ngrams for different ragged tensor inputs.\n */\nclass StringNGramsOp {\n    constructor(separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences) {\n        this.separator = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.encodeString(separator);\n        this.nGramWidths = nGramWidths;\n        this.leftPad = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.encodeString(leftPad);\n        this.rightPad = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.encodeString(rightPad);\n        this.padWidth = padWidth;\n        this.preserveShort = preserveShortSequences;\n    }\n    getPadWidth(nGramWidth) {\n        // Ngrams can be padded with either a fixed pad width or a dynamic pad\n        // width depending on the 'padWidth' arg, but in no case should the padding\n        // ever be wider than 'nGramWidth' - 1.\n        return Math.min(this.padWidth < 0 ? nGramWidth - 1 : this.padWidth, nGramWidth - 1);\n    }\n    getNumNGrams(length, nGramWidth) {\n        const padWidth = this.getPadWidth(nGramWidth);\n        return Math.max(0, ((length + 2 * padWidth) - nGramWidth) + 1);\n    }\n    createNGrams(data, splitIndex, output, outputStartIndex, numNGrams, nGramWidth) {\n        for (let nGramIndex = 0; nGramIndex < numNGrams; ++nGramIndex) {\n            const padWidth = this.getPadWidth(nGramWidth);\n            const leftPadding = Math.max(0, padWidth - nGramIndex);\n            const rightPadding = Math.max(0, padWidth - (numNGrams - (nGramIndex + 1)));\n            const numTokens = nGramWidth - (leftPadding + rightPadding);\n            const dataStartIndex = splitIndex + (leftPadding > 0 ? 0 : nGramIndex - padWidth);\n            // Calculate the total expected size of the nGram so we can reserve the\n            // correct amount of space in the string.\n            let nGramSize = 0;\n            // Size of the left padding.\n            nGramSize += leftPadding * this.leftPad.length;\n            // Size of the tokens.\n            for (let n = 0; n < numTokens; ++n) {\n                nGramSize += data[dataStartIndex + n].length;\n            }\n            // Size of the right padding.\n            nGramSize += rightPadding * this.rightPad.length;\n            // Size of the separators.\n            const numSeparators = leftPadding + rightPadding + numTokens - 1;\n            nGramSize += numSeparators * this.separator.length;\n            // Build the nGram.\n            output[outputStartIndex + nGramIndex] = new Uint8Array(nGramSize);\n            const nGram = output[outputStartIndex + nGramIndex];\n            let nextNGramIndex = 0;\n            const appendToNGram = (str) => str.forEach((value) => nGram[nextNGramIndex++] = value);\n            for (let n = 0; n < leftPadding; ++n) {\n                appendToNGram(this.leftPad);\n                appendToNGram(this.separator);\n            }\n            // Only output first numTokens - 1 pairs of data and separator\n            for (let n = 0; n < numTokens - 1; ++n) {\n                appendToNGram(data[dataStartIndex + n]);\n                appendToNGram(this.separator);\n            }\n            // Handle case when there are no tokens or no right padding as these\n            // can result in consecutive separators.\n            if (numTokens > 0) {\n                // If we have tokens, then output last and then pair each separator\n                // with the right padding that follows, to ensure nGram ends either with\n                // the token or with the right pad.\n                appendToNGram(data[dataStartIndex + numTokens - 1]);\n                for (let n = 0; n < rightPadding; ++n) {\n                    appendToNGram(this.separator);\n                    appendToNGram(this.rightPad);\n                }\n            }\n            else {\n                // If we don't have tokens, then the last item inserted into the nGram\n                // has been the separator from the left padding loop above. Hence,\n                // output right pad and separator and make sure to finish with a\n                // padding, not a separator.\n                for (let n = 0; n < rightPadding - 1; ++n) {\n                    appendToNGram(this.rightPad);\n                    appendToNGram(this.separator);\n                }\n                appendToNGram(this.rightPad);\n            }\n        }\n    }\n    // Data and splits together form the definition of the ragged tensor,\n    // where data is 1 dimensional and contains the values of the tensor\n    // and splits denotes the indices at which each row starts.\n    compute(data, splits) {\n        // Validate that the splits are valid indices into data, only if there are\n        // splits specified.\n        const inputDataSize = data.length;\n        const splitsSize = splits.length;\n        if (splitsSize > 0) {\n            let prevSplit = splits[0];\n            if (prevSplit !== 0) {\n                throw new Error(`First split value must be 0, got ${prevSplit}`);\n            }\n            for (let i = 1; i < splitsSize; ++i) {\n                let validSplits = splits[i] >= prevSplit;\n                validSplits = validSplits && (splits[i] <= inputDataSize);\n                if (!validSplits) {\n                    throw new Error(`Invalid split value ${splits[i]}, must be in [${prevSplit}, ${inputDataSize}]`);\n                }\n                prevSplit = splits[i];\n            }\n            if (prevSplit !== inputDataSize) {\n                throw new Error(`Last split value must be data size. Expected ${inputDataSize}, got ${prevSplit}`);\n            }\n        }\n        const numBatchItems = splitsSize - 1;\n        const nGramsSplits = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType('int32', splitsSize);\n        // If there is no data or size, return an empty ragged tensor.\n        if (inputDataSize === 0 || splitsSize === 0) {\n            const empty = new Array(inputDataSize);\n            for (let i = 0; i <= numBatchItems; ++i) {\n                nGramsSplits[i] = 0;\n            }\n            return [empty, nGramsSplits];\n        }\n        nGramsSplits[0] = 0;\n        for (let i = 1; i <= numBatchItems; ++i) {\n            const length = splits[i] - splits[i - 1];\n            let numNGrams = 0;\n            this.nGramWidths.forEach((nGramWidth) => {\n                numNGrams += this.getNumNGrams(length, nGramWidth);\n            });\n            if (this.preserveShort && length > 0 && numNGrams === 0) {\n                numNGrams = 1;\n            }\n            nGramsSplits[i] = nGramsSplits[i - 1] + numNGrams;\n        }\n        const nGrams = new Array(nGramsSplits[numBatchItems]);\n        for (let i = 0; i < numBatchItems; ++i) {\n            const splitIndex = splits[i];\n            let outputStartIdx = nGramsSplits[i];\n            this.nGramWidths.forEach((nGramWidth) => {\n                const length = splits[i + 1] - splits[i];\n                const numNGrams = this.getNumNGrams(length, nGramWidth);\n                this.createNGrams(data, splitIndex, nGrams, outputStartIdx, numNGrams, nGramWidth);\n                outputStartIdx += numNGrams;\n            });\n            // If we're preserving short sequences, check to see if no sequence was\n            // generated by comparing the current output start idx to the original\n            // one (nGramSplitsdata). If no ngrams were generated, then they will\n            // be equal (since we increment outputStartIdx by numNGrams every\n            // time we create a set of ngrams.)\n            if (this.preserveShort && outputStartIdx === nGramsSplits[i]) {\n                const dataLength = splits[i + 1] - splits[i];\n                // One legitimate reason to not have any ngrams when this.preserveShort\n                // is true is if the sequence itself is empty. In that case, move on.\n                if (dataLength === 0) {\n                    continue;\n                }\n                // We don't have to worry about dynamic padding sizes here: if padding\n                // was dynamic, every sequence would have had sufficient padding to\n                // generate at least one nGram.\n                const nGramWidth = dataLength + 2 * this.padWidth;\n                const numNGrams = 1;\n                this.createNGrams(data, splitIndex, nGrams, outputStartIdx, numNGrams, nGramWidth);\n            }\n        }\n        return [nGrams, nGramsSplits];\n    }\n}\nfunction stringNGramsImpl(data, dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences) {\n    return new StringNGramsOp(separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences)\n        .compute(data, dataSplits);\n}\n//# sourceMappingURL=StringNGrams_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringNGrams_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringSplit.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringSplit.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringSplit\": () => (/* binding */ stringSplit),\n/* harmony export */   \"stringSplitConfig\": () => (/* binding */ stringSplitConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _StringSplit_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StringSplit_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringSplit_impl.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction stringSplit(args) {\n    const { inputs, backend, attrs } = args;\n    const { skipEmpty } = attrs;\n    const { input, delimiter } = inputs;\n    if (input.dtype !== 'string') {\n        throw new Error('Input must be of datatype string');\n    }\n    if (input.shape.length !== 1) {\n        throw new Error(`Input must be a vector, got shape: ${input.shape}`);\n    }\n    if (delimiter.shape.length !== 0) {\n        throw new Error(`Delimiter must be a scalar, got shape: ${delimiter.shape}`);\n    }\n    const $input = backend.data.get(input.dataId).values;\n    const $delimiter = backend.data.get(delimiter.dataId).values[0];\n    const [indices, values, shape] = (0,_StringSplit_impl__WEBPACK_IMPORTED_MODULE_1__.stringSplitImpl)($input, $delimiter, skipEmpty);\n    const outputSize = values.length;\n    return [\n        backend.makeTensorInfo([outputSize, 2], 'int32', indices),\n        backend.makeTensorInfo([outputSize], 'string', values),\n        backend.makeTensorInfo([2], 'int32', new Int32Array(shape))\n    ];\n}\nconst stringSplitConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.StringSplit,\n    backendName: 'cpu',\n    kernelFunc: stringSplit,\n};\n//# sourceMappingURL=StringSplit.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringSplit.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringSplit_impl.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringSplit_impl.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringSplitImpl\": () => (/* binding */ stringSplitImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction split(str, delimiters, skipEmpty) {\n    if (!str.length) {\n        return [];\n    }\n    // When the delimiter is empty, the input is split into individual characters.\n    if (delimiters.length === 0) {\n        const result = new Array(str.length);\n        for (let i = 0; i < str.length; ++i) {\n            result[i] = str.subarray(i, i + 1);\n        }\n        return result;\n    }\n    // When there is one delimiter, the input is split only at that delimiter.\n    if (delimiters.length === 1) {\n        const delimiter = delimiters[0];\n        const result = [];\n        let f = str.indexOf(delimiter);\n        while (f !== -1) {\n            const token = str.subarray(0, f);\n            if (!skipEmpty || token.length !== 0) {\n                result.push(token);\n            }\n            str = str.subarray(f + 1);\n            f = str.indexOf(delimiter);\n        }\n        if (!skipEmpty || str.length !== 0) {\n            result.push(str);\n        }\n        return result;\n    }\n    // When there are multiple delimiters, the input is split at every instance\n    // one of the delimiters appears.\n    const result = [];\n    let tokenStart = 0;\n    for (let i = 0; i < str.length + 1; i++) {\n        if ((i === str.length) || (delimiters.indexOf(str[i]) !== -1)) {\n            const token = str.subarray(tokenStart, i);\n            if (!skipEmpty || token.length !== 0) {\n                result.push(token);\n            }\n            tokenStart = i + 1;\n        }\n    }\n    return result;\n}\nfunction stringSplitImpl(input, delimiter, skipEmpty) {\n    const batchSize = input.length;\n    // Empty delimiter means split the input character by character.\n    const tokens = [];\n    let outputSize = 0;\n    let maxNumEntries = 0;\n    const numIndices = new Array(batchSize);\n    for (let i = 0; i < batchSize; ++i) {\n        const parts = split(input[i], delimiter, skipEmpty);\n        const nEntries = parts.length;\n        numIndices[i] = nEntries;\n        outputSize += nEntries;\n        maxNumEntries = Math.max(maxNumEntries, nEntries);\n        tokens.push(...parts);\n    }\n    const indices = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType('int32', outputSize * 2);\n    const values = new Array(outputSize);\n    const shape = [batchSize, maxNumEntries];\n    let c = 0;\n    for (let i = 0; i < batchSize; ++i) {\n        for (let j = 0; j < numIndices[i]; ++j) {\n            // indices is a 2d tensor with shape of [outputSize, 2]\n            indices[c * 2] = i;\n            indices[c * 2 + 1] = j;\n            values[c] = tokens[c];\n            ++c;\n        }\n    }\n    return [indices, values, shape];\n}\n//# sourceMappingURL=StringSplit_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringSplit_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringToHashBucketFast.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringToHashBucketFast.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringToHashBucketFast\": () => (/* binding */ stringToHashBucketFast),\n/* harmony export */   \"stringToHashBucketFastConfig\": () => (/* binding */ stringToHashBucketFastConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _StringToHashBucketFast_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StringToHashBucketFast_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringToHashBucketFast_impl.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction stringToHashBucketFast(args) {\n    const { inputs, backend, attrs } = args;\n    const { numBuckets } = attrs;\n    const { input } = inputs;\n    if (input.dtype !== 'string') {\n        throw new Error('Input must be of datatype string');\n    }\n    if (numBuckets <= 0) {\n        throw new Error(`Number of buckets must be at least 1`);\n    }\n    const $input = backend.data.get(input.dataId).values;\n    const output = (0,_StringToHashBucketFast_impl__WEBPACK_IMPORTED_MODULE_1__.stringToHashBucketFastImpl)($input, numBuckets);\n    return backend.makeTensorInfo(input.shape, 'int32', output);\n}\nconst stringToHashBucketFastConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.StringToHashBucketFast,\n    backendName: 'cpu',\n    kernelFunc: stringToHashBucketFast,\n};\n//# sourceMappingURL=StringToHashBucketFast.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringToHashBucketFast.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringToHashBucketFast_impl.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringToHashBucketFast_impl.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringToHashBucketFastImpl\": () => (/* binding */ stringToHashBucketFastImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction stringToHashBucketFastImpl(input, numBuckets) {\n    const output = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType('int32', input.length);\n    for (let i = 0; i < input.length; ++i) {\n        output[i] =\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.fingerPrint64(input[i]).modulo(numBuckets).getLowBitsUnsigned();\n    }\n    return output;\n}\n//# sourceMappingURL=StringToHashBucketFast_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringToHashBucketFast_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"subImpl\": () => (/* binding */ subImpl),\n/* harmony export */   \"subComplexImpl\": () => (/* binding */ subComplexImpl),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"subConfig\": () => (/* binding */ subConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst subImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((aValue, bValue) => aValue - bValue));\nconst subComplexImpl = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.createComplexBinaryKernelImpl)(((aReal, aImag, bReal, bImag) => {\n    return { real: aReal - bReal, imag: aImag - bImag };\n}));\nconst sub = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sub, subImpl, subComplexImpl);\nconst subConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sub,\n    backendName: 'cpu',\n    kernelFunc: sub\n};\n//# sourceMappingURL=Sub.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sum.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sum.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sum\": () => (/* binding */ sum),\n/* harmony export */   \"sumConfig\": () => (/* binding */ sumConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _utils_zeros_impl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/zeros_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js\");\n/* harmony import */ var _Cast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Cast */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\nfunction sum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'sum');\n    let $x;\n    if (x.dtype === 'bool') {\n        $x = (0,_Cast__WEBPACK_IMPORTED_MODULE_2__.cast)({ inputs: { x }, backend, attrs: { dtype: 'int32' } });\n    }\n    else {\n        $x = (0,_Identity__WEBPACK_IMPORTED_MODULE_3__.identity)({ inputs: { x }, backend });\n    }\n    const xRank = $x.shape.length;\n    const axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, $x.shape);\n    const permutation = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n    let reductionAxes = axes;\n    let permutedX = $x;\n    if (permutation != null) {\n        permutedX =\n            (0,_Transpose__WEBPACK_IMPORTED_MODULE_4__.transpose)({ inputs: { x: $x }, backend, attrs: { perm: permutation } });\n        reductionAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(reductionAxes.length, xRank);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('sum', reductionAxes, permutedX.shape.length);\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(permutedX.shape, reductionAxes);\n    const resultDtype = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.upcastType(permutedX.dtype, 'int32');\n    let result = (0,_utils_zeros_impl__WEBPACK_IMPORTED_MODULE_5__.zeros)(backend, outShape, resultDtype);\n    const reduceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const vals = backend.data.get(result.dataId).values;\n    const aVals = backend.data.get(permutedX.dataId).values;\n    for (let i = 0; i < vals.length; ++i) {\n        const offset = i * reduceSize;\n        let sum = 0;\n        for (let j = 0; j < reduceSize; ++j) {\n            sum += aVals[offset + j];\n        }\n        vals[i] = sum;\n    }\n    if (keepDims) {\n        const newShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(result.shape, axes);\n        const oldResult = result;\n        result = (0,_Reshape__WEBPACK_IMPORTED_MODULE_6__.reshape)({ inputs: { x: result }, backend, attrs: { shape: newShape } });\n        backend.disposeIntermediateTensorInfo(oldResult);\n    }\n    backend.disposeIntermediateTensorInfo($x);\n    if (permutation != null) {\n        backend.disposeIntermediateTensorInfo(permutedX);\n    }\n    return result;\n}\nconst sumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sum,\n    backendName: 'cpu',\n    kernelFunc: sum\n};\n//# sourceMappingURL=Sum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tan.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tan.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tan\": () => (/* binding */ tan),\n/* harmony export */   \"tanConfig\": () => (/* binding */ tanConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst tan = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tan, (xi) => Math.tan(xi));\nconst tanConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tan,\n    backendName: 'cpu',\n    kernelFunc: tan,\n};\n//# sourceMappingURL=Tan.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tanh.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tanh.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tanh\": () => (/* binding */ tanh),\n/* harmony export */   \"tanhConfig\": () => (/* binding */ tanhConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst tanh = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tanh, (xi) => Math.tanh(xi));\nconst tanhConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tanh,\n    backendName: 'cpu',\n    kernelFunc: tanh,\n};\n//# sourceMappingURL=Tanh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tanh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tile\": () => (/* binding */ tile),\n/* harmony export */   \"tileConfig\": () => (/* binding */ tileConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Tile_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tile_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction tile(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { reps } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'tile');\n    const outBuf = (0,_Tile_impl__WEBPACK_IMPORTED_MODULE_2__.tileImpl)(backend.bufferSync(x), reps);\n    return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n}\nconst tileConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tile,\n    backendName: 'cpu',\n    kernelFunc: tile\n};\n//# sourceMappingURL=Tile.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tileImpl\": () => (/* binding */ tileImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * An implementation of the tile kernel shared between webgl and cpu for string\n * tensors only.\n */\nfunction tileImpl(xBuf, reps) {\n    const newShape = new Array(xBuf.rank);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = xBuf.shape[i] * reps[i];\n    }\n    const result = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(newShape, xBuf.dtype);\n    for (let i = 0; i < result.values.length; ++i) {\n        const newLoc = result.indexToLoc(i);\n        const originalLoc = new Array(xBuf.rank);\n        for (let j = 0; j < originalLoc.length; j++) {\n            originalLoc[j] = newLoc[j] % xBuf.shape[j];\n        }\n        const originalIndex = xBuf.locToIndex(originalLoc);\n        result.values[i] = xBuf.values[originalIndex];\n    }\n    return result;\n}\n//# sourceMappingURL=Tile_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"topK\": () => (/* binding */ topK),\n/* harmony export */   \"topKConfig\": () => (/* binding */ topKConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _TopK_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TopK_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction topK(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { k, sorted } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'topk');\n    const xVals = backend.data.get(x.dataId).values;\n    const [allTopKVals, allTopKIndices] = (0,_TopK_impl__WEBPACK_IMPORTED_MODULE_2__.topKImpl)(xVals, x.shape, x.dtype, k, sorted);\n    return [\n        backend.makeTensorInfo(allTopKVals.shape, allTopKVals.dtype, allTopKVals.values),\n        backend.makeTensorInfo(allTopKIndices.shape, allTopKIndices.dtype, allTopKIndices.values)\n    ];\n}\nconst topKConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TopK,\n    backendName: 'cpu',\n    kernelFunc: topK\n};\n//# sourceMappingURL=TopK.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"topKImpl\": () => (/* binding */ topKImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/** An implementation of the TopK kernel shared between webgl and cpu. */\n\nconst comparePair = (a, b) => {\n    const valueDiff = b.value - a.value;\n    return valueDiff === 0 ? a.index - b.index : valueDiff;\n};\n/**\n * Partitions array where all elements smaller than the (k+1) smallest element\n * are found to the left of it, and all larger to the right of it.\n * Based on the Floyd-Rivest Algorithm, ref:\n * https://en.wikipedia.org/wiki/Floyd%E2%80%93Rivest_algorithm\n * @param array: Array to partition\n * @param left: Left index for the interval\n * @param right: Right index for the interval\n * @param k: Desired index value, where array[k] is the (k+1)th smallest element\n *           when left = 0\n */\nfunction select(array, k, left = 0, right = array.length - 1) {\n    while (right > left) {\n        // Use select recursively to sample a smaller set of size s\n        // the arbitrary constants 600 and 0.5 are used in the original\n        // version to minimize execution time.\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const i = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * Math.sign(i - n / 2);\n            const newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\n            select(array, k, newLeft, newRight);\n        }\n        // partition the elements between left and right around t\n        const t = array[k];\n        let i = left;\n        let j = right;\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.swap(array, left, k);\n        if (comparePair(array[right], t) > 0) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.swap(array, left, right);\n        }\n        while (i < j) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.swap(array, i, j);\n            i++;\n            j--;\n            while (comparePair(array[i], t) < 0) {\n                i = i + 1;\n            }\n            while (comparePair(array[j], t) > 0) {\n                j = j - 1;\n            }\n        }\n        if (comparePair(array[left], t) === 0) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.swap(array, left, j);\n        }\n        else {\n            j = j + 1;\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.swap(array, j, right);\n        }\n        // Adjust left and right towards the boundaries of the subset\n        // containing the (k - left + 1)th smallest element.\n        if (j <= k) {\n            left = j + 1;\n        }\n        if (k <= j) {\n            right = j - 1;\n        }\n    }\n}\nfunction topKImpl(x, xShape, xDtype, k, sorted) {\n    // Reshape into a 2d tensor [batch, lastDim] and compute topk along lastDim.\n    const lastDim = xShape[xShape.length - 1];\n    const [batch, size] = [x.length / lastDim, lastDim];\n    const allTopKVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(xDtype, batch * k);\n    const allTopKIndices = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType('int32', batch * k);\n    for (let b = 0; b < batch; b++) {\n        const offset = b * size;\n        const vals = x.subarray(offset, offset + size);\n        let valAndInd = new Array(vals.length);\n        vals.forEach((value, index) => valAndInd[index] = { value, index });\n        if (k < valAndInd.length) {\n            select(valAndInd, k);\n            valAndInd = valAndInd.slice(0, k);\n        }\n        if (sorted) {\n            valAndInd.sort(comparePair);\n        }\n        const outOffset = b * k;\n        const topKVals = allTopKVals.subarray(outOffset, outOffset + k);\n        const topKIndices = allTopKIndices.subarray(outOffset, outOffset + k);\n        for (let i = 0; i < k; i++) {\n            topKVals[i] = valAndInd[i].value;\n            topKIndices[i] = valAndInd[i].index;\n        }\n    }\n    // Reshape back to the original input shape, except that the last\n    // dimension is k.\n    const outputShape = xShape.slice();\n    outputShape[outputShape.length - 1] = k;\n    return [\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(outputShape, xDtype, allTopKVals),\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(outputShape, 'int32', allTopKIndices)\n    ];\n}\n//# sourceMappingURL=TopK_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transform.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transform.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transform\": () => (/* binding */ transform),\n/* harmony export */   \"transformConfig\": () => (/* binding */ transformConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction transform(args) {\n    const { inputs, attrs, backend } = args;\n    const { image, transforms } = inputs;\n    const { interpolation, fillMode, fillValue, outputShape } = attrs;\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n    const [outHeight, outWidth] = outputShape != null ? outputShape : [imageHeight, imageWidth];\n    const outShape = [batch, outHeight, outWidth, numChannels];\n    const strides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(image.shape);\n    const batchStride = strides[0];\n    const rowStride = strides[1];\n    const colStride = strides[2];\n    const outVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(image.dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape));\n    outVals.fill(fillValue);\n    const imageVals = backend.data.get(image.dataId).values;\n    const transformVals = backend.data.get(transforms.dataId).values;\n    // Ref TF implementation:\n    // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/image_ops.h\n    for (let b = 0; b < batch; ++b) {\n        const transform = transforms.shape[0] === 1 ?\n            transformVals :\n            transformVals.subarray(b * 8, b * 8 + 8);\n        for (let outY = 0; outY < outHeight; ++outY) {\n            for (let outX = 0; outX < outWidth; ++outX) {\n                for (let channel = 0; channel < numChannels; ++channel) {\n                    let val;\n                    const projection = transform[6] * outX + transform[7] * outY + 1;\n                    if (projection === 0) {\n                        // Return the fill value for infinite coordinates,\n                        // which are outside the input image\n                        continue;\n                    }\n                    const inX = (transform[0] * outX + transform[1] * outY + transform[2]) /\n                        projection;\n                    const inY = (transform[3] * outX + transform[4] * outY + transform[5]) /\n                        projection;\n                    const x = mapCoord(inX, imageWidth, fillMode);\n                    const y = mapCoord(inY, imageHeight, fillMode);\n                    switch (interpolation) {\n                        case 'nearest':\n                            val = nearestInterpolation(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, b, y, x, channel, fillValue);\n                            break;\n                        case 'bilinear':\n                            val = bilinearInterpolation(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, b, y, x, channel, fillValue);\n                            break;\n                        default:\n                            throw new Error(`Error in Transform: Expect 'nearest' or ` +\n                                `'bilinear', but got ${interpolation}`);\n                    }\n                    const ind = b * batchStride + outY * rowStride + outX * colStride + channel;\n                    outVals[ind] = val;\n                }\n            }\n        }\n        return backend.makeTensorInfo(outShape, image.dtype, outVals);\n    }\n    const dataId = backend.write(outVals, outShape, image.dtype);\n    return { dataId, shape: image.shape, dtype: image.dtype };\n}\nconst transformConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Transform,\n    backendName: 'cpu',\n    kernelFunc: transform\n};\nfunction mapCoord(outCoord, len, mode) {\n    switch (mode) {\n        case 'reflect':\n            return mapCoordReflect(outCoord, len);\n        case 'wrap':\n            return mapCoordWrap(outCoord, len);\n        case 'nearest':\n            return mapCoordNearest(outCoord, len);\n        case 'constant':\n        default:\n            return mapCoordConstant(outCoord, len);\n    }\n}\nfunction mapCoordReflect(outCoord, len) {\n    // Reflect [abcd] to [dcba|abcd|dcba].\n    let inCoord = outCoord;\n    if (inCoord < 0) {\n        if (len <= 1) {\n            inCoord = 0;\n        }\n        else {\n            const sz2 = 2 * len;\n            if (inCoord < sz2) {\n                inCoord = sz2 * Math.trunc(-inCoord / sz2) + inCoord;\n            }\n            inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1;\n        }\n    }\n    else if (inCoord > len - 1) {\n        if (len <= 1) {\n            inCoord = 0;\n        }\n        else {\n            const sz2 = 2 * len;\n            inCoord -= sz2 * Math.trunc(inCoord / sz2);\n            if (inCoord >= len) {\n                inCoord = sz2 - inCoord - 1;\n            }\n        }\n    }\n    // clamp is necessary because when outCoord = 3.5 and len = 4,\n    // inCoord = 3.5 and will be rounded to 4 in nearest interpolation.\n    return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.clamp(0, inCoord, len - 1);\n}\nfunction mapCoordWrap(outCoord, len) {\n    // Wrap [abcd] to [abcd|abcd|abcd].\n    let inCoord = outCoord;\n    if (inCoord < 0) {\n        if (len <= 1) {\n            inCoord = 0;\n        }\n        else {\n            const sz = len - 1;\n            inCoord += len * (Math.trunc(-inCoord / sz) + 1);\n        }\n    }\n    else if (inCoord > len - 1) {\n        if (len <= 1) {\n            inCoord = 0;\n        }\n        else {\n            const sz = len - 1;\n            inCoord -= len * Math.trunc(inCoord / sz);\n        }\n    }\n    // clamp is necessary because when outCoord = -0.5 and len = 4,\n    // inCoord = 3.5 and will be rounded to 4 in nearest interpolation.\n    return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.clamp(0, inCoord, len - 1);\n}\nfunction mapCoordConstant(outCoord, len) {\n    return outCoord;\n}\nfunction mapCoordNearest(outCoord, len) {\n    return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.clamp(0, outCoord, len - 1);\n}\nfunction readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, y, x, channel, fillValue) {\n    const ind = batch * batchStride + y * rowStride + x * colStride + channel;\n    if (0 <= y && y < imageHeight && 0 <= x && x < imageWidth) {\n        return imageVals[ind];\n    }\n    else {\n        return fillValue;\n    }\n}\nfunction nearestInterpolation(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, y, x, channel, fillValue) {\n    const $y = Math.round(y);\n    const $x = Math.round(x);\n    return readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, $y, $x, channel, fillValue);\n}\nfunction bilinearInterpolation(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, y, x, channel, fillValue) {\n    const yFloor = Math.floor(y);\n    const xFloor = Math.floor(x);\n    const yCeil = yFloor + 1;\n    const xCeil = xFloor + 1;\n    // f(x, yFloor) = (xCeil - x) / (xCeil - xFloor) * f(xFloor, yFloor)\n    //               + (x - xFloor) / (xCeil - xFloor) * f(xCeil, yFloor)\n    const valueYFloor = (xCeil - x) *\n        readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, yFloor, xFloor, channel, fillValue) +\n        (x - xFloor) *\n            readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, yFloor, xCeil, channel, fillValue);\n    // f(x, yCeil) = (xCeil - x) / (xCeil - xFloor) * f(xFloor, yCeil)\n    //             + (x - xFloor) / (xCeil - xFloor) * f(xCeil, yCeil)\n    const valueYCeil = (xCeil - x) *\n        readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, yCeil, xFloor, channel, fillValue) +\n        (x - xFloor) *\n            readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, yCeil, xCeil, channel, fillValue);\n    // f(x, y) = (yCeil - y) / (yCeil - yFloor) * f(x, yFloor)\n    //         + (y - yFloor) / (yCeil - yFloor) * f(x, yCeil)\n    return (yCeil - y) * valueYFloor + (y - yFloor) * valueYCeil;\n}\n//# sourceMappingURL=Transform.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transform.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transpose\": () => (/* binding */ transpose),\n/* harmony export */   \"transposeConfig\": () => (/* binding */ transposeConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Transpose_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction transpose(args) {\n    const { inputs, attrs, backend } = args;\n    const { x } = inputs;\n    const { perm } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'transpose');\n    const xRank = x.shape.length;\n    const newShape = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = x.shape[perm[i]];\n    }\n    const values = backend.data.get(x.dataId).values;\n    const result = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_2__.transposeImpl)(values, x.shape, x.dtype, perm, newShape);\n    const dataId = backend.write(result, newShape, x.dtype);\n    return { dataId, shape: newShape, dtype: x.dtype };\n}\nconst transposeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Transpose,\n    backendName: 'cpu',\n    kernelFunc: transpose\n};\n//# sourceMappingURL=Transpose.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transposeImpl\": () => (/* binding */ transposeImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction transposeImpl(xVals, xShape, dtype, perm, newShape) {\n    const xRank = xShape.length;\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(xShape);\n    const xStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(xShape);\n    const newStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(newShape);\n    const result = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(newShape));\n    for (let i = 0; i < xSize; ++i) {\n        const loc = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.indexToLoc(i, xRank, xStrides);\n        // Permute location.\n        const newLoc = new Array(loc.length);\n        for (let i = 0; i < newLoc.length; i++) {\n            newLoc[i] = loc[perm[i]];\n        }\n        const newIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(newLoc, xRank, newStrides);\n        result[newIndex] = xVals[i];\n    }\n    return result;\n}\n//# sourceMappingURL=Transpose_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unique\": () => (/* binding */ unique),\n/* harmony export */   \"uniqueConfig\": () => (/* binding */ uniqueConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Unique_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Unique_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction unique(args) {\n    const { inputs, attrs, backend } = args;\n    const { axis } = attrs;\n    const { x } = inputs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'unique');\n    const values = backend.data.get(x.dataId).values;\n    const { outputValues, outputShape, indices } = (0,_Unique_impl__WEBPACK_IMPORTED_MODULE_2__.uniqueImpl)(values, axis, x.shape, x.dtype);\n    return [\n        backend.makeTensorInfo(outputShape, x.dtype, outputValues),\n        backend.makeTensorInfo([indices.length], 'int32', indices),\n    ];\n}\nconst uniqueConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Unique,\n    backendName: 'cpu',\n    kernelFunc: unique,\n};\n//# sourceMappingURL=Unique.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"uniqueImpl\": () => (/* binding */ uniqueImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction uniqueImpl(values, axis, shape, dtype) {\n    // Normalize and validate axis.\n    const $axis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, shape)[0];\n    // Calculate the new shape that is suitable for extracting data along the\n    // given axis.\n    //\n    // The rank is 3.\n    // The size of the 1st dimension is the size of all the axes < the given axis.\n    // The size of the 2nd dimension is the same as the size of the given axis.\n    // The size of the 3rd dimension is the size of all the axes > the given axis.\n    //\n    // For example, for a 4D tensor with shape=[2, 3, 5, 4] and axis=2, the\n    // newShape would be: [2*3, 5, 4].\n    //\n    // Note that this is not the final output shape. This will be the shape for an\n    // intermediate TensorBuffer (see inputBuffer below) to allow us to extract\n    // values along the given axis. To demonstrate how it works, consider the\n    // following example:\n    //\n    // Input: a 3D tensor, with shape [1, 2, 3]\n    // [\n    //   [\n    //      [1,2,3],\n    //      [4,5,6]\n    //   ]\n    // ]\n    // Axis: 2 (the last axis).\n    // Along axis 2, we expect to extract 3 tensors: [1,4], [2,5], [3,6].\n    //\n    // For this example, newShape would be: [2, 3, 1], where 2 is calculated from\n    // 1*2. The re-shaped data would look like:\n    //\n    // [\n    //   [\n    //     [1], [2], [3]\n    //   ],\n    //   [\n    //     [4], [5], [6]\n    //   ]\n    // ]\n    //\n    // Then, we can construct a 3-level nested loop by the following dimension\n    // order to extract the values along the axis (dimension1):\n    // i: dimension1       // 0,1,2 (newShape[1])\n    //   m: dimension0     // 0,1   (newShape[0])\n    //     n: dimension2   // 0     (newShape[2])\n    //\n    //                       m, i, n\n    //                      ---------\n    // Iteration 0: data at [0, 0, 0] => \"1\"\n    // Iteration 1: data at [1, 0, 0] => \"4\"\n    // We got [1,4].\n    // Iteration 2: data at [0, 1, 0] => \"2\"\n    // Iteration 3: data at [1, 1, 0] => \"5\"\n    // We got [2,5].\n    // Iteration 4: data at [0, 2, 0] => \"3\"\n    // Iteration 5: data at [1, 2, 0] => \"6\"\n    // We got [3,6].\n    const newShape = [1, shape[0], 1];\n    for (let i = 0; i < $axis; i++) {\n        newShape[0] *= shape[i];\n    }\n    newShape[1] = shape[$axis];\n    for (let i = $axis + 1; i < shape.length; i++) {\n        newShape[2] *= shape[i];\n    }\n    // A map from unique elements (their string representations) to their values\n    // in \"indices\" (below).\n    const uniqueElements = {};\n    // The indices of each unique element in the original tensor along the given\n    // axis. It is 1D and has the same size as the given axis.\n    const indices = new Int32Array(shape[$axis]);\n    // Create a buffer so we can easily extract value at a given location.\n    const inputBuffer = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(newShape, dtype, values);\n    // The indices along the given axis that have unique elements. This is a\n    // de-duped version of \"indices\" above.\n    const uniqueIndices = [];\n    const is1DTensor = newShape[0] === 1 && newShape[2] === 1;\n    for (let i = 0; i < shape[$axis]; i++) {\n        // Extract values along the axis.\n        let element;\n        if (is1DTensor) {\n            // Fast path for 1D tensor input.\n            element = values[i].toString();\n        }\n        else {\n            const axisValues = [];\n            for (let m = 0; m < newShape[0]; m++) {\n                for (let n = 0; n < newShape[2]; n++) {\n                    axisValues.push(inputBuffer.get(m, i, n));\n                }\n            }\n            element = axisValues.join(',');\n        }\n        // Dedup and update various indices.\n        if (uniqueElements[element] !== undefined) {\n            indices[i] = uniqueElements[element];\n        }\n        else {\n            const uniqueIndex = Object.keys(uniqueElements).length;\n            uniqueElements[element] = uniqueIndex;\n            indices[i] = uniqueIndex;\n            uniqueIndices.push(i);\n        }\n    }\n    // Now we know where each of the unique elements are located along the axis\n    // (uniqueIndices). Extract them from input buffer and store them in the\n    // output buffer.\n    const outputTmpShape = newShape.slice();\n    outputTmpShape[1] = Object.keys(uniqueElements).length;\n    const outputBuffer = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(outputTmpShape, dtype);\n    uniqueIndices.forEach((uniqueElementIndex, i) => {\n        for (let m = 0; m < newShape[0]; m++) {\n            for (let n = 0; n < newShape[2]; n++) {\n                outputBuffer.set(inputBuffer.get(m, uniqueElementIndex, n), m, i, n);\n            }\n        }\n    });\n    // The output shape can be calculated from the input shape with the size of\n    // the given axis replaced by the number of unique elements along that axis.\n    const outputShape = shape.slice();\n    outputShape[$axis] = outputTmpShape[1];\n    return {\n        outputValues: outputBuffer.values,\n        outputShape,\n        indices,\n    };\n}\n//# sourceMappingURL=Unique_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unpack.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unpack.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unpack\": () => (/* binding */ unpack),\n/* harmony export */   \"unpackConfig\": () => (/* binding */ unpackConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _Slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Slice */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction unpack(args) {\n    const { inputs, backend, attrs } = args;\n    const { value } = inputs;\n    let { axis } = attrs;\n    if (axis < 0) {\n        axis += value.shape.length;\n    }\n    const valueRank = value.shape.length;\n    const num = value.shape[axis];\n    const outShape = new Array(valueRank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < valueRank; i++) {\n        if (i !== axis) {\n            outShape[outIndex++] = value.shape[i];\n        }\n    }\n    const begin = new Array(valueRank).fill(0);\n    const size = value.shape.slice();\n    size[axis] = 1;\n    const res = new Array(num);\n    for (let i = 0; i < res.length; i++) {\n        begin[axis] = i;\n        const tempRes = (0,_Slice__WEBPACK_IMPORTED_MODULE_1__.slice)({ inputs: { x: value }, backend, attrs: { begin, size } });\n        res[i] = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: tempRes }, backend, attrs: { shape: outShape } });\n        backend.disposeIntermediateTensorInfo(tempRes);\n    }\n    return res;\n}\nconst unpackConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Unpack,\n    backendName: 'cpu',\n    kernelFunc: unpack\n};\n//# sourceMappingURL=Unpack.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unpack.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/UnsortedSegmentSum.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/UnsortedSegmentSum.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unsortedSegmentSum\": () => (/* binding */ unsortedSegmentSum),\n/* harmony export */   \"unsortedSegmentSumConfig\": () => (/* binding */ unsortedSegmentSumConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Cast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Cast */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js\");\n/* harmony import */ var _Equal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Equal */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Equal.js\");\n/* harmony import */ var _ExpandDims__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ExpandDims */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ExpandDims.js\");\n/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Multiply */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js\");\n/* harmony import */ var _Pack__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Pack */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pack.js\");\n/* harmony import */ var _Sum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Sum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sum.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\nfunction unsortedSegmentSum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, segmentIds } = inputs;\n    const { numSegments } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'unsortedSegmentSum');\n    const xRank = x.shape.length;\n    const segmentIdsRank = segmentIds.shape.length;\n    const res = [];\n    const intermediates = [];\n    // Reshape the segment id's so that they can be broadcast with\n    // x. The new shape should be [segmentIds.shape, 1, ..., 1]\n    const numIters = xRank - segmentIdsRank;\n    let $segmentIds = segmentIds;\n    for (let i = 0; i < numIters; ++i) {\n        const expanded = (0,_ExpandDims__WEBPACK_IMPORTED_MODULE_2__.expandDims)({ inputs: { input: $segmentIds }, backend, attrs: { dim: i + 1 } });\n        $segmentIds = expanded;\n        intermediates.push(expanded);\n    }\n    for (let i = 0; i < numSegments; ++i) {\n        const scalarValue = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.createScalarValue(i, 'int32');\n        const segmentId = backend.makeTensorInfo([], 'int32', scalarValue);\n        const mask = (0,_Equal__WEBPACK_IMPORTED_MODULE_3__.equal)({ inputs: { a: segmentId, b: $segmentIds }, backend });\n        const maskCasted = (0,_Cast__WEBPACK_IMPORTED_MODULE_4__.cast)({ inputs: { x: mask }, backend, attrs: { dtype: 'float32' } });\n        const mul = (0,_Multiply__WEBPACK_IMPORTED_MODULE_5__.multiply)({ inputs: { a: maskCasted, b: x }, backend });\n        const sumTensorInfo = (0,_Sum__WEBPACK_IMPORTED_MODULE_6__.sum)({ inputs: { x: mul }, backend, attrs: { axis: 0, keepDims: false } });\n        res.push(sumTensorInfo);\n        intermediates.push(segmentId);\n        intermediates.push(mask);\n        intermediates.push(maskCasted);\n        intermediates.push(mul);\n        intermediates.push(sumTensorInfo);\n    }\n    const result = (0,_Pack__WEBPACK_IMPORTED_MODULE_7__.pack)({ inputs: res, backend, attrs: { axis: 0 } });\n    intermediates.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nconst unsortedSegmentSumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.UnsortedSegmentSum,\n    backendName: 'cpu',\n    kernelFunc: unsortedSegmentSum\n};\n//# sourceMappingURL=UnsortedSegmentSum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/UnsortedSegmentSum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ZerosLike.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ZerosLike.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"zerosLike\": () => (/* binding */ zerosLike),\n/* harmony export */   \"zerosLikeConfig\": () => (/* binding */ zerosLikeConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/* harmony import */ var _Fill__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Fill */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Fill.js\");\n/* harmony import */ var _Imag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Imag */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Imag.js\");\n/* harmony import */ var _Real__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Real */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\nfunction zerosLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'string') {\n        throw new Error('zerosLike is not supported for string tensors');\n    }\n    else if (x.dtype === 'complex64') {\n        const realPart = (0,_Real__WEBPACK_IMPORTED_MODULE_1__.real)({ inputs: { input: x }, backend });\n        const r = zerosLike({ inputs: { x: realPart }, backend });\n        const imagPart = (0,_Imag__WEBPACK_IMPORTED_MODULE_2__.imag)({ inputs: { input: x }, backend });\n        const i = zerosLike({ inputs: { x: imagPart }, backend });\n        const result = (0,_Complex__WEBPACK_IMPORTED_MODULE_3__.complex)({ inputs: { real: r, imag: i }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(r);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        backend.disposeIntermediateTensorInfo(i);\n        return result;\n    }\n    else {\n        return (0,_Fill__WEBPACK_IMPORTED_MODULE_4__.fill)({ backend, attrs: { shape: x.shape, value: 0, dtype: x.dtype } });\n    }\n}\nconst zerosLikeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ZerosLike,\n    backendName: 'cpu',\n    kernelFunc: zerosLike\n};\n//# sourceMappingURL=ZerosLike.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ZerosLike.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/_FusedMatMul.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/_FusedMatMul.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_fusedMatMul\": () => (/* binding */ _fusedMatMul),\n/* harmony export */   \"_fusedMatMulConfig\": () => (/* binding */ _fusedMatMulConfig)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_fused_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/fused_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fused_utils.js\");\n/* harmony import */ var _Add__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Add */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js\");\n/* harmony import */ var _BatchMatMul__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BatchMatMul */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchMatMul.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction _fusedMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b, bias, preluActivationWeights } = inputs;\n    const { transposeA, transposeB, activation, leakyreluAlpha } = attrs;\n    let current;\n    let addRes;\n    let activationRes;\n    const intermediates = [];\n    const matMulRes = (0,_BatchMatMul__WEBPACK_IMPORTED_MODULE_1__.batchMatMul)({ inputs: { a, b }, attrs: { transposeA, transposeB }, backend });\n    current = matMulRes;\n    if (bias) {\n        addRes = (0,_Add__WEBPACK_IMPORTED_MODULE_2__.add)({ inputs: { a: current, b: bias }, backend });\n        intermediates.push(current);\n        current = addRes;\n    }\n    if (activation) {\n        activationRes = (0,_utils_fused_utils__WEBPACK_IMPORTED_MODULE_3__.applyActivation)(backend, current, activation, preluActivationWeights, leakyreluAlpha);\n        intermediates.push(current);\n        current = activationRes;\n    }\n    for (const i of intermediates) {\n        backend.disposeIntermediateTensorInfo(i);\n    }\n    return current;\n}\nconst _fusedMatMulConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__._FusedMatMul,\n    backendName: 'cpu',\n    kernelFunc: _fusedMatMul,\n};\n//# sourceMappingURL=_FusedMatMul.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/_FusedMatMul.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/register_all_kernels.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/register_all_kernels.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernels_FusedMatMul__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kernels/_FusedMatMul */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/_FusedMatMul.js\");\n/* harmony import */ var _kernels_Abs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kernels/Abs */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js\");\n/* harmony import */ var _kernels_Acos__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kernels/Acos */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Acos.js\");\n/* harmony import */ var _kernels_Acosh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kernels/Acosh */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Acosh.js\");\n/* harmony import */ var _kernels_Add__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kernels/Add */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js\");\n/* harmony import */ var _kernels_AddN__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./kernels/AddN */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AddN.js\");\n/* harmony import */ var _kernels_All__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./kernels/All */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/All.js\");\n/* harmony import */ var _kernels_Any__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./kernels/Any */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Any.js\");\n/* harmony import */ var _kernels_ArgMax__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./kernels/ArgMax */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ArgMax.js\");\n/* harmony import */ var _kernels_ArgMin__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./kernels/ArgMin */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ArgMin.js\");\n/* harmony import */ var _kernels_Asin__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./kernels/Asin */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Asin.js\");\n/* harmony import */ var _kernels_Asinh__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./kernels/Asinh */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Asinh.js\");\n/* harmony import */ var _kernels_Atan__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./kernels/Atan */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan.js\");\n/* harmony import */ var _kernels_Atan2__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./kernels/Atan2 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan2.js\");\n/* harmony import */ var _kernels_Atanh__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./kernels/Atanh */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atanh.js\");\n/* harmony import */ var _kernels_AvgPool__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./kernels/AvgPool */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool.js\");\n/* harmony import */ var _kernels_AvgPool3D__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./kernels/AvgPool3D */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool3D.js\");\n/* harmony import */ var _kernels_AvgPool3DGrad__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./kernels/AvgPool3DGrad */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool3DGrad.js\");\n/* harmony import */ var _kernels_AvgPoolGrad__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./kernels/AvgPoolGrad */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPoolGrad.js\");\n/* harmony import */ var _kernels_BatchMatMul__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./kernels/BatchMatMul */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchMatMul.js\");\n/* harmony import */ var _kernels_BatchNorm__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./kernels/BatchNorm */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchNorm.js\");\n/* harmony import */ var _kernels_BatchToSpaceND__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./kernels/BatchToSpaceND */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchToSpaceND.js\");\n/* harmony import */ var _kernels_Bincount__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./kernels/Bincount */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount.js\");\n/* harmony import */ var _kernels_Cast__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./kernels/Cast */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js\");\n/* harmony import */ var _kernels_Ceil__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./kernels/Ceil */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js\");\n/* harmony import */ var _kernels_Clip__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./kernels/Clip */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Clip.js\");\n/* harmony import */ var _kernels_Complex__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./kernels/Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/* harmony import */ var _kernels_ComplexAbs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./kernels/ComplexAbs */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ComplexAbs.js\");\n/* harmony import */ var _kernels_Concat__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./kernels/Concat */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat.js\");\n/* harmony import */ var _kernels_Conv2D__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./kernels/Conv2D */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2D.js\");\n/* harmony import */ var _kernels_Conv2DBackpropFilter__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./kernels/Conv2DBackpropFilter */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2DBackpropFilter.js\");\n/* harmony import */ var _kernels_Conv2DBackpropInput__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./kernels/Conv2DBackpropInput */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2DBackpropInput.js\");\n/* harmony import */ var _kernels_Conv3D__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./kernels/Conv3D */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3D.js\");\n/* harmony import */ var _kernels_Conv3DBackpropFilterV2__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./kernels/Conv3DBackpropFilterV2 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3DBackpropFilterV2.js\");\n/* harmony import */ var _kernels_Conv3DBackpropInputV2__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./kernels/Conv3DBackpropInputV2 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3DBackpropInputV2.js\");\n/* harmony import */ var _kernels_Cos__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./kernels/Cos */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cos.js\");\n/* harmony import */ var _kernels_Cosh__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./kernels/Cosh */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cosh.js\");\n/* harmony import */ var _kernels_CropAndResize__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./kernels/CropAndResize */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/CropAndResize.js\");\n/* harmony import */ var _kernels_Cumsum__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./kernels/Cumsum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cumsum.js\");\n/* harmony import */ var _kernels_DenseBincount__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./kernels/DenseBincount */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DenseBincount.js\");\n/* harmony import */ var _kernels_DepthToSpace__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./kernels/DepthToSpace */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthToSpace.js\");\n/* harmony import */ var _kernels_DepthwiseConv2dNative__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./kernels/DepthwiseConv2dNative */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNative.js\");\n/* harmony import */ var _kernels_DepthwiseConv2dNativeBackpropFilter__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./kernels/DepthwiseConv2dNativeBackpropFilter */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js\");\n/* harmony import */ var _kernels_DepthwiseConv2dNativeBackpropInput__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./kernels/DepthwiseConv2dNativeBackpropInput */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNativeBackpropInput.js\");\n/* harmony import */ var _kernels_Diag__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./kernels/Diag */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Diag.js\");\n/* harmony import */ var _kernels_Dilation2D__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./kernels/Dilation2D */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2D.js\");\n/* harmony import */ var _kernels_Dilation2DBackpropFilter__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./kernels/Dilation2DBackpropFilter */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2DBackpropFilter.js\");\n/* harmony import */ var _kernels_Dilation2DBackpropInput__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./kernels/Dilation2DBackpropInput */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2DBackpropInput.js\");\n/* harmony import */ var _kernels_Einsum__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./kernels/Einsum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Einsum.js\");\n/* harmony import */ var _kernels_Elu__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./kernels/Elu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Elu.js\");\n/* harmony import */ var _kernels_EluGrad__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./kernels/EluGrad */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/EluGrad.js\");\n/* harmony import */ var _kernels_Equal__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./kernels/Equal */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Equal.js\");\n/* harmony import */ var _kernels_Erf__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./kernels/Erf */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Erf.js\");\n/* harmony import */ var _kernels_Exp__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./kernels/Exp */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js\");\n/* harmony import */ var _kernels_ExpandDims__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./kernels/ExpandDims */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ExpandDims.js\");\n/* harmony import */ var _kernels_Expm1__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./kernels/Expm1 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js\");\n/* harmony import */ var _kernels_FFT__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./kernels/FFT */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FFT.js\");\n/* harmony import */ var _kernels_Fill__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./kernels/Fill */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Fill.js\");\n/* harmony import */ var _kernels_FlipLeftRight__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./kernels/FlipLeftRight */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FlipLeftRight.js\");\n/* harmony import */ var _kernels_Floor__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./kernels/Floor */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js\");\n/* harmony import */ var _kernels_FloorDiv__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./kernels/FloorDiv */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FloorDiv.js\");\n/* harmony import */ var _kernels_FusedConv2D__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./kernels/FusedConv2D */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FusedConv2D.js\");\n/* harmony import */ var _kernels_FusedDepthwiseConv2D__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./kernels/FusedDepthwiseConv2D */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FusedDepthwiseConv2D.js\");\n/* harmony import */ var _kernels_GatherNd__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./kernels/GatherNd */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd.js\");\n/* harmony import */ var _kernels_GatherV2__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./kernels/GatherV2 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2.js\");\n/* harmony import */ var _kernels_Greater__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./kernels/Greater */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js\");\n/* harmony import */ var _kernels_GreaterEqual__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./kernels/GreaterEqual */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GreaterEqual.js\");\n/* harmony import */ var _kernels_Identity__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./kernels/Identity */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js\");\n/* harmony import */ var _kernels_IFFT__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./kernels/IFFT */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IFFT.js\");\n/* harmony import */ var _kernels_Imag__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./kernels/Imag */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Imag.js\");\n/* harmony import */ var _kernels_IsFinite__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./kernels/IsFinite */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsFinite.js\");\n/* harmony import */ var _kernels_IsInf__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./kernels/IsInf */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsInf.js\");\n/* harmony import */ var _kernels_IsNaN__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./kernels/IsNaN */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsNaN.js\");\n/* harmony import */ var _kernels_LeakyRelu__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./kernels/LeakyRelu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LeakyRelu.js\");\n/* harmony import */ var _kernels_Less__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./kernels/Less */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js\");\n/* harmony import */ var _kernels_LessEqual__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./kernels/LessEqual */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LessEqual.js\");\n/* harmony import */ var _kernels_LinSpace__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./kernels/LinSpace */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace.js\");\n/* harmony import */ var _kernels_Log__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./kernels/Log */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js\");\n/* harmony import */ var _kernels_Log1p__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./kernels/Log1p */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log1p.js\");\n/* harmony import */ var _kernels_LogicalAnd__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./kernels/LogicalAnd */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalAnd.js\");\n/* harmony import */ var _kernels_LogicalNot__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./kernels/LogicalNot */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalNot.js\");\n/* harmony import */ var _kernels_LogicalOr__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./kernels/LogicalOr */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalOr.js\");\n/* harmony import */ var _kernels_LRN__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./kernels/LRN */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LRN.js\");\n/* harmony import */ var _kernels_LRNGrad__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./kernels/LRNGrad */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LRNGrad.js\");\n/* harmony import */ var _kernels_Max__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./kernels/Max */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max.js\");\n/* harmony import */ var _kernels_Maximum__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./kernels/Maximum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js\");\n/* harmony import */ var _kernels_MaxPool__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./kernels/MaxPool */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool.js\");\n/* harmony import */ var _kernels_MaxPool3D__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./kernels/MaxPool3D */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3D.js\");\n/* harmony import */ var _kernels_MaxPool3DGrad__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./kernels/MaxPool3DGrad */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3DGrad.js\");\n/* harmony import */ var _kernels_MaxPoolGrad__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./kernels/MaxPoolGrad */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolGrad.js\");\n/* harmony import */ var _kernels_MaxPoolWithArgmax__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./kernels/MaxPoolWithArgmax */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolWithArgmax.js\");\n/* harmony import */ var _kernels_Mean__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./kernels/Mean */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mean.js\");\n/* harmony import */ var _kernels_Min__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./kernels/Min */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Min.js\");\n/* harmony import */ var _kernels_Minimum__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./kernels/Minimum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js\");\n/* harmony import */ var _kernels_MirrorPad__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./kernels/MirrorPad */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MirrorPad.js\");\n/* harmony import */ var _kernels_Mod__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./kernels/Mod */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mod.js\");\n/* harmony import */ var _kernels_Multinomial__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./kernels/Multinomial */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multinomial.js\");\n/* harmony import */ var _kernels_Multiply__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./kernels/Multiply */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js\");\n/* harmony import */ var _kernels_Neg__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./kernels/Neg */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js\");\n/* harmony import */ var _kernels_NonMaxSuppressionV3__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./kernels/NonMaxSuppressionV3 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV3.js\");\n/* harmony import */ var _kernels_NonMaxSuppressionV4__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./kernels/NonMaxSuppressionV4 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV4.js\");\n/* harmony import */ var _kernels_NonMaxSuppressionV5__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./kernels/NonMaxSuppressionV5 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV5.js\");\n/* harmony import */ var _kernels_NotEqual__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./kernels/NotEqual */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js\");\n/* harmony import */ var _kernels_OneHot__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./kernels/OneHot */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/OneHot.js\");\n/* harmony import */ var _kernels_OnesLike__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./kernels/OnesLike */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/OnesLike.js\");\n/* harmony import */ var _kernels_Pack__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./kernels/Pack */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pack.js\");\n/* harmony import */ var _kernels_PadV2__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./kernels/PadV2 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/PadV2.js\");\n/* harmony import */ var _kernels_Pow__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./kernels/Pow */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pow.js\");\n/* harmony import */ var _kernels_Prelu__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./kernels/Prelu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prelu.js\");\n/* harmony import */ var _kernels_Prod__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./kernels/Prod */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js\");\n/* harmony import */ var _kernels_Range__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./kernels/Range */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range.js\");\n/* harmony import */ var _kernels_Real__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./kernels/Real */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js\");\n/* harmony import */ var _kernels_RealDiv__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./kernels/RealDiv */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RealDiv.js\");\n/* harmony import */ var _kernels_Reciprocal__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./kernels/Reciprocal */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reciprocal.js\");\n/* harmony import */ var _kernels_Relu__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./kernels/Relu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu.js\");\n/* harmony import */ var _kernels_Relu6__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./kernels/Relu6 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu6.js\");\n/* harmony import */ var _kernels_Reshape__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./kernels/Reshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js\");\n/* harmony import */ var _kernels_ResizeBilinear__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./kernels/ResizeBilinear */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeBilinear.js\");\n/* harmony import */ var _kernels_ResizeBilinearGrad__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./kernels/ResizeBilinearGrad */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeBilinearGrad.js\");\n/* harmony import */ var _kernels_ResizeNearestNeighbor__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./kernels/ResizeNearestNeighbor */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeNearestNeighbor.js\");\n/* harmony import */ var _kernels_ResizeNearestNeighborGrad__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./kernels/ResizeNearestNeighborGrad */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeNearestNeighborGrad.js\");\n/* harmony import */ var _kernels_Reverse__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./kernels/Reverse */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reverse.js\");\n/* harmony import */ var _kernels_RotateWithOffset__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./kernels/RotateWithOffset */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RotateWithOffset.js\");\n/* harmony import */ var _kernels_Round__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./kernels/Round */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Round.js\");\n/* harmony import */ var _kernels_Rsqrt__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./kernels/Rsqrt */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js\");\n/* harmony import */ var _kernels_ScatterNd__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./kernels/ScatterNd */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ScatterNd.js\");\n/* harmony import */ var _kernels_Select__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./kernels/Select */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Select.js\");\n/* harmony import */ var _kernels_Selu__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./kernels/Selu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Selu.js\");\n/* harmony import */ var _kernels_Sigmoid__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./kernels/Sigmoid */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sigmoid.js\");\n/* harmony import */ var _kernels_Sign__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./kernels/Sign */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sign.js\");\n/* harmony import */ var _kernels_Sin__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./kernels/Sin */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sin.js\");\n/* harmony import */ var _kernels_Sinh__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./kernels/Sinh */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sinh.js\");\n/* harmony import */ var _kernels_Slice__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./kernels/Slice */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js\");\n/* harmony import */ var _kernels_Softmax__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./kernels/Softmax */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softmax.js\");\n/* harmony import */ var _kernels_Softplus__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./kernels/Softplus */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softplus.js\");\n/* harmony import */ var _kernels_SpaceToBatchND__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./kernels/SpaceToBatchND */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SpaceToBatchND.js\");\n/* harmony import */ var _kernels_SparseFillEmptyRows__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./kernels/SparseFillEmptyRows */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseFillEmptyRows.js\");\n/* harmony import */ var _kernels_SparseReshape__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./kernels/SparseReshape */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseReshape.js\");\n/* harmony import */ var _kernels_SparseSegmentMean__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./kernels/SparseSegmentMean */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentMean.js\");\n/* harmony import */ var _kernels_SparseSegmentSum__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./kernels/SparseSegmentSum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentSum.js\");\n/* harmony import */ var _kernels_SparseToDense__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./kernels/SparseToDense */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseToDense.js\");\n/* harmony import */ var _kernels_SplitV__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./kernels/SplitV */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SplitV.js\");\n/* harmony import */ var _kernels_Sqrt__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./kernels/Sqrt */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sqrt.js\");\n/* harmony import */ var _kernels_Square__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./kernels/Square */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Square.js\");\n/* harmony import */ var _kernels_SquaredDifference__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./kernels/SquaredDifference */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js\");\n/* harmony import */ var _kernels_Step__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./kernels/Step */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Step.js\");\n/* harmony import */ var _kernels_StridedSlice__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./kernels/StridedSlice */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice.js\");\n/* harmony import */ var _kernels_StringNGrams__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./kernels/StringNGrams */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringNGrams.js\");\n/* harmony import */ var _kernels_StringSplit__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./kernels/StringSplit */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringSplit.js\");\n/* harmony import */ var _kernels_StringToHashBucketFast__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./kernels/StringToHashBucketFast */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringToHashBucketFast.js\");\n/* harmony import */ var _kernels_Sub__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./kernels/Sub */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js\");\n/* harmony import */ var _kernels_Sum__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./kernels/Sum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sum.js\");\n/* harmony import */ var _kernels_Tan__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./kernels/Tan */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tan.js\");\n/* harmony import */ var _kernels_Tanh__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./kernels/Tanh */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tanh.js\");\n/* harmony import */ var _kernels_Tile__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ./kernels/Tile */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile.js\");\n/* harmony import */ var _kernels_TopK__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ./kernels/TopK */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK.js\");\n/* harmony import */ var _kernels_Transform__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ./kernels/Transform */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transform.js\");\n/* harmony import */ var _kernels_Transpose__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ./kernels/Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/* harmony import */ var _kernels_Unique__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ./kernels/Unique */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique.js\");\n/* harmony import */ var _kernels_Unpack__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ./kernels/Unpack */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unpack.js\");\n/* harmony import */ var _kernels_UnsortedSegmentSum__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ./kernels/UnsortedSegmentSum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/UnsortedSegmentSum.js\");\n/* harmony import */ var _kernels_ZerosLike__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ./kernels/ZerosLike */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ZerosLike.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// List all kernel configs here\nconst kernelConfigs = [\n    _kernels_FusedMatMul__WEBPACK_IMPORTED_MODULE_1__._fusedMatMulConfig,\n    _kernels_Abs__WEBPACK_IMPORTED_MODULE_2__.absConfig,\n    _kernels_Acos__WEBPACK_IMPORTED_MODULE_3__.acosConfig,\n    _kernels_Acosh__WEBPACK_IMPORTED_MODULE_4__.acoshConfig,\n    _kernels_Add__WEBPACK_IMPORTED_MODULE_5__.addConfig,\n    _kernels_AddN__WEBPACK_IMPORTED_MODULE_6__.addNConfig,\n    _kernels_All__WEBPACK_IMPORTED_MODULE_7__.allConfig,\n    _kernels_Any__WEBPACK_IMPORTED_MODULE_8__.anyConfig,\n    _kernels_ArgMax__WEBPACK_IMPORTED_MODULE_9__.argMaxConfig,\n    _kernels_ArgMin__WEBPACK_IMPORTED_MODULE_10__.argMinConfig,\n    _kernels_Asin__WEBPACK_IMPORTED_MODULE_11__.asinConfig,\n    _kernels_Asinh__WEBPACK_IMPORTED_MODULE_12__.asinhConfig,\n    _kernels_Atan__WEBPACK_IMPORTED_MODULE_13__.atanConfig,\n    _kernels_Atan2__WEBPACK_IMPORTED_MODULE_14__.atan2Config,\n    _kernels_Atanh__WEBPACK_IMPORTED_MODULE_15__.atanhConfig,\n    _kernels_AvgPool__WEBPACK_IMPORTED_MODULE_16__.avgPoolConfig,\n    _kernels_AvgPool3D__WEBPACK_IMPORTED_MODULE_17__.avgPool3DConfig,\n    _kernels_AvgPool3DGrad__WEBPACK_IMPORTED_MODULE_18__.avgPool3DGradConfig,\n    _kernels_AvgPoolGrad__WEBPACK_IMPORTED_MODULE_19__.avgPoolGradConfig,\n    _kernels_BatchMatMul__WEBPACK_IMPORTED_MODULE_20__.batchMatMulConfig,\n    _kernels_BatchNorm__WEBPACK_IMPORTED_MODULE_21__.batchNormConfig,\n    _kernels_BatchToSpaceND__WEBPACK_IMPORTED_MODULE_22__.batchToSpaceNDConfig,\n    _kernels_Bincount__WEBPACK_IMPORTED_MODULE_23__.bincountConfig,\n    _kernels_Cast__WEBPACK_IMPORTED_MODULE_24__.castConfig,\n    _kernels_Ceil__WEBPACK_IMPORTED_MODULE_25__.ceilConfig,\n    _kernels_Clip__WEBPACK_IMPORTED_MODULE_26__.clipConfig,\n    _kernels_Complex__WEBPACK_IMPORTED_MODULE_27__.complexConfig,\n    _kernels_ComplexAbs__WEBPACK_IMPORTED_MODULE_28__.complexAbsConfig,\n    _kernels_Concat__WEBPACK_IMPORTED_MODULE_29__.concatConfig,\n    _kernels_Conv2DBackpropFilter__WEBPACK_IMPORTED_MODULE_30__.conv2DBackpropFilterConfig,\n    _kernels_Conv2DBackpropInput__WEBPACK_IMPORTED_MODULE_31__.conv2DBackpropInputConfig,\n    _kernels_Conv2D__WEBPACK_IMPORTED_MODULE_32__.conv2DConfig,\n    _kernels_Conv3DBackpropFilterV2__WEBPACK_IMPORTED_MODULE_33__.conv3DBackpropFilterV2Config,\n    _kernels_Conv3DBackpropInputV2__WEBPACK_IMPORTED_MODULE_34__.conv3DBackpropInputV2Config,\n    _kernels_Conv3D__WEBPACK_IMPORTED_MODULE_35__.conv3DConfig,\n    _kernels_Cos__WEBPACK_IMPORTED_MODULE_36__.cosConfig,\n    _kernels_Cosh__WEBPACK_IMPORTED_MODULE_37__.coshConfig,\n    _kernels_CropAndResize__WEBPACK_IMPORTED_MODULE_38__.cropAndResizeConfig,\n    _kernels_Cumsum__WEBPACK_IMPORTED_MODULE_39__.cumsumConfig,\n    _kernels_DenseBincount__WEBPACK_IMPORTED_MODULE_40__.denseBincountConfig,\n    _kernels_DepthToSpace__WEBPACK_IMPORTED_MODULE_41__.depthToSpaceConfig,\n    _kernels_DepthwiseConv2dNative__WEBPACK_IMPORTED_MODULE_42__.depthwiseConv2dNativeConfig,\n    _kernels_DepthwiseConv2dNativeBackpropFilter__WEBPACK_IMPORTED_MODULE_43__.depthwiseConv2dNativeBackpropFilterConfig,\n    _kernels_DepthwiseConv2dNativeBackpropInput__WEBPACK_IMPORTED_MODULE_44__.depthwiseConv2dNativeBackpropInputConfig,\n    _kernels_Diag__WEBPACK_IMPORTED_MODULE_45__.diagConfig,\n    _kernels_Dilation2D__WEBPACK_IMPORTED_MODULE_46__.dilation2dConfig,\n    _kernels_Dilation2DBackpropInput__WEBPACK_IMPORTED_MODULE_47__.dilation2dBackpropInputConfig,\n    _kernels_Dilation2DBackpropFilter__WEBPACK_IMPORTED_MODULE_48__.dilation2dBackpropFilterConfig,\n    _kernels_RealDiv__WEBPACK_IMPORTED_MODULE_49__.realDivConfig,\n    _kernels_Einsum__WEBPACK_IMPORTED_MODULE_50__.einsumConfig,\n    _kernels_Elu__WEBPACK_IMPORTED_MODULE_51__.eluConfig,\n    _kernels_EluGrad__WEBPACK_IMPORTED_MODULE_52__.eluGradConfig,\n    _kernels_Equal__WEBPACK_IMPORTED_MODULE_53__.equalConfig,\n    _kernels_Erf__WEBPACK_IMPORTED_MODULE_54__.erfConfig,\n    _kernels_Exp__WEBPACK_IMPORTED_MODULE_55__.expConfig,\n    _kernels_ExpandDims__WEBPACK_IMPORTED_MODULE_56__.expandDimsConfig,\n    _kernels_Expm1__WEBPACK_IMPORTED_MODULE_57__.expm1Config,\n    _kernels_FFT__WEBPACK_IMPORTED_MODULE_58__.fftConfig,\n    _kernels_Fill__WEBPACK_IMPORTED_MODULE_59__.fillConfig,\n    _kernels_FlipLeftRight__WEBPACK_IMPORTED_MODULE_60__.flipLeftRightConfig,\n    _kernels_Floor__WEBPACK_IMPORTED_MODULE_61__.floorConfig,\n    _kernels_FloorDiv__WEBPACK_IMPORTED_MODULE_62__.floorDivConfig,\n    _kernels_FusedConv2D__WEBPACK_IMPORTED_MODULE_63__.fusedConv2DConfig,\n    _kernels_FusedDepthwiseConv2D__WEBPACK_IMPORTED_MODULE_64__.fusedDepthwiseConv2DConfig,\n    _kernels_GatherNd__WEBPACK_IMPORTED_MODULE_65__.gatherNdConfig,\n    _kernels_GatherV2__WEBPACK_IMPORTED_MODULE_66__.gatherV2Config,\n    _kernels_Greater__WEBPACK_IMPORTED_MODULE_67__.greaterConfig,\n    _kernels_GreaterEqual__WEBPACK_IMPORTED_MODULE_68__.greaterEqualConfig,\n    _kernels_Identity__WEBPACK_IMPORTED_MODULE_69__.identityConfig,\n    _kernels_IFFT__WEBPACK_IMPORTED_MODULE_70__.ifftConfig,\n    _kernels_Imag__WEBPACK_IMPORTED_MODULE_71__.imagConfig,\n    _kernels_IsFinite__WEBPACK_IMPORTED_MODULE_72__.isFiniteConfig,\n    _kernels_IsInf__WEBPACK_IMPORTED_MODULE_73__.isInfConfig,\n    _kernels_IsNaN__WEBPACK_IMPORTED_MODULE_74__.isNaNConfig,\n    _kernels_LeakyRelu__WEBPACK_IMPORTED_MODULE_75__.leakyReluConfig,\n    _kernels_Less__WEBPACK_IMPORTED_MODULE_76__.lessConfig,\n    _kernels_LessEqual__WEBPACK_IMPORTED_MODULE_77__.lessEqualConfig,\n    _kernels_LinSpace__WEBPACK_IMPORTED_MODULE_78__.linSpaceConfig,\n    _kernels_Log__WEBPACK_IMPORTED_MODULE_79__.logConfig,\n    _kernels_Log1p__WEBPACK_IMPORTED_MODULE_80__.log1pConfig,\n    _kernels_LogicalAnd__WEBPACK_IMPORTED_MODULE_81__.logicalAndConfig,\n    _kernels_LogicalNot__WEBPACK_IMPORTED_MODULE_82__.logicalNotConfig,\n    _kernels_LogicalOr__WEBPACK_IMPORTED_MODULE_83__.logicalOrConfig,\n    _kernels_LRN__WEBPACK_IMPORTED_MODULE_84__.lRNConfig,\n    _kernels_LRNGrad__WEBPACK_IMPORTED_MODULE_85__.lRNGradConfig,\n    _kernels_Maximum__WEBPACK_IMPORTED_MODULE_86__.maximumConfig,\n    _kernels_MaxPool__WEBPACK_IMPORTED_MODULE_87__.maxPoolConfig,\n    _kernels_MaxPool3D__WEBPACK_IMPORTED_MODULE_88__.maxPool3DConfig,\n    _kernels_MaxPool3DGrad__WEBPACK_IMPORTED_MODULE_89__.maxPool3DGradConfig,\n    _kernels_MaxPoolGrad__WEBPACK_IMPORTED_MODULE_90__.maxPoolGradConfig,\n    _kernels_MaxPoolWithArgmax__WEBPACK_IMPORTED_MODULE_91__.maxPoolWithArgmaxConfig,\n    _kernels_Max__WEBPACK_IMPORTED_MODULE_92__.maxConfig,\n    _kernels_Mean__WEBPACK_IMPORTED_MODULE_93__.meanConfig,\n    _kernels_Min__WEBPACK_IMPORTED_MODULE_94__.minConfig,\n    _kernels_Minimum__WEBPACK_IMPORTED_MODULE_95__.minimumConfig,\n    _kernels_MirrorPad__WEBPACK_IMPORTED_MODULE_96__.mirrorPadConfig,\n    _kernels_Mod__WEBPACK_IMPORTED_MODULE_97__.modConfig,\n    _kernels_Multinomial__WEBPACK_IMPORTED_MODULE_98__.multinomialConfig,\n    _kernels_Multiply__WEBPACK_IMPORTED_MODULE_99__.multiplyConfig,\n    _kernels_Neg__WEBPACK_IMPORTED_MODULE_100__.negConfig,\n    _kernels_NonMaxSuppressionV3__WEBPACK_IMPORTED_MODULE_101__.nonMaxSuppressionV3Config,\n    _kernels_NonMaxSuppressionV4__WEBPACK_IMPORTED_MODULE_102__.nonMaxSuppressionV4Config,\n    _kernels_NonMaxSuppressionV5__WEBPACK_IMPORTED_MODULE_103__.nonMaxSuppressionV5Config,\n    _kernels_NotEqual__WEBPACK_IMPORTED_MODULE_104__.notEqualConfig,\n    _kernels_OneHot__WEBPACK_IMPORTED_MODULE_105__.oneHotConfig,\n    _kernels_OnesLike__WEBPACK_IMPORTED_MODULE_106__.onesLikeConfig,\n    _kernels_Pack__WEBPACK_IMPORTED_MODULE_107__.packConfig,\n    _kernels_PadV2__WEBPACK_IMPORTED_MODULE_108__.padV2Config,\n    _kernels_Pow__WEBPACK_IMPORTED_MODULE_109__.powConfig,\n    _kernels_Prelu__WEBPACK_IMPORTED_MODULE_110__.preluConfig,\n    _kernels_Prod__WEBPACK_IMPORTED_MODULE_111__.prodConfig,\n    _kernels_Range__WEBPACK_IMPORTED_MODULE_112__.rangeConfig,\n    _kernels_Real__WEBPACK_IMPORTED_MODULE_113__.realConfig,\n    _kernels_Reciprocal__WEBPACK_IMPORTED_MODULE_114__.reciprocalConfig,\n    _kernels_Relu__WEBPACK_IMPORTED_MODULE_115__.reluConfig,\n    _kernels_Relu6__WEBPACK_IMPORTED_MODULE_116__.relu6Config,\n    _kernels_Reshape__WEBPACK_IMPORTED_MODULE_117__.reshapeConfig,\n    _kernels_ResizeBilinear__WEBPACK_IMPORTED_MODULE_118__.resizeBilinearConfig,\n    _kernels_ResizeBilinearGrad__WEBPACK_IMPORTED_MODULE_119__.resizeBilinearGradConfig,\n    _kernels_ResizeNearestNeighbor__WEBPACK_IMPORTED_MODULE_120__.resizeNearestNeighborConfig,\n    _kernels_ResizeNearestNeighborGrad__WEBPACK_IMPORTED_MODULE_121__.resizeNearestNeighborGradConfig,\n    _kernels_Reverse__WEBPACK_IMPORTED_MODULE_122__.reverseConfig,\n    _kernels_RotateWithOffset__WEBPACK_IMPORTED_MODULE_123__.rotateWithOffsetConfig,\n    _kernels_Round__WEBPACK_IMPORTED_MODULE_124__.roundConfig,\n    _kernels_Rsqrt__WEBPACK_IMPORTED_MODULE_125__.rsqrtConfig,\n    _kernels_ScatterNd__WEBPACK_IMPORTED_MODULE_126__.scatterNdConfig,\n    _kernels_Select__WEBPACK_IMPORTED_MODULE_127__.selectConfig,\n    _kernels_Selu__WEBPACK_IMPORTED_MODULE_128__.seluConfig,\n    _kernels_Sigmoid__WEBPACK_IMPORTED_MODULE_129__.sigmoidConfig,\n    _kernels_Sign__WEBPACK_IMPORTED_MODULE_130__.signConfig,\n    _kernels_Sin__WEBPACK_IMPORTED_MODULE_131__.sinConfig,\n    _kernels_Sinh__WEBPACK_IMPORTED_MODULE_132__.sinhConfig,\n    _kernels_Slice__WEBPACK_IMPORTED_MODULE_133__.sliceConfig,\n    _kernels_Softmax__WEBPACK_IMPORTED_MODULE_134__.softmaxConfig,\n    _kernels_Softplus__WEBPACK_IMPORTED_MODULE_135__.softplusConfig,\n    _kernels_SpaceToBatchND__WEBPACK_IMPORTED_MODULE_136__.spaceToBatchNDConfig,\n    _kernels_SparseFillEmptyRows__WEBPACK_IMPORTED_MODULE_137__.sparseFillEmptyRowsConfig,\n    _kernels_SparseReshape__WEBPACK_IMPORTED_MODULE_138__.sparseReshapeConfig,\n    _kernels_SparseSegmentMean__WEBPACK_IMPORTED_MODULE_139__.sparseSegmentMeanConfig,\n    _kernels_SparseSegmentSum__WEBPACK_IMPORTED_MODULE_140__.sparseSegmentSumConfig,\n    _kernels_SparseToDense__WEBPACK_IMPORTED_MODULE_141__.sparseToDenseConfig,\n    _kernels_SplitV__WEBPACK_IMPORTED_MODULE_142__.splitVConfig,\n    _kernels_Sqrt__WEBPACK_IMPORTED_MODULE_143__.sqrtConfig,\n    _kernels_Square__WEBPACK_IMPORTED_MODULE_144__.squareConfig,\n    _kernels_SquaredDifference__WEBPACK_IMPORTED_MODULE_145__.squaredDifferenceConfig,\n    _kernels_Step__WEBPACK_IMPORTED_MODULE_146__.stepConfig,\n    _kernels_StridedSlice__WEBPACK_IMPORTED_MODULE_147__.stridedSliceConfig,\n    _kernels_StringNGrams__WEBPACK_IMPORTED_MODULE_148__.stringNGramsConfig,\n    _kernels_StringSplit__WEBPACK_IMPORTED_MODULE_149__.stringSplitConfig,\n    _kernels_StringToHashBucketFast__WEBPACK_IMPORTED_MODULE_150__.stringToHashBucketFastConfig,\n    _kernels_Sub__WEBPACK_IMPORTED_MODULE_151__.subConfig,\n    _kernels_Sum__WEBPACK_IMPORTED_MODULE_152__.sumConfig,\n    _kernels_Tan__WEBPACK_IMPORTED_MODULE_153__.tanConfig,\n    _kernels_Tanh__WEBPACK_IMPORTED_MODULE_154__.tanhConfig,\n    _kernels_Tile__WEBPACK_IMPORTED_MODULE_155__.tileConfig,\n    _kernels_TopK__WEBPACK_IMPORTED_MODULE_156__.topKConfig,\n    _kernels_Transpose__WEBPACK_IMPORTED_MODULE_157__.transposeConfig,\n    _kernels_Transform__WEBPACK_IMPORTED_MODULE_158__.transformConfig,\n    _kernels_Unique__WEBPACK_IMPORTED_MODULE_159__.uniqueConfig,\n    _kernels_Unpack__WEBPACK_IMPORTED_MODULE_160__.unpackConfig,\n    _kernels_UnsortedSegmentSum__WEBPACK_IMPORTED_MODULE_161__.unsortedSegmentSumConfig,\n    _kernels_ZerosLike__WEBPACK_IMPORTED_MODULE_162__.zerosLikeConfig\n];\nfor (const kernelConfig of kernelConfigs) {\n    (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.registerKernel)(kernelConfig);\n}\n//# sourceMappingURL=register_all_kernels.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/register_all_kernels.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/shared.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/shared.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"simpleAbsImpl\": () => (/* reexport safe */ _kernels_Abs__WEBPACK_IMPORTED_MODULE_0__.simpleAbsImpl),\n/* harmony export */   \"addImpl\": () => (/* reexport safe */ _kernels_Add__WEBPACK_IMPORTED_MODULE_1__.addImpl),\n/* harmony export */   \"bincountImpl\": () => (/* reexport safe */ _kernels_Bincount_impl__WEBPACK_IMPORTED_MODULE_2__.bincountImpl),\n/* harmony export */   \"bincountReduceImpl\": () => (/* reexport safe */ _kernels_Bincount_impl__WEBPACK_IMPORTED_MODULE_2__.bincountReduceImpl),\n/* harmony export */   \"ceilImpl\": () => (/* reexport safe */ _kernels_Ceil__WEBPACK_IMPORTED_MODULE_3__.ceilImpl),\n/* harmony export */   \"concatImpl\": () => (/* reexport safe */ _kernels_Concat_impl__WEBPACK_IMPORTED_MODULE_4__.concatImpl),\n/* harmony export */   \"equalImpl\": () => (/* reexport safe */ _kernels_Equal__WEBPACK_IMPORTED_MODULE_5__.equalImpl),\n/* harmony export */   \"expImpl\": () => (/* reexport safe */ _kernels_Exp__WEBPACK_IMPORTED_MODULE_6__.expImpl),\n/* harmony export */   \"expm1Impl\": () => (/* reexport safe */ _kernels_Expm1__WEBPACK_IMPORTED_MODULE_7__.expm1Impl),\n/* harmony export */   \"floorImpl\": () => (/* reexport safe */ _kernels_Floor__WEBPACK_IMPORTED_MODULE_8__.floorImpl),\n/* harmony export */   \"gatherNdImpl\": () => (/* reexport safe */ _kernels_GatherNd_Impl__WEBPACK_IMPORTED_MODULE_9__.gatherNdImpl),\n/* harmony export */   \"gatherV2Impl\": () => (/* reexport safe */ _kernels_GatherV2_impl__WEBPACK_IMPORTED_MODULE_10__.gatherV2Impl),\n/* harmony export */   \"greaterImpl\": () => (/* reexport safe */ _kernels_Greater__WEBPACK_IMPORTED_MODULE_11__.greaterImpl),\n/* harmony export */   \"greaterEqualImpl\": () => (/* reexport safe */ _kernels_GreaterEqual__WEBPACK_IMPORTED_MODULE_12__.greaterEqualImpl),\n/* harmony export */   \"lessImpl\": () => (/* reexport safe */ _kernels_Less__WEBPACK_IMPORTED_MODULE_13__.lessImpl),\n/* harmony export */   \"lessEqualImpl\": () => (/* reexport safe */ _kernels_LessEqual__WEBPACK_IMPORTED_MODULE_14__.lessEqualImpl),\n/* harmony export */   \"linSpaceImpl\": () => (/* reexport safe */ _kernels_LinSpace_impl__WEBPACK_IMPORTED_MODULE_15__.linSpaceImpl),\n/* harmony export */   \"logImpl\": () => (/* reexport safe */ _kernels_Log__WEBPACK_IMPORTED_MODULE_16__.logImpl),\n/* harmony export */   \"maxImpl\": () => (/* reexport safe */ _kernels_Max_impl__WEBPACK_IMPORTED_MODULE_17__.maxImpl),\n/* harmony export */   \"maximumImpl\": () => (/* reexport safe */ _kernels_Maximum__WEBPACK_IMPORTED_MODULE_18__.maximumImpl),\n/* harmony export */   \"minimumImpl\": () => (/* reexport safe */ _kernels_Minimum__WEBPACK_IMPORTED_MODULE_19__.minimumImpl),\n/* harmony export */   \"multiplyImpl\": () => (/* reexport safe */ _kernels_Multiply__WEBPACK_IMPORTED_MODULE_20__.multiplyImpl),\n/* harmony export */   \"negImpl\": () => (/* reexport safe */ _kernels_Neg__WEBPACK_IMPORTED_MODULE_21__.negImpl),\n/* harmony export */   \"notEqualImpl\": () => (/* reexport safe */ _kernels_NotEqual__WEBPACK_IMPORTED_MODULE_22__.notEqualImpl),\n/* harmony export */   \"prodImpl\": () => (/* reexport safe */ _kernels_Prod__WEBPACK_IMPORTED_MODULE_23__.prodImpl),\n/* harmony export */   \"rangeImpl\": () => (/* reexport safe */ _kernels_Range_impl__WEBPACK_IMPORTED_MODULE_24__.rangeImpl),\n/* harmony export */   \"rsqrtImpl\": () => (/* reexport safe */ _kernels_Rsqrt__WEBPACK_IMPORTED_MODULE_25__.rsqrtImpl),\n/* harmony export */   \"sliceImpl\": () => (/* reexport safe */ _kernels_Slice__WEBPACK_IMPORTED_MODULE_26__.sliceImpl),\n/* harmony export */   \"sparseFillEmptyRowsImpl\": () => (/* reexport safe */ _kernels_SparseFillEmptyRows_impl__WEBPACK_IMPORTED_MODULE_27__.sparseFillEmptyRowsImpl),\n/* harmony export */   \"sparseReshapeImpl\": () => (/* reexport safe */ _kernels_SparseReshape_impl__WEBPACK_IMPORTED_MODULE_28__.sparseReshapeImpl),\n/* harmony export */   \"sparseSegmentReductionImpl\": () => (/* reexport safe */ _kernels_SparseSegmentReduction_impl__WEBPACK_IMPORTED_MODULE_29__.sparseSegmentReductionImpl),\n/* harmony export */   \"squaredDifferenceImpl\": () => (/* reexport safe */ _kernels_SquaredDifference__WEBPACK_IMPORTED_MODULE_30__.squaredDifferenceImpl),\n/* harmony export */   \"stridedSliceImpl\": () => (/* reexport safe */ _kernels_StridedSlice_impl__WEBPACK_IMPORTED_MODULE_31__.stridedSliceImpl),\n/* harmony export */   \"stringNGramsImpl\": () => (/* reexport safe */ _kernels_StringNGrams_impl__WEBPACK_IMPORTED_MODULE_32__.stringNGramsImpl),\n/* harmony export */   \"stringSplitImpl\": () => (/* reexport safe */ _kernels_StringSplit_impl__WEBPACK_IMPORTED_MODULE_33__.stringSplitImpl),\n/* harmony export */   \"stringToHashBucketFastImpl\": () => (/* reexport safe */ _kernels_StringToHashBucketFast_impl__WEBPACK_IMPORTED_MODULE_34__.stringToHashBucketFastImpl),\n/* harmony export */   \"subImpl\": () => (/* reexport safe */ _kernels_Sub__WEBPACK_IMPORTED_MODULE_35__.subImpl),\n/* harmony export */   \"tileImpl\": () => (/* reexport safe */ _kernels_Tile_impl__WEBPACK_IMPORTED_MODULE_36__.tileImpl),\n/* harmony export */   \"topKImpl\": () => (/* reexport safe */ _kernels_TopK_impl__WEBPACK_IMPORTED_MODULE_37__.topKImpl),\n/* harmony export */   \"transposeImpl\": () => (/* reexport safe */ _kernels_Transpose_impl__WEBPACK_IMPORTED_MODULE_38__.transposeImpl),\n/* harmony export */   \"uniqueImpl\": () => (/* reexport safe */ _kernels_Unique_impl__WEBPACK_IMPORTED_MODULE_39__.uniqueImpl)\n/* harmony export */ });\n/* harmony import */ var _kernels_Abs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kernels/Abs */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js\");\n/* harmony import */ var _kernels_Add__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kernels/Add */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js\");\n/* harmony import */ var _kernels_Bincount_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kernels/Bincount_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js\");\n/* harmony import */ var _kernels_Ceil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kernels/Ceil */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js\");\n/* harmony import */ var _kernels_Concat_impl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kernels/Concat_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js\");\n/* harmony import */ var _kernels_Equal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kernels/Equal */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Equal.js\");\n/* harmony import */ var _kernels_Exp__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./kernels/Exp */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js\");\n/* harmony import */ var _kernels_Expm1__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./kernels/Expm1 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js\");\n/* harmony import */ var _kernels_Floor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./kernels/Floor */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js\");\n/* harmony import */ var _kernels_GatherNd_Impl__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./kernels/GatherNd_Impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd_Impl.js\");\n/* harmony import */ var _kernels_GatherV2_impl__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./kernels/GatherV2_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js\");\n/* harmony import */ var _kernels_Greater__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./kernels/Greater */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js\");\n/* harmony import */ var _kernels_GreaterEqual__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./kernels/GreaterEqual */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GreaterEqual.js\");\n/* harmony import */ var _kernels_Less__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./kernels/Less */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js\");\n/* harmony import */ var _kernels_LessEqual__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./kernels/LessEqual */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LessEqual.js\");\n/* harmony import */ var _kernels_LinSpace_impl__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./kernels/LinSpace_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js\");\n/* harmony import */ var _kernels_Log__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./kernels/Log */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js\");\n/* harmony import */ var _kernels_Max_impl__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./kernels/Max_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js\");\n/* harmony import */ var _kernels_Maximum__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./kernels/Maximum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js\");\n/* harmony import */ var _kernels_Minimum__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./kernels/Minimum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js\");\n/* harmony import */ var _kernels_Multiply__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./kernels/Multiply */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js\");\n/* harmony import */ var _kernels_Neg__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./kernels/Neg */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js\");\n/* harmony import */ var _kernels_NotEqual__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./kernels/NotEqual */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js\");\n/* harmony import */ var _kernels_Prod__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./kernels/Prod */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js\");\n/* harmony import */ var _kernels_Range_impl__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./kernels/Range_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js\");\n/* harmony import */ var _kernels_Rsqrt__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./kernels/Rsqrt */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js\");\n/* harmony import */ var _kernels_Slice__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./kernels/Slice */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js\");\n/* harmony import */ var _kernels_SparseFillEmptyRows_impl__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./kernels/SparseFillEmptyRows_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseFillEmptyRows_impl.js\");\n/* harmony import */ var _kernels_SparseReshape_impl__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./kernels/SparseReshape_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseReshape_impl.js\");\n/* harmony import */ var _kernels_SparseSegmentReduction_impl__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./kernels/SparseSegmentReduction_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseSegmentReduction_impl.js\");\n/* harmony import */ var _kernels_SquaredDifference__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./kernels/SquaredDifference */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js\");\n/* harmony import */ var _kernels_StridedSlice_impl__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./kernels/StridedSlice_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js\");\n/* harmony import */ var _kernels_StringNGrams_impl__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./kernels/StringNGrams_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringNGrams_impl.js\");\n/* harmony import */ var _kernels_StringSplit_impl__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./kernels/StringSplit_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringSplit_impl.js\");\n/* harmony import */ var _kernels_StringToHashBucketFast_impl__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./kernels/StringToHashBucketFast_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringToHashBucketFast_impl.js\");\n/* harmony import */ var _kernels_Sub__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./kernels/Sub */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js\");\n/* harmony import */ var _kernels_Tile_impl__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./kernels/Tile_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js\");\n/* harmony import */ var _kernels_TopK_impl__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./kernels/TopK_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js\");\n/* harmony import */ var _kernels_Transpose_impl__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./kernels/Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js\");\n/* harmony import */ var _kernels_Unique_impl__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./kernels/Unique_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Shared functionality among backends.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=shared.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/shared.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSimpleBinaryKernelImpl\": () => (/* binding */ createSimpleBinaryKernelImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Template that creates implementation for binary ops. Supports broadcast.\n */\nfunction createSimpleBinaryKernelImpl(op) {\n    return (aShape, bShape, aVals, bVals, dtype) => {\n        const newShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        const resultRank = newShape.length;\n        const resultStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(newShape);\n        const resultSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(newShape);\n        const result = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(dtype, resultSize);\n        const aRank = aShape.length;\n        const bRank = bShape.length;\n        const aStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(aShape);\n        const bStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(bShape);\n        const aBroadcastDims = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getBroadcastDims(aShape, newShape);\n        const bBroadcastDims = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getBroadcastDims(bShape, newShape);\n        if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n            for (let i = 0; i < result.length; ++i) {\n                result[i] = op(aVals[i % aVals.length], bVals[i % bVals.length]);\n            }\n        }\n        else {\n            for (let i = 0; i < result.length; ++i) {\n                const loc = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.indexToLoc(i, resultRank, resultStrides);\n                const aLoc = loc.slice(-aRank);\n                aBroadcastDims.forEach(d => aLoc[d] = 0);\n                const aIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(aLoc, aRank, aStrides);\n                const bLoc = loc.slice(-bRank);\n                bBroadcastDims.forEach(d => bLoc[d] = 0);\n                const bIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(bLoc, bRank, bStrides);\n                result[i] = op(aVals[aIndex], bVals[bIndex]);\n            }\n        }\n        return [result, newShape];\n    };\n}\n//# sourceMappingURL=binary_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"binaryKernelFunc\": () => (/* binding */ binaryKernelFunc),\n/* harmony export */   \"createComplexBinaryKernelImpl\": () => (/* binding */ createComplexBinaryKernelImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _kernels_Cast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernels/Cast */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js\");\n/* harmony import */ var _kernels_Complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernels/Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Template that creates a `KernelFunc` for binary ops.\n * @param name Kernel name.\n * @param binaryKernelImpl A `SimpleBinaryKernelImpl` for the kernel.\n * @param binaryKernelComplexImpl Optional. If exists, represents a\n *     `ComplexBinaryKernelImpl` for the kernel, will be used when input dtype\n *     is `complex64`.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\nfunction binaryKernelFunc(name, simpleImpl, complexImpl, dtype) {\n    if (complexImpl == null) {\n        return ({ inputs, backend }) => {\n            const { a, b } = inputs;\n            const cpuBackend = backend;\n            (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([a, b], name);\n            const aVals = cpuBackend.data.get(a.dataId).values;\n            const bVals = cpuBackend.data.get(b.dataId).values;\n            const decodedAVals = a.dtype === 'string' ?\n                // tslint:disable-next-line: no-any\n                _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.fromUint8ToStringArray(aVals) :\n                aVals;\n            const decodedBVals = a.dtype === 'string' ?\n                // tslint:disable-next-line: no-any\n                _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.fromUint8ToStringArray(bVals) :\n                bVals;\n            const $dtype = dtype || a.dtype;\n            const [resultData, resultShape] = simpleImpl(a.shape, b.shape, decodedAVals, decodedBVals, $dtype);\n            return cpuBackend.makeTensorInfo(resultShape, $dtype, resultData);\n        };\n    }\n    return ({ inputs, backend }) => {\n        const { a, b } = inputs;\n        const cpuBackend = backend;\n        if (a.dtype === 'complex64' || b.dtype === 'complex64') {\n            const $aComplex = (0,_kernels_Cast__WEBPACK_IMPORTED_MODULE_2__.cast)({ inputs: { x: a }, backend: cpuBackend, attrs: { dtype: 'complex64' } });\n            const $aComplexVals = cpuBackend.data.get($aComplex.dataId);\n            const aReal = $aComplexVals.complexTensorInfos.real;\n            const aImag = $aComplexVals.complexTensorInfos.imag;\n            const aRealVals = cpuBackend.data.get(aReal.dataId).values;\n            const aImagVals = cpuBackend.data.get(aImag.dataId).values;\n            const $bComplex = (0,_kernels_Cast__WEBPACK_IMPORTED_MODULE_2__.cast)({ inputs: { x: b }, backend: cpuBackend, attrs: { dtype: 'complex64' } });\n            const $bComplexVals = cpuBackend.data.get($bComplex.dataId);\n            const bReal = $bComplexVals.complexTensorInfos.real;\n            const bImag = $bComplexVals.complexTensorInfos.imag;\n            const bRealVals = cpuBackend.data.get(bReal.dataId).values;\n            const bImagVals = cpuBackend.data.get(bImag.dataId).values;\n            const [resultRealData, resultImagData, resultShape] = complexImpl(a.shape, b.shape, aRealVals, aImagVals, bRealVals, bImagVals);\n            const resultReal = cpuBackend.makeTensorInfo(resultShape, 'float32', resultRealData);\n            const resultImag = cpuBackend.makeTensorInfo(resultShape, 'float32', resultImagData);\n            const result = (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_3__.complex)({ inputs: { real: resultReal, imag: resultImag }, backend: cpuBackend });\n            cpuBackend.disposeIntermediateTensorInfo($aComplex);\n            cpuBackend.disposeIntermediateTensorInfo($bComplex);\n            cpuBackend.disposeIntermediateTensorInfo(resultReal);\n            cpuBackend.disposeIntermediateTensorInfo(resultImag);\n            return result;\n        }\n        else {\n            const aVals = cpuBackend.data.get(a.dataId).values;\n            const bVals = cpuBackend.data.get(b.dataId).values;\n            const $dtype = dtype || a.dtype;\n            const [resultData, resultShape] = simpleImpl(a.shape, b.shape, aVals, bVals, $dtype);\n            return cpuBackend.makeTensorInfo(resultShape, $dtype, resultData);\n        }\n    };\n}\n/**\n * Template that creates the complex type implementation for binary ops.\n * Supports broadcast.\n */\nfunction createComplexBinaryKernelImpl(op) {\n    return (aShape, bShape, aRealVals, aImagVals, bRealVals, bImagVals) => {\n        const resultShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        const resultSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(resultShape);\n        const resultRank = resultShape.length;\n        const resultStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(resultShape);\n        const resultRealVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType('float32', resultSize);\n        const resultImagVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType('float32', resultSize);\n        const aBroadcastDims = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getBroadcastDims(aShape, resultShape);\n        const bBroadcastDims = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getBroadcastDims(bShape, resultShape);\n        const aVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.mergeRealAndImagArrays(aRealVals, aImagVals);\n        const bVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.mergeRealAndImagArrays(bRealVals, bImagVals);\n        const aRank = aShape.length;\n        const aStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(aShape);\n        const bRank = bShape.length;\n        const bStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(bShape);\n        if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n            for (let i = 0; i < resultRealVals.length; i++) {\n                const aIdx = i % aVals.length;\n                const bIdx = i % bVals.length;\n                const result = op(aVals[aIdx * 2], aVals[aIdx * 2 + 1], bVals[bIdx * 2], bVals[bIdx * 2 + 1]);\n                resultRealVals[i] = result.real;\n                resultImagVals[i] = result.imag;\n            }\n        }\n        else {\n            for (let i = 0; i < resultRealVals.length; i++) {\n                const loc = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.indexToLoc(i, resultRank, resultStrides);\n                const aLoc = loc.slice(-aRank);\n                aBroadcastDims.forEach(d => aLoc[d] = 0);\n                const aIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(aLoc, aRank, aStrides);\n                const bLoc = loc.slice(-bRank);\n                bBroadcastDims.forEach(d => bLoc[d] = 0);\n                const bIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(bLoc, bRank, bStrides);\n                const opResult = op(aVals[aIndex * 2], aVals[aIndex * 2 + 1], bVals[bIndex * 2], bVals[bIndex * 2 + 1]);\n                resultRealVals[i] = opResult.real;\n                resultImagVals[i] = opResult.imag;\n            }\n        }\n        return [resultRealVals, resultImagVals, resultShape];\n    };\n}\n//# sourceMappingURL=binary_utils.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fft_utils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fft_utils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fftBatch\": () => (/* binding */ fftBatch),\n/* harmony export */   \"fftImpl\": () => (/* binding */ fftImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernels_Add__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../kernels/Add */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js\");\n/* harmony import */ var _kernels_Complex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernels/Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/* harmony import */ var _kernels_Concat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../kernels/Concat */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat.js\");\n/* harmony import */ var _kernels_Identity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernels/Identity */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js\");\n/* harmony import */ var _kernels_Imag__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../kernels/Imag */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Imag.js\");\n/* harmony import */ var _kernels_Multiply__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernels/Multiply */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js\");\n/* harmony import */ var _kernels_Real__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../kernels/Real */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js\");\n/* harmony import */ var _kernels_RealDiv__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernels/RealDiv */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RealDiv.js\");\n/* harmony import */ var _kernels_Slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernels/Slice */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js\");\n/* harmony import */ var _kernels_Sub__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../kernels/Sub */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Calculate FFT of inner most elements of batch tensor.\n */\nfunction fftBatch(input, inverse, cpuBackend) {\n    const inputShape = input.shape;\n    const batch = inputShape[0];\n    const innerDim = inputShape[1];\n    const inputVals = cpuBackend.data.get(input.dataId);\n    const real2D = inputVals.complexTensorInfos.real;\n    const imag2D = inputVals.complexTensorInfos.imag;\n    // Collects real and imaginary values separately.\n    const resultShape = [batch, innerDim];\n    const resultSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(resultShape);\n    const resultReal = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType('float32', resultSize);\n    const resultImag = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType('float32', resultSize);\n    for (let b = 0; b < batch; b++) {\n        // TODO: Support slice ops for complex type.\n        const r = (0,_kernels_Slice__WEBPACK_IMPORTED_MODULE_1__.slice)({\n            inputs: { x: real2D },\n            backend: cpuBackend,\n            attrs: { begin: [b, 0], size: [1, innerDim] }\n        });\n        const i = (0,_kernels_Slice__WEBPACK_IMPORTED_MODULE_1__.slice)({\n            inputs: { x: imag2D },\n            backend: cpuBackend,\n            attrs: { begin: [b, 0], size: [1, innerDim] }\n        });\n        const input = (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_2__.complex)({ inputs: { real: r, imag: i }, backend: cpuBackend });\n        // Run FFT by batch element.\n        const { real, imag } = fftImpl(input, inverse, cpuBackend);\n        const res = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.mergeRealAndImagArrays(real, imag);\n        for (let d = 0; d < innerDim; d++) {\n            const c = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getComplexWithIndex(res, d);\n            resultReal[b * innerDim + d] = c.real;\n            resultImag[b * innerDim + d] = c.imag;\n        }\n        cpuBackend.disposeIntermediateTensorInfo(r);\n        cpuBackend.disposeIntermediateTensorInfo(i);\n        cpuBackend.disposeIntermediateTensorInfo(input);\n    }\n    const $realInfo = cpuBackend.makeTensorInfo(resultShape, 'float32', resultReal);\n    const $imagInfo = cpuBackend.makeTensorInfo(resultShape, 'float32', resultImag);\n    const result = (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_2__.complex)({ inputs: { real: $realInfo, imag: $imagInfo }, backend: cpuBackend });\n    cpuBackend.disposeIntermediateTensorInfo($realInfo);\n    cpuBackend.disposeIntermediateTensorInfo($imagInfo);\n    return result;\n}\nfunction fftImpl(input, inverse, cpuBackend) {\n    const inputSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(input.shape);\n    const inputVals = cpuBackend.data.get(input.dataId);\n    const realVals = cpuBackend.data.get(inputVals.complexTensorInfos.real.dataId).values;\n    const imagVals = cpuBackend.data.get(inputVals.complexTensorInfos.imag.dataId).values;\n    if (isExponentOf2(inputSize)) {\n        const result = fftRadix2(realVals, imagVals, inputSize, inverse, cpuBackend);\n        const resultShape = [input.shape[0], input.shape[1]];\n        if (inverse) {\n            const realInfo = cpuBackend.makeTensorInfo(resultShape, 'float32', result.real);\n            const imagInfo = cpuBackend.makeTensorInfo(resultShape, 'float32', result.imag);\n            const sizeInfo = cpuBackend.makeTensorInfo([], 'float32', _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.createScalarValue(inputSize, 'float32'));\n            const sizeInfoCopy = (0,_kernels_Identity__WEBPACK_IMPORTED_MODULE_3__.identity)({ inputs: { x: sizeInfo }, backend: cpuBackend });\n            const divRealInfo = _kernels_RealDiv__WEBPACK_IMPORTED_MODULE_4__.realDivConfig.kernelFunc({ inputs: { a: realInfo, b: sizeInfo }, backend: cpuBackend });\n            const divImagInfo = _kernels_RealDiv__WEBPACK_IMPORTED_MODULE_4__.realDivConfig.kernelFunc({ inputs: { a: imagInfo, b: sizeInfoCopy }, backend: cpuBackend });\n            const divRealVals = cpuBackend.data.get(divRealInfo.dataId).values;\n            const divImagVals = cpuBackend.data.get(divImagInfo.dataId).values;\n            cpuBackend.disposeIntermediateTensorInfo(realInfo);\n            cpuBackend.disposeIntermediateTensorInfo(imagInfo);\n            cpuBackend.disposeIntermediateTensorInfo(sizeInfo);\n            cpuBackend.disposeIntermediateTensorInfo(sizeInfoCopy);\n            cpuBackend.disposeIntermediateTensorInfo(divRealInfo);\n            cpuBackend.disposeIntermediateTensorInfo(divImagInfo);\n            return { real: divRealVals, imag: divImagVals };\n        }\n        return result;\n    }\n    else {\n        const data = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.mergeRealAndImagArrays(realVals, imagVals);\n        const rawOutput = fourierTransformByMatmul(data, inputSize, inverse);\n        return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.splitRealAndImagArrays(rawOutput);\n    }\n}\nfunction isExponentOf2(size) {\n    return (size & size - 1) === 0;\n}\n// FFT using Cooley-Tukey algorithm on radix 2 dimensional input.\nfunction fftRadix2(realVals, imagVals, size, inverse, cpuBackend) {\n    if (size === 1) {\n        return { real: realVals, imag: imagVals };\n    }\n    const data = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.mergeRealAndImagArrays(realVals, imagVals);\n    const half = size / 2;\n    const evenComplex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.complexWithEvenIndex(data);\n    const evenRealVals = evenComplex.real;\n    const evenImagVals = evenComplex.imag;\n    const evenShape = [evenRealVals.length];\n    const evenRealInfo = cpuBackend.makeTensorInfo(evenShape, 'float32', evenRealVals);\n    const evenImagInfo = cpuBackend.makeTensorInfo(evenShape, 'float32', evenImagVals);\n    const evenTensorInfo = (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_2__.complex)({ inputs: { real: evenRealInfo, imag: evenImagInfo }, backend: cpuBackend });\n    const oddComplex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.complexWithOddIndex(data);\n    const oddRealVals = oddComplex.real;\n    const oddImagVals = oddComplex.imag;\n    const oddShape = [oddRealVals.length];\n    const oddRealInfo = cpuBackend.makeTensorInfo(oddShape, 'float32', oddRealVals);\n    const oddImagInfo = cpuBackend.makeTensorInfo(oddShape, 'float32', oddImagVals);\n    const oddTensorInfo = (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_2__.complex)({ inputs: { real: oddRealInfo, imag: oddImagInfo }, backend: cpuBackend });\n    // Recursive call for half part of original input.\n    const $evenComplex = fftRadix2(evenRealVals, evenImagVals, half, inverse, cpuBackend);\n    const $evenRealVals = $evenComplex.real;\n    const $evenImagVals = $evenComplex.imag;\n    const $evenShape = [$evenRealVals.length];\n    const $evenRealInfo = cpuBackend.makeTensorInfo($evenShape, 'float32', $evenRealVals);\n    const $evenImagInfo = cpuBackend.makeTensorInfo($evenShape, 'float32', $evenImagVals);\n    const $evenTensorInfo = (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_2__.complex)({\n        inputs: { real: $evenRealInfo, imag: $evenImagInfo },\n        backend: cpuBackend\n    });\n    const $oddComplex = fftRadix2(oddRealVals, oddImagVals, half, inverse, cpuBackend);\n    const $oddRealVals = $oddComplex.real;\n    const $oddImagVals = $oddComplex.imag;\n    const $oddShape = [$oddRealVals.length];\n    const $oddRealInfo = cpuBackend.makeTensorInfo($oddShape, 'float32', $oddRealVals);\n    const $oddImagInfo = cpuBackend.makeTensorInfo($oddShape, 'float32', $oddImagVals);\n    const $oddTensorInfo = (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_2__.complex)({ inputs: { real: $oddRealInfo, imag: $oddImagInfo }, backend: cpuBackend });\n    const e = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.exponents(size, inverse);\n    const eShape = [e.real.length];\n    const eRealInfo = cpuBackend.makeTensorInfo(eShape, 'float32', e.real);\n    const eImagInfo = cpuBackend.makeTensorInfo(eShape, 'float32', e.imag);\n    const complexInfo = (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_2__.complex)({ inputs: { real: eRealInfo, imag: eImagInfo }, backend: cpuBackend });\n    const exponentInfo = (0,_kernels_Multiply__WEBPACK_IMPORTED_MODULE_5__.multiply)({ inputs: { a: complexInfo, b: $oddTensorInfo }, backend: cpuBackend });\n    const addPart = (0,_kernels_Add__WEBPACK_IMPORTED_MODULE_6__.add)({\n        inputs: { a: $evenTensorInfo, b: exponentInfo },\n        backend: cpuBackend\n    });\n    const subPart = (0,_kernels_Sub__WEBPACK_IMPORTED_MODULE_7__.sub)({\n        inputs: { a: $evenTensorInfo, b: exponentInfo },\n        backend: cpuBackend\n    });\n    const addPartReal = (0,_kernels_Real__WEBPACK_IMPORTED_MODULE_8__.real)({ inputs: { input: addPart }, backend: cpuBackend });\n    const subPartReal = (0,_kernels_Real__WEBPACK_IMPORTED_MODULE_8__.real)({ inputs: { input: subPart }, backend: cpuBackend });\n    const addPartImag = (0,_kernels_Imag__WEBPACK_IMPORTED_MODULE_9__.imag)({ inputs: { input: addPart }, backend: cpuBackend });\n    const subPartImag = (0,_kernels_Imag__WEBPACK_IMPORTED_MODULE_9__.imag)({ inputs: { input: subPart }, backend: cpuBackend });\n    const $real = (0,_kernels_Concat__WEBPACK_IMPORTED_MODULE_10__.concat)({\n        inputs: [addPartReal, subPartReal],\n        backend: cpuBackend,\n        attrs: { axis: 0 }\n    });\n    const $imag = (0,_kernels_Concat__WEBPACK_IMPORTED_MODULE_10__.concat)({\n        inputs: [addPartImag, subPartImag],\n        backend: cpuBackend,\n        attrs: { axis: 0 }\n    });\n    const $realVals = cpuBackend.data.get($real.dataId).values;\n    const $imagVals = cpuBackend.data.get($imag.dataId).values;\n    cpuBackend.disposeIntermediateTensorInfo(evenRealInfo);\n    cpuBackend.disposeIntermediateTensorInfo(evenImagInfo);\n    cpuBackend.disposeIntermediateTensorInfo(evenTensorInfo);\n    cpuBackend.disposeIntermediateTensorInfo(oddRealInfo);\n    cpuBackend.disposeIntermediateTensorInfo(oddImagInfo);\n    cpuBackend.disposeIntermediateTensorInfo(oddTensorInfo);\n    cpuBackend.disposeIntermediateTensorInfo($evenRealInfo);\n    cpuBackend.disposeIntermediateTensorInfo($evenImagInfo);\n    cpuBackend.disposeIntermediateTensorInfo($evenTensorInfo);\n    cpuBackend.disposeIntermediateTensorInfo($oddRealInfo);\n    cpuBackend.disposeIntermediateTensorInfo($oddImagInfo);\n    cpuBackend.disposeIntermediateTensorInfo($oddTensorInfo);\n    cpuBackend.disposeIntermediateTensorInfo(eRealInfo);\n    cpuBackend.disposeIntermediateTensorInfo(eImagInfo);\n    cpuBackend.disposeIntermediateTensorInfo(complexInfo);\n    cpuBackend.disposeIntermediateTensorInfo(exponentInfo);\n    cpuBackend.disposeIntermediateTensorInfo(addPart);\n    cpuBackend.disposeIntermediateTensorInfo(subPart);\n    cpuBackend.disposeIntermediateTensorInfo(addPartReal);\n    cpuBackend.disposeIntermediateTensorInfo(addPartImag);\n    cpuBackend.disposeIntermediateTensorInfo(subPartReal);\n    cpuBackend.disposeIntermediateTensorInfo(subPartImag);\n    cpuBackend.disposeIntermediateTensorInfo($real);\n    cpuBackend.disposeIntermediateTensorInfo($imag);\n    return { real: $realVals, imag: $imagVals };\n}\n// Calculate fourier transform by multplying sinusoid matrix.\nfunction fourierTransformByMatmul(data, size, inverse) {\n    const ret = new Float32Array(size * 2);\n    // TODO: Use matmul instead once it supports complex64 type.\n    for (let r = 0; r < size; r++) {\n        let real = 0.0;\n        let imag = 0.0;\n        for (let c = 0; c < size; c++) {\n            const e = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.exponent(r * c, size, inverse);\n            const term = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getComplexWithIndex(data, c);\n            real += term.real * e.real - term.imag * e.imag;\n            imag += term.real * e.imag + term.imag * e.real;\n        }\n        if (inverse) {\n            real /= size;\n            imag /= size;\n        }\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assignToTypedArray(ret, real, imag, r);\n    }\n    return ret;\n}\n//# sourceMappingURL=fft_utils.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fft_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fused_utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fused_utils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyActivation\": () => (/* binding */ applyActivation)\n/* harmony export */ });\n/* harmony import */ var _kernels_Elu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernels/Elu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Elu.js\");\n/* harmony import */ var _kernels_Identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kernels/Identity */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js\");\n/* harmony import */ var _kernels_LeakyRelu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernels/LeakyRelu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LeakyRelu.js\");\n/* harmony import */ var _kernels_Prelu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernels/Prelu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prelu.js\");\n/* harmony import */ var _kernels_Relu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernels/Relu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu.js\");\n/* harmony import */ var _kernels_Relu6__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernels/Relu6 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu6.js\");\n/* harmony import */ var _kernels_Sigmoid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../kernels/Sigmoid */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sigmoid.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\nfunction applyActivation(backend, x, activation, preluActivationWeights, leakyreluAlpha) {\n    if (activation === 'linear') {\n        return (0,_kernels_Identity__WEBPACK_IMPORTED_MODULE_0__.identity)({ inputs: { x }, backend });\n    }\n    else if (activation === 'relu') {\n        return (0,_kernels_Relu__WEBPACK_IMPORTED_MODULE_1__.relu)({ inputs: { x }, backend });\n    }\n    else if (activation === 'elu') {\n        return (0,_kernels_Elu__WEBPACK_IMPORTED_MODULE_2__.elu)({ inputs: { x }, backend });\n    }\n    else if (activation === 'relu6') {\n        return (0,_kernels_Relu6__WEBPACK_IMPORTED_MODULE_3__.relu6)({ inputs: { x }, backend });\n    }\n    else if (activation === 'prelu') {\n        return (0,_kernels_Prelu__WEBPACK_IMPORTED_MODULE_4__.prelu)({ inputs: { x, alpha: preluActivationWeights }, backend });\n    }\n    else if (activation === 'leakyrelu') {\n        return (0,_kernels_LeakyRelu__WEBPACK_IMPORTED_MODULE_5__.leakyRelu)({ inputs: { x }, backend, attrs: { alpha: leakyreluAlpha } });\n    }\n    else if (activation === 'sigmoid') {\n        return (0,_kernels_Sigmoid__WEBPACK_IMPORTED_MODULE_6__.sigmoid)({ inputs: { x }, backend });\n    }\n    throw new Error(`Activation ${activation} has not been implemented for the CPU backend.`);\n}\n//# sourceMappingURL=fused_utils.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fused_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pool\": () => (/* binding */ pool),\n/* harmony export */   \"maxPoolPositions\": () => (/* binding */ maxPoolPositions),\n/* harmony export */   \"pool3d\": () => (/* binding */ pool3d),\n/* harmony export */   \"maxPool3dPositions\": () => (/* binding */ maxPool3dPositions)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction pool(xValues, xShape, dtype, strides, convInfo, poolType) {\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const initialValue = (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n        Number.POSITIVE_INFINITY);\n    const output = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(convInfo.outShape, dtype);\n    const outputVals = output.values;\n    const outputBatchStrides = convInfo.outShape[1] * convInfo.outShape[2] * convInfo.outShape[3];\n    const outputRowStrides = convInfo.outShape[2] * convInfo.outShape[3];\n    const outputColStrides = convInfo.outShape[3];\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n        const outputBatchOffset = b * outputBatchStrides;\n        const inputBatchOffset = b * strides[0];\n        for (let d = 0; d < convInfo.inChannels; ++d) {\n            for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n                const xRCorner = yR * strideHeight - padTop;\n                const xRMin = Math.max(0, xRCorner);\n                const xRMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRCorner);\n                const outputRowOffset = outputBatchOffset + yR * outputRowStrides;\n                for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n                    const xCCorner = yC * strideWidth - padLeft;\n                    const xCMin = Math.max(0, xCCorner);\n                    const xCMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xCCorner);\n                    let minMaxValue = initialValue;\n                    let avgValue = 0;\n                    let count = 0;\n                    for (let xR = xRMin; xR < xRMax; xR += dilationHeight) {\n                        const xROffset = inputBatchOffset + xR * strides[1];\n                        for (let xC = xCMin; xC < xCMax; xC += dilationWidth) {\n                            const xCOffset = xROffset + xC * strides[2];\n                            const pixel = xValues[xCOffset + d];\n                            if ((poolType === 'max' && pixel > minMaxValue)) {\n                                minMaxValue = pixel;\n                            }\n                            else if (poolType === 'avg') {\n                                avgValue += pixel;\n                                count++;\n                            }\n                        }\n                        if (isNaN(minMaxValue)) {\n                            break;\n                        }\n                    }\n                    const outputOffset = outputRowOffset + yC * outputColStrides + d;\n                    outputVals[outputOffset] =\n                        poolType === 'avg' ? avgValue / count : minMaxValue;\n                }\n            }\n        }\n    }\n    return output;\n}\nfunction maxPoolPositions(xValues, xShape, dtype, convInfo, flattenPositions = false, includeBatchInIndex = false) {\n    const maxPositions = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(convInfo.outShape, 'int32');\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const xBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(xShape, dtype, xValues);\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n        for (let d = 0; d < convInfo.inChannels; ++d) {\n            for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n                const xRCorner = yR * strideHeight - padTop;\n                let xRMin = xRCorner;\n                while (xRMin < 0) {\n                    xRMin += dilationHeight;\n                }\n                // const xRMin = Math.max(0, xRCorner);\n                const xRMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRCorner);\n                for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n                    const xCCorner = yC * strideWidth - padLeft;\n                    let xCMin = xCCorner;\n                    while (xCMin < 0) {\n                        xCMin += dilationWidth;\n                    }\n                    const xCMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xCCorner);\n                    let maxValue = Number.NEGATIVE_INFINITY;\n                    let maxPosition = -1;\n                    for (let xR = xRMin; xR < xRMax; xR += dilationHeight) {\n                        const wR = xR - xRCorner;\n                        for (let xC = xCMin; xC < xCMax; xC += dilationWidth) {\n                            const wC = xC - xCCorner;\n                            const pixel = xBuf.get(b, xR, xC, d);\n                            if (pixel > maxValue) {\n                                maxValue = pixel;\n                                if (flattenPositions) {\n                                    maxPosition = includeBatchInIndex ?\n                                        ((b * convInfo.inHeight + xR) * convInfo.inWidth + xC) *\n                                            convInfo.inChannels +\n                                            d :\n                                        (xR * convInfo.inWidth + xC) * convInfo.inChannels + d;\n                                }\n                                else {\n                                    maxPosition = wR * effectiveFilterWidth + wC;\n                                }\n                            }\n                        }\n                    }\n                    maxPositions.set(maxPosition, b, yR, yC, d);\n                }\n            }\n        }\n    }\n    return maxPositions;\n}\nfunction pool3d(xValues, xShape, dtype, strides, convInfo, poolType) {\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationDepth = convInfo.dilationDepth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padFront = convInfo.padInfo.front;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const initialValue = (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n        Number.POSITIVE_INFINITY);\n    const output = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(convInfo.outShape, dtype);\n    const outputVals = output.values;\n    const outputBatchStrides = convInfo.outShape[1] * convInfo.outShape[2] *\n        convInfo.outShape[3] * convInfo.outShape[4];\n    const outputDepthStrides = convInfo.outShape[2] * convInfo.outShape[3] * convInfo.outShape[4];\n    const outputRowStrides = convInfo.outShape[3] * convInfo.outShape[4];\n    const outputColStrides = convInfo.outShape[4];\n    for (let batch = 0; batch < convInfo.batchSize; ++batch) {\n        const outputBatchOffset = batch * outputBatchStrides;\n        const inputBatchOffset = batch * strides[0];\n        for (let channel = 0; channel < convInfo.inChannels; ++channel) {\n            for (let yDepth = 0; yDepth < convInfo.outDepth; ++yDepth) {\n                const xDepthCorner = yDepth * strideDepth - padFront;\n                let xDepthMin = xDepthCorner;\n                while (xDepthMin < 0) {\n                    xDepthMin += dilationDepth;\n                }\n                const xDepthMax = Math.min(convInfo.inDepth, effectiveFilterDepth + xDepthCorner);\n                const outputDepthOffset = outputBatchOffset + yDepth * outputDepthStrides;\n                for (let yRow = 0; yRow < convInfo.outHeight; ++yRow) {\n                    const xRowCorner = yRow * strideHeight - padTop;\n                    let xRowMin = xRowCorner;\n                    while (xRowMin < 0) {\n                        xRowMin += dilationHeight;\n                    }\n                    const xRowMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRowCorner);\n                    const outputRowOffset = outputDepthOffset + yRow * outputRowStrides;\n                    for (let yCol = 0; yCol < convInfo.outWidth; ++yCol) {\n                        const xColCorner = yCol * strideWidth - padLeft;\n                        let xColMin = xColCorner;\n                        while (xColMin < 0) {\n                            xColMin += dilationWidth;\n                        }\n                        const xColMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xColCorner);\n                        // Shader code begins\n                        const outputColOffset = outputRowOffset + yCol * outputColStrides;\n                        let minMaxValue = initialValue;\n                        let avgValue = 0;\n                        let count = 0;\n                        for (let xDepth = xDepthMin; xDepth < xDepthMax; xDepth += dilationDepth) {\n                            const xDepthOffset = inputBatchOffset + xDepth * strides[1];\n                            for (let xRow = xRowMin; xRow < xRowMax; xRow += dilationHeight) {\n                                const xRowOffset = xDepthOffset + xRow * strides[2];\n                                for (let xCol = xColMin; xCol < xColMax; xCol += dilationWidth) {\n                                    const xColOffset = xRowOffset + xCol * strides[3];\n                                    const pixel = xValues[xColOffset + channel];\n                                    if ((poolType === 'max' && pixel > minMaxValue)) {\n                                        minMaxValue = pixel;\n                                    }\n                                    else if (poolType === 'avg') {\n                                        avgValue += pixel;\n                                        count++;\n                                    }\n                                    if (isNaN(minMaxValue)) {\n                                        break;\n                                    }\n                                }\n                                if (isNaN(minMaxValue)) {\n                                    break;\n                                }\n                            }\n                            if (isNaN(minMaxValue)) {\n                                break;\n                            }\n                        }\n                        const outputOffset = outputColOffset + channel;\n                        outputVals[outputOffset] =\n                            poolType === 'avg' ? avgValue / count : minMaxValue;\n                    }\n                }\n            }\n        }\n    }\n    return output;\n}\nfunction maxPool3dPositions(xBuf, convInfo) {\n    const maxPositions = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(convInfo.outShape, 'int32');\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationDepth = convInfo.dilationDepth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padFront = convInfo.padInfo.front;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    for (let batch = 0; batch < convInfo.batchSize; ++batch) {\n        for (let channel = 0; channel < convInfo.inChannels; ++channel) {\n            for (let yDepth = 0; yDepth < convInfo.outDepth; ++yDepth) {\n                const xDepthCorner = yDepth * strideDepth - padFront;\n                let xDepthMin = xDepthCorner;\n                while (xDepthMin < 0) {\n                    xDepthMin += dilationDepth;\n                }\n                const xDepthMax = Math.min(convInfo.inDepth, effectiveFilterDepth + xDepthCorner);\n                for (let yRow = 0; yRow < convInfo.outHeight; ++yRow) {\n                    const xRowCorner = yRow * strideHeight - padTop;\n                    let xRowMin = xRowCorner;\n                    while (xRowMin < 0) {\n                        xRowMin += dilationHeight;\n                    }\n                    const xRowMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRowCorner);\n                    for (let yCol = 0; yCol < convInfo.outWidth; ++yCol) {\n                        const xColCorner = yCol * strideWidth - padLeft;\n                        let xColMin = xColCorner;\n                        while (xColMin < 0) {\n                            xColMin += dilationWidth;\n                        }\n                        const xColMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xColCorner);\n                        // Shader code begins\n                        let maxValue = Number.NEGATIVE_INFINITY;\n                        let maxPosition = -1;\n                        for (let xDepth = xDepthMin; xDepth < xDepthMax; xDepth += dilationDepth) {\n                            const wDepth = xDepth - xDepthCorner;\n                            for (let xRow = xRowMin; xRow < xRowMax; xRow += dilationHeight) {\n                                const wRow = xRow - xRowCorner;\n                                for (let xCol = xColMin; xCol < xColMax; xCol += dilationWidth) {\n                                    const wCol = xCol - xColCorner;\n                                    const pixel = xBuf.get(batch, xDepth, xRow, xCol, channel);\n                                    if (pixel >= maxValue) {\n                                        maxValue = pixel;\n                                        maxPosition =\n                                            wDepth * effectiveFilterHeight * effectiveFilterWidth +\n                                                wRow * effectiveFilterHeight + wCol;\n                                    }\n                                }\n                            }\n                        }\n                        maxPositions.set(maxPosition, batch, yDepth, yRow, yCol, channel);\n                    }\n                }\n            }\n        }\n    }\n    return maxPositions;\n}\n//# sourceMappingURL=pool_utils.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSimpleUnaryImpl\": () => (/* binding */ createSimpleUnaryImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Template that creates implementation for unary op.\n */\nfunction createSimpleUnaryImpl(op) {\n    return (values, dtype, attrs) => {\n        const newValues = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(dtype, values.length);\n        for (let i = 0; i < values.length; ++i) {\n            newValues[i] = op(values[i], attrs);\n        }\n        return newValues;\n    };\n}\n//# sourceMappingURL=unary_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unaryKernelFunc\": () => (/* binding */ unaryKernelFunc),\n/* harmony export */   \"unaryKernelFuncFromImpl\": () => (/* binding */ unaryKernelFuncFromImpl)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Template that creates a `KernelFunc` for unary ops.\n * @param name Kernel name.\n * @param op A `SimpleUnaryOperation` for the kernel.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the input. This is mainly used in certain\n *     kernels that return bool type, such as isFinite, isInf, etc.\n */\nfunction unaryKernelFunc(name, op, dtype) {\n    return ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, name);\n        if (x.dtype === 'string' || dtype === 'string') {\n            throw new Error('unaryKernelFunc does not support string input/output');\n        }\n        const cpuBackend = backend;\n        const values = cpuBackend.data.get(x.dataId).values;\n        const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n        const $dtype = dtype || x.dtype;\n        const newValues = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType($dtype, xSize);\n        for (let i = 0; i < xSize; ++i) {\n            newValues[i] = op(values[i], attrs);\n        }\n        return cpuBackend.makeTensorInfo(x.shape, $dtype, newValues);\n    };\n}\n/**\n * Template that creates a `KernelFunc` for unary ops from the given\n * `SimpleUnaryImpl`..\n * @param name Kernel name.\n * @param unaryImpl A `SimpleUnaryImpl` that implements the op.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the input. This is mainly used in certain\n *     kernels that return bool type, such as isFinite, isInf, etc.\n */\nfunction unaryKernelFuncFromImpl(name, unaryImpl, dtype) {\n    return ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, name);\n        if (x.dtype === 'string' || dtype === 'string') {\n            throw new Error('unaryKernelFunc does not support string input/output');\n        }\n        const cpuBackend = backend;\n        const values = cpuBackend.data.get(x.dataId).values;\n        const $dtype = dtype || x.dtype;\n        const newValues = unaryImpl(values, $dtype, attrs);\n        return cpuBackend.makeTensorInfo(x.shape, $dtype, newValues);\n    };\n}\n//# sourceMappingURL=unary_utils.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"zeros\": () => (/* binding */ zeros)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernels_Complex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernels/Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Generates a tensorInfo with all zeros value.\n * @param backend cpu backend.\n * @param shape Shape for the zeros tensor.\n * @param dtype Optional. If set, the result has this dtype.\n */\nfunction zeros(backend, shape, dtype = 'float32') {\n    if (dtype === 'complex64') {\n        const real = zeros(backend, shape, 'float32');\n        const imag = zeros(backend, shape, 'float32');\n        return (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_1__.complex)({ inputs: { real, imag }, backend });\n    }\n    const values = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(shape), dtype);\n    return backend.makeTensorInfo(shape, dtype, values);\n}\n//# sourceMappingURL=zeros_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/version.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\n/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nconst version = '3.8.0';\n\n//# sourceMappingURL=version.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/dist/version.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/index.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = __webpack_require__(/*! ./lib/alea */ \"./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/alea.js\");\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = __webpack_require__(/*! ./lib/xor128 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xor128.js\");\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = __webpack_require__(/*! ./lib/xorwow */ \"./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xorwow.js\");\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xorshift7.js\");\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = __webpack_require__(/*! ./lib/xor4096 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xor4096.js\");\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = __webpack_require__(/*! ./lib/tychei */ \"./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/tychei.js\");\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = __webpack_require__(/*! ./seedrandom */ \"./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/seedrandom.js\");\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/index.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/alea.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/alea.js ***!
  \***************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/alea.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/tychei.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/tychei.js ***!
  \*****************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/tychei.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xor128.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xor128.js ***!
  \*****************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xor128.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xor4096.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xor4096.js ***!
  \******************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xor4096.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xorshift7.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xorshift7.js ***!
  \********************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xorshift7.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xorwow.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xorwow.js ***!
  \*****************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/lib/xorwow.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/seedrandom.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/seedrandom.js ***!
  \*****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ( true && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = __webpack_require__(/*! crypto */ \"crypto\");\n  } catch (ex) {}\n} else if (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return seedrandom; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-backend-cpu/node_modules/seedrandom/seedrandom.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EPSILON_FLOAT32\": () => (/* binding */ EPSILON_FLOAT32),\n/* harmony export */   \"EPSILON_FLOAT16\": () => (/* binding */ EPSILON_FLOAT16),\n/* harmony export */   \"DataStorage\": () => (/* binding */ DataStorage),\n/* harmony export */   \"KernelBackend\": () => (/* binding */ KernelBackend)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst EPSILON_FLOAT32 = 1e-7;\nconst EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\nclass DataStorage {\n    constructor(backend, dataMover) {\n        this.backend = backend;\n        this.dataMover = dataMover;\n        this.data = new WeakMap();\n        this.dataIdsCount = 0;\n    }\n    get(dataId) {\n        if (!this.data.has(dataId)) {\n            this.dataMover.moveData(this.backend, dataId);\n        }\n        return this.data.get(dataId);\n    }\n    set(dataId, value) {\n        this.dataIdsCount++;\n        this.data.set(dataId, value);\n    }\n    has(dataId) {\n        return this.data.has(dataId);\n    }\n    delete(dataId) {\n        this.dataIdsCount--;\n        return this.data.delete(dataId);\n    }\n    numDataIds() {\n        return this.dataIdsCount;\n    }\n}\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nclass KernelBackend {\n    refCount(dataId) {\n        return notYetImplemented('refCount');\n    }\n    incRef(dataId) {\n        return notYetImplemented('incRef');\n    }\n    timerAvailable() {\n        return true;\n    }\n    time(f) {\n        return notYetImplemented('time');\n    }\n    read(dataId) {\n        return notYetImplemented('read');\n    }\n    readSync(dataId) {\n        return notYetImplemented('readSync');\n    }\n    numDataIds() {\n        return notYetImplemented('numDataIds');\n    }\n    disposeData(dataId, force) {\n        return notYetImplemented('disposeData');\n    }\n    write(values, shape, dtype) {\n        return notYetImplemented('write');\n    }\n    move(dataId, values, shape, dtype, refCount) {\n        return notYetImplemented('move');\n    }\n    memory() {\n        return notYetImplemented('memory');\n    }\n    /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n    floatPrecision() {\n        return notYetImplemented('floatPrecision');\n    }\n    /** Returns the smallest representable number.  */\n    epsilon() {\n        return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n    dispose() {\n        return notYetImplemented('dispose');\n    }\n}\nfunction notYetImplemented(kernelName) {\n    throw new Error(`'${kernelName}' not yet implemented or not found in the registry. ` +\n        `This kernel may not be supported by the tfjs backend you have chosen`);\n}\n//# sourceMappingURL=backend.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"assertAxesAreInnerMostDims\": () => (/* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.assertAxesAreInnerMostDims),\n/* harmony export */   \"axesAreInnerMostDims\": () => (/* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.axesAreInnerMostDims),\n/* harmony export */   \"combineLocations\": () => (/* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.combineLocations),\n/* harmony export */   \"computeOutAndReduceShapes\": () => (/* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.computeOutAndReduceShapes),\n/* harmony export */   \"expandShapeToKeepDim\": () => (/* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.expandShapeToKeepDim),\n/* harmony export */   \"getAxesPermutation\": () => (/* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.getAxesPermutation),\n/* harmony export */   \"getInnerMostAxes\": () => (/* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.getInnerMostAxes),\n/* harmony export */   \"getUndoAxesPermutation\": () => (/* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.getUndoAxesPermutation),\n/* harmony export */   \"assertAndGetBroadcastShape\": () => (/* reexport safe */ _ops_broadcast_util__WEBPACK_IMPORTED_MODULE_1__.assertAndGetBroadcastShape),\n/* harmony export */   \"getBroadcastDims\": () => (/* reexport safe */ _ops_broadcast_util__WEBPACK_IMPORTED_MODULE_1__.getBroadcastDims),\n/* harmony export */   \"getReductionAxes\": () => (/* reexport safe */ _ops_broadcast_util__WEBPACK_IMPORTED_MODULE_1__.getReductionAxes),\n/* harmony export */   \"assertParamsConsistent\": () => (/* reexport safe */ _ops_concat_util__WEBPACK_IMPORTED_MODULE_2__.assertParamsConsistent),\n/* harmony export */   \"computeOutShape\": () => (/* reexport safe */ _ops_concat_util__WEBPACK_IMPORTED_MODULE_2__.computeOutShape),\n/* harmony export */   \"computeConv2DInfo\": () => (/* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computeConv2DInfo),\n/* harmony export */   \"computeConv3DInfo\": () => (/* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computeConv3DInfo),\n/* harmony export */   \"computeDefaultPad\": () => (/* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computeDefaultPad),\n/* harmony export */   \"computeDilation2DInfo\": () => (/* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computeDilation2DInfo),\n/* harmony export */   \"computePool2DInfo\": () => (/* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computePool2DInfo),\n/* harmony export */   \"computePool3DInfo\": () => (/* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computePool3DInfo),\n/* harmony export */   \"convertConv2DDataFormat\": () => (/* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.convertConv2DDataFormat),\n/* harmony export */   \"eitherStridesOrDilationsAreOne\": () => (/* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.eitherStridesOrDilationsAreOne),\n/* harmony export */   \"tupleValuesAreOne\": () => (/* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.tupleValuesAreOne),\n/* harmony export */   \"applyActivation\": () => (/* reexport safe */ _ops_fused_util__WEBPACK_IMPORTED_MODULE_4__.applyActivation),\n/* harmony export */   \"getFusedBiasGradient\": () => (/* reexport safe */ _ops_fused_util__WEBPACK_IMPORTED_MODULE_4__.getFusedBiasGradient),\n/* harmony export */   \"getFusedDyActivation\": () => (/* reexport safe */ _ops_fused_util__WEBPACK_IMPORTED_MODULE_4__.getFusedDyActivation),\n/* harmony export */   \"shouldFuse\": () => (/* reexport safe */ _ops_fused_util__WEBPACK_IMPORTED_MODULE_4__.shouldFuse),\n/* harmony export */   \"PARALLELIZE_THRESHOLD\": () => (/* reexport safe */ _ops_reduce_util__WEBPACK_IMPORTED_MODULE_5__.PARALLELIZE_THRESHOLD),\n/* harmony export */   \"computeOptimalWindowSize\": () => (/* reexport safe */ _ops_reduce_util__WEBPACK_IMPORTED_MODULE_5__.computeOptimalWindowSize),\n/* harmony export */   \"slice_util\": () => (/* reexport module object */ _ops_slice_util__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   \"upcastType\": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_7__.upcastType),\n/* harmony export */   \"getImageCenter\": () => (/* reexport safe */ _ops_rotate_util__WEBPACK_IMPORTED_MODULE_8__.getImageCenter),\n/* harmony export */   \"getPermuted\": () => (/* reexport safe */ _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__.getPermuted),\n/* harmony export */   \"getReshaped\": () => (/* reexport safe */ _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__.getReshaped),\n/* harmony export */   \"getReshapedPermuted\": () => (/* reexport safe */ _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__.getReshapedPermuted),\n/* harmony export */   \"getSliceBeginCoords\": () => (/* reexport safe */ _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__.getSliceBeginCoords),\n/* harmony export */   \"getSliceSize\": () => (/* reexport safe */ _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__.getSliceSize),\n/* harmony export */   \"prepareAndValidate\": () => (/* reexport safe */ _ops_gather_nd_util__WEBPACK_IMPORTED_MODULE_10__.prepareAndValidate),\n/* harmony export */   \"calculateShapes\": () => (/* reexport safe */ _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_11__.calculateShapes),\n/* harmony export */   \"validateInput\": () => (/* reexport safe */ _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_11__.validateInput),\n/* harmony export */   \"validateUpdateShape\": () => (/* reexport safe */ _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_11__.validateUpdateShape),\n/* harmony export */   \"SELU_SCALE\": () => (/* reexport safe */ _ops_selu_util__WEBPACK_IMPORTED_MODULE_12__.SELU_SCALE),\n/* harmony export */   \"SELU_SCALEALPHA\": () => (/* reexport safe */ _ops_selu_util__WEBPACK_IMPORTED_MODULE_12__.SELU_SCALEALPHA),\n/* harmony export */   \"ERF_A1\": () => (/* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_A1),\n/* harmony export */   \"ERF_A2\": () => (/* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_A2),\n/* harmony export */   \"ERF_A3\": () => (/* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_A3),\n/* harmony export */   \"ERF_A4\": () => (/* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_A4),\n/* harmony export */   \"ERF_A5\": () => (/* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_A5),\n/* harmony export */   \"ERF_P\": () => (/* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_P),\n/* harmony export */   \"log\": () => (/* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_14__.log),\n/* harmony export */   \"warn\": () => (/* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_14__.warn),\n/* harmony export */   \"assignToTypedArray\": () => (/* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.assignToTypedArray),\n/* harmony export */   \"complexWithEvenIndex\": () => (/* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.complexWithEvenIndex),\n/* harmony export */   \"complexWithOddIndex\": () => (/* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.complexWithOddIndex),\n/* harmony export */   \"exponent\": () => (/* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.exponent),\n/* harmony export */   \"exponents\": () => (/* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.exponents),\n/* harmony export */   \"getComplexWithIndex\": () => (/* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.getComplexWithIndex),\n/* harmony export */   \"mergeRealAndImagArrays\": () => (/* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.mergeRealAndImagArrays),\n/* harmony export */   \"splitRealAndImagArrays\": () => (/* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.splitRealAndImagArrays),\n/* harmony export */   \"checkEinsumDimSizes\": () => (/* reexport safe */ _backends_einsum_util__WEBPACK_IMPORTED_MODULE_16__.checkEinsumDimSizes),\n/* harmony export */   \"decodeEinsumEquation\": () => (/* reexport safe */ _backends_einsum_util__WEBPACK_IMPORTED_MODULE_16__.decodeEinsumEquation),\n/* harmony export */   \"getEinsumComputePath\": () => (/* reexport safe */ _backends_einsum_util__WEBPACK_IMPORTED_MODULE_16__.getEinsumComputePath),\n/* harmony export */   \"getEinsumPermutation\": () => (/* reexport safe */ _backends_einsum_util__WEBPACK_IMPORTED_MODULE_16__.getEinsumPermutation),\n/* harmony export */   \"isIdentityPermutation\": () => (/* reexport safe */ _backends_einsum_util__WEBPACK_IMPORTED_MODULE_16__.isIdentityPermutation),\n/* harmony export */   \"prepareSplitSize\": () => (/* reexport safe */ _ops_split_util__WEBPACK_IMPORTED_MODULE_17__.prepareSplitSize),\n/* harmony export */   \"segment_util\": () => (/* reexport module object */ _ops_segment_util__WEBPACK_IMPORTED_MODULE_18__),\n/* harmony export */   \"fromUint8ToStringArray\": () => (/* binding */ fromUint8ToStringArray),\n/* harmony export */   \"fromStringArrayToUint8\": () => (/* binding */ fromStringArrayToUint8)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/* harmony import */ var _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ops/axis_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js\");\n/* harmony import */ var _ops_broadcast_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ops/broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _ops_concat_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ops/concat_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js\");\n/* harmony import */ var _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _ops_fused_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/fused_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js\");\n/* harmony import */ var _ops_reduce_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/reduce_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js\");\n/* harmony import */ var _ops_slice_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/slice_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../types */ \"./node_modules/@tensorflow/tfjs-core/dist/types.js\");\n/* harmony import */ var _ops_rotate_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/rotate_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js\");\n/* harmony import */ var _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ops/array_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js\");\n/* harmony import */ var _ops_gather_nd_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ops/gather_nd_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js\");\n/* harmony import */ var _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ops/scatter_nd_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js\");\n/* harmony import */ var _ops_selu_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ops/selu_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js\");\n/* harmony import */ var _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ops/erf_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../log */ \"./node_modules/@tensorflow/tfjs-core/dist/log.js\");\n/* harmony import */ var _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../backends/complex_util */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js\");\n/* harmony import */ var _backends_einsum_util__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../backends/einsum_util */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/einsum_util.js\");\n/* harmony import */ var _ops_split_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../ops/split_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js\");\n/* harmony import */ var _ops_segment_util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../ops/segment_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Utilities needed by backend consumers of tf-core.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction fromUint8ToStringArray(vals) {\n    try {\n        // Decode the bytes into string.\n        return vals.map(val => (0,_util__WEBPACK_IMPORTED_MODULE_19__.decodeString)(val));\n    }\n    catch (err) {\n        throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${err}`);\n    }\n}\nfunction fromStringArrayToUint8(strings) {\n    return strings.map(s => (0,_util__WEBPACK_IMPORTED_MODULE_19__.encodeString)(s));\n}\n//# sourceMappingURL=backend_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mergeRealAndImagArrays\": () => (/* binding */ mergeRealAndImagArrays),\n/* harmony export */   \"splitRealAndImagArrays\": () => (/* binding */ splitRealAndImagArrays),\n/* harmony export */   \"complexWithEvenIndex\": () => (/* binding */ complexWithEvenIndex),\n/* harmony export */   \"complexWithOddIndex\": () => (/* binding */ complexWithOddIndex),\n/* harmony export */   \"getComplexWithIndex\": () => (/* binding */ getComplexWithIndex),\n/* harmony export */   \"assignToTypedArray\": () => (/* binding */ assignToTypedArray),\n/* harmony export */   \"exponents\": () => (/* binding */ exponents),\n/* harmony export */   \"exponent\": () => (/* binding */ exponent)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Merges real and imaginary Float32Arrays into a single complex Float32Array.\n *\n * The memory layout is interleaved as follows:\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n * complex: [r0, i0, r1, i1, r2, i2]\n *\n * This is the inverse of splitRealAndImagArrays.\n *\n * @param real The real values of the complex tensor values.\n * @param imag The imag values of the complex tensor values.\n * @returns A complex tensor as a Float32Array with merged values.\n */\nfunction mergeRealAndImagArrays(real, imag) {\n    if (real.length !== imag.length) {\n        throw new Error(`Cannot merge real and imag arrays of different lengths. real:` +\n            `${real.length}, imag: ${imag.length}.`);\n    }\n    const result = new Float32Array(real.length * 2);\n    for (let i = 0; i < result.length; i += 2) {\n        result[i] = real[i / 2];\n        result[i + 1] = imag[i / 2];\n    }\n    return result;\n}\n/**\n * Splits a complex Float32Array into real and imag parts.\n *\n * The memory layout is interleaved as follows:\n * complex: [r0, i0, r1, i1, r2, i2]\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n *\n * This is the inverse of mergeRealAndImagArrays.\n *\n * @param complex The complex tensor values.\n * @returns An object with real and imag Float32Array components of the complex\n *     tensor.\n */\nfunction splitRealAndImagArrays(complex) {\n    const real = new Float32Array(complex.length / 2);\n    const imag = new Float32Array(complex.length / 2);\n    for (let i = 0; i < complex.length; i += 2) {\n        real[i / 2] = complex[i];\n        imag[i / 2] = complex[i + 1];\n    }\n    return { real, imag };\n}\n/**\n * Extracts even indexed complex values in the given array.\n * @param complex The complex tensor values\n */\nfunction complexWithEvenIndex(complex) {\n    const len = Math.ceil(complex.length / 4);\n    const real = new Float32Array(len);\n    const imag = new Float32Array(len);\n    for (let i = 0; i < complex.length; i += 4) {\n        real[Math.floor(i / 4)] = complex[i];\n        imag[Math.floor(i / 4)] = complex[i + 1];\n    }\n    return { real, imag };\n}\n/**\n * Extracts odd indexed comple values in the given array.\n * @param complex The complex tensor values\n */\nfunction complexWithOddIndex(complex) {\n    const len = Math.floor(complex.length / 4);\n    const real = new Float32Array(len);\n    const imag = new Float32Array(len);\n    for (let i = 2; i < complex.length; i += 4) {\n        real[Math.floor(i / 4)] = complex[i];\n        imag[Math.floor(i / 4)] = complex[i + 1];\n    }\n    return { real, imag };\n}\n/**\n * Get the map representing a complex value in the given array.\n * @param complex The complex tensor values.\n * @param index An index of the target complex value.\n */\nfunction getComplexWithIndex(complex, index) {\n    const real = complex[index * 2];\n    const imag = complex[index * 2 + 1];\n    return { real, imag };\n}\n/**\n * Insert a given complex value into the TypedArray.\n * @param data The array in which the complex value is inserted.\n * @param c The complex value to be inserted.\n * @param index An index of the target complex value.\n */\nfunction assignToTypedArray(data, real, imag, index) {\n    data[index * 2] = real;\n    data[index * 2 + 1] = imag;\n}\n/**\n * Make the list of exponent terms used by FFT.\n */\nfunction exponents(n, inverse) {\n    const real = new Float32Array(n / 2);\n    const imag = new Float32Array(n / 2);\n    for (let i = 0; i < Math.ceil(n / 2); i++) {\n        const x = (inverse ? 2 : -2) * Math.PI * (i / n);\n        real[i] = Math.cos(x);\n        imag[i] = Math.sin(x);\n    }\n    return { real, imag };\n}\n/**\n * Make the exponent term used by FFT.\n */\nfunction exponent(k, n, inverse) {\n    const x = (inverse ? 2 : -2) * Math.PI * (k / n);\n    const real = Math.cos(x);\n    const imag = Math.sin(x);\n    return { real, imag };\n}\n//# sourceMappingURL=complex_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/einsum_util.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/einsum_util.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodeEinsumEquation\": () => (/* binding */ decodeEinsumEquation),\n/* harmony export */   \"getEinsumPermutation\": () => (/* binding */ getEinsumPermutation),\n/* harmony export */   \"checkEinsumDimSizes\": () => (/* binding */ checkEinsumDimSizes),\n/* harmony export */   \"getEinsumComputePath\": () => (/* binding */ getEinsumComputePath),\n/* harmony export */   \"isIdentityPermutation\": () => (/* binding */ isIdentityPermutation)\n/* harmony export */ });\n/* harmony import */ var _util_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util_base */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst ARROW = '->';\nconst ARROW_REGEX = /->/g;\nconst COMMA = ',';\nconst ELLIPSIS = '...';\n/**\n * Parse an equation for einsum.\n *\n * @param equation The einsum equation (e.g., \"ij,jk->ik\").\n * @param numTensors Number of tensors provided along with `equation`. Used to\n *   check matching number of input tensors.\n * @returns An object consisting of the following fields:\n *   - allDims: all dimension names as strings.\n *   - summedDims: a list of all dimensions being summed over, as indices to\n *     the elements of `allDims`.\n *   - idDims: indices of the dimensions in each input tensor, as indices to\n *     the elements of `allDims.\n */\nfunction decodeEinsumEquation(equation, numTensors) {\n    equation = equation.replace(/\\s/g, ''); // Remove witespace in equation.\n    const numArrows = (equation.length - equation.replace(ARROW_REGEX, '').length) /\n        ARROW.length;\n    if (numArrows < 1) {\n        throw new Error('Equations without an arrow are not supported.');\n    }\n    else if (numArrows > 1) {\n        throw new Error(`Equation must contain exactly one arrow (\"${ARROW}\").`);\n    }\n    const [inputString, outputString] = equation.split(ARROW);\n    (0,_util_base__WEBPACK_IMPORTED_MODULE_0__.assert)(inputString.indexOf(ELLIPSIS) === -1, () => `The ellipsis notation (\"${ELLIPSIS}\") is not supported yet.`);\n    const inputTerms = inputString.split(COMMA);\n    const numInputs = inputTerms.length;\n    if (numTensors !== numInputs) {\n        throw new Error(`Expected ${numInputs} input tensors, received ${numTensors}`);\n    }\n    if (numInputs > 2) {\n        throw new Error('Support for more than 2 input tensors is not implemented yet.');\n    }\n    const allDims = [];\n    for (let i = 0; i < outputString.length; ++i) {\n        const dimName = outputString[i];\n        if (!inputTerms.some(inputTerm => inputTerm.indexOf(dimName) !== -1)) {\n            throw new Error(`Output subscripts contain the label ${dimName} ` +\n                `not present in the input subscripts.`);\n        }\n        if (allDims.indexOf(dimName) === -1) {\n            allDims.push(dimName);\n        }\n    }\n    for (let i = 0; i < inputString.length; ++i) {\n        const dimName = inputString[i];\n        if (allDims.indexOf(dimName) === -1 && dimName !== COMMA) {\n            allDims.push(dimName);\n        }\n    }\n    const idDims = new Array(inputTerms.length);\n    for (let i = 0; i < numInputs; ++i) {\n        if (new Set(inputTerms[i].split('')).size !== inputTerms[i].length) {\n            throw new Error(`Found duplicate axes in input component ${inputTerms[i]}. ` +\n                `Support for duplicate axes in input is not implemented yet.`);\n        }\n        idDims[i] = [];\n        for (let j = 0; j < inputTerms[i].length; ++j) {\n            idDims[i].push(allDims.indexOf(inputTerms[i][j]));\n        }\n    }\n    const numDims = allDims.length; // Number of unique dimensions.\n    const numOutDims = outputString.length; // Number of output dimensions.\n    const summedDims = []; // Dimensions being summed over.\n    for (let i = numOutDims; i < numDims; ++i) {\n        summedDims.push(i);\n    }\n    return { allDims, summedDims, idDims };\n}\n/**\n * Get the permutation for a given input tensor.\n *\n * @param nDims Total number of dimension of all tensors involved in the einsum\n *   operation.\n * @param idDims Dimension indices involve in the tensor in question.\n * @returns An object consisting of the following fields:\n *   - permutationIndices: Indices to permute the axes of the tensor with.\n *   - expandDims: Indices to the dimension that need to be expanded from the\n *     tensor after permutation.\n */\nfunction getEinsumPermutation(nDims, idDims) {\n    let permutationIndices = new Array(nDims);\n    permutationIndices.fill(-1);\n    for (let i = 0; i < idDims.length; ++i) {\n        permutationIndices[idDims[i]] = i;\n    }\n    const expandDims = [];\n    for (let i = 0; i < nDims; ++i) {\n        if (permutationIndices[i] === -1) {\n            expandDims.push(i);\n        }\n    }\n    permutationIndices = permutationIndices.filter(d => d !== -1);\n    return { permutationIndices, expandDims };\n}\n/**\n * Checks that the dimension sizes from different input tensors match the\n * equation.\n */\nfunction checkEinsumDimSizes(nDims, idDims, tensors) {\n    const dimSizes = new Array(nDims);\n    for (let i = 0; i < tensors.length; ++i) {\n        const shape = tensors[i].shape;\n        for (let j = 0; j < idDims[i].length; ++j) {\n            if (dimSizes[idDims[i][j]] === undefined) {\n                dimSizes[idDims[i][j]] = shape[j];\n            }\n            else {\n                (0,_util_base__WEBPACK_IMPORTED_MODULE_0__.assert)(dimSizes[idDims[i][j]] === shape[j], () => `Expected dimension ${dimSizes[idDims[i][j]]} at axis ${j} ` +\n                    `of input shaped ${JSON.stringify(shape)}, ` +\n                    `but got dimension ${shape[j]}`);\n            }\n        }\n    }\n}\n/**\n * Gets path of computation for einsum.\n *\n * @param summedDims indices to the dimensions being summed over.\n * @param idDims A look up table for the dimensions present in each input\n *     tensor. Each consituent array contains indices for the dimensions in the\n *     corresponding input tensor.\n *\n * @return A map with two fields:\n *   - path: The path of computation, with each element indicating the dimension\n *     being summed over after the element-wise multiplication in that step.\n *   - steps: With the same length as `path`. Each element contains the indices\n *     to the input tensors being used for element-wise multiplication in the\n *     corresponding step.\n */\nfunction getEinsumComputePath(summedDims, idDims) {\n    const path = summedDims;\n    const steps = [];\n    let nSteps = 0;\n    if (summedDims.length === 0) {\n        // Einsum that involes no summing: e.g., transpose and outer product.\n        path.push(-1);\n    }\n    nSteps = summedDims.length + 1;\n    for (let i = 0; i < nSteps; ++i) {\n        steps.push([]);\n    }\n    const computedTermIndices = [];\n    for (let i = 0; i < path.length; ++i) {\n        const summedDim = path[i];\n        const termIndices = findTermsWithDim(idDims, summedDim);\n        for (const termIndex of termIndices) {\n            if (computedTermIndices.indexOf(termIndex) === -1) {\n                steps[i].push(termIndex);\n                computedTermIndices.push(termIndex);\n            }\n        }\n    }\n    return { path, steps };\n}\n/** Determines if an axes permutation is the identity permutation. */\nfunction isIdentityPermutation(perm) {\n    return perm.every((dim, index) => dim === index);\n}\nfunction findTermsWithDim(idDims, dim) {\n    const termIndices = [];\n    for (let i = 0; i < idDims.length; ++i) {\n        if (idDims[i].length === 0 || idDims[i].indexOf(dim) !== -1 || dim === -1) {\n            termIndices.push(i);\n        }\n    }\n    return termIndices;\n}\n//# sourceMappingURL=einsum_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/backends/einsum_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionV3Impl\": () => (/* reexport safe */ _non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_0__.nonMaxSuppressionV3Impl),\n/* harmony export */   \"nonMaxSuppressionV4Impl\": () => (/* reexport safe */ _non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_0__.nonMaxSuppressionV4Impl),\n/* harmony export */   \"nonMaxSuppressionV5Impl\": () => (/* reexport safe */ _non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_0__.nonMaxSuppressionV5Impl),\n/* harmony export */   \"whereImpl\": () => (/* reexport safe */ _where_impl__WEBPACK_IMPORTED_MODULE_1__.whereImpl)\n/* harmony export */ });\n/* harmony import */ var _non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./non_max_suppression_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js\");\n/* harmony import */ var _where_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./where_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n//# sourceMappingURL=kernel_impls.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionV3Impl\": () => (/* binding */ nonMaxSuppressionV3Impl),\n/* harmony export */   \"nonMaxSuppressionV4Impl\": () => (/* binding */ nonMaxSuppressionV4Impl),\n/* harmony export */   \"nonMaxSuppressionV5Impl\": () => (/* binding */ nonMaxSuppressionV5Impl)\n/* harmony export */ });\n/* harmony import */ var _non_max_suppression_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./non_max_suppression_util */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction nonMaxSuppressionV3Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0 /* softNmsSigma */);\n}\nfunction nonMaxSuppressionV4Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0 /* softNmsSigma */, false /* returnScoresTensor */, padToMaxOutputSize /* padToMaxOutputSize */, true\n    /* returnValidOutputs */ );\n}\nfunction nonMaxSuppressionV5Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, true /* returnScoresTensor */);\n}\nfunction nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, returnScoresTensor = false, padToMaxOutputSize = false, returnValidOutputs = false) {\n    // The list is sorted in ascending order, so that we can always pop the\n    // candidate with the largest score in O(1) time.\n    const candidates = [];\n    for (let i = 0; i < scores.length; i++) {\n        if (scores[i] > scoreThreshold) {\n            candidates.push({ score: scores[i], boxIndex: i, suppressBeginIndex: 0 });\n        }\n    }\n    candidates.sort(ascendingComparator);\n    // If softNmsSigma is 0, the outcome of this algorithm is exactly same as\n    // before.\n    const scale = softNmsSigma > 0 ? (-0.5 / softNmsSigma) : 0.0;\n    const selectedIndices = [];\n    const selectedScores = [];\n    while (selectedIndices.length < maxOutputSize && candidates.length > 0) {\n        const candidate = candidates.pop();\n        const { score: originalScore, boxIndex, suppressBeginIndex } = candidate;\n        if (originalScore < scoreThreshold) {\n            break;\n        }\n        // Overlapping boxes are likely to have similar scores, therefore we\n        // iterate through the previously selected boxes backwards in order to\n        // see if candidate's score should be suppressed. We use\n        // suppressBeginIndex to track and ensure a candidate can be suppressed\n        // by a selected box no more than once. Also, if the overlap exceeds\n        // iouThreshold, we simply ignore the candidate.\n        let ignoreCandidate = false;\n        for (let j = selectedIndices.length - 1; j >= suppressBeginIndex; --j) {\n            const iou = intersectionOverUnion(boxes, boxIndex, selectedIndices[j]);\n            if (iou >= iouThreshold) {\n                ignoreCandidate = true;\n                break;\n            }\n            candidate.score =\n                candidate.score * suppressWeight(iouThreshold, scale, iou);\n            if (candidate.score <= scoreThreshold) {\n                break;\n            }\n        }\n        // At this point, if `candidate.score` has not dropped below\n        // `scoreThreshold`, then we know that we went through all of the\n        // previous selections and can safely update `suppressBeginIndex` to the\n        // end of the selected array. Then we can re-insert the candidate with\n        // the updated score and suppressBeginIndex back in the candidate list.\n        // If on the other hand, `candidate.score` has dropped below the score\n        // threshold, we will not add it back to the candidates list.\n        candidate.suppressBeginIndex = selectedIndices.length;\n        if (!ignoreCandidate) {\n            // Candidate has passed all the tests, and is not suppressed, so\n            // select the candidate.\n            if (candidate.score === originalScore) {\n                selectedIndices.push(boxIndex);\n                selectedScores.push(candidate.score);\n            }\n            else if (candidate.score > scoreThreshold) {\n                // Candidate's score is suppressed but is still high enough to be\n                // considered, so add back to the candidates list.\n                (0,_non_max_suppression_util__WEBPACK_IMPORTED_MODULE_0__.binaryInsert)(candidates, candidate, ascendingComparator);\n            }\n        }\n    }\n    // NonMaxSuppressionV4 feature: padding output to maxOutputSize.\n    const validOutputs = selectedIndices.length;\n    const elemsToPad = maxOutputSize - validOutputs;\n    if (padToMaxOutputSize && elemsToPad > 0) {\n        selectedIndices.push(...new Array(elemsToPad).fill(0));\n        selectedScores.push(...new Array(elemsToPad).fill(0.0));\n    }\n    const result = { selectedIndices };\n    if (returnScoresTensor) {\n        result['selectedScores'] = selectedScores;\n    }\n    if (returnValidOutputs) {\n        result['validOutputs'] = validOutputs;\n    }\n    return result;\n}\nfunction intersectionOverUnion(boxes, i, j) {\n    const iCoord = boxes.subarray(i * 4, i * 4 + 4);\n    const jCoord = boxes.subarray(j * 4, j * 4 + 4);\n    const yminI = Math.min(iCoord[0], iCoord[2]);\n    const xminI = Math.min(iCoord[1], iCoord[3]);\n    const ymaxI = Math.max(iCoord[0], iCoord[2]);\n    const xmaxI = Math.max(iCoord[1], iCoord[3]);\n    const yminJ = Math.min(jCoord[0], jCoord[2]);\n    const xminJ = Math.min(jCoord[1], jCoord[3]);\n    const ymaxJ = Math.max(jCoord[0], jCoord[2]);\n    const xmaxJ = Math.max(jCoord[1], jCoord[3]);\n    const areaI = (ymaxI - yminI) * (xmaxI - xminI);\n    const areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\n    if (areaI <= 0 || areaJ <= 0) {\n        return 0.0;\n    }\n    const intersectionYmin = Math.max(yminI, yminJ);\n    const intersectionXmin = Math.max(xminI, xminJ);\n    const intersectionYmax = Math.min(ymaxI, ymaxJ);\n    const intersectionXmax = Math.min(xmaxI, xmaxJ);\n    const intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) *\n        Math.max(intersectionXmax - intersectionXmin, 0.0);\n    return intersectionArea / (areaI + areaJ - intersectionArea);\n}\n// A Gaussian penalty function, this method always returns values in [0, 1].\n// The weight is a function of similarity, the more overlap two boxes are, the\n// smaller the weight is, meaning highly overlapping boxe will be significantly\n// penalized. On the other hand, a non-overlapping box will not be penalized.\nfunction suppressWeight(iouThreshold, scale, iou) {\n    const weight = Math.exp(scale * iou * iou);\n    return iou <= iouThreshold ? weight : 0.0;\n}\nfunction ascendingComparator(c1, c2) {\n    // For objects with same scores, we make the object with the larger index go\n    // first. In an array that pops from the end, this means that the object with\n    // the smaller index will be popped first. This ensures the same output as\n    // the TensorFlow python version.\n    return (c1.score - c2.score) ||\n        ((c1.score === c2.score) && (c2.boxIndex - c1.boxIndex));\n}\n//# sourceMappingURL=non_max_suppression_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"binaryInsert\": () => (/* binding */ binaryInsert),\n/* harmony export */   \"binarySearch\": () => (/* binding */ binarySearch)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Inserts a value into a sorted array. This method allows duplicate, meaning it\n * allows inserting duplicate value, in which case, the element will be inserted\n * at the lowest index of the value.\n * @param arr The array to modify.\n * @param element The element to insert.\n * @param comparator Optional. If no comparator is specified, elements are\n * compared using array_util.defaultComparator, which is suitable for Strings\n * and Numbers in ascending arrays. If the array contains multiple instances of\n * the target value, the left-most instance will be returned. To provide a\n * comparator, it should take 2 arguments to compare and return a negative,\n * zero, or a positive number.\n */\nfunction binaryInsert(arr, element, comparator) {\n    const index = binarySearch(arr, element, comparator);\n    const insertionPoint = index < 0 ? -(index + 1) : index;\n    arr.splice(insertionPoint, 0, element);\n}\n/**\n * Searches the array for the target using binary search, returns the index\n * of the found element, or position to insert if element not found. If no\n * comparator is specified, elements are compared using array_\n * util.defaultComparator, which is suitable for Strings and Numbers in\n * ascending arrays. If the array contains multiple instances of the target\n * value, the left-most instance will be returned.\n * @param arr The array to be searched in.\n * @param target The target to be searched for.\n * @param comparator Should take 2 arguments to compare and return a negative,\n *    zero, or a positive number.\n * @return Lowest index of the target value if found, otherwise the insertion\n *    point where the target should be inserted, in the form of\n *    (-insertionPoint - 1).\n */\nfunction binarySearch(arr, target, comparator) {\n    return binarySearch_(arr, target, comparator || defaultComparator);\n}\n/**\n * Compares its two arguments for order.\n * @param a The first element to be compared.\n * @param b The second element to be compared.\n * @return A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nfunction defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\nfunction binarySearch_(arr, target, comparator) {\n    let left = 0;\n    let right = arr.length;\n    let middle = 0;\n    let found = false;\n    while (left < right) {\n        middle = left + ((right - left) >>> 1);\n        const compareResult = comparator(target, arr[middle]);\n        if (compareResult > 0) {\n            left = middle + 1;\n        }\n        else {\n            right = middle;\n            // If compareResult is 0, the value is found. We record it is found,\n            // and then keep looking because there may be duplicate.\n            found = !compareResult;\n        }\n    }\n    return found ? left : -left - 1;\n}\n//# sourceMappingURL=non_max_suppression_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"whereImpl\": () => (/* binding */ whereImpl)\n/* harmony export */ });\n/* harmony import */ var _ops_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ops/buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/** An implementation of the Where kernel shared between cpu and webgl */\n\nfunction whereImpl(condShape, condVals) {\n    const indices = [];\n    for (let i = 0; i < condVals.length; i++) {\n        if (condVals[i]) {\n            indices.push(i);\n        }\n    }\n    const inBuffer = (0,_ops_buffer__WEBPACK_IMPORTED_MODULE_0__.buffer)(condShape, 'int32');\n    const out = (0,_ops_buffer__WEBPACK_IMPORTED_MODULE_0__.buffer)([indices.length, condShape.length], 'int32');\n    for (let i = 0; i < indices.length; i++) {\n        const loc = inBuffer.indexToLoc(indices[i]);\n        const offset = i * condShape.length;\n        out.values.set(loc, offset);\n    }\n    return out.toTensor();\n}\n//# sourceMappingURL=where_impl.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/base.js":
/*!*********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/base.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdadeltaOptimizer\": () => (/* reexport safe */ _optimizers_adadelta_optimizer__WEBPACK_IMPORTED_MODULE_1__.AdadeltaOptimizer),\n/* harmony export */   \"AdagradOptimizer\": () => (/* reexport safe */ _optimizers_adagrad_optimizer__WEBPACK_IMPORTED_MODULE_2__.AdagradOptimizer),\n/* harmony export */   \"AdamOptimizer\": () => (/* reexport safe */ _optimizers_adam_optimizer__WEBPACK_IMPORTED_MODULE_3__.AdamOptimizer),\n/* harmony export */   \"AdamaxOptimizer\": () => (/* reexport safe */ _optimizers_adamax_optimizer__WEBPACK_IMPORTED_MODULE_4__.AdamaxOptimizer),\n/* harmony export */   \"MomentumOptimizer\": () => (/* reexport safe */ _optimizers_momentum_optimizer__WEBPACK_IMPORTED_MODULE_5__.MomentumOptimizer),\n/* harmony export */   \"Optimizer\": () => (/* reexport safe */ _optimizers_optimizer__WEBPACK_IMPORTED_MODULE_6__.Optimizer),\n/* harmony export */   \"RMSPropOptimizer\": () => (/* reexport safe */ _optimizers_rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_7__.RMSPropOptimizer),\n/* harmony export */   \"SGDOptimizer\": () => (/* reexport safe */ _optimizers_sgd_optimizer__WEBPACK_IMPORTED_MODULE_8__.SGDOptimizer),\n/* harmony export */   \"Tensor\": () => (/* reexport safe */ _tensor__WEBPACK_IMPORTED_MODULE_9__.Tensor),\n/* harmony export */   \"TensorBuffer\": () => (/* reexport safe */ _tensor__WEBPACK_IMPORTED_MODULE_9__.TensorBuffer),\n/* harmony export */   \"Variable\": () => (/* reexport safe */ _tensor__WEBPACK_IMPORTED_MODULE_9__.Variable),\n/* harmony export */   \"Rank\": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_10__.Rank),\n/* harmony export */   \"sumOutType\": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_10__.sumOutType),\n/* harmony export */   \"upcastType\": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_10__.upcastType),\n/* harmony export */   \"OP_SCOPE_SUFFIX\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.OP_SCOPE_SUFFIX),\n/* harmony export */   \"abs\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.abs),\n/* harmony export */   \"acos\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.acos),\n/* harmony export */   \"acosh\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.acosh),\n/* harmony export */   \"add\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.add),\n/* harmony export */   \"addN\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.addN),\n/* harmony export */   \"all\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.all),\n/* harmony export */   \"any\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.any),\n/* harmony export */   \"argMax\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.argMax),\n/* harmony export */   \"argMin\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.argMin),\n/* harmony export */   \"asin\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.asin),\n/* harmony export */   \"asinh\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.asinh),\n/* harmony export */   \"atan\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.atan),\n/* harmony export */   \"atan2\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.atan2),\n/* harmony export */   \"atanh\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.atanh),\n/* harmony export */   \"avgPool\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.avgPool),\n/* harmony export */   \"avgPool3d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.avgPool3d),\n/* harmony export */   \"basicLSTMCell\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.basicLSTMCell),\n/* harmony export */   \"batchNorm\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.batchNorm),\n/* harmony export */   \"batchNorm2d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.batchNorm2d),\n/* harmony export */   \"batchNorm3d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.batchNorm3d),\n/* harmony export */   \"batchNorm4d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.batchNorm4d),\n/* harmony export */   \"batchToSpaceND\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.batchToSpaceND),\n/* harmony export */   \"bincount\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.bincount),\n/* harmony export */   \"booleanMaskAsync\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.booleanMaskAsync),\n/* harmony export */   \"broadcastTo\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.broadcastTo),\n/* harmony export */   \"buffer\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.buffer),\n/* harmony export */   \"cast\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.cast),\n/* harmony export */   \"ceil\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.ceil),\n/* harmony export */   \"clipByValue\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.clipByValue),\n/* harmony export */   \"clone\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.clone),\n/* harmony export */   \"complex\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.complex),\n/* harmony export */   \"concat\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.concat),\n/* harmony export */   \"concat1d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.concat1d),\n/* harmony export */   \"concat2d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.concat2d),\n/* harmony export */   \"concat3d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.concat3d),\n/* harmony export */   \"concat4d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.concat4d),\n/* harmony export */   \"conv1d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.conv1d),\n/* harmony export */   \"conv2d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.conv2d),\n/* harmony export */   \"conv2dTranspose\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.conv2dTranspose),\n/* harmony export */   \"conv3d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.conv3d),\n/* harmony export */   \"conv3dTranspose\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.conv3dTranspose),\n/* harmony export */   \"cos\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.cos),\n/* harmony export */   \"cosh\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.cosh),\n/* harmony export */   \"cosineWindow\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.cosineWindow),\n/* harmony export */   \"cumsum\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.cumsum),\n/* harmony export */   \"denseBincount\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.denseBincount),\n/* harmony export */   \"depthToSpace\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.depthToSpace),\n/* harmony export */   \"depthwiseConv2d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.depthwiseConv2d),\n/* harmony export */   \"diag\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.diag),\n/* harmony export */   \"dilation2d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.dilation2d),\n/* harmony export */   \"div\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.div),\n/* harmony export */   \"divNoNan\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.divNoNan),\n/* harmony export */   \"dot\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.dot),\n/* harmony export */   \"dropout\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.dropout),\n/* harmony export */   \"einsum\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.einsum),\n/* harmony export */   \"elu\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.elu),\n/* harmony export */   \"enclosingPowerOfTwo\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.enclosingPowerOfTwo),\n/* harmony export */   \"equal\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.equal),\n/* harmony export */   \"erf\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.erf),\n/* harmony export */   \"exp\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.exp),\n/* harmony export */   \"expandDims\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.expandDims),\n/* harmony export */   \"expm1\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.expm1),\n/* harmony export */   \"eye\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.eye),\n/* harmony export */   \"fft\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.fft),\n/* harmony export */   \"fill\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.fill),\n/* harmony export */   \"floor\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.floor),\n/* harmony export */   \"floorDiv\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.floorDiv),\n/* harmony export */   \"fused\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.fused),\n/* harmony export */   \"gather\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.gather),\n/* harmony export */   \"gatherND\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.gatherND),\n/* harmony export */   \"greater\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.greater),\n/* harmony export */   \"greaterEqual\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.greaterEqual),\n/* harmony export */   \"ifft\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.ifft),\n/* harmony export */   \"imag\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.imag),\n/* harmony export */   \"image\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.image),\n/* harmony export */   \"inTopKAsync\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.inTopKAsync),\n/* harmony export */   \"irfft\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.irfft),\n/* harmony export */   \"isFinite\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.isFinite),\n/* harmony export */   \"isInf\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.isInf),\n/* harmony export */   \"isNaN\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.isNaN),\n/* harmony export */   \"leakyRelu\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.leakyRelu),\n/* harmony export */   \"less\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.less),\n/* harmony export */   \"lessEqual\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.lessEqual),\n/* harmony export */   \"linalg\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.linalg),\n/* harmony export */   \"linspace\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.linspace),\n/* harmony export */   \"localResponseNormalization\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.localResponseNormalization),\n/* harmony export */   \"log\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.log),\n/* harmony export */   \"log1p\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.log1p),\n/* harmony export */   \"logSigmoid\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logSigmoid),\n/* harmony export */   \"logSoftmax\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logSoftmax),\n/* harmony export */   \"logSumExp\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logSumExp),\n/* harmony export */   \"logicalAnd\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logicalAnd),\n/* harmony export */   \"logicalNot\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logicalNot),\n/* harmony export */   \"logicalOr\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logicalOr),\n/* harmony export */   \"logicalXor\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logicalXor),\n/* harmony export */   \"losses\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.losses),\n/* harmony export */   \"matMul\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.matMul),\n/* harmony export */   \"max\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.max),\n/* harmony export */   \"maxPool\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.maxPool),\n/* harmony export */   \"maxPool3d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.maxPool3d),\n/* harmony export */   \"maxPoolWithArgmax\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.maxPoolWithArgmax),\n/* harmony export */   \"maximum\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.maximum),\n/* harmony export */   \"mean\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.mean),\n/* harmony export */   \"meshgrid\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.meshgrid),\n/* harmony export */   \"min\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.min),\n/* harmony export */   \"minimum\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.minimum),\n/* harmony export */   \"mirrorPad\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.mirrorPad),\n/* harmony export */   \"mod\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.mod),\n/* harmony export */   \"moments\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.moments),\n/* harmony export */   \"movingAverage\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.movingAverage),\n/* harmony export */   \"mul\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.mul),\n/* harmony export */   \"multiRNNCell\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.multiRNNCell),\n/* harmony export */   \"multinomial\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.multinomial),\n/* harmony export */   \"neg\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.neg),\n/* harmony export */   \"norm\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.norm),\n/* harmony export */   \"notEqual\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.notEqual),\n/* harmony export */   \"oneHot\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.oneHot),\n/* harmony export */   \"ones\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.ones),\n/* harmony export */   \"onesLike\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.onesLike),\n/* harmony export */   \"op\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.op),\n/* harmony export */   \"outerProduct\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.outerProduct),\n/* harmony export */   \"pad\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pad),\n/* harmony export */   \"pad1d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pad1d),\n/* harmony export */   \"pad2d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pad2d),\n/* harmony export */   \"pad3d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pad3d),\n/* harmony export */   \"pad4d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pad4d),\n/* harmony export */   \"pool\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pool),\n/* harmony export */   \"pow\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pow),\n/* harmony export */   \"prelu\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.prelu),\n/* harmony export */   \"print\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.print),\n/* harmony export */   \"prod\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.prod),\n/* harmony export */   \"rand\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.rand),\n/* harmony export */   \"randomGamma\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.randomGamma),\n/* harmony export */   \"randomNormal\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.randomNormal),\n/* harmony export */   \"randomUniform\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.randomUniform),\n/* harmony export */   \"range\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.range),\n/* harmony export */   \"real\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.real),\n/* harmony export */   \"reciprocal\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reciprocal),\n/* harmony export */   \"relu\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.relu),\n/* harmony export */   \"relu6\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.relu6),\n/* harmony export */   \"reshape\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reshape),\n/* harmony export */   \"reverse\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reverse),\n/* harmony export */   \"reverse1d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reverse1d),\n/* harmony export */   \"reverse2d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reverse2d),\n/* harmony export */   \"reverse3d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reverse3d),\n/* harmony export */   \"reverse4d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reverse4d),\n/* harmony export */   \"rfft\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.rfft),\n/* harmony export */   \"round\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.round),\n/* harmony export */   \"rsqrt\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.rsqrt),\n/* harmony export */   \"scalar\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.scalar),\n/* harmony export */   \"scatterND\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.scatterND),\n/* harmony export */   \"selu\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.selu),\n/* harmony export */   \"separableConv2d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.separableConv2d),\n/* harmony export */   \"setdiff1dAsync\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.setdiff1dAsync),\n/* harmony export */   \"sigmoid\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sigmoid),\n/* harmony export */   \"sign\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sign),\n/* harmony export */   \"signal\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.signal),\n/* harmony export */   \"sin\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sin),\n/* harmony export */   \"sinh\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sinh),\n/* harmony export */   \"slice\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.slice),\n/* harmony export */   \"slice1d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.slice1d),\n/* harmony export */   \"slice2d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.slice2d),\n/* harmony export */   \"slice3d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.slice3d),\n/* harmony export */   \"slice4d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.slice4d),\n/* harmony export */   \"softmax\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.softmax),\n/* harmony export */   \"softplus\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.softplus),\n/* harmony export */   \"spaceToBatchND\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.spaceToBatchND),\n/* harmony export */   \"sparse\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sparse),\n/* harmony export */   \"sparseToDense\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sparseToDense),\n/* harmony export */   \"spectral\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.spectral),\n/* harmony export */   \"split\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.split),\n/* harmony export */   \"sqrt\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sqrt),\n/* harmony export */   \"square\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.square),\n/* harmony export */   \"squaredDifference\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.squaredDifference),\n/* harmony export */   \"squeeze\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.squeeze),\n/* harmony export */   \"stack\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.stack),\n/* harmony export */   \"step\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.step),\n/* harmony export */   \"stridedSlice\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.stridedSlice),\n/* harmony export */   \"string\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.string),\n/* harmony export */   \"sub\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sub),\n/* harmony export */   \"sum\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sum),\n/* harmony export */   \"tan\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tan),\n/* harmony export */   \"tanh\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tanh),\n/* harmony export */   \"tensor\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor),\n/* harmony export */   \"tensor1d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor1d),\n/* harmony export */   \"tensor2d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor2d),\n/* harmony export */   \"tensor3d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor3d),\n/* harmony export */   \"tensor4d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor4d),\n/* harmony export */   \"tensor5d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor5d),\n/* harmony export */   \"tensor6d\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor6d),\n/* harmony export */   \"tile\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tile),\n/* harmony export */   \"topk\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.topk),\n/* harmony export */   \"transpose\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.transpose),\n/* harmony export */   \"truncatedNormal\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.truncatedNormal),\n/* harmony export */   \"unique\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.unique),\n/* harmony export */   \"unsortedSegmentSum\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.unsortedSegmentSum),\n/* harmony export */   \"unstack\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.unstack),\n/* harmony export */   \"variable\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.variable),\n/* harmony export */   \"where\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.where),\n/* harmony export */   \"whereAsync\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.whereAsync),\n/* harmony export */   \"zeros\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.zeros),\n/* harmony export */   \"zerosLike\": () => (/* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.zerosLike),\n/* harmony export */   \"Reduction\": () => (/* reexport safe */ _ops_loss_ops_utils__WEBPACK_IMPORTED_MODULE_12__.Reduction),\n/* harmony export */   \"train\": () => (/* reexport safe */ _train__WEBPACK_IMPORTED_MODULE_13__.train),\n/* harmony export */   \"backend\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.backend),\n/* harmony export */   \"deprecationWarn\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.deprecationWarn),\n/* harmony export */   \"disableDeprecationWarnings\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.disableDeprecationWarnings),\n/* harmony export */   \"dispose\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.dispose),\n/* harmony export */   \"disposeVariables\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.disposeVariables),\n/* harmony export */   \"enableDebugMode\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.enableDebugMode),\n/* harmony export */   \"enableProdMode\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.enableProdMode),\n/* harmony export */   \"engine\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.engine),\n/* harmony export */   \"findBackend\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.findBackend),\n/* harmony export */   \"findBackendFactory\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.findBackendFactory),\n/* harmony export */   \"getBackend\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.getBackend),\n/* harmony export */   \"keep\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.keep),\n/* harmony export */   \"memory\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.memory),\n/* harmony export */   \"profile\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.profile),\n/* harmony export */   \"ready\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.ready),\n/* harmony export */   \"registerBackend\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.registerBackend),\n/* harmony export */   \"removeBackend\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.removeBackend),\n/* harmony export */   \"setBackend\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.setBackend),\n/* harmony export */   \"setPlatform\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.setPlatform),\n/* harmony export */   \"tidy\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.tidy),\n/* harmony export */   \"time\": () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.time),\n/* harmony export */   \"copyRegisteredKernels\": () => (/* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.copyRegisteredKernels),\n/* harmony export */   \"getGradient\": () => (/* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.getGradient),\n/* harmony export */   \"getKernel\": () => (/* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.getKernel),\n/* harmony export */   \"getKernelsForBackend\": () => (/* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.getKernelsForBackend),\n/* harmony export */   \"registerGradient\": () => (/* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.registerGradient),\n/* harmony export */   \"registerKernel\": () => (/* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.registerKernel),\n/* harmony export */   \"unregisterGradient\": () => (/* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.unregisterGradient),\n/* harmony export */   \"unregisterKernel\": () => (/* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.unregisterKernel),\n/* harmony export */   \"customGrad\": () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.customGrad),\n/* harmony export */   \"grad\": () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.grad),\n/* harmony export */   \"grads\": () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.grads),\n/* harmony export */   \"valueAndGrad\": () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.valueAndGrad),\n/* harmony export */   \"valueAndGrads\": () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.valueAndGrads),\n/* harmony export */   \"variableGrads\": () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.variableGrads),\n/* harmony export */   \"Environment\": () => (/* reexport safe */ _environment__WEBPACK_IMPORTED_MODULE_17__.Environment),\n/* harmony export */   \"env\": () => (/* reexport safe */ _environment__WEBPACK_IMPORTED_MODULE_17__.env),\n/* harmony export */   \"ENV\": () => (/* reexport safe */ _environment__WEBPACK_IMPORTED_MODULE_17__.ENV),\n/* harmony export */   \"version_core\": () => (/* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_18__.version),\n/* harmony export */   \"nextFrame\": () => (/* reexport safe */ _browser_util__WEBPACK_IMPORTED_MODULE_19__.nextFrame),\n/* harmony export */   \"browser\": () => (/* reexport module object */ _ops_browser__WEBPACK_IMPORTED_MODULE_20__),\n/* harmony export */   \"io\": () => (/* reexport module object */ _io_io__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   \"math\": () => (/* reexport module object */ _math__WEBPACK_IMPORTED_MODULE_21__),\n/* harmony export */   \"serialization\": () => (/* reexport module object */ _serialization__WEBPACK_IMPORTED_MODULE_22__),\n/* harmony export */   \"test_util\": () => (/* reexport module object */ _test_util__WEBPACK_IMPORTED_MODULE_23__),\n/* harmony export */   \"util\": () => (/* reexport module object */ _util__WEBPACK_IMPORTED_MODULE_24__),\n/* harmony export */   \"backend_util\": () => (/* reexport module object */ _backends_backend_util__WEBPACK_IMPORTED_MODULE_25__),\n/* harmony export */   \"tensor_util\": () => (/* reexport module object */ _tensor_util__WEBPACK_IMPORTED_MODULE_26__),\n/* harmony export */   \"slice_util\": () => (/* reexport module object */ _ops_slice_util__WEBPACK_IMPORTED_MODULE_27__),\n/* harmony export */   \"gather_util\": () => (/* reexport module object */ _ops_gather_nd_util__WEBPACK_IMPORTED_MODULE_28__),\n/* harmony export */   \"scatter_util\": () => (/* reexport module object */ _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_29__),\n/* harmony export */   \"device_util\": () => (/* reexport module object */ _device_util__WEBPACK_IMPORTED_MODULE_30__),\n/* harmony export */   \"kernel_impls\": () => (/* reexport module object */ _backends_kernel_impls__WEBPACK_IMPORTED_MODULE_31__),\n/* harmony export */   \"KernelBackend\": () => (/* reexport safe */ _backends_backend__WEBPACK_IMPORTED_MODULE_32__.KernelBackend),\n/* harmony export */   \"DataStorage\": () => (/* reexport safe */ _backends_backend__WEBPACK_IMPORTED_MODULE_32__.DataStorage),\n/* harmony export */   \"Abs\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Abs),\n/* harmony export */   \"Acos\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Acos),\n/* harmony export */   \"Acosh\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Acosh),\n/* harmony export */   \"Add\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Add),\n/* harmony export */   \"AddN\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.AddN),\n/* harmony export */   \"All\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.All),\n/* harmony export */   \"Any\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Any),\n/* harmony export */   \"ArgMax\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ArgMax),\n/* harmony export */   \"ArgMin\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ArgMin),\n/* harmony export */   \"Asin\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Asin),\n/* harmony export */   \"Asinh\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Asinh),\n/* harmony export */   \"Atan\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Atan),\n/* harmony export */   \"Atan2\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Atan2),\n/* harmony export */   \"Atanh\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Atanh),\n/* harmony export */   \"AvgPool\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.AvgPool),\n/* harmony export */   \"AvgPool3D\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.AvgPool3D),\n/* harmony export */   \"AvgPool3DGrad\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.AvgPool3DGrad),\n/* harmony export */   \"AvgPoolGrad\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.AvgPoolGrad),\n/* harmony export */   \"BatchMatMul\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.BatchMatMul),\n/* harmony export */   \"BatchToSpaceND\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.BatchToSpaceND),\n/* harmony export */   \"Bincount\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Bincount),\n/* harmony export */   \"BroadcastTo\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.BroadcastTo),\n/* harmony export */   \"Cast\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Cast),\n/* harmony export */   \"Ceil\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Ceil),\n/* harmony export */   \"ClipByValue\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ClipByValue),\n/* harmony export */   \"Complex\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Complex),\n/* harmony export */   \"ComplexAbs\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ComplexAbs),\n/* harmony export */   \"Concat\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Concat),\n/* harmony export */   \"Conv2D\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv2D),\n/* harmony export */   \"Conv2DBackpropFilter\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv2DBackpropFilter),\n/* harmony export */   \"Conv2DBackpropInput\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv2DBackpropInput),\n/* harmony export */   \"Conv3D\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv3D),\n/* harmony export */   \"Conv3DBackpropFilterV2\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv3DBackpropFilterV2),\n/* harmony export */   \"Conv3DBackpropInputV2\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv3DBackpropInputV2),\n/* harmony export */   \"Cos\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Cos),\n/* harmony export */   \"Cosh\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Cosh),\n/* harmony export */   \"CropAndResize\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.CropAndResize),\n/* harmony export */   \"Cumsum\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Cumsum),\n/* harmony export */   \"DenseBincount\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.DenseBincount),\n/* harmony export */   \"DepthToSpace\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.DepthToSpace),\n/* harmony export */   \"DepthwiseConv2dNative\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.DepthwiseConv2dNative),\n/* harmony export */   \"DepthwiseConv2dNativeBackpropFilter\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.DepthwiseConv2dNativeBackpropFilter),\n/* harmony export */   \"DepthwiseConv2dNativeBackpropInput\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.DepthwiseConv2dNativeBackpropInput),\n/* harmony export */   \"Diag\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Diag),\n/* harmony export */   \"Dilation2D\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Dilation2D),\n/* harmony export */   \"Dilation2DBackpropFilter\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Dilation2DBackpropFilter),\n/* harmony export */   \"Dilation2DBackpropInput\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Dilation2DBackpropInput),\n/* harmony export */   \"Einsum\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Einsum),\n/* harmony export */   \"Elu\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Elu),\n/* harmony export */   \"EluGrad\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.EluGrad),\n/* harmony export */   \"Equal\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Equal),\n/* harmony export */   \"Erf\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Erf),\n/* harmony export */   \"Exp\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Exp),\n/* harmony export */   \"ExpandDims\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ExpandDims),\n/* harmony export */   \"Expm1\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Expm1),\n/* harmony export */   \"FFT\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FFT),\n/* harmony export */   \"Fill\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Fill),\n/* harmony export */   \"FlipLeftRight\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FlipLeftRight),\n/* harmony export */   \"Floor\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Floor),\n/* harmony export */   \"FloorDiv\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FloorDiv),\n/* harmony export */   \"FromPixels\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FromPixels),\n/* harmony export */   \"FusedBatchNorm\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FusedBatchNorm),\n/* harmony export */   \"FusedConv2D\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FusedConv2D),\n/* harmony export */   \"FusedDepthwiseConv2D\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FusedDepthwiseConv2D),\n/* harmony export */   \"GatherNd\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.GatherNd),\n/* harmony export */   \"GatherV2\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.GatherV2),\n/* harmony export */   \"Greater\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Greater),\n/* harmony export */   \"GreaterEqual\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.GreaterEqual),\n/* harmony export */   \"IFFT\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.IFFT),\n/* harmony export */   \"Identity\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Identity),\n/* harmony export */   \"Imag\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Imag),\n/* harmony export */   \"IsFinite\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.IsFinite),\n/* harmony export */   \"IsInf\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.IsInf),\n/* harmony export */   \"IsNan\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.IsNan),\n/* harmony export */   \"LRN\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LRN),\n/* harmony export */   \"LRNGrad\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LRNGrad),\n/* harmony export */   \"LeakyRelu\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LeakyRelu),\n/* harmony export */   \"Less\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Less),\n/* harmony export */   \"LessEqual\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LessEqual),\n/* harmony export */   \"LinSpace\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LinSpace),\n/* harmony export */   \"Log\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Log),\n/* harmony export */   \"Log1p\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Log1p),\n/* harmony export */   \"LogSoftmax\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LogSoftmax),\n/* harmony export */   \"LogicalAnd\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LogicalAnd),\n/* harmony export */   \"LogicalNot\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LogicalNot),\n/* harmony export */   \"LogicalOr\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LogicalOr),\n/* harmony export */   \"Max\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Max),\n/* harmony export */   \"MaxPool\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MaxPool),\n/* harmony export */   \"MaxPool3D\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MaxPool3D),\n/* harmony export */   \"MaxPool3DGrad\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MaxPool3DGrad),\n/* harmony export */   \"MaxPoolGrad\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MaxPoolGrad),\n/* harmony export */   \"MaxPoolWithArgmax\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MaxPoolWithArgmax),\n/* harmony export */   \"Maximum\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Maximum),\n/* harmony export */   \"Mean\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Mean),\n/* harmony export */   \"Min\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Min),\n/* harmony export */   \"Minimum\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Minimum),\n/* harmony export */   \"MirrorPad\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MirrorPad),\n/* harmony export */   \"Mod\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Mod),\n/* harmony export */   \"Multinomial\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Multinomial),\n/* harmony export */   \"Multiply\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Multiply),\n/* harmony export */   \"Neg\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Neg),\n/* harmony export */   \"NonMaxSuppressionV3\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.NonMaxSuppressionV3),\n/* harmony export */   \"NonMaxSuppressionV4\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.NonMaxSuppressionV4),\n/* harmony export */   \"NonMaxSuppressionV5\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.NonMaxSuppressionV5),\n/* harmony export */   \"NotEqual\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.NotEqual),\n/* harmony export */   \"OneHot\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.OneHot),\n/* harmony export */   \"OnesLike\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.OnesLike),\n/* harmony export */   \"Pack\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Pack),\n/* harmony export */   \"PadV2\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.PadV2),\n/* harmony export */   \"Pool\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Pool),\n/* harmony export */   \"Pow\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Pow),\n/* harmony export */   \"Prelu\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Prelu),\n/* harmony export */   \"Prod\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Prod),\n/* harmony export */   \"Range\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Range),\n/* harmony export */   \"Real\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Real),\n/* harmony export */   \"RealDiv\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.RealDiv),\n/* harmony export */   \"Reciprocal\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Reciprocal),\n/* harmony export */   \"Relu\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Relu),\n/* harmony export */   \"Relu6\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Relu6),\n/* harmony export */   \"Reshape\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Reshape),\n/* harmony export */   \"ResizeBilinear\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ResizeBilinear),\n/* harmony export */   \"ResizeBilinearGrad\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ResizeBilinearGrad),\n/* harmony export */   \"ResizeNearestNeighbor\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ResizeNearestNeighbor),\n/* harmony export */   \"ResizeNearestNeighborGrad\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ResizeNearestNeighborGrad),\n/* harmony export */   \"Reverse\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Reverse),\n/* harmony export */   \"RotateWithOffset\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.RotateWithOffset),\n/* harmony export */   \"Round\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Round),\n/* harmony export */   \"Rsqrt\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Rsqrt),\n/* harmony export */   \"ScatterNd\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ScatterNd),\n/* harmony export */   \"Select\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Select),\n/* harmony export */   \"Selu\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Selu),\n/* harmony export */   \"Sigmoid\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sigmoid),\n/* harmony export */   \"Sign\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sign),\n/* harmony export */   \"Sin\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sin),\n/* harmony export */   \"Sinh\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sinh),\n/* harmony export */   \"Slice\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Slice),\n/* harmony export */   \"Softmax\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Softmax),\n/* harmony export */   \"Softplus\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Softplus),\n/* harmony export */   \"SpaceToBatchND\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SpaceToBatchND),\n/* harmony export */   \"SparseFillEmptyRows\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SparseFillEmptyRows),\n/* harmony export */   \"SparseReshape\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SparseReshape),\n/* harmony export */   \"SparseSegmentMean\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SparseSegmentMean),\n/* harmony export */   \"SparseSegmentSum\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SparseSegmentSum),\n/* harmony export */   \"SparseToDense\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SparseToDense),\n/* harmony export */   \"SplitV\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SplitV),\n/* harmony export */   \"Sqrt\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sqrt),\n/* harmony export */   \"Square\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Square),\n/* harmony export */   \"SquaredDifference\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SquaredDifference),\n/* harmony export */   \"Step\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Step),\n/* harmony export */   \"StridedSlice\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.StridedSlice),\n/* harmony export */   \"StringNGrams\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.StringNGrams),\n/* harmony export */   \"StringSplit\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.StringSplit),\n/* harmony export */   \"StringToHashBucketFast\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.StringToHashBucketFast),\n/* harmony export */   \"Sub\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sub),\n/* harmony export */   \"Sum\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sum),\n/* harmony export */   \"Tan\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Tan),\n/* harmony export */   \"Tanh\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Tanh),\n/* harmony export */   \"Tile\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Tile),\n/* harmony export */   \"TopK\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.TopK),\n/* harmony export */   \"Transform\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Transform),\n/* harmony export */   \"Transpose\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Transpose),\n/* harmony export */   \"Unique\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Unique),\n/* harmony export */   \"Unpack\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Unpack),\n/* harmony export */   \"UnsortedSegmentSum\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.UnsortedSegmentSum),\n/* harmony export */   \"ZerosLike\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ZerosLike),\n/* harmony export */   \"_FusedMatMul\": () => (/* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__._FusedMatMul)\n/* harmony export */ });\n/* harmony import */ var _io_io__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./io/io */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./math */ \"./node_modules/@tensorflow/tfjs-core/dist/math.js\");\n/* harmony import */ var _ops_browser__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ops/browser */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js\");\n/* harmony import */ var _ops_gather_nd_util__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./ops/gather_nd_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js\");\n/* harmony import */ var _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./ops/scatter_nd_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js\");\n/* harmony import */ var _ops_slice_util__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./ops/slice_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _test_util__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./test_util */ \"./node_modules/@tensorflow/tfjs-core/dist/test_util.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./version */ \"./node_modules/@tensorflow/tfjs-core/dist/version.js\");\n/* harmony import */ var _optimizers_adadelta_optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizers/adadelta_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js\");\n/* harmony import */ var _optimizers_adagrad_optimizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./optimizers/adagrad_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js\");\n/* harmony import */ var _optimizers_adam_optimizer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./optimizers/adam_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js\");\n/* harmony import */ var _optimizers_adamax_optimizer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./optimizers/adamax_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js\");\n/* harmony import */ var _optimizers_momentum_optimizer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./optimizers/momentum_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js\");\n/* harmony import */ var _optimizers_optimizer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./optimizers/optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/* harmony import */ var _optimizers_rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./optimizers/rmsprop_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js\");\n/* harmony import */ var _optimizers_sgd_optimizer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./optimizers/sgd_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./types */ \"./node_modules/@tensorflow/tfjs-core/dist/types.js\");\n/* harmony import */ var _ops_ops__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ops/ops */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js\");\n/* harmony import */ var _ops_loss_ops_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ops/loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _train__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./train */ \"./node_modules/@tensorflow/tfjs-core/dist/train.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _kernel_registry__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./kernel_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _browser_util__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./browser_util */ \"./node_modules/@tensorflow/tfjs-core/dist/browser_util.js\");\n/* harmony import */ var _backends_backend_util__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./backends/backend_util */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js\");\n/* harmony import */ var _device_util__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./device_util */ \"./node_modules/@tensorflow/tfjs-core/dist/device_util.js\");\n/* harmony import */ var _backends_kernel_impls__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./backends/kernel_impls */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js\");\n/* harmony import */ var _backends_backend__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./backends/backend */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// base.ts is tfjs-core without auto registration of things like flags,\n// gradients, chained ops or the opHandler. See base_side_effects.ts for parts\n// tfjs core that are required side effects.\n/**\n * @fileoverview\n * @suppress {partialAlias} Optimization disabled due to passing the module\n * object into a function below:\n *\n *   import * as ops from './ops/ops';\n *   setOpHandler(ops);\n */\n// Serialization.\n\n\n\n\n\n\n\n\n\n\n\n// Optimizers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Top-level method exports.\n\n// Second level exports.\n\n\n\n\n\n// Backend specific.\n\n// Export all kernel names / info.\n\n//# sourceMappingURL=base.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/base.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flags */ \"./node_modules/@tensorflow/tfjs-core/dist/flags.js\");\n/* harmony import */ var _platforms_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./platforms/platform_browser */ \"./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js\");\n/* harmony import */ var _platforms_platform_node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./platforms/platform_node */ \"./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js\");\n/* harmony import */ var _ops_buffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ops/buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _ops_cast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ops/cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _ops_clone__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ops/clone */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js\");\n/* harmony import */ var _ops_print__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ops/print */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/print.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Required side effectful code for tfjs-core\n// Set up Engine and ENV\n\n(0,_engine__WEBPACK_IMPORTED_MODULE_0__.getOrMakeEngine)();\n// Register backend-agnostic flags.\n\n// Register platforms\n\n\n// Set up OpHandler\n\n\n\n\n\nconst opHandler = {\n    buffer: _ops_buffer__WEBPACK_IMPORTED_MODULE_5__.buffer,\n    cast: _ops_cast__WEBPACK_IMPORTED_MODULE_6__.cast,\n    clone: _ops_clone__WEBPACK_IMPORTED_MODULE_7__.clone,\n    print: _ops_print__WEBPACK_IMPORTED_MODULE_8__.print\n};\n(0,_tensor__WEBPACK_IMPORTED_MODULE_4__.setOpHandler)(opHandler);\n//# sourceMappingURL=base_side_effects.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/browser_util.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/browser_util.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nextFrame\": () => (/* binding */ nextFrame)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst delayCallback = (() => {\n    if (typeof requestAnimationFrame !== 'undefined') {\n        return requestAnimationFrame;\n    }\n    else if (typeof setImmediate !== 'undefined') {\n        return setImmediate;\n    }\n    return (f) => f(); // no delays\n})();\n/**\n * Returns a promise that resolve when a requestAnimationFrame has completed.\n *\n * On Node.js this uses setImmediate instead of requestAnimationFrame.\n *\n * This is simply a sugar method so that users can do the following:\n * `await tf.nextFrame();`\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nfunction nextFrame() {\n    return new Promise(resolve => delayCallback(() => resolve()));\n}\n\n//# sourceMappingURL=browser_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/browser_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/device_util.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/device_util.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isMobile\": () => (/* binding */ isMobile),\n/* harmony export */   \"isBrowser\": () => (/* binding */ isBrowser)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line:no-any\nfunction _isNavigatorDefined() {\n    return typeof navigator !== 'undefined' && navigator != null;\n}\nfunction isMobile(nav) {\n    if (nav || _isNavigatorDefined()) {\n        if (!nav) {\n            nav = navigator;\n        }\n        if (nav.product === 'ReactNative') {\n            return true;\n        }\n        // tslint:disable-next-line:no-any\n        const a = nav.userAgent || nav.vendor || window.opera;\n        // tslint:disable-next-line:max-line-length\n        return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n            .test(a) ||\n            // tslint:disable-next-line:max-line-length\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n                .test(a.substr(0, 4));\n    }\n    return false;\n}\nfunction isBrowser() {\n    return (typeof window !== 'undefined' && window.document != null) ||\n        //@ts-ignore\n        (typeof WorkerGlobalScope !== 'undefined');\n}\n//# sourceMappingURL=device_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/device_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/engine.js":
/*!***********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/engine.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Engine\": () => (/* binding */ Engine),\n/* harmony export */   \"getOrMakeEngine\": () => (/* binding */ getOrMakeEngine),\n/* harmony export */   \"ENGINE\": () => (/* binding */ ENGINE),\n/* harmony export */   \"add\": () => (/* binding */ add)\n/* harmony export */ });\n/* harmony import */ var _backends_backend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./backends/backend */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _global_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./global_util */ \"./node_modules/@tensorflow/tfjs-core/dist/global_util.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _kernel_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kernel_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js\");\n/* harmony import */ var _profiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./profiler */ \"./node_modules/@tensorflow/tfjs-core/dist/profiler.js\");\n/* harmony import */ var _tape__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tape */ \"./node_modules/@tensorflow/tfjs-core/dist/tape.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\nfunction isRegisteredKernelInvocation(kernelInvocation) {\n    return kernelInvocation.kernelName != null;\n}\nclass EngineState {\n    constructor() {\n        // Public since optimizers will use it.\n        this.registeredVariables = {};\n        this.nextTapeNodeId = 0;\n        this.numBytes = 0;\n        this.numTensors = 0;\n        this.numStringTensors = 0;\n        this.numDataBuffers = 0;\n        // Number of nested tf.grad() statements when computing higher-order\n        // gradients. E.g. `1` for first-order gradients and `2` for second-order\n        // gradients. Used to track if the tape should be removed after a backprop.\n        this.gradientDepth = 0;\n        // Number of nested kernel calls. When kernel depth is greater than 1, we turn\n        // off the tape.\n        this.kernelDepth = 0;\n        this.scopeStack = [];\n        /**\n         * Keeps track of the number of data moves during a kernel execution. We\n         * maintain a stack since kernels can call other kernels, recursively.\n         */\n        this.numDataMovesStack = [];\n        this.nextScopeId = 0;\n        this.tensorInfo = new WeakMap();\n        this.profiling = false;\n        this.activeProfile = {\n            newBytes: 0,\n            newTensors: 0,\n            peakBytes: 0,\n            kernels: [],\n            result: null,\n            get kernelNames() {\n                return Array.from(new Set(this.kernels.map(k => k.name)));\n            }\n        };\n    }\n    dispose() {\n        for (const variableName in this.registeredVariables) {\n            this.registeredVariables[variableName].dispose();\n        }\n    }\n}\nclass Engine {\n    constructor(ENV) {\n        this.ENV = ENV;\n        this.registry = {};\n        this.registryFactory = {};\n        this.pendingBackendInitId = 0;\n        this.state = new EngineState();\n    }\n    async ready() {\n        if (this.pendingBackendInit != null) {\n            return this.pendingBackendInit.then(() => { });\n        }\n        if (this.backendInstance != null) {\n            return;\n        }\n        const sortedBackends = this.getSortedBackends();\n        for (let i = 0; i < sortedBackends.length; i++) {\n            const backendName = sortedBackends[i];\n            const success = await this.initializeBackend(backendName).success;\n            if (success) {\n                await this.setBackend(backendName);\n                return;\n            }\n        }\n        throw new Error(`Could not initialize any backends, all backend initializations ` +\n            `failed.`);\n    }\n    get backend() {\n        if (this.pendingBackendInit != null) {\n            throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make ` +\n                `sure to await tf.ready() or await tf.setBackend() before calling ` +\n                `other methods`);\n        }\n        if (this.backendInstance == null) {\n            const { name, asyncInit } = this.initializeBackendsAndReturnBest();\n            if (asyncInit) {\n                throw new Error(`The highest priority backend '${name}' has not yet been ` +\n                    `initialized. Make sure to await tf.ready() or ` +\n                    `await tf.setBackend() before calling other methods`);\n            }\n            this.setBackend(name);\n        }\n        return this.backendInstance;\n    }\n    backendNames() {\n        return Object.keys(this.registryFactory);\n    }\n    findBackend(backendName) {\n        if (!(backendName in this.registry)) {\n            // If the backend hasn't been initialized but we have a registry entry for\n            // it, initialize it and return it.\n            if (backendName in this.registryFactory) {\n                const { asyncInit } = this.initializeBackend(backendName);\n                if (asyncInit) {\n                    // Backend is not ready yet.\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        return this.registry[backendName];\n    }\n    findBackendFactory(backendName) {\n        if (!(backendName in this.registryFactory)) {\n            return null;\n        }\n        return this.registryFactory[backendName].factory;\n    }\n    registerBackend(backendName, factory, priority = 1) {\n        if (backendName in this.registryFactory) {\n            console.warn(`${backendName} backend was already registered. ` +\n                `Reusing existing backend factory.`);\n            return false;\n        }\n        this.registryFactory[backendName] = { factory, priority };\n        return true;\n    }\n    async setBackend(backendName) {\n        if (this.registryFactory[backendName] == null) {\n            throw new Error(`Backend name '${backendName}' not found in registry`);\n        }\n        this.backendName = backendName;\n        if (this.registry[backendName] == null) {\n            this.backendInstance = null;\n            const { success, asyncInit } = this.initializeBackend(backendName);\n            const result = asyncInit ? await success : success;\n            if (!result) {\n                return false;\n            }\n        }\n        this.backendInstance = this.registry[backendName];\n        this.setupRegisteredKernels();\n        // Reset the profiler.\n        this.profiler = new _profiler__WEBPACK_IMPORTED_MODULE_1__.Profiler(this.backendInstance);\n        return true;\n    }\n    setupRegisteredKernels() {\n        const kernels = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getKernelsForBackend)(this.backendName);\n        kernels.forEach(kernel => {\n            if (kernel.setupFunc != null) {\n                kernel.setupFunc(this.backendInstance);\n            }\n        });\n    }\n    disposeRegisteredKernels(backendName) {\n        const kernels = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getKernelsForBackend)(backendName);\n        kernels.forEach(kernel => {\n            if (kernel.disposeFunc != null) {\n                kernel.disposeFunc(this.registry[backendName]);\n            }\n        });\n    }\n    /**\n     * Initializes a backend by looking up the backend name in the factory\n     * registry and calling the factory method. Returns a boolean representing\n     * whether the initialization of the backend suceeded. Throws an error if\n     * there is no backend in the factory registry.\n     */\n    initializeBackend(backendName) {\n        const registryFactoryEntry = this.registryFactory[backendName];\n        if (registryFactoryEntry == null) {\n            throw new Error(`Cannot initialize backend ${backendName}, no registration found.`);\n        }\n        try {\n            const backend = registryFactoryEntry.factory();\n            /* Test if the factory returns a promise.\n            Done in a more liberal way than\n            previous 'Promise.resolve(backend)===backend'\n            as we needed to account for custom Promise\n            implementations (e.g. Angular) */\n            if (backend && !(backend instanceof _backends_backend__WEBPACK_IMPORTED_MODULE_3__.KernelBackend) &&\n                typeof backend.then === 'function') {\n                const promiseId = ++this.pendingBackendInitId;\n                const success = backend\n                    .then(backendInstance => {\n                    // Outdated promise. Another backend was set in the meantime.\n                    if (promiseId < this.pendingBackendInitId) {\n                        return false;\n                    }\n                    this.registry[backendName] = backendInstance;\n                    this.pendingBackendInit = null;\n                    return true;\n                })\n                    .catch(err => {\n                    // Outdated promise. Another backend was set in the meantime.\n                    if (promiseId < this.pendingBackendInitId) {\n                        return false;\n                    }\n                    this.pendingBackendInit = null;\n                    console.warn(`Initialization of backend ${backendName} failed`);\n                    console.warn(err.stack || err.message);\n                    return false;\n                });\n                this.pendingBackendInit = success;\n                return { success, asyncInit: true };\n            }\n            else {\n                this.registry[backendName] = backend;\n                return { success: true, asyncInit: false };\n            }\n        }\n        catch (err) {\n            console.warn(`Initialization of backend ${backendName} failed`);\n            console.warn(err.stack || err.message);\n            return { success: false, asyncInit: false };\n        }\n    }\n    removeBackend(backendName) {\n        if (!(backendName in this.registryFactory)) {\n            throw new Error(`${backendName} backend not found in registry`);\n        }\n        if (this.backendName === backendName && this.pendingBackendInit != null) {\n            // There is a pending promise of the backend we want to remove. Make it\n            // obsolete.\n            this.pendingBackendInitId++;\n        }\n        if (backendName in this.registry) {\n            this.disposeRegisteredKernels(backendName);\n            this.registry[backendName].dispose();\n            delete this.registry[backendName];\n        }\n        delete this.registryFactory[backendName];\n        // Unset the backend if it is active.\n        if (this.backendName === backendName) {\n            this.pendingBackendInit = null;\n            this.backendName = null;\n            this.backendInstance = null;\n        }\n    }\n    getSortedBackends() {\n        if (Object.keys(this.registryFactory).length === 0) {\n            throw new Error('No backend found in registry.');\n        }\n        return Object.keys(this.registryFactory).sort((a, b) => {\n            // Highest priority comes first.\n            return this.registryFactory[b].priority -\n                this.registryFactory[a].priority;\n        });\n    }\n    initializeBackendsAndReturnBest() {\n        const sortedBackends = this.getSortedBackends();\n        for (let i = 0; i < sortedBackends.length; i++) {\n            const backendName = sortedBackends[i];\n            const { success, asyncInit } = this.initializeBackend(backendName);\n            if (asyncInit || success) {\n                return { name: backendName, asyncInit };\n            }\n        }\n        throw new Error(`Could not initialize any backends, all backend initializations ` +\n            `failed.`);\n    }\n    moveData(backend, dataId) {\n        const info = this.state.tensorInfo.get(dataId);\n        const srcBackend = info.backend;\n        const values = this.readSync(dataId);\n        const refCount = srcBackend.refCount(dataId);\n        // Delete the tensor from the old backend and move it to the new\n        // backend.\n        srcBackend.disposeData(dataId, true);\n        info.backend = backend;\n        backend.move(dataId, values, info.shape, info.dtype, refCount);\n        if (this.shouldCheckForMemLeaks()) {\n            // Track the number of moves during a kernel execution to correctly\n            // detect memory leaks.\n            this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++;\n        }\n    }\n    tidy(nameOrFn, fn) {\n        let name = null;\n        if (fn == null) {\n            // Called with only 1 argument.\n            if (typeof nameOrFn !== 'function') {\n                throw new Error('Please provide a function to tidy()');\n            }\n            fn = nameOrFn;\n        }\n        else {\n            // Called with 2 arguments.\n            if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n                throw new Error('When calling with two arguments, the first argument ' +\n                    'to tidy() must be a string');\n            }\n            if (typeof fn !== 'function') {\n                throw new Error('When calling with two arguments, the 2nd argument ' +\n                    'to tidy() must be a function');\n            }\n            name = nameOrFn;\n            // TODO(nsthorat,smilkov): Do operation logging and performance\n            // profiling.\n        }\n        let result;\n        return this.scopedRun(() => this.startScope(name), () => this.endScope(result), () => {\n            result = fn();\n            if (result instanceof Promise) {\n                console.error('Cannot return a Promise inside of tidy.');\n            }\n            return result;\n        });\n    }\n    scopedRun(start, end, f) {\n        start();\n        try {\n            const res = f();\n            end();\n            return res;\n        }\n        catch (ex) {\n            end();\n            throw ex;\n        }\n    }\n    nextTensorId() {\n        return Engine.nextTensorId++;\n    }\n    nextVariableId() {\n        return Engine.nextVariableId++;\n    }\n    /**\n     * This method is called instead of the public-facing tensor.clone() when\n     * saving a tensor for backwards pass. It makes sure to add the clone\n     * operation to the tape regardless of being called inside a kernel\n     * execution.\n     */\n    clone(x) {\n        const y = ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Identity, { x });\n        const inputs = { x };\n        const grad = (dy) => ({\n            x: () => {\n                const dtype = 'float32';\n                const gradInputs = { x: dy };\n                const attrs = { dtype };\n                return ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Cast, gradInputs, \n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                attrs);\n            }\n        });\n        const saved = [];\n        this.addTapeNode(this.state.activeScope.name, inputs, [y], grad, saved, {});\n        return y;\n    }\n    /**\n     * Execute a kernel with the given name and return the output tensor.\n     *\n     * @param kernelName The name of the kernel to execute.\n     * @param inputs A map of input names to tensors.\n     * @param attrs A map of attribute names to their values. An attribute is a\n     *     primitive (non-tensor) input to the kernel.\n     * @param inputsToSave A list of tensors, inputs to save for the backprop\n     *     computation.\n     * @param outputsToSave A list of booleans, specifying which output to save\n     *     for the backprop computation. These are booleans since the output\n     * tensors are not visible to the user.\n     */\n    runKernel(kernelName, inputs, attrs) {\n        if (this.backendName == null) {\n            // backend has not been initialized yet (backend initialization is lazy\n            // can be deferred until an op/ kernel is run).\n            // The below getter has side effects that will try to initialize the\n            // backend and set properties like this.backendName\n            // tslint:disable-next-line: no-unused-expression\n            this.backend;\n        }\n        const hasKernel = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getKernel)(kernelName, this.backendName) != null;\n        if (!hasKernel) {\n            throw new Error(`Kernel '${kernelName}' not registered for backend '${this.backendName}'`);\n        }\n        return this.runKernelFunc({ kernelName, inputs, attrs });\n    }\n    shouldCheckForMemLeaks() {\n        return this.ENV.getBool('IS_TEST');\n    }\n    checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos) {\n        const numDataIdsAfter = this.backend.numDataIds();\n        // Count the number of data ids associated with the result of the kernel.\n        let numOutputDataIds = 0;\n        outInfos.forEach(info => {\n            // Complex numbers allocate 3 data ids, one for 'real', one for\n            // 'imaginary', and one for the container that holds the former two.\n            numOutputDataIds += (info.dtype === 'complex64' ? 3 : 1);\n        });\n        // Account for the number of moves during kernel execution. A \"data move\"\n        // can happen in the middle of a kernel execution, placing a new (key,value)\n        // pair in the data storage. Since data moves have net zero effect (we\n        // always remove the data from the old backend), we have to cancel them out\n        // when detecting memory leaks.\n        const numMoves = this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1];\n        const dataIdsLeaked = numDataIdsAfter - numDataIdsBefore - numOutputDataIds - numMoves;\n        if (dataIdsLeaked > 0) {\n            throw new Error(`Backend '${this.backendName}' has an internal memory leak ` +\n                `(${dataIdsLeaked} data ids) after running '${kernelName}'`);\n        }\n    }\n    /**\n     * Internal helper method to execute a kernel Func\n     *\n     * Use `runKernel` to execute kernels from outside of engine.\n     */\n    runKernelFunc(kernelParams) {\n        let outputs;\n        let saved = [];\n        const isTapeOn = this.isTapeOn();\n        const startingBytecount = this.state.numBytes;\n        const startingNumTensors = this.state.numTensors;\n        if (this.shouldCheckForMemLeaks()) {\n            this.state.numDataMovesStack.push(0);\n        }\n        let kernelFunc;\n        if (this.backendName == null) {\n            // backend has not been initialized yet (backend initialization is lazy\n            // can be deferred until an op/ kernel is run).\n            // The below getter has side effects that will try to initialize the\n            // backend and set properties like this.backendName\n            // tslint:disable-next-line: no-unused-expression\n            this.backend;\n        }\n        let out;\n        const kernelOrScopeName = isRegisteredKernelInvocation(kernelParams) ?\n            kernelParams.kernelName :\n            this.state.activeScope != null ? this.state.activeScope.name : '';\n        // Create the kernelFunc from either a registered kernel OR passed in\n        // forward/backward functions (used by custom grad). In this context a\n        // kernelFunc wraps a kernel implementation with some bookkeeping.\n        if (isRegisteredKernelInvocation(kernelParams)) {\n            const { kernelName, inputs, attrs } = kernelParams;\n            if (this.backendName == null) {\n                // backend has not been initialized yet (backend initialization is lazy\n                // can be deferred until an op/ kernel is run).\n                // The below getter has side effects that will try to initialize the\n                // backend and set properties like this.backendName\n                // tslint:disable-next-line: no-unused-expression\n                this.backend;\n            }\n            const kernel = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getKernel)(kernelName, this.backendName);\n            _util__WEBPACK_IMPORTED_MODULE_5__.assert(kernel != null, () => `Cannot find registered kernel '${kernelName}' for backend '${this.backendName}'`);\n            kernelFunc = () => {\n                const numDataIdsBefore = this.backend.numDataIds();\n                out = kernel.kernelFunc({ inputs, attrs, backend: this.backend });\n                const outInfos = Array.isArray(out) ? out : [out];\n                if (this.shouldCheckForMemLeaks()) {\n                    this.checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos);\n                }\n                const outTensors = outInfos.map((outInfo) => {\n                    // todo (yassogba) remove this option (Tensor) when node backend\n                    // methods have been modularized and they all return tensorInfo.\n                    // TensorInfos do not have a rank attribute.\n                    if (outInfo.rank != null) {\n                        return outInfo;\n                    }\n                    const { dataId, shape, dtype } = outInfo;\n                    return this.makeTensorFromDataId(dataId, shape, dtype);\n                });\n                // Save any required inputs and outputs.\n                // Do not save unless we are recording to the tape. Otherwise it would\n                // cause a mem leak since there would be no backprop for these tensors\n                // (which would otherwise dispose them).\n                if (isTapeOn) {\n                    const tensorsToSave = this.getTensorsForGradient(kernelName, inputs, outTensors);\n                    saved = this.saveTensorsForBackwardMode(tensorsToSave);\n                }\n                return outTensors;\n            };\n        }\n        else {\n            const { forwardFunc } = kernelParams;\n            // Running a customGrad op.\n            const saveFunc = (tensors) => {\n                // Do not save unless we are recording to the tape. Otherwise it would\n                // cause a mem leak since we would never run backprop, which disposes\n                // the kept tensors.\n                if (!isTapeOn) {\n                    return;\n                }\n                saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n            };\n            kernelFunc = () => {\n                const numDataIdsBefore = this.backend.numDataIds();\n                out = this.tidy(() => forwardFunc(this.backend, saveFunc));\n                const outs = (Array.isArray(out) ? out : [out]);\n                if (this.shouldCheckForMemLeaks()) {\n                    // Scope name is used to print a more helpful error message if needed.\n                    this.checkKernelForMemLeak(kernelOrScopeName, numDataIdsBefore, outs);\n                }\n                return outs;\n            };\n        }\n        //\n        // Run the kernelFunc. Optionally profiling it.\n        //\n        const { inputs, attrs } = kernelParams;\n        const backwardsFunc = isRegisteredKernelInvocation(kernelParams) ?\n            null :\n            kernelParams.backwardsFunc;\n        let kernelProfile;\n        this.scopedRun(\n        // Stop recording to a tape when running a kernel.\n        () => this.state.kernelDepth++, () => this.state.kernelDepth--, () => {\n            if (!this.ENV.getBool('DEBUG') && !this.state.profiling) {\n                outputs = kernelFunc();\n            }\n            else {\n                kernelProfile = this.profiler.profileKernel(kernelOrScopeName, inputs, () => kernelFunc());\n                if (this.ENV.getBool('DEBUG')) {\n                    this.profiler.logKernelProfile(kernelProfile);\n                }\n                outputs = kernelProfile.outputs;\n            }\n        });\n        if (isTapeOn) {\n            this.addTapeNode(kernelOrScopeName, inputs, outputs, backwardsFunc, saved, attrs);\n        }\n        if (this.state.profiling) {\n            this.state.activeProfile.kernels.push({\n                name: kernelOrScopeName,\n                bytesAdded: this.state.numBytes - startingBytecount,\n                totalBytesSnapshot: this.state.numBytes,\n                tensorsAdded: this.state.numTensors - startingNumTensors,\n                totalTensorsSnapshot: this.state.numTensors,\n                inputShapes: Object.keys(inputs).map(key => inputs[key] != null ? inputs[key].shape : null),\n                outputShapes: outputs.map(item => item.shape),\n                kernelTimeMs: kernelProfile.timeMs,\n                extraInfo: kernelProfile.extraInfo\n            });\n        }\n        return (Array.isArray(out) ? outputs : outputs[0]);\n    }\n    /**\n     * Saves tensors used in forward mode for use in backward mode.\n     *\n     * @param tensors the list of tensors to save.\n     */\n    saveTensorsForBackwardMode(tensors) {\n        const saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n        return saved;\n    }\n    /**\n     * Returns a list of tensors to save for a given gradient calculation.\n     *\n     * @param kernelName name of kernel to look up gradient for.\n     * @param inputs a map of input tensors.\n     * @param outputs an array of output tensors from forward mode of kernel.\n     */\n    getTensorsForGradient(kernelName, inputs, outputs) {\n        const gradConfig = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getGradient)(kernelName);\n        if (gradConfig != null) {\n            const inputsToSave = gradConfig.inputsToSave || [];\n            const outputsToSave = gradConfig.outputsToSave || [];\n            // If saveAllInputs is true, all inputs will be saved. Otherwise, inputs\n            // specified in inputsToSave will be saved.\n            let inputTensorsToSave;\n            if (gradConfig.saveAllInputs) {\n                _util__WEBPACK_IMPORTED_MODULE_5__.assert(Array.isArray(inputs), () => 'saveAllInputs is true, expected inputs to be an array.');\n                inputTensorsToSave = Object.keys(inputs).map((key) => inputs[key]);\n            }\n            else {\n                inputTensorsToSave = inputsToSave.map((inputName) => inputs[inputName]);\n            }\n            const outputTensorsToSave = outputs.filter((_, i) => outputsToSave[i]);\n            return inputTensorsToSave.concat(outputTensorsToSave);\n        }\n        // We return an empty list rather than throw an error because the kernel we\n        // are looking up may not actually be relevant to backproping through the\n        // overall function\n        //\n        // See 'does not error if irrelevant (pruned) ops are missing grads' test\n        // in gradients_test.ts for an example.\n        return [];\n    }\n    /**\n     * Internal method used by public APIs for tensor creation. Makes a new\n     * tensor with the provided shape, dtype and values. It always\n     * creates a new data id and writes the values to the underlying backend.\n     */\n    makeTensor(values, shape, dtype, backend) {\n        if (values == null) {\n            throw new Error('Values passed to engine.makeTensor() are null');\n        }\n        dtype = dtype || 'float32';\n        backend = backend || this.backend;\n        let backendVals = values;\n        if (dtype === 'string' && _util__WEBPACK_IMPORTED_MODULE_5__.isString(values[0])) {\n            backendVals = values.map(d => _util__WEBPACK_IMPORTED_MODULE_6__.encodeString(d));\n        }\n        const dataId = backend.write(backendVals, shape, dtype);\n        const t = new _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor(shape, dtype, dataId, this.nextTensorId());\n        this.trackTensor(t, backend);\n        // Count bytes for string tensors.\n        if (dtype === 'string') {\n            const info = this.state.tensorInfo.get(dataId);\n            const newBytes = (0,_util__WEBPACK_IMPORTED_MODULE_5__.bytesFromStringArray)(backendVals);\n            this.state.numBytes += newBytes - info.bytes;\n            info.bytes = newBytes;\n        }\n        return t;\n    }\n    /**\n     * Internal method used by backends. Makes a new tensor\n     * that is a wrapper around an existing data id. It doesn't create\n     * a new data id, only increments the ref count used in memory tracking.\n     */\n    makeTensorFromDataId(dataId, shape, dtype, backend) {\n        dtype = dtype || 'float32';\n        const t = new _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor(shape, dtype, dataId, this.nextTensorId());\n        this.trackTensor(t, backend);\n        return t;\n    }\n    makeVariable(initialValue, trainable = true, name, dtype) {\n        name = name || this.nextVariableId().toString();\n        if (dtype != null && dtype !== initialValue.dtype) {\n            initialValue = initialValue.cast(dtype);\n        }\n        const v = new _tensor__WEBPACK_IMPORTED_MODULE_0__.Variable(initialValue, trainable, name, this.nextTensorId());\n        if (this.state.registeredVariables[v.name] != null) {\n            throw new Error(`Variable with name ${v.name} was already registered`);\n        }\n        this.state.registeredVariables[v.name] = v;\n        this.incRef(v, this.backend);\n        return v;\n    }\n    trackTensor(a, backend) {\n        this.state.numTensors++;\n        if (a.dtype === 'string') {\n            this.state.numStringTensors++;\n        }\n        // Bytes for complex numbers are counted by their components. Bytes for\n        // string tensors are counted when writing values.\n        let bytes = 0;\n        if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n            bytes = a.size * _util__WEBPACK_IMPORTED_MODULE_5__.bytesPerElement(a.dtype);\n        }\n        this.state.numBytes += bytes;\n        if (!this.state.tensorInfo.has(a.dataId)) {\n            this.state.numDataBuffers++;\n            this.state.tensorInfo.set(a.dataId, {\n                backend: backend || this.backend,\n                dtype: a.dtype,\n                shape: a.shape,\n                bytes\n            });\n        }\n        if (!(a instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Variable)) {\n            this.track(a);\n        }\n    }\n    // Track the tensor by dataId and increase the refCount for the dataId in the\n    // backend.\n    // TODO(pyu10055): This is currently used by makeVariable method, to increase\n    // refCount on the backend for the dataId. It can potentially be replaced with\n    // Identity op indead of calling backend directly.\n    incRef(a, backend) {\n        this.trackTensor(a, backend);\n        this.backend.incRef(a.dataId);\n    }\n    removeDataId(dataId, backend) {\n        if (this.state.tensorInfo.has(dataId) &&\n            this.state.tensorInfo.get(dataId).backend === backend) {\n            this.state.tensorInfo.delete(dataId);\n            this.state.numDataBuffers--;\n        }\n    }\n    disposeTensor(a) {\n        if (!this.state.tensorInfo.has(a.dataId)) {\n            return;\n        }\n        const info = this.state.tensorInfo.get(a.dataId);\n        this.state.numTensors--;\n        if (a.dtype === 'string') {\n            this.state.numStringTensors--;\n            this.state.numBytes -= info.bytes;\n        }\n        // Don't count bytes for complex numbers as they are counted by their\n        // components.\n        if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n            const bytes = a.size * _util__WEBPACK_IMPORTED_MODULE_5__.bytesPerElement(a.dtype);\n            this.state.numBytes -= bytes;\n        }\n        // Remove the reference to dataId if backend dispose the data successfully\n        if (info.backend.disposeData(a.dataId)) {\n            this.removeDataId(a.dataId, info.backend);\n        }\n        // TODO(nsthorat): Construct an error and save the stack trace for\n        // debugging when in debug mode. Creating a stack trace is too expensive\n        // to do unconditionally.\n    }\n    disposeVariables() {\n        for (const varName in this.state.registeredVariables) {\n            const v = this.state.registeredVariables[varName];\n            this.disposeVariable(v);\n        }\n    }\n    disposeVariable(v) {\n        this.disposeTensor(v);\n        if (this.state.registeredVariables[v.name] != null) {\n            delete this.state.registeredVariables[v.name];\n        }\n    }\n    memory() {\n        const info = this.backend.memory();\n        info.numTensors = this.state.numTensors;\n        info.numDataBuffers = this.state.numDataBuffers;\n        info.numBytes = this.state.numBytes;\n        if (this.state.numStringTensors > 0) {\n            info.unreliable = true;\n            if (info.reasons == null) {\n                info.reasons = [];\n            }\n            info.reasons.push('Memory usage by string tensors is approximate ' +\n                '(2 bytes per character)');\n        }\n        return info;\n    }\n    async profile(query) {\n        this.state.profiling = true;\n        const startBytes = this.state.numBytes;\n        const startNumTensors = this.state.numTensors;\n        this.state.activeProfile.kernels = [];\n        this.state.activeProfile.result = await query();\n        this.state.profiling = false;\n        this.state.activeProfile.peakBytes = Math.max(...this.state.activeProfile.kernels.map(d => d.totalBytesSnapshot));\n        this.state.activeProfile.newBytes = this.state.numBytes - startBytes;\n        this.state.activeProfile.newTensors =\n            this.state.numTensors - startNumTensors;\n        for (const kernel of this.state.activeProfile.kernels) {\n            kernel.kernelTimeMs = await kernel.kernelTimeMs;\n            kernel.extraInfo = await kernel.extraInfo;\n        }\n        return this.state.activeProfile;\n    }\n    isTapeOn() {\n        return this.state.gradientDepth > 0 && this.state.kernelDepth === 0;\n    }\n    addTapeNode(kernelName, inputs, outputs, gradientsFunc, saved, attrs) {\n        const tapeNode = { id: this.state.nextTapeNodeId++, kernelName, inputs, outputs, saved };\n        const gradConfig = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getGradient)(kernelName);\n        if (gradConfig != null) {\n            gradientsFunc = gradConfig.gradFunc;\n        }\n        if (gradientsFunc != null) {\n            tapeNode.gradient = (dys) => {\n                // TODO(smilkov): To optimize back-prop, pass dys that are not used in\n                // the backprop graph to the user as null instead of zeros\n                dys = dys.map((dy, i) => {\n                    if (dy == null) {\n                        const output = outputs[i];\n                        const vals = _util__WEBPACK_IMPORTED_MODULE_5__.makeZerosTypedArray(output.size, output.dtype);\n                        return this.makeTensor(vals, output.shape, output.dtype);\n                    }\n                    return dy;\n                });\n                // Grad functions of ops with single outputs expect a dy, while ops\n                // with multiple outputs expect dys (array of dy).\n                return gradientsFunc(dys.length > 1 ? dys : dys[0], saved, attrs);\n            };\n        }\n        this.state.activeTape.push(tapeNode);\n    }\n    keep(result) {\n        result.kept = true;\n        return result;\n    }\n    startTape() {\n        if (this.state.gradientDepth === 0) {\n            this.state.activeTape = [];\n        }\n        this.state.gradientDepth++;\n    }\n    endTape() {\n        this.state.gradientDepth--;\n    }\n    /**\n     * Start a scope. Use this with endScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n    startScope(name) {\n        const scopeInfo = {\n            track: [],\n            name: 'unnamed scope',\n            id: this.state.nextScopeId++\n        };\n        if (name) {\n            scopeInfo.name = name;\n        }\n        this.state.scopeStack.push(scopeInfo);\n        this.state.activeScope = scopeInfo;\n    }\n    /**\n     * End a scope. Use this with startScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n    endScope(result) {\n        const tensorsToTrackInParent = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_7__.getTensorsInContainer)(result);\n        const tensorsToTrackInParentSet = new Set(tensorsToTrackInParent.map(t => t.id));\n        // Dispose the arrays tracked in this scope.\n        for (let i = 0; i < this.state.activeScope.track.length; i++) {\n            const tensor = this.state.activeScope.track[i];\n            if (!tensor.kept && !tensorsToTrackInParentSet.has(tensor.id)) {\n                tensor.dispose();\n            }\n        }\n        const oldScope = this.state.scopeStack.pop();\n        this.state.activeScope = this.state.scopeStack.length === 0 ?\n            null :\n            this.state.scopeStack[this.state.scopeStack.length - 1];\n        // Track the current result in the parent scope.\n        tensorsToTrackInParent.forEach(tensor => {\n            // Only track the tensor if was allocated in the inner scope and is not\n            // globally kept.\n            if (!tensor.kept && tensor.scopeId === oldScope.id) {\n                this.track(tensor);\n            }\n        });\n    }\n    /**\n     * Returns gradients of `f` with respect to each of the `xs`. The gradients\n     * returned are of the same length as `xs`, but some might be null if `f`\n     * was not a function of that `x`. It also takes optional dy to multiply the\n     * gradient, which defaults to `1`.\n     */\n    gradients(f, xs, dy, allowNoGradients = false) {\n        _util__WEBPACK_IMPORTED_MODULE_5__.assert(xs.length > 0, () => 'gradients() received an empty list of xs.');\n        if (dy != null && dy.dtype !== 'float32') {\n            throw new Error(`dy must have 'float32' dtype, but has '${dy.dtype}'`);\n        }\n        const y = this.scopedRun(() => this.startTape(), () => this.endTape(), () => this.tidy('forward', f));\n        _util__WEBPACK_IMPORTED_MODULE_5__.assert(y instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor, () => 'The result y returned by f() must be a tensor.');\n        // Filter out the nodes that don't connect x => y.\n        const filteredTape = (0,_tape__WEBPACK_IMPORTED_MODULE_8__.getFilteredNodesXToY)(this.state.activeTape, xs, y);\n        if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n            throw new Error('Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\n                'that the f you passed encloses all operations that lead from x ' +\n                'to y.');\n        }\n        return this.tidy('backward', () => {\n            const accumulatedGradientMap = {};\n            accumulatedGradientMap[y.id] = (dy == null) ? ones(y.shape) : dy;\n            // Backprop gradients through the filtered nodes.\n            (0,_tape__WEBPACK_IMPORTED_MODULE_8__.backpropagateGradients)(accumulatedGradientMap, filteredTape, \n            // Pass the tidy function to avoid circular dep with `tape.ts`.\n            f => this.tidy(f), \n            // Pass an add function to avoide a circular dep with `tape.ts`.\n            add);\n            const grads = xs.map(x => accumulatedGradientMap[x.id]);\n            if (this.state.gradientDepth === 0) {\n                // This means that we are not computing higher-order gradients\n                // and can clean up the tape.\n                this.state.activeTape.forEach(node => {\n                    for (const tensor of node.saved) {\n                        tensor.dispose();\n                    }\n                });\n                this.state.activeTape = null;\n            }\n            return { value: y, grads };\n        });\n    }\n    customGrad(f) {\n        _util__WEBPACK_IMPORTED_MODULE_5__.assert(_util__WEBPACK_IMPORTED_MODULE_5__.isFunction(f), () => 'The f passed in customGrad(f) must be a function.');\n        return (...inputs) => {\n            _util__WEBPACK_IMPORTED_MODULE_5__.assert(inputs.every(t => t instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor), () => 'The args passed in customGrad(f)(x1, x2,...) must all be ' +\n                'tensors');\n            let res;\n            const inputMap = {};\n            inputs.forEach((input, i) => {\n                inputMap[i] = input;\n            });\n            const forwardFunc = (_, save) => {\n                res = f(...[...inputs, save]);\n                _util__WEBPACK_IMPORTED_MODULE_5__.assert(res.value instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor, () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.value` is a tensor');\n                _util__WEBPACK_IMPORTED_MODULE_5__.assert(_util__WEBPACK_IMPORTED_MODULE_5__.isFunction(res.gradFunc), () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function.');\n                return res.value;\n            };\n            const backwardsFunc = (dy, saved) => {\n                const gradRes = res.gradFunc(dy, saved);\n                const grads = Array.isArray(gradRes) ? gradRes : [gradRes];\n                _util__WEBPACK_IMPORTED_MODULE_5__.assert(grads.length === inputs.length, () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'the same number of tensors as inputs passed to f(...).');\n                _util__WEBPACK_IMPORTED_MODULE_5__.assert(grads.every(t => t instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor), () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'a list of only tensors.');\n                const gradMap = {};\n                grads.forEach((grad, i) => {\n                    gradMap[i] = () => grad;\n                });\n                return gradMap;\n            };\n            return this.runKernelFunc({\n                forwardFunc,\n                backwardsFunc,\n                inputs: inputMap,\n            });\n        };\n    }\n    readSync(dataId) {\n        // Route the read to the correct backend.\n        const info = this.state.tensorInfo.get(dataId);\n        return info.backend.readSync(dataId);\n    }\n    read(dataId) {\n        // Route the read to the correct backend.\n        const info = this.state.tensorInfo.get(dataId);\n        return info.backend.read(dataId);\n    }\n    async time(query) {\n        const start = (0,_util__WEBPACK_IMPORTED_MODULE_6__.now)();\n        const timingInfo = await this.backend.time(query);\n        timingInfo.wallMs = (0,_util__WEBPACK_IMPORTED_MODULE_6__.now)() - start;\n        return timingInfo;\n    }\n    /**\n     * Tracks a Tensor in the current scope to be automatically cleaned up\n     * when the current scope ends, and returns the value.\n     *\n     * @param result The Tensor to track in the current scope.\n     */\n    track(result) {\n        if (this.state.activeScope != null) {\n            result.scopeId = this.state.activeScope.id;\n            this.state.activeScope.track.push(result);\n        }\n        return result;\n    }\n    get registeredVariables() {\n        return this.state.registeredVariables;\n    }\n    /**\n     * Resets the engine state. Removes all backends but does not remove\n     * registered backend factories.\n     */\n    reset() {\n        // Make any pending promise obsolete.\n        this.pendingBackendInitId++;\n        this.state.dispose();\n        this.ENV.reset();\n        this.state = new EngineState();\n        for (const backendName in this.registry) {\n            this.disposeRegisteredKernels(backendName);\n            this.registry[backendName].dispose();\n            delete this.registry[backendName];\n        }\n        this.backendName = null;\n        this.backendInstance = null;\n        this.pendingBackendInit = null;\n    }\n}\nEngine.nextTensorId = 0;\nEngine.nextVariableId = 0;\nfunction ones(shape) {\n    const values = (0,_util__WEBPACK_IMPORTED_MODULE_5__.makeOnesTypedArray)((0,_util__WEBPACK_IMPORTED_MODULE_5__.sizeFromShape)(shape), 'float32');\n    return ENGINE.makeTensor(values, shape, 'float32');\n}\nfunction getOrMakeEngine() {\n    const ns = (0,_global_util__WEBPACK_IMPORTED_MODULE_9__.getGlobalNamespace)();\n    if (ns._tfengine == null) {\n        const environment = new _environment__WEBPACK_IMPORTED_MODULE_10__.Environment(ns);\n        ns._tfengine = new Engine(environment);\n    }\n    (0,_environment__WEBPACK_IMPORTED_MODULE_10__.setEnvironmentGlobal)(ns._tfengine.ENV);\n    // Tell the current tensor interface that the global engine is responsible\n    // for tracking.\n    (0,_tensor__WEBPACK_IMPORTED_MODULE_0__.setTensorTracker)(() => ns._tfengine);\n    return ns._tfengine;\n}\nconst ENGINE = getOrMakeEngine();\n/**\n * A implementation of the add op for use within engine and tape.\n *\n * This allows us to avoid a circular dependency between add.ts and engine.\n * It is exported to be available in tape tests.\n */\nfunction add(a, b) {\n    // We duplicate Add here to avoid a circular dependency with add.ts.\n    const inputs = { a, b };\n    return ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Add, inputs);\n}\n//# sourceMappingURL=engine.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/engine.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/environment.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/environment.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Environment\": () => (/* binding */ Environment),\n/* harmony export */   \"getQueryParams\": () => (/* binding */ getQueryParams),\n/* harmony export */   \"env\": () => (/* binding */ env),\n/* harmony export */   \"ENV\": () => (/* binding */ ENV),\n/* harmony export */   \"setEnvironmentGlobal\": () => (/* binding */ setEnvironmentGlobal)\n/* harmony export */ });\n/* harmony import */ var _util_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util_base */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nclass Environment {\n    // tslint:disable-next-line: no-any\n    constructor(global) {\n        this.global = global;\n        this.flags = {};\n        this.flagRegistry = {};\n        this.urlFlags = {};\n        // Jasmine spies on this in 'environment_test.ts'\n        this.getQueryParams = getQueryParams;\n        this.populateURLFlags();\n    }\n    setPlatform(platformName, platform) {\n        if (this.platform != null) {\n            console.warn(`Platform ${this.platformName} has already been set. ` +\n                `Overwriting the platform with ${platform}.`);\n        }\n        this.platformName = platformName;\n        this.platform = platform;\n    }\n    registerFlag(flagName, evaluationFn, setHook) {\n        this.flagRegistry[flagName] = { evaluationFn, setHook };\n        // Override the flag value from the URL. This has to happen here because the\n        // environment is initialized before flags get registered.\n        if (this.urlFlags[flagName] != null) {\n            const flagValue = this.urlFlags[flagName];\n            console.warn(`Setting feature override from URL ${flagName}: ${flagValue}.`);\n            this.set(flagName, flagValue);\n        }\n    }\n    async getAsync(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        this.flags[flagName] = await this.evaluateFlag(flagName);\n        return this.flags[flagName];\n    }\n    get(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        const flagValue = this.evaluateFlag(flagName);\n        if ((0,_util_base__WEBPACK_IMPORTED_MODULE_0__.isPromise)(flagValue)) {\n            throw new Error(`Flag ${flagName} cannot be synchronously evaluated. ` +\n                `Please use getAsync() instead.`);\n        }\n        this.flags[flagName] = flagValue;\n        return this.flags[flagName];\n    }\n    getNumber(flagName) {\n        return this.get(flagName);\n    }\n    getBool(flagName) {\n        return this.get(flagName);\n    }\n    getFlags() {\n        return this.flags;\n    }\n    // For backwards compatibility.\n    get features() {\n        return this.flags;\n    }\n    set(flagName, value) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot set flag ${flagName} as it has not been registered.`);\n        }\n        this.flags[flagName] = value;\n        if (this.flagRegistry[flagName].setHook != null) {\n            this.flagRegistry[flagName].setHook(value);\n        }\n    }\n    evaluateFlag(flagName) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot evaluate flag '${flagName}': no evaluation function found.`);\n        }\n        return this.flagRegistry[flagName].evaluationFn();\n    }\n    setFlags(flags) {\n        this.flags = Object.assign({}, flags);\n    }\n    reset() {\n        this.flags = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    }\n    populateURLFlags() {\n        if (typeof this.global === 'undefined' ||\n            typeof this.global.location === 'undefined' ||\n            typeof this.global.location.search === 'undefined') {\n            return;\n        }\n        const urlParams = this.getQueryParams(this.global.location.search);\n        if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n            const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n            keyValues.forEach(keyValue => {\n                const [key, value] = keyValue.split(':');\n                this.urlFlags[key] = parseValue(key, value);\n            });\n        }\n    }\n}\nfunction getQueryParams(queryString) {\n    const params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction parseValue(flagName, value) {\n    value = value.toLowerCase();\n    if (value === 'true' || value === 'false') {\n        return value === 'true';\n    }\n    else if (`${+value}` === value) {\n        return +value;\n    }\n    throw new Error(`Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nfunction env() {\n    return ENV;\n}\nlet ENV = null;\nfunction setEnvironmentGlobal(environment) {\n    ENV = environment;\n}\n//# sourceMappingURL=environment.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/environment.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/flags.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _device_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./device_util */ \"./node_modules/@tensorflow/tfjs-core/dist/device_util.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst ENV = (0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)();\n/**\n * This file contains environment-related flag registrations.\n */\n/** Whether to enable debug mode. */\nENV.registerFlag('DEBUG', () => false, debugValue => {\n    if (debugValue) {\n        console.warn('Debugging mode is ON. The output of every math call will ' +\n            'be downloaded to CPU and checked for NaNs. ' +\n            'This significantly impacts performance.');\n    }\n});\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_BROWSER', () => _device_util__WEBPACK_IMPORTED_MODULE_2__.isBrowser());\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_NODE', () => (typeof process !== 'undefined') &&\n    (typeof process.versions !== 'undefined') &&\n    (typeof process.versions.node !== 'undefined'));\n/** Whether this browser is Chrome. */\nENV.registerFlag('IS_CHROME', () => typeof navigator !== 'undefined' && navigator != null &&\n    navigator.userAgent != null && /Chrome/.test(navigator.userAgent) &&\n    /Google Inc/.test(navigator.vendor));\n/**\n * True when the environment is \"production\" where we disable safety checks\n * to gain performance.\n */\nENV.registerFlag('PROD', () => false);\n/**\n * Whether to do sanity checks when inferring a shape from user-provided\n * values, used when creating a new tensor.\n */\nENV.registerFlag('TENSORLIKE_CHECK_SHAPE_CONSISTENCY', () => ENV.getBool('DEBUG'));\n/** Whether deprecation warnings are enabled. */\nENV.registerFlag('DEPRECATION_WARNINGS_ENABLED', () => true);\n/** True if running unit tests. */\nENV.registerFlag('IS_TEST', () => false);\n/** Whether to check computation result for errors. */\nENV.registerFlag('CHECK_COMPUTATION_FOR_ERRORS', () => true);\n/** Whether the backend needs to wrap input to imageBitmap. */\nENV.registerFlag('WRAP_TO_IMAGEBITMAP', () => false);\n//# sourceMappingURL=flags.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/flags.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/global_util.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/global_util.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getGlobalNamespace\": () => (/* binding */ getGlobalNamespace),\n/* harmony export */   \"getGlobal\": () => (/* binding */ getGlobal)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Note that the identifier globalNameSpace is scoped to this module, but will\n// always resolve to the same global object regardless of how the module is\n// resolved.\n// tslint:disable-next-line:no-any\nlet globalNameSpace;\n// tslint:disable-next-line:no-any\nfunction getGlobalNamespace() {\n    if (globalNameSpace == null) {\n        // tslint:disable-next-line:no-any\n        let ns;\n        if (typeof (window) !== 'undefined') {\n            ns = window;\n        }\n        else if (typeof (global) !== 'undefined') {\n            ns = global;\n        }\n        else if (typeof (process) !== 'undefined') {\n            ns = process;\n        }\n        else if (typeof (self) !== 'undefined') {\n            ns = self;\n        }\n        else {\n            throw new Error('Could not find a global object');\n        }\n        globalNameSpace = ns;\n    }\n    return globalNameSpace;\n}\n// tslint:disable-next-line:no-any\nfunction getGlobalMap() {\n    const ns = getGlobalNamespace();\n    if (ns._tfGlobals == null) {\n        ns._tfGlobals = new Map();\n    }\n    return ns._tfGlobals;\n}\n/**\n * Returns a globally accessible 'singleton' object.\n *\n * @param key the name of the object\n * @param init a function to initialize to initialize this object\n *             the first time it is fetched.\n */\nfunction getGlobal(key, init) {\n    const globalMap = getGlobalMap();\n    if (globalMap.has(key)) {\n        return globalMap.get(key);\n    }\n    else {\n        const singleton = init();\n        globalMap.set(key, singleton);\n        return globalMap.get(key);\n    }\n}\n//# sourceMappingURL=global_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/global_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/globals.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/globals.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enableProdMode\": () => (/* binding */ enableProdMode),\n/* harmony export */   \"enableDebugMode\": () => (/* binding */ enableDebugMode),\n/* harmony export */   \"disableDeprecationWarnings\": () => (/* binding */ disableDeprecationWarnings),\n/* harmony export */   \"deprecationWarn\": () => (/* binding */ deprecationWarn),\n/* harmony export */   \"disposeVariables\": () => (/* binding */ disposeVariables),\n/* harmony export */   \"engine\": () => (/* binding */ engine),\n/* harmony export */   \"memory\": () => (/* binding */ memory),\n/* harmony export */   \"profile\": () => (/* binding */ profile),\n/* harmony export */   \"tidy\": () => (/* binding */ tidy),\n/* harmony export */   \"dispose\": () => (/* binding */ dispose),\n/* harmony export */   \"keep\": () => (/* binding */ keep),\n/* harmony export */   \"time\": () => (/* binding */ time),\n/* harmony export */   \"setBackend\": () => (/* binding */ setBackend),\n/* harmony export */   \"ready\": () => (/* binding */ ready),\n/* harmony export */   \"getBackend\": () => (/* binding */ getBackend),\n/* harmony export */   \"removeBackend\": () => (/* binding */ removeBackend),\n/* harmony export */   \"findBackend\": () => (/* binding */ findBackend),\n/* harmony export */   \"findBackendFactory\": () => (/* binding */ findBackendFactory),\n/* harmony export */   \"registerBackend\": () => (/* binding */ registerBackend),\n/* harmony export */   \"backend\": () => (/* binding */ backend),\n/* harmony export */   \"setPlatform\": () => (/* binding */ setPlatform)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Enables production mode which disables correctness checks in favor of\n * performance.\n *\n * @doc {heading: 'Environment'}\n */\nfunction enableProdMode() {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().set('PROD', true);\n}\n/**\n * Enables debug mode which will log information about all executed kernels:\n * the elapsed time of the kernel execution, as well as the rank, shape, and\n * size of the output tensor.\n *\n * Debug mode will significantly slow down your application as it will\n * download the result of every operation to the CPU. This should not be used in\n * production. Debug mode does not affect the timing information of the kernel\n * execution as we do not measure download time in the kernel execution time.\n *\n * See also: `tf.profile`, `tf.memory`.\n *\n * @doc {heading: 'Environment'}\n */\nfunction enableDebugMode() {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().set('DEBUG', true);\n}\n/** Globally disables deprecation warnings */\nfunction disableDeprecationWarnings() {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().set('DEPRECATION_WARNINGS_ENABLED', false);\n    console.warn(`TensorFlow.js deprecation warnings have been disabled.`);\n}\n/** Warn users about deprecated functionality. */\nfunction deprecationWarn(msg) {\n    if ((0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().getBool('DEPRECATION_WARNINGS_ENABLED')) {\n        console.warn(msg + ' You can disable deprecation warnings with ' +\n            'tf.disableDeprecationWarnings().');\n    }\n}\n(0,_tensor__WEBPACK_IMPORTED_MODULE_1__.setDeprecationWarningFn)(deprecationWarn);\n/**\n * Dispose all variables kept in backend engine.\n *\n * @doc {heading: 'Environment'}\n */\nfunction disposeVariables() {\n    _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.disposeVariables();\n}\n/**\n * It returns the global engine that keeps track of all tensors and backends.\n *\n * @doc {heading: 'Environment'}\n */\nfunction engine() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE;\n}\n/**\n * Returns memory info at the current time in the program. The result is an\n * object with the following properties:\n *\n * - `numBytes`: Number of bytes allocated (undisposed) at this time.\n * - `numTensors`: Number of unique tensors allocated.\n * - `numDataBuffers`: Number of unique data buffers allocated\n *   (undisposed) at this time, which is ≤ the number of tensors\n *   (e.g. `a.reshape(newShape)` makes a new Tensor that shares the same\n *   data buffer with `a`).\n * - `unreliable`: True if the memory usage is unreliable. See `reasons` when\n *    `unreliable` is true.\n * - `reasons`: `string[]`, reasons why the memory is unreliable, present if\n *    `unreliable` is true.\n *\n * WebGL Properties:\n * - `numBytesInGPU`: Number of bytes allocated (undisposed) in the GPU only at\n *     this time.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nfunction memory() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.memory();\n}\n/**\n * Executes the provided function `f()` and returns a promise that resolves\n * with information about the function's memory use:\n * - `newBytes`: the number of new bytes allocated\n * - `newTensors`: the number of new tensors created\n * - `peakBytes`: the peak number of bytes allocated\n * - `kernels`: an array of objects for each kernel involved that reports\n * their input and output shapes, number of bytes used, and number of new\n * tensors created.\n * - `kernelNames`: an array of unique strings with just the names of the\n * kernels in the `kernels` array.\n *\n * ```js\n * const profile = await tf.profile(() => {\n *   const x = tf.tensor1d([1, 2, 3]);\n *   let x2 = x.square();\n *   x2.dispose();\n *   x2 = x.square();\n *   x2.dispose();\n *   return x;\n * });\n *\n * console.log(`newBytes: ${profile.newBytes}`);\n * console.log(`newTensors: ${profile.newTensors}`);\n * console.log(`byte usage over all kernels: ${profile.kernels.map(k =>\n * k.totalBytesSnapshot)}`);\n * ```\n *\n *\n * @doc {heading: 'Performance', subheading: 'Profile'}\n */\nfunction profile(f) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.profile(f);\n}\n/**\n * Executes the provided function `fn` and after it is executed, cleans up all\n * intermediate tensors allocated by `fn` except those returned by `fn`.\n * `fn` must not return a Promise (async functions not allowed). The returned\n * result can be a complex object.\n *\n * Using this method helps avoid memory leaks. In general, wrap calls to\n * operations in `tf.tidy` for automatic memory cleanup.\n *\n * NOTE: Variables do *not* get cleaned up when inside a tidy(). If you want to\n * dispose variables, please use `tf.disposeVariables` or call dispose()\n * directly on variables.\n *\n * ```js\n * // y = 2 ^ 2 + 1\n * const y = tf.tidy(() => {\n *   // a, b, and one will be cleaned up when the tidy ends.\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *   const b = a.square();\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * y.print();\n * ```\n *\n * @param nameOrFn The name of the closure, or the function to execute.\n *     If a name is provided, the 2nd argument should be the function.\n *     If debug mode is on, the timing and the memory usage of the function\n *     will be tracked and displayed on the console using the provided name.\n * @param fn The function to execute.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nfunction tidy(nameOrFn, fn) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(nameOrFn, fn);\n}\n/**\n * Disposes any `tf.Tensor`s found within the provided object.\n *\n * @param container an object that may be a `tf.Tensor` or may directly\n *     contain `tf.Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. If\n *     the object is not a `tf.Tensor` or does not contain `Tensors`, nothing\n *     happens. In general it is safe to pass any object here, except that\n *     `Promise`s are not supported.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nfunction dispose(container) {\n    const tensors = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_3__.getTensorsInContainer)(container);\n    tensors.forEach(tensor => tensor.dispose());\n}\n/**\n * Keeps a `tf.Tensor` generated inside a `tf.tidy` from being disposed\n * automatically.\n *\n * ```js\n * let b;\n * const y = tf.tidy(() => {\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *\n *   // b will not be cleaned up by the tidy. a and one will be cleaned up\n *   // when the tidy ends.\n *   b = tf.keep(a.square());\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * console.log('y:');\n * y.print();\n * console.log('b:');\n * b.print();\n * ```\n *\n * @param result The tensor to keep from being disposed.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nfunction keep(result) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.keep(result);\n}\n/**\n * Executes `f()` and returns a promise that resolves with timing\n * information.\n *\n * The result is an object with the following properties:\n *\n * - `wallMs`: Wall execution time.\n * - `kernelMs`: Kernel execution time, ignoring data transfer. If using the\n * WebGL backend and the query timer extension is not available, this will\n * return an error object.\n * - On `WebGL` The following additional properties exist:\n *   - `uploadWaitMs`: CPU blocking time on texture uploads.\n *   - `downloadWaitMs`: CPU blocking time on texture downloads (readPixels).\n *\n * ```js\n * const x = tf.randomNormal([20, 20]);\n * const time = await tf.time(() => x.matMul(x));\n *\n * console.log(`kernelMs: ${time.kernelMs}, wallTimeMs: ${time.wallMs}`);\n * ```\n *\n * @param f The function to execute and time.\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nfunction time(f) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.time(f);\n}\n/**\n * Sets the backend (cpu, webgl, wasm, etc) responsible for creating tensors and\n * executing operations on those tensors. Returns a promise that resolves\n * to a boolean if the backend initialization was successful.\n *\n * Note this disposes the current backend, if any, as well as any tensors\n * associated with it. A new backend is initialized, even if it is of the\n * same type as the previous one.\n *\n * @param backendName The name of the backend. Currently supports\n *     `'webgl'|'cpu'` in the browser, `'tensorflow'` under node.js\n *     (requires tfjs-node), and `'wasm'` (requires tfjs-backend-wasm).\n *\n * @doc {heading: 'Backends'}\n */\nfunction setBackend(backendName) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.setBackend(backendName);\n}\n/**\n * Returns a promise that resolves when the currently selected backend (or the\n * highest priority one) has initialized. Await this promise when you are using\n * a backend that has async initialization.\n *\n * @doc {heading: 'Backends'}\n */\nfunction ready() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.ready();\n}\n/**\n * Returns the current backend name (cpu, webgl, etc). The backend is\n * responsible for creating tensors and executing operations on those tensors.\n *\n * @doc {heading: 'Backends'}\n */\nfunction getBackend() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backendName;\n}\n/**\n * Removes a backend and the registered factory.\n *\n * @doc {heading: 'Backends'}\n */\nfunction removeBackend(name) {\n    _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.removeBackend(name);\n}\n/**\n * Finds the backend registered under the provided name. Returns null if the\n * name is not in the registry, or the registration hasn't finished yet.\n */\nfunction findBackend(name) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.findBackend(name);\n}\n/**\n * Finds the backend factory registered under the provided name. Returns a\n * function that produces a new backend when called. Returns null if the name\n * is not in the registry.\n */\nfunction findBackendFactory(name) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.findBackendFactory(name);\n}\n/**\n * Registers a global backend. The registration should happen when importing\n * a module file (e.g. when importing `backend_webgl.ts`), and is used for\n * modular builds (e.g. custom tfjs bundle with only webgl support).\n *\n * @param factory The backend factory function. When called, it should\n * return a backend instance, or a promise of an instance.\n * @param priority The priority of the backend (higher = more important).\n *     In case multiple backends are registered, the priority is used to find\n *     the best backend. Defaults to 1.\n * @return False if there is already a registered backend under this name, true\n *     if not.\n *\n * @doc {heading: 'Backends'}\n */\nfunction registerBackend(name, factory, priority = 1) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registerBackend(name, factory, priority);\n}\n/**\n * Gets the current backend. If no backends have been initialized, this will\n * attempt to initialize the best backend. Will throw an error if the highest\n * priority backend has async initialization, in which case, you should call\n * 'await tf.ready()' before running other code.\n *\n * @doc {heading: 'Backends'}\n */\nfunction backend() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend;\n}\n/**\n * Sets the global platform.\n *\n * @param platformName The name of this platform.\n * @param platform A platform implementation.\n */\nfunction setPlatform(platformName, platform) {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().setPlatform(platformName, platform);\n}\n//# sourceMappingURL=globals.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/globals.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/gradients.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/gradients.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"customGrad\": () => (/* binding */ customGrad),\n/* harmony export */   \"variableGrads\": () => (/* binding */ variableGrads),\n/* harmony export */   \"valueAndGrad\": () => (/* binding */ valueAndGrad),\n/* harmony export */   \"valueAndGrads\": () => (/* binding */ valueAndGrads),\n/* harmony export */   \"grad\": () => (/* binding */ grad),\n/* harmony export */   \"grads\": () => (/* binding */ grads)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Provided `f(x)`, returns another function `g(x, dy?)`, which gives the\n * gradient of `f(x)` with respect to `x`.\n *\n * If `dy` is provided, the gradient of `f(x).mul(dy).sum()` with respect to\n * `x` is computed instead. `f(x)` must take a single tensor `x` and return a\n * single tensor `y`. If `f()` takes multiple inputs, use `tf.grads` instead.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.grad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * g(x).print();\n * ```\n *\n * ```js\n * // f(x) = x ^ 3\n * const f = x => x.pow(tf.scalar(3, 'int32'));\n * // f'(x) = 3x ^ 2\n * const g = tf.grad(f);\n * // f''(x) = 6x\n * const gg = tf.grad(g);\n *\n * const x = tf.tensor1d([2, 3]);\n * gg(x).print();\n * ```\n *\n * @param f The function f(x), to compute gradient for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction grad(f) {\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isFunction(f), () => 'The f passed in grad(f) must be a function');\n    return (x, dy) => {\n        // x can be of any dtype, thus null as the last argument.\n        const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_3__.convertToTensor)(x, 'x', 'tf.grad', 'string_or_numeric');\n        const $dy = (dy != null) ? (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_3__.convertToTensor)(dy, 'dy', 'tf.grad') : null;\n        return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(() => {\n            const { value, grads } = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.gradients(() => f($x), [$x], $dy);\n            if ($dy != null) {\n                _util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch(value.shape, $dy.shape, 'The shape of dy passed in grad(f)(x, dy) must match the shape ' +\n                    'returned by f(x)');\n            }\n            checkGrads(grads);\n            return grads[0];\n        });\n    };\n}\n/**\n * Provided `f(x1, x2,...)`, returns another function `g([x1, x2,...], dy?)`,\n * which gives an array of gradients of `f()` with respect to each input\n * [`x1`,`x2`,...].\n *\n * If `dy` is passed when calling `g()`, the gradient of\n * `f(x1,...).mul(dy).sum()` with respect to each input is computed instead.\n * The provided `f` must take one or more tensors and return a single tensor\n * `y`. If `f()` takes a single input, we recommend using `tf.grad` instead.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df / da = b, df / db = a\n * const g = tf.grads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const [da, db] = g([a, b]);\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @param f The function `f(x1, x2,...)` to compute gradients for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction grads(f) {\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isFunction(f), () => 'The f passed in grads(f) must be a function');\n    return (args, dy) => {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(Array.isArray(args), () => 'The args passed in grads(f)(args) must be an array ' +\n            'of `Tensor`s or `TensorLike`s');\n        // args can be of any dtype, thus null as the last argument.\n        const $args = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_3__.convertToTensorArray)(args, 'args', 'tf.grads', 'string_or_numeric');\n        const $dy = (dy != null) ? (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_3__.convertToTensor)(dy, 'dy', 'tf.grads') : null;\n        return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(() => {\n            const { value, grads } = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.gradients(() => f(...$args), $args, $dy);\n            if ($dy != null) {\n                _util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch(value.shape, $dy.shape, 'The shape of dy passed in grads(f)([x1,...], dy) must ' +\n                    'match the shape returned by f([x1,...])');\n            }\n            checkGrads(grads);\n            return grads;\n        });\n    };\n}\n/**\n * Like `tf.grad`, but also returns the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grad: The gradient of `f(x)` w.r.t `x` (result of `tf.grad`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.valueAndGrad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * const {value, grad} = g(x);\n *\n * console.log('value');\n * value.print();\n * console.log('grad');\n * grad.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction valueAndGrad(f) {\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isFunction(f), () => 'The f passed in valueAndGrad(f) must be a function');\n    return (x, dy) => {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(x instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor, () => 'The x passed in valueAndGrad(f)(x) must be a tensor');\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(dy == null || dy instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor, () => 'The dy passed in valueAndGrad(f)(x, dy) must be a tensor');\n        const { grads, value } = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.gradients(() => f(x), [x], dy);\n        checkGrads(grads);\n        return { grad: grads[0], value };\n    };\n}\n/**\n * Like `tf.grads`, but returns also the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grads: The gradients of `f()` w.r.t each input (result of `tf.grads`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df/da = b, df/db = a\n * const g = tf.valueAndGrads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const {value, grads} = g([a, b]);\n *\n * const [da, db] = grads;\n *\n * console.log('value');\n * value.print();\n *\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction valueAndGrads(f) {\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isFunction(f), () => 'The f passed in valueAndGrads(f) must be a function');\n    return (args, dy) => {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(Array.isArray(args) && args.every(arg => arg instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor), () => 'The args passed in valueAndGrads(f)(args) must be array of ' +\n            'tensors');\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(dy == null || dy instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor, () => 'The dy passed in valueAndGrads(f)(args, dy) must be a tensor');\n        const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.gradients(() => f(...args), args, dy);\n        if (dy != null) {\n            _util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch(res.value.shape, dy.shape, 'The shape of dy passed in valueAndGrads(f)([x1,...], dy) must ' +\n                'match the shape returned by f([x1,...])');\n        }\n        checkGrads(res.grads);\n        return res;\n    };\n}\n/**\n * Computes and returns the gradient of f(x) with respect to the list of\n * trainable variables provided by `varList`. If no list is provided, it\n * defaults to all trainable variables.\n *\n * ```js\n * const a = tf.variable(tf.tensor1d([3, 4]));\n * const b = tf.variable(tf.tensor1d([5, 6]));\n * const x = tf.tensor1d([1, 2]);\n *\n * // f(a, b) = a * x ^ 2 + b * x\n * const f = () => a.mul(x.square()).add(b.mul(x)).sum();\n * // df/da = x ^ 2, df/db = x\n * const {value, grads} = tf.variableGrads(f);\n *\n * Object.keys(grads).forEach(varName => grads[varName].print());\n * ```\n *\n * @param f The function to execute. f() should return a scalar.\n * @param varList The list of variables to compute the gradients with respect\n *     to. Defaults to all trainable variables.\n * @returns An object with the following keys and values:\n *   - `value`: The value of the function `f`.\n *   - `grads`: A map from the names of the variables to the gradients.\n *     If the `varList` argument is provided explicitly and contains a subset of\n *     non-trainable variables, this map in the return value will contain keys\n *     that map the names of the non-trainable variables to `null`.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction variableGrads(f, varList) {\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isFunction(f), () => 'The f passed in variableGrads(f) must be a function');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(varList == null ||\n        Array.isArray(varList) && varList.every(v => v instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Variable), () => 'The varList passed in variableGrads(f, varList) must be an array ' +\n        'of variables');\n    const specifiedVarList = varList != null;\n    if (!specifiedVarList) {\n        // Get all of the trainable variables.\n        varList = [];\n        for (const varName in _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables) {\n            varList.push(_engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[varName]);\n        }\n    }\n    const specifiedNonTrainable = specifiedVarList ? varList.filter(variable => !variable.trainable) : null;\n    // Prune non-trainable variables.\n    const originalVarCount = varList.length;\n    varList = varList.filter(variable => variable.trainable);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(varList.length > 0, () => `variableGrads() expects at least one of the input variables to ` +\n        `be trainable, but none of the ${originalVarCount} variables is ` +\n        `trainable.`);\n    const allowNoGradients = true;\n    const { value, grads } = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.gradients(f, varList, null, allowNoGradients);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(grads.some(g => g != null), () => 'Cannot find a connection between any variable and the result of ' +\n        'the loss function y=f(x). Please make sure the operations that ' +\n        'use variables are inside the function f passed to minimize().');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(value.rank === 0, () => `The f passed in variableGrads(f) must return a scalar, but it ` +\n        `returned a rank-${value.rank} tensor`);\n    const namedGrads = {};\n    varList.forEach((v, i) => {\n        if (grads[i] != null) {\n            namedGrads[v.name] = grads[i];\n        }\n    });\n    if (specifiedNonTrainable != null) {\n        // If varList is explicitly provided and contains non-trainable values,\n        // add them to the returned gradients with `null` values.\n        specifiedNonTrainable.forEach(v => namedGrads[v.name] = null);\n    }\n    return { value, grads: namedGrads };\n}\n/**\n * Overrides the gradient computation of a function `f`.\n *\n * Takes a function\n * `f(...inputs, save) => {value: Tensor, gradFunc: (dy, saved) => Tensor[]}`\n * and returns another function `g(...inputs)` which takes the same inputs as\n * `f`. When called, `g` returns `f().value`. In backward mode, custom gradients\n * with respect to each input of `f` are computed using `f().gradFunc`.\n *\n * The `save` function passsed to `f` should be used for saving tensors needed\n * in the gradient. And the `saved` passed to the `gradFunc` is a\n * `NamedTensorMap`, which contains those saved tensor.\n *\n * ```js\n * const customOp = tf.customGrad((x, save) => {\n *   // Save x to make sure it's available later for the gradient.\n *   save([x]);\n *   // Override gradient of our custom x ^ 2 op to be dy * abs(x);\n *   return {\n *     value: x.square(),\n *     // Note `saved.x` which points to the `x` we saved earlier.\n *     gradFunc: (dy, saved) => [dy.mul(saved[0].abs())]\n *   };\n * });\n *\n * const x = tf.tensor1d([-1, -2, 3]);\n * const dx = tf.grad(x => customOp(x));\n *\n * console.log(`f(x):`);\n * customOp(x).print();\n * console.log(`f'(x):`);\n * dx(x).print();\n * ```\n *\n * @param f The function to evaluate in forward mode, which should return\n *     `{value: Tensor, gradFunc: (dy, saved) => Tensor[]}`, where `gradFunc`\n *     returns the custom gradients of `f` with respect to its inputs.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction customGrad(f) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.customGrad(f);\n}\nfunction checkGrads(grads) {\n    const numNullGradients = grads.filter(g => g == null).length;\n    if (numNullGradients > 0) {\n        throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.`);\n    }\n}\n\n//# sourceMappingURL=gradients.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/gradients.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/hash_util.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/hash_util.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hexToLong\": () => (/* binding */ hexToLong),\n/* harmony export */   \"fingerPrint64\": () => (/* binding */ fingerPrint64)\n/* harmony export */ });\n/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! long */ \"./node_modules/long/src/long.js\");\n/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(long__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Workaround for allowing cjs module to be included in bundle created by\n// rollup.\n\n// tslint:disable-next-line\nconst Long = \n// tslint:disable-next-line\n(long__WEBPACK_IMPORTED_MODULE_0___default()) || long__WEBPACK_IMPORTED_MODULE_0__;\nfunction hexToLong(hex) {\n    return Long.fromString(hex, true, 16);\n}\n// Some primes between 2^63 and 2^64 for various uses.\n// Hex 0xc3a5c85c97cb3127\nconst k0 = hexToLong('c3a5c85c97cb3127');\n// Hex 0xb492b66fbe98f273\nconst k1 = hexToLong('b492b66fbe98f273');\n// Hex 0x9ae16a3b2f90404f\nconst k2 = hexToLong('9ae16a3b2f90404f');\nfunction shiftMix(val) {\n    return val.xor(val.shru(47));\n}\nfunction fetch(s, offset, numBytes) {\n    const bytes = s.slice(offset, offset + numBytes);\n    return Long.fromBytes(Array.from(bytes), true, true);\n}\nfunction fetch64(s, offset) {\n    return fetch(s, offset, 8);\n}\nfunction fetch32(s, offset) {\n    return fetch(s, offset, 4);\n}\nfunction rotate64(val, shift) {\n    // Avoid shifting by 64: doing so yields an undefined result.\n    return shift === 0 ? val : val.shru(shift).or(val.shl(64 - shift));\n}\nfunction hashLen16(u, v, mul = hexToLong('9ddfea08eb382d69')) {\n    // Murmur-inspired hashing.\n    let a = u.xor(v).mul(mul);\n    a = a.xor(a.shru(47));\n    let b = v.xor(a).mul(mul);\n    b = b.xor(b.shru(47));\n    b = b.mul(mul);\n    return b;\n}\n// Return a 16-byte hash for 48 bytes.  Quick and dirty.\n// Callers do best to use \"random-looking\" values for a and b.\nfunction weakHashLen32WithSeeds(w, x, y, z, a, b) {\n    a = a.add(w);\n    b = rotate64(b.add(a).add(z), 21);\n    const c = a;\n    a = a.add(x);\n    a = a.add(y);\n    b = b.add(rotate64(a, 44));\n    return [a.add(z), b.add(c)];\n}\nfunction weakHashLen32WithSeedsStr(s, offset, a, b) {\n    return weakHashLen32WithSeeds(fetch64(s, offset), fetch64(s, offset + 8), fetch64(s, offset + 16), fetch64(s, offset + 24), a, b);\n}\nfunction hashLen0to16(s, len = s.length) {\n    if (len >= 8) {\n        const mul = k2.add(len * 2);\n        const a = fetch64(s, 0).add(k2);\n        const b = fetch64(s, len - 8);\n        const c = rotate64(b, 37).mul(mul).add(a);\n        const d = rotate64(a, 25).add(b).mul(mul);\n        return hashLen16(c, d, mul);\n    }\n    if (len >= 4) {\n        const mul = k2.add(len * 2);\n        const a = fetch32(s, 0);\n        return hashLen16(a.shl(3).add(len), fetch32(s, len - 4), mul);\n    }\n    if (len > 0) {\n        const a = s[0];\n        const b = s[len >> 1];\n        const c = s[len - 1];\n        const y = a + (b << 8);\n        const z = len + (c << 2);\n        return shiftMix(k2.mul(y).xor(k0.mul(z))).mul(k2);\n    }\n    return k2;\n}\nfunction hashLen17to32(s, len = s.length) {\n    const mul = k2.add(len * 2);\n    const a = fetch64(s, 0).mul(k1);\n    const b = fetch64(s, 8);\n    const c = fetch64(s, len - 8).mul(mul);\n    const d = fetch64(s, len - 16).mul(k2);\n    return hashLen16(rotate64(a.add(b), 43).add(rotate64(c, 30)).add(d), a.add(rotate64(b.add(k2), 18)).add(c), mul);\n}\nfunction hashLen33to64(s, len = s.length) {\n    const mul = k2.add(len * 2);\n    const a = fetch64(s, 0).mul(k2);\n    const b = fetch64(s, 8);\n    const c = fetch64(s, len - 8).mul(mul);\n    const d = fetch64(s, len - 16).mul(k2);\n    const y = rotate64(a.add(b), 43).add(rotate64(c, 30)).add(d);\n    const z = hashLen16(y, a.add(rotate64(b.add(k2), 18)).add(c), mul);\n    const e = fetch64(s, 16).mul(mul);\n    const f = fetch64(s, 24);\n    const g = y.add(fetch64(s, len - 32)).mul(mul);\n    const h = z.add(fetch64(s, len - 24)).mul(mul);\n    return hashLen16(rotate64(e.add(f), 43).add(rotate64(g, 30)).add(h), e.add(rotate64(f.add(a), 18)).add(g), mul);\n}\nfunction fingerPrint64(s, len = s.length) {\n    const seed = Long.fromNumber(81, true);\n    if (len <= 32) {\n        if (len <= 16) {\n            return hashLen0to16(s, len);\n        }\n        else {\n            return hashLen17to32(s, len);\n        }\n    }\n    else if (len <= 64) {\n        return hashLen33to64(s, len);\n    }\n    // For strings over 64 bytes we loop.  Internal state consists of\n    // 56 bytes: v, w, x, y, and z.\n    let x = seed;\n    let y = seed.mul(k1).add(113);\n    let z = shiftMix(y.mul(k2).add(113)).mul(k2);\n    let v = [Long.UZERO, Long.UZERO];\n    let w = [Long.UZERO, Long.UZERO];\n    x = x.mul(k2).add(fetch64(s, 0));\n    let offset = 0;\n    // Set end so that after the loop we have 1 to 64 bytes left to process.\n    const end = ((len - 1) >> 6) * 64;\n    const last64 = end + ((len - 1) & 63) - 63;\n    do {\n        x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(k1);\n        y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(k1);\n        x = x.xor(w[1]);\n        y = y.add(v[0]).add(fetch64(s, offset + 40));\n        z = rotate64(z.add(w[0]), 33).mul(k1);\n        v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(k1), x.add(w[0]));\n        w = weakHashLen32WithSeedsStr(s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));\n        [z, x] = [x, z];\n        offset += 64;\n    } while (offset !== end);\n    const mul = k1.add(z.and(0xff).shl(1));\n    // Point to the last 64 bytes of input.\n    offset = last64;\n    w[0] = w[0].add((len - 1) & 63);\n    v[0] = v[0].add(w[0]);\n    w[0] = w[0].add(v[0]);\n    x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(mul);\n    y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(mul);\n    x = x.xor(w[1].mul(9));\n    y = y.add(v[0].mul(9).add(fetch64(s, offset + 40)));\n    z = rotate64(z.add(w[0]), 33).mul(mul);\n    v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(mul), x.add(w[0]));\n    w = weakHashLen32WithSeedsStr(s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));\n    [z, x] = [x, z];\n    return hashLen16(hashLen16(v[0], w[0], mul).add(shiftMix(y).mul(k0)).add(z), hashLen16(v[1], w[1], mul).add(x), mul);\n}\n//# sourceMappingURL=hash_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/hash_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Abs\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Abs),\n/* harmony export */   \"Acos\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Acos),\n/* harmony export */   \"Acosh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Acosh),\n/* harmony export */   \"AdadeltaOptimizer\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AdadeltaOptimizer),\n/* harmony export */   \"AdagradOptimizer\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AdagradOptimizer),\n/* harmony export */   \"AdamOptimizer\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AdamOptimizer),\n/* harmony export */   \"AdamaxOptimizer\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AdamaxOptimizer),\n/* harmony export */   \"Add\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Add),\n/* harmony export */   \"AddN\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AddN),\n/* harmony export */   \"All\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.All),\n/* harmony export */   \"Any\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Any),\n/* harmony export */   \"ArgMax\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ArgMax),\n/* harmony export */   \"ArgMin\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ArgMin),\n/* harmony export */   \"Asin\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Asin),\n/* harmony export */   \"Asinh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Asinh),\n/* harmony export */   \"Atan\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Atan),\n/* harmony export */   \"Atan2\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Atan2),\n/* harmony export */   \"Atanh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Atanh),\n/* harmony export */   \"AvgPool\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AvgPool),\n/* harmony export */   \"AvgPool3D\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AvgPool3D),\n/* harmony export */   \"AvgPool3DGrad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AvgPool3DGrad),\n/* harmony export */   \"AvgPoolGrad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AvgPoolGrad),\n/* harmony export */   \"BatchMatMul\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.BatchMatMul),\n/* harmony export */   \"BatchToSpaceND\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.BatchToSpaceND),\n/* harmony export */   \"Bincount\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Bincount),\n/* harmony export */   \"BroadcastTo\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.BroadcastTo),\n/* harmony export */   \"Cast\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Cast),\n/* harmony export */   \"Ceil\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Ceil),\n/* harmony export */   \"ClipByValue\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ClipByValue),\n/* harmony export */   \"Complex\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Complex),\n/* harmony export */   \"ComplexAbs\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ComplexAbs),\n/* harmony export */   \"Concat\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Concat),\n/* harmony export */   \"Conv2D\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv2D),\n/* harmony export */   \"Conv2DBackpropFilter\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv2DBackpropFilter),\n/* harmony export */   \"Conv2DBackpropInput\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv2DBackpropInput),\n/* harmony export */   \"Conv3D\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv3D),\n/* harmony export */   \"Conv3DBackpropFilterV2\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv3DBackpropFilterV2),\n/* harmony export */   \"Conv3DBackpropInputV2\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv3DBackpropInputV2),\n/* harmony export */   \"Cos\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Cos),\n/* harmony export */   \"Cosh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Cosh),\n/* harmony export */   \"CropAndResize\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.CropAndResize),\n/* harmony export */   \"Cumsum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Cumsum),\n/* harmony export */   \"DataStorage\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DataStorage),\n/* harmony export */   \"DenseBincount\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DenseBincount),\n/* harmony export */   \"DepthToSpace\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DepthToSpace),\n/* harmony export */   \"DepthwiseConv2dNative\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DepthwiseConv2dNative),\n/* harmony export */   \"DepthwiseConv2dNativeBackpropFilter\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DepthwiseConv2dNativeBackpropFilter),\n/* harmony export */   \"DepthwiseConv2dNativeBackpropInput\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DepthwiseConv2dNativeBackpropInput),\n/* harmony export */   \"Diag\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Diag),\n/* harmony export */   \"Dilation2D\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Dilation2D),\n/* harmony export */   \"Dilation2DBackpropFilter\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Dilation2DBackpropFilter),\n/* harmony export */   \"Dilation2DBackpropInput\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Dilation2DBackpropInput),\n/* harmony export */   \"ENV\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ENV),\n/* harmony export */   \"Einsum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Einsum),\n/* harmony export */   \"Elu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Elu),\n/* harmony export */   \"EluGrad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.EluGrad),\n/* harmony export */   \"Environment\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Environment),\n/* harmony export */   \"Equal\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Equal),\n/* harmony export */   \"Erf\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Erf),\n/* harmony export */   \"Exp\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Exp),\n/* harmony export */   \"ExpandDims\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ExpandDims),\n/* harmony export */   \"Expm1\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Expm1),\n/* harmony export */   \"FFT\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FFT),\n/* harmony export */   \"Fill\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Fill),\n/* harmony export */   \"FlipLeftRight\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FlipLeftRight),\n/* harmony export */   \"Floor\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Floor),\n/* harmony export */   \"FloorDiv\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FloorDiv),\n/* harmony export */   \"FromPixels\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FromPixels),\n/* harmony export */   \"FusedBatchNorm\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FusedBatchNorm),\n/* harmony export */   \"FusedConv2D\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FusedConv2D),\n/* harmony export */   \"FusedDepthwiseConv2D\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FusedDepthwiseConv2D),\n/* harmony export */   \"GatherNd\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.GatherNd),\n/* harmony export */   \"GatherV2\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.GatherV2),\n/* harmony export */   \"Greater\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Greater),\n/* harmony export */   \"GreaterEqual\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.GreaterEqual),\n/* harmony export */   \"IFFT\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.IFFT),\n/* harmony export */   \"Identity\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Identity),\n/* harmony export */   \"Imag\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Imag),\n/* harmony export */   \"IsFinite\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.IsFinite),\n/* harmony export */   \"IsInf\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.IsInf),\n/* harmony export */   \"IsNan\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.IsNan),\n/* harmony export */   \"KernelBackend\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.KernelBackend),\n/* harmony export */   \"LRN\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LRN),\n/* harmony export */   \"LRNGrad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LRNGrad),\n/* harmony export */   \"LeakyRelu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LeakyRelu),\n/* harmony export */   \"Less\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Less),\n/* harmony export */   \"LessEqual\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LessEqual),\n/* harmony export */   \"LinSpace\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LinSpace),\n/* harmony export */   \"Log\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Log),\n/* harmony export */   \"Log1p\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Log1p),\n/* harmony export */   \"LogSoftmax\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LogSoftmax),\n/* harmony export */   \"LogicalAnd\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LogicalAnd),\n/* harmony export */   \"LogicalNot\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LogicalNot),\n/* harmony export */   \"LogicalOr\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LogicalOr),\n/* harmony export */   \"Max\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Max),\n/* harmony export */   \"MaxPool\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MaxPool),\n/* harmony export */   \"MaxPool3D\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MaxPool3D),\n/* harmony export */   \"MaxPool3DGrad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MaxPool3DGrad),\n/* harmony export */   \"MaxPoolGrad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MaxPoolGrad),\n/* harmony export */   \"MaxPoolWithArgmax\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MaxPoolWithArgmax),\n/* harmony export */   \"Maximum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Maximum),\n/* harmony export */   \"Mean\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Mean),\n/* harmony export */   \"Min\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Min),\n/* harmony export */   \"Minimum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Minimum),\n/* harmony export */   \"MirrorPad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MirrorPad),\n/* harmony export */   \"Mod\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Mod),\n/* harmony export */   \"MomentumOptimizer\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MomentumOptimizer),\n/* harmony export */   \"Multinomial\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Multinomial),\n/* harmony export */   \"Multiply\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Multiply),\n/* harmony export */   \"Neg\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Neg),\n/* harmony export */   \"NonMaxSuppressionV3\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.NonMaxSuppressionV3),\n/* harmony export */   \"NonMaxSuppressionV4\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.NonMaxSuppressionV4),\n/* harmony export */   \"NonMaxSuppressionV5\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.NonMaxSuppressionV5),\n/* harmony export */   \"NotEqual\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.NotEqual),\n/* harmony export */   \"OP_SCOPE_SUFFIX\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.OP_SCOPE_SUFFIX),\n/* harmony export */   \"OneHot\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.OneHot),\n/* harmony export */   \"OnesLike\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.OnesLike),\n/* harmony export */   \"Optimizer\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Optimizer),\n/* harmony export */   \"Pack\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Pack),\n/* harmony export */   \"PadV2\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.PadV2),\n/* harmony export */   \"Pool\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Pool),\n/* harmony export */   \"Pow\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Pow),\n/* harmony export */   \"Prelu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Prelu),\n/* harmony export */   \"Prod\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Prod),\n/* harmony export */   \"RMSPropOptimizer\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.RMSPropOptimizer),\n/* harmony export */   \"Range\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Range),\n/* harmony export */   \"Rank\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Rank),\n/* harmony export */   \"Real\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Real),\n/* harmony export */   \"RealDiv\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.RealDiv),\n/* harmony export */   \"Reciprocal\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Reciprocal),\n/* harmony export */   \"Reduction\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Reduction),\n/* harmony export */   \"Relu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Relu),\n/* harmony export */   \"Relu6\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Relu6),\n/* harmony export */   \"Reshape\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Reshape),\n/* harmony export */   \"ResizeBilinear\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ResizeBilinear),\n/* harmony export */   \"ResizeBilinearGrad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ResizeBilinearGrad),\n/* harmony export */   \"ResizeNearestNeighbor\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ResizeNearestNeighbor),\n/* harmony export */   \"ResizeNearestNeighborGrad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ResizeNearestNeighborGrad),\n/* harmony export */   \"Reverse\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Reverse),\n/* harmony export */   \"RotateWithOffset\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.RotateWithOffset),\n/* harmony export */   \"Round\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Round),\n/* harmony export */   \"Rsqrt\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Rsqrt),\n/* harmony export */   \"SGDOptimizer\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SGDOptimizer),\n/* harmony export */   \"ScatterNd\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ScatterNd),\n/* harmony export */   \"Select\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Select),\n/* harmony export */   \"Selu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Selu),\n/* harmony export */   \"Sigmoid\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sigmoid),\n/* harmony export */   \"Sign\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sign),\n/* harmony export */   \"Sin\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sin),\n/* harmony export */   \"Sinh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sinh),\n/* harmony export */   \"Slice\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Slice),\n/* harmony export */   \"Softmax\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Softmax),\n/* harmony export */   \"Softplus\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Softplus),\n/* harmony export */   \"SpaceToBatchND\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SpaceToBatchND),\n/* harmony export */   \"SparseFillEmptyRows\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SparseFillEmptyRows),\n/* harmony export */   \"SparseReshape\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SparseReshape),\n/* harmony export */   \"SparseSegmentMean\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SparseSegmentMean),\n/* harmony export */   \"SparseSegmentSum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SparseSegmentSum),\n/* harmony export */   \"SparseToDense\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SparseToDense),\n/* harmony export */   \"SplitV\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SplitV),\n/* harmony export */   \"Sqrt\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sqrt),\n/* harmony export */   \"Square\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Square),\n/* harmony export */   \"SquaredDifference\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SquaredDifference),\n/* harmony export */   \"Step\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Step),\n/* harmony export */   \"StridedSlice\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.StridedSlice),\n/* harmony export */   \"StringNGrams\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.StringNGrams),\n/* harmony export */   \"StringSplit\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.StringSplit),\n/* harmony export */   \"StringToHashBucketFast\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.StringToHashBucketFast),\n/* harmony export */   \"Sub\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sub),\n/* harmony export */   \"Sum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sum),\n/* harmony export */   \"Tan\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Tan),\n/* harmony export */   \"Tanh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Tanh),\n/* harmony export */   \"Tensor\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Tensor),\n/* harmony export */   \"TensorBuffer\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.TensorBuffer),\n/* harmony export */   \"Tile\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Tile),\n/* harmony export */   \"TopK\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.TopK),\n/* harmony export */   \"Transform\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Transform),\n/* harmony export */   \"Transpose\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Transpose),\n/* harmony export */   \"Unique\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Unique),\n/* harmony export */   \"Unpack\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Unpack),\n/* harmony export */   \"UnsortedSegmentSum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.UnsortedSegmentSum),\n/* harmony export */   \"Variable\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Variable),\n/* harmony export */   \"ZerosLike\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ZerosLike),\n/* harmony export */   \"_FusedMatMul\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__._FusedMatMul),\n/* harmony export */   \"abs\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.abs),\n/* harmony export */   \"acos\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.acos),\n/* harmony export */   \"acosh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.acosh),\n/* harmony export */   \"add\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.add),\n/* harmony export */   \"addN\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.addN),\n/* harmony export */   \"all\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.all),\n/* harmony export */   \"any\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.any),\n/* harmony export */   \"argMax\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.argMax),\n/* harmony export */   \"argMin\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.argMin),\n/* harmony export */   \"asin\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.asin),\n/* harmony export */   \"asinh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.asinh),\n/* harmony export */   \"atan\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.atan),\n/* harmony export */   \"atan2\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.atan2),\n/* harmony export */   \"atanh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.atanh),\n/* harmony export */   \"avgPool\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.avgPool),\n/* harmony export */   \"avgPool3d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.avgPool3d),\n/* harmony export */   \"backend\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.backend),\n/* harmony export */   \"backend_util\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.backend_util),\n/* harmony export */   \"basicLSTMCell\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.basicLSTMCell),\n/* harmony export */   \"batchNorm\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.batchNorm),\n/* harmony export */   \"batchNorm2d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.batchNorm2d),\n/* harmony export */   \"batchNorm3d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.batchNorm3d),\n/* harmony export */   \"batchNorm4d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.batchNorm4d),\n/* harmony export */   \"batchToSpaceND\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.batchToSpaceND),\n/* harmony export */   \"bincount\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.bincount),\n/* harmony export */   \"booleanMaskAsync\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.booleanMaskAsync),\n/* harmony export */   \"broadcastTo\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.broadcastTo),\n/* harmony export */   \"browser\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.browser),\n/* harmony export */   \"buffer\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.buffer),\n/* harmony export */   \"cast\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.cast),\n/* harmony export */   \"ceil\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ceil),\n/* harmony export */   \"clipByValue\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.clipByValue),\n/* harmony export */   \"clone\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.clone),\n/* harmony export */   \"complex\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.complex),\n/* harmony export */   \"concat\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.concat),\n/* harmony export */   \"concat1d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.concat1d),\n/* harmony export */   \"concat2d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.concat2d),\n/* harmony export */   \"concat3d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.concat3d),\n/* harmony export */   \"concat4d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.concat4d),\n/* harmony export */   \"conv1d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.conv1d),\n/* harmony export */   \"conv2d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.conv2d),\n/* harmony export */   \"conv2dTranspose\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.conv2dTranspose),\n/* harmony export */   \"conv3d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.conv3d),\n/* harmony export */   \"conv3dTranspose\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.conv3dTranspose),\n/* harmony export */   \"copyRegisteredKernels\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.copyRegisteredKernels),\n/* harmony export */   \"cos\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.cos),\n/* harmony export */   \"cosh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.cosh),\n/* harmony export */   \"cosineWindow\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.cosineWindow),\n/* harmony export */   \"cumsum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.cumsum),\n/* harmony export */   \"customGrad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.customGrad),\n/* harmony export */   \"denseBincount\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.denseBincount),\n/* harmony export */   \"deprecationWarn\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.deprecationWarn),\n/* harmony export */   \"depthToSpace\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.depthToSpace),\n/* harmony export */   \"depthwiseConv2d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.depthwiseConv2d),\n/* harmony export */   \"device_util\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.device_util),\n/* harmony export */   \"diag\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.diag),\n/* harmony export */   \"dilation2d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.dilation2d),\n/* harmony export */   \"disableDeprecationWarnings\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.disableDeprecationWarnings),\n/* harmony export */   \"dispose\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.dispose),\n/* harmony export */   \"disposeVariables\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.disposeVariables),\n/* harmony export */   \"div\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.div),\n/* harmony export */   \"divNoNan\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.divNoNan),\n/* harmony export */   \"dot\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.dot),\n/* harmony export */   \"dropout\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.dropout),\n/* harmony export */   \"einsum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.einsum),\n/* harmony export */   \"elu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.elu),\n/* harmony export */   \"enableDebugMode\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.enableDebugMode),\n/* harmony export */   \"enableProdMode\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.enableProdMode),\n/* harmony export */   \"enclosingPowerOfTwo\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.enclosingPowerOfTwo),\n/* harmony export */   \"engine\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.engine),\n/* harmony export */   \"env\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.env),\n/* harmony export */   \"equal\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.equal),\n/* harmony export */   \"erf\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.erf),\n/* harmony export */   \"exp\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.exp),\n/* harmony export */   \"expandDims\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.expandDims),\n/* harmony export */   \"expm1\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.expm1),\n/* harmony export */   \"eye\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.eye),\n/* harmony export */   \"fft\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.fft),\n/* harmony export */   \"fill\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.fill),\n/* harmony export */   \"findBackend\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.findBackend),\n/* harmony export */   \"findBackendFactory\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.findBackendFactory),\n/* harmony export */   \"floor\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.floor),\n/* harmony export */   \"floorDiv\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.floorDiv),\n/* harmony export */   \"fused\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.fused),\n/* harmony export */   \"gather\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.gather),\n/* harmony export */   \"gatherND\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.gatherND),\n/* harmony export */   \"gather_util\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.gather_util),\n/* harmony export */   \"getBackend\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.getBackend),\n/* harmony export */   \"getGradient\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.getGradient),\n/* harmony export */   \"getKernel\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.getKernel),\n/* harmony export */   \"getKernelsForBackend\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.getKernelsForBackend),\n/* harmony export */   \"grad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.grad),\n/* harmony export */   \"grads\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.grads),\n/* harmony export */   \"greater\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.greater),\n/* harmony export */   \"greaterEqual\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.greaterEqual),\n/* harmony export */   \"ifft\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ifft),\n/* harmony export */   \"imag\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.imag),\n/* harmony export */   \"image\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.image),\n/* harmony export */   \"inTopKAsync\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.inTopKAsync),\n/* harmony export */   \"io\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.io),\n/* harmony export */   \"irfft\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.irfft),\n/* harmony export */   \"isFinite\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.isFinite),\n/* harmony export */   \"isInf\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.isInf),\n/* harmony export */   \"isNaN\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.isNaN),\n/* harmony export */   \"keep\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.keep),\n/* harmony export */   \"kernel_impls\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.kernel_impls),\n/* harmony export */   \"leakyRelu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.leakyRelu),\n/* harmony export */   \"less\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.less),\n/* harmony export */   \"lessEqual\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.lessEqual),\n/* harmony export */   \"linalg\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.linalg),\n/* harmony export */   \"linspace\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.linspace),\n/* harmony export */   \"localResponseNormalization\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.localResponseNormalization),\n/* harmony export */   \"log\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.log),\n/* harmony export */   \"log1p\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.log1p),\n/* harmony export */   \"logSigmoid\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logSigmoid),\n/* harmony export */   \"logSoftmax\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logSoftmax),\n/* harmony export */   \"logSumExp\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logSumExp),\n/* harmony export */   \"logicalAnd\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logicalAnd),\n/* harmony export */   \"logicalNot\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logicalNot),\n/* harmony export */   \"logicalOr\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logicalOr),\n/* harmony export */   \"logicalXor\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logicalXor),\n/* harmony export */   \"losses\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.losses),\n/* harmony export */   \"matMul\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.matMul),\n/* harmony export */   \"math\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.math),\n/* harmony export */   \"max\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.max),\n/* harmony export */   \"maxPool\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.maxPool),\n/* harmony export */   \"maxPool3d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.maxPool3d),\n/* harmony export */   \"maxPoolWithArgmax\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.maxPoolWithArgmax),\n/* harmony export */   \"maximum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.maximum),\n/* harmony export */   \"mean\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.mean),\n/* harmony export */   \"memory\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.memory),\n/* harmony export */   \"meshgrid\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.meshgrid),\n/* harmony export */   \"min\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.min),\n/* harmony export */   \"minimum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.minimum),\n/* harmony export */   \"mirrorPad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.mirrorPad),\n/* harmony export */   \"mod\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.mod),\n/* harmony export */   \"moments\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.moments),\n/* harmony export */   \"movingAverage\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.movingAverage),\n/* harmony export */   \"mul\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.mul),\n/* harmony export */   \"multiRNNCell\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.multiRNNCell),\n/* harmony export */   \"multinomial\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.multinomial),\n/* harmony export */   \"neg\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.neg),\n/* harmony export */   \"nextFrame\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.nextFrame),\n/* harmony export */   \"norm\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.norm),\n/* harmony export */   \"notEqual\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.notEqual),\n/* harmony export */   \"oneHot\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.oneHot),\n/* harmony export */   \"ones\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ones),\n/* harmony export */   \"onesLike\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.onesLike),\n/* harmony export */   \"op\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.op),\n/* harmony export */   \"outerProduct\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.outerProduct),\n/* harmony export */   \"pad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pad),\n/* harmony export */   \"pad1d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pad1d),\n/* harmony export */   \"pad2d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pad2d),\n/* harmony export */   \"pad3d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pad3d),\n/* harmony export */   \"pad4d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pad4d),\n/* harmony export */   \"pool\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pool),\n/* harmony export */   \"pow\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pow),\n/* harmony export */   \"prelu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.prelu),\n/* harmony export */   \"print\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.print),\n/* harmony export */   \"prod\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.prod),\n/* harmony export */   \"profile\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.profile),\n/* harmony export */   \"rand\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.rand),\n/* harmony export */   \"randomGamma\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.randomGamma),\n/* harmony export */   \"randomNormal\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.randomNormal),\n/* harmony export */   \"randomUniform\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.randomUniform),\n/* harmony export */   \"range\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.range),\n/* harmony export */   \"ready\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ready),\n/* harmony export */   \"real\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.real),\n/* harmony export */   \"reciprocal\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reciprocal),\n/* harmony export */   \"registerBackend\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.registerBackend),\n/* harmony export */   \"registerGradient\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.registerGradient),\n/* harmony export */   \"registerKernel\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.registerKernel),\n/* harmony export */   \"relu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.relu),\n/* harmony export */   \"relu6\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.relu6),\n/* harmony export */   \"removeBackend\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.removeBackend),\n/* harmony export */   \"reshape\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reshape),\n/* harmony export */   \"reverse\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reverse),\n/* harmony export */   \"reverse1d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reverse1d),\n/* harmony export */   \"reverse2d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reverse2d),\n/* harmony export */   \"reverse3d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reverse3d),\n/* harmony export */   \"reverse4d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reverse4d),\n/* harmony export */   \"rfft\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.rfft),\n/* harmony export */   \"round\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.round),\n/* harmony export */   \"rsqrt\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.rsqrt),\n/* harmony export */   \"scalar\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.scalar),\n/* harmony export */   \"scatterND\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.scatterND),\n/* harmony export */   \"scatter_util\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.scatter_util),\n/* harmony export */   \"selu\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.selu),\n/* harmony export */   \"separableConv2d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.separableConv2d),\n/* harmony export */   \"serialization\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.serialization),\n/* harmony export */   \"setBackend\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.setBackend),\n/* harmony export */   \"setPlatform\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.setPlatform),\n/* harmony export */   \"setdiff1dAsync\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.setdiff1dAsync),\n/* harmony export */   \"sigmoid\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sigmoid),\n/* harmony export */   \"sign\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sign),\n/* harmony export */   \"signal\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.signal),\n/* harmony export */   \"sin\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sin),\n/* harmony export */   \"sinh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sinh),\n/* harmony export */   \"slice\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice),\n/* harmony export */   \"slice1d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice1d),\n/* harmony export */   \"slice2d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice2d),\n/* harmony export */   \"slice3d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice3d),\n/* harmony export */   \"slice4d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice4d),\n/* harmony export */   \"slice_util\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice_util),\n/* harmony export */   \"softmax\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.softmax),\n/* harmony export */   \"softplus\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.softplus),\n/* harmony export */   \"spaceToBatchND\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.spaceToBatchND),\n/* harmony export */   \"sparse\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sparse),\n/* harmony export */   \"sparseToDense\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sparseToDense),\n/* harmony export */   \"spectral\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.spectral),\n/* harmony export */   \"split\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.split),\n/* harmony export */   \"sqrt\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sqrt),\n/* harmony export */   \"square\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.square),\n/* harmony export */   \"squaredDifference\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.squaredDifference),\n/* harmony export */   \"squeeze\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.squeeze),\n/* harmony export */   \"stack\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.stack),\n/* harmony export */   \"step\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.step),\n/* harmony export */   \"stridedSlice\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.stridedSlice),\n/* harmony export */   \"string\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.string),\n/* harmony export */   \"sub\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sub),\n/* harmony export */   \"sum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sum),\n/* harmony export */   \"sumOutType\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sumOutType),\n/* harmony export */   \"tan\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tan),\n/* harmony export */   \"tanh\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tanh),\n/* harmony export */   \"tensor\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor),\n/* harmony export */   \"tensor1d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor1d),\n/* harmony export */   \"tensor2d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor2d),\n/* harmony export */   \"tensor3d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor3d),\n/* harmony export */   \"tensor4d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor4d),\n/* harmony export */   \"tensor5d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor5d),\n/* harmony export */   \"tensor6d\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor6d),\n/* harmony export */   \"tensor_util\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor_util),\n/* harmony export */   \"test_util\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.test_util),\n/* harmony export */   \"tidy\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tidy),\n/* harmony export */   \"tile\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tile),\n/* harmony export */   \"time\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.time),\n/* harmony export */   \"topk\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.topk),\n/* harmony export */   \"train\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.train),\n/* harmony export */   \"transpose\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.transpose),\n/* harmony export */   \"truncatedNormal\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.truncatedNormal),\n/* harmony export */   \"unique\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.unique),\n/* harmony export */   \"unregisterGradient\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.unregisterGradient),\n/* harmony export */   \"unregisterKernel\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.unregisterKernel),\n/* harmony export */   \"unsortedSegmentSum\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.unsortedSegmentSum),\n/* harmony export */   \"unstack\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.unstack),\n/* harmony export */   \"upcastType\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.upcastType),\n/* harmony export */   \"util\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.util),\n/* harmony export */   \"valueAndGrad\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.valueAndGrad),\n/* harmony export */   \"valueAndGrads\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.valueAndGrads),\n/* harmony export */   \"variable\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.variable),\n/* harmony export */   \"variableGrads\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.variableGrads),\n/* harmony export */   \"version_core\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.version_core),\n/* harmony export */   \"where\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.where),\n/* harmony export */   \"whereAsync\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.whereAsync),\n/* harmony export */   \"zeros\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.zeros),\n/* harmony export */   \"zerosLike\": () => (/* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.zerosLike)\n/* harmony export */ });\n/* harmony import */ var _base_side_effects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base_side_effects */ \"./node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ \"./node_modules/@tensorflow/tfjs-core/dist/base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Required side effectful code.\n\n// All exports from this package should be in base.\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/index.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserDownloads\": () => (/* binding */ BrowserDownloads),\n/* harmony export */   \"browserDownloadsRouter\": () => (/* binding */ browserDownloadsRouter),\n/* harmony export */   \"browserDownloads\": () => (/* binding */ browserDownloads),\n/* harmony export */   \"browserFiles\": () => (/* binding */ browserFiles)\n/* harmony export */ });\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flags */ \"./node_modules/@tensorflow/tfjs-core/dist/flags.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * IOHandlers related to files, such as browser-triggered file downloads,\n * user-selected files in browser.\n */\n\n\n\n\nconst DEFAULT_FILE_NAME_PREFIX = 'model';\nconst DEFAULT_JSON_EXTENSION_NAME = '.json';\nconst DEFAULT_WEIGHT_DATA_EXTENSION_NAME = '.weights.bin';\nfunction defer(f) {\n    return new Promise(resolve => setTimeout(resolve)).then(f);\n}\nclass BrowserDownloads {\n    constructor(fileNamePrefix) {\n        if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER')) {\n            // TODO(cais): Provide info on what IOHandlers are available under the\n            //   current environment.\n            throw new Error('browserDownloads() cannot proceed because the current environment ' +\n                'is not a browser.');\n        }\n        if (fileNamePrefix.startsWith(BrowserDownloads.URL_SCHEME)) {\n            fileNamePrefix = fileNamePrefix.slice(BrowserDownloads.URL_SCHEME.length);\n        }\n        if (fileNamePrefix == null || fileNamePrefix.length === 0) {\n            fileNamePrefix = DEFAULT_FILE_NAME_PREFIX;\n        }\n        this.modelJsonFileName = fileNamePrefix + DEFAULT_JSON_EXTENSION_NAME;\n        this.weightDataFileName =\n            fileNamePrefix + DEFAULT_WEIGHT_DATA_EXTENSION_NAME;\n    }\n    async save(modelArtifacts) {\n        if (typeof (document) === 'undefined') {\n            throw new Error('Browser downloads are not supported in ' +\n                'this environment since `document` is not present');\n        }\n        const weightsURL = window.URL.createObjectURL(new Blob([modelArtifacts.weightData], { type: 'application/octet-stream' }));\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserDownloads.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        else {\n            const weightsManifest = [{\n                    paths: ['./' + this.weightDataFileName],\n                    weights: modelArtifacts.weightSpecs\n                }];\n            const modelJSON = (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.getModelJSONForModelArtifacts)(modelArtifacts, weightsManifest);\n            const modelJsonURL = window.URL.createObjectURL(new Blob([JSON.stringify(modelJSON)], { type: 'application/json' }));\n            // If anchor elements are not provided, create them without attaching them\n            // to parents, so that the downloaded file names can be controlled.\n            const jsonAnchor = this.modelJsonAnchor == null ?\n                document.createElement('a') :\n                this.modelJsonAnchor;\n            jsonAnchor.download = this.modelJsonFileName;\n            jsonAnchor.href = modelJsonURL;\n            // Trigger downloads by evoking a click event on the download anchors.\n            // When multiple downloads are started synchronously, Firefox will only\n            // save the last one.\n            await defer(() => jsonAnchor.dispatchEvent(new MouseEvent('click')));\n            if (modelArtifacts.weightData != null) {\n                const weightDataAnchor = this.weightDataAnchor == null ?\n                    document.createElement('a') :\n                    this.weightDataAnchor;\n                weightDataAnchor.download = this.weightDataFileName;\n                weightDataAnchor.href = weightsURL;\n                await defer(() => weightDataAnchor.dispatchEvent(new MouseEvent('click')));\n            }\n            return { modelArtifactsInfo: (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.getModelArtifactsInfoForJSON)(modelArtifacts) };\n        }\n    }\n}\nBrowserDownloads.URL_SCHEME = 'downloads://';\nclass BrowserFiles {\n    constructor(files) {\n        if (files == null || files.length < 1) {\n            throw new Error(`When calling browserFiles, at least 1 file is required, ` +\n                `but received ${files}`);\n        }\n        this.jsonFile = files[0];\n        this.weightsFiles = files.slice(1);\n    }\n    async load() {\n        return new Promise((resolve, reject) => {\n            const jsonReader = new FileReader();\n            jsonReader.onload = (event) => {\n                // tslint:disable-next-line:no-any\n                const modelJSON = JSON.parse(event.target.result);\n                const modelTopology = modelJSON.modelTopology;\n                if (modelTopology == null) {\n                    reject(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));\n                    return;\n                }\n                const weightsManifest = modelJSON.weightsManifest;\n                if (weightsManifest == null) {\n                    reject(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));\n                    return;\n                }\n                if (this.weightsFiles.length === 0) {\n                    resolve({ modelTopology });\n                    return;\n                }\n                const modelArtifactsPromise = (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.getModelArtifactsForJSON)(modelJSON, (weightsManifest) => this.loadWeights(weightsManifest));\n                resolve(modelArtifactsPromise);\n            };\n            jsonReader.onerror = error => reject(`Failed to read model topology and weights manifest JSON ` +\n                `from file '${this.jsonFile.name}'. BrowserFiles supports loading ` +\n                `Keras-style tf.Model artifacts only.`);\n            jsonReader.readAsText(this.jsonFile);\n        });\n    }\n    loadWeights(weightsManifest) {\n        const weightSpecs = [];\n        const paths = [];\n        for (const entry of weightsManifest) {\n            weightSpecs.push(...entry.weights);\n            paths.push(...entry.paths);\n        }\n        const pathToFile = this.checkManifestAndWeightFiles(weightsManifest);\n        const promises = paths.map(path => this.loadWeightsFile(path, pathToFile[path]));\n        return Promise.all(promises).then(buffers => [weightSpecs, (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.concatenateArrayBuffers)(buffers)]);\n    }\n    loadWeightsFile(path, file) {\n        return new Promise((resolve, reject) => {\n            const weightFileReader = new FileReader();\n            weightFileReader.onload = (event) => {\n                // tslint:disable-next-line:no-any\n                const weightData = event.target.result;\n                resolve(weightData);\n            };\n            weightFileReader.onerror = error => reject(`Failed to weights data from file of path '${path}'.`);\n            weightFileReader.readAsArrayBuffer(file);\n        });\n    }\n    /**\n     * Check the compatibility between weights manifest and weight files.\n     */\n    checkManifestAndWeightFiles(manifest) {\n        const basenames = [];\n        const fileNames = this.weightsFiles.map(file => (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.basename)(file.name));\n        const pathToFile = {};\n        for (const group of manifest) {\n            group.paths.forEach(path => {\n                const pathBasename = (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.basename)(path);\n                if (basenames.indexOf(pathBasename) !== -1) {\n                    throw new Error(`Duplicate file basename found in weights manifest: ` +\n                        `'${pathBasename}'`);\n                }\n                basenames.push(pathBasename);\n                if (fileNames.indexOf(pathBasename) === -1) {\n                    throw new Error(`Weight file with basename '${pathBasename}' is not provided.`);\n                }\n                else {\n                    pathToFile[path] = this.weightsFiles[fileNames.indexOf(pathBasename)];\n                }\n            });\n        }\n        if (basenames.length !== this.weightsFiles.length) {\n            throw new Error(`Mismatch in the number of files in weights manifest ` +\n                `(${basenames.length}) and the number of weight files provided ` +\n                `(${this.weightsFiles.length}).`);\n        }\n        return pathToFile;\n    }\n}\nconst browserDownloadsRouter = (url) => {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserDownloads.URL_SCHEME)) {\n            return browserDownloads(url.slice(BrowserDownloads.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\n_router_registry__WEBPACK_IMPORTED_MODULE_2__.IORouterRegistry.registerSaveRouter(browserDownloadsRouter);\n/**\n * Creates an IOHandler that triggers file downloads from the browser.\n *\n * The returned `IOHandler` instance can be used as model exporting methods such\n * as `tf.Model.save` and supports only saving.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * const saveResult = await model.save('downloads://mymodel');\n * // This will trigger downloading of two files:\n * //   'mymodel.json' and 'mymodel.weights.bin'.\n * console.log(saveResult);\n * ```\n *\n * @param fileNamePrefix Prefix name of the files to be downloaded. For use with\n *   `tf.Model`, `fileNamePrefix` should follow either of the following two\n *   formats:\n *   1. `null` or `undefined`, in which case the default file\n *      names will be used:\n *      - 'model.json' for the JSON file containing the model topology and\n *        weights manifest.\n *      - 'model.weights.bin' for the binary file containing the binary weight\n *        values.\n *   2. A single string or an Array of a single string, as the file name prefix.\n *      For example, if `'foo'` is provided, the downloaded JSON\n *      file and binary weights file will be named 'foo.json' and\n *      'foo.weights.bin', respectively.\n * @param config Additional configuration for triggering downloads.\n * @returns An instance of `BrowserDownloads` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction browserDownloads(fileNamePrefix = 'model') {\n    return new BrowserDownloads(fileNamePrefix);\n}\n/**\n * Creates an IOHandler that loads model artifacts from user-selected files.\n *\n * This method can be used for loading from files such as user-selected files\n * in the browser.\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * // Note: This code snippet won't run properly without the actual file input\n * //   elements in the HTML DOM.\n *\n * // Suppose there are two HTML file input (`<input type=\"file\" ...>`)\n * // elements.\n * const uploadJSONInput = document.getElementById('upload-json');\n * const uploadWeightsInput = document.getElementById('upload-weights');\n * const model = await tf.loadLayersModel(tf.io.browserFiles(\n *     [uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\n * ```\n *\n * @param files `File`s to load from. Currently, this function supports only\n *   loading from files that contain Keras-style models (i.e., `tf.Model`s), for\n *   which an `Array` of `File`s is expected (in that order):\n *   - A JSON file containing the model topology and weight manifest.\n *   - Optionally, One or more binary files containing the binary weights.\n *     These files must have names that match the paths in the `weightsManifest`\n *     contained by the aforementioned JSON file, or errors will be thrown\n *     during loading. These weights files have the same format as the ones\n *     generated by `tensorflowjs_converter` that comes with the `tensorflowjs`\n *     Python PIP package. If no weights files are provided, only the model\n *     topology will be loaded from the JSON file above.\n * @returns An instance of `Files` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction browserFiles(files) {\n    return new BrowserFiles(files);\n}\n//# sourceMappingURL=browser_files.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/http.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/http.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HTTPRequest\": () => (/* binding */ HTTPRequest),\n/* harmony export */   \"parseUrl\": () => (/* binding */ parseUrl),\n/* harmony export */   \"isHTTPScheme\": () => (/* binding */ isHTTPScheme),\n/* harmony export */   \"httpRouter\": () => (/* binding */ httpRouter),\n/* harmony export */   \"http\": () => (/* binding */ http),\n/* harmony export */   \"browserHTTPRequest\": () => (/* binding */ browserHTTPRequest)\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/* harmony import */ var _weights_loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./weights_loader */ \"./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * IOHandler implementations based on HTTP requests in the web browser.\n *\n * Uses [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n */\n\n\n\n\n\nconst OCTET_STREAM_MIME_TYPE = 'application/octet-stream';\nconst JSON_TYPE = 'application/json';\nclass HTTPRequest {\n    constructor(path, loadOptions) {\n        this.DEFAULT_METHOD = 'POST';\n        if (loadOptions == null) {\n            loadOptions = {};\n        }\n        this.weightPathPrefix = loadOptions.weightPathPrefix;\n        this.onProgress = loadOptions.onProgress;\n        this.weightUrlConverter = loadOptions.weightUrlConverter;\n        if (loadOptions.fetchFunc != null) {\n            (0,_util__WEBPACK_IMPORTED_MODULE_3__.assert)(typeof loadOptions.fetchFunc === 'function', () => 'Must pass a function that matches the signature of ' +\n                '`fetch` (see ' +\n                'https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)');\n            this.fetch = loadOptions.fetchFunc;\n        }\n        else {\n            this.fetch = (0,_environment__WEBPACK_IMPORTED_MODULE_4__.env)().platform.fetch;\n        }\n        (0,_util__WEBPACK_IMPORTED_MODULE_3__.assert)(path != null && path.length > 0, () => 'URL path for http must not be null, undefined or ' +\n            'empty.');\n        if (Array.isArray(path)) {\n            (0,_util__WEBPACK_IMPORTED_MODULE_3__.assert)(path.length === 2, () => 'URL paths for http must have a length of 2, ' +\n                `(actual length is ${path.length}).`);\n        }\n        this.path = path;\n        if (loadOptions.requestInit != null &&\n            loadOptions.requestInit.body != null) {\n            throw new Error('requestInit is expected to have no pre-existing body, but has one.');\n        }\n        this.requestInit = loadOptions.requestInit || {};\n    }\n    async save(modelArtifacts) {\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserHTTPRequest.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        const init = Object.assign({ method: this.DEFAULT_METHOD }, this.requestInit);\n        init.body = new FormData();\n        const weightsManifest = [{\n                paths: ['./model.weights.bin'],\n                weights: modelArtifacts.weightSpecs,\n            }];\n        const modelTopologyAndWeightManifest = (0,_io_utils__WEBPACK_IMPORTED_MODULE_0__.getModelJSONForModelArtifacts)(modelArtifacts, weightsManifest);\n        init.body.append('model.json', new Blob([JSON.stringify(modelTopologyAndWeightManifest)], { type: JSON_TYPE }), 'model.json');\n        if (modelArtifacts.weightData != null) {\n            init.body.append('model.weights.bin', new Blob([modelArtifacts.weightData], { type: OCTET_STREAM_MIME_TYPE }), 'model.weights.bin');\n        }\n        const response = await this.fetch(this.path, init);\n        if (response.ok) {\n            return {\n                modelArtifactsInfo: (0,_io_utils__WEBPACK_IMPORTED_MODULE_0__.getModelArtifactsInfoForJSON)(modelArtifacts),\n                responses: [response],\n            };\n        }\n        else {\n            throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ` +\n                `${response.status}.`);\n        }\n    }\n    /**\n     * Load model artifacts via HTTP request(s).\n     *\n     * See the documentation to `tf.io.http` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model artifacts (if loading succeeds).\n     */\n    async load() {\n        const modelConfigRequest = await this.fetch(this.path, this.requestInit);\n        if (!modelConfigRequest.ok) {\n            throw new Error(`Request to ${this.path} failed with status code ` +\n                `${modelConfigRequest.status}. Please verify this URL points to ` +\n                `the model JSON of the model to load.`);\n        }\n        let modelJSON;\n        try {\n            modelJSON = await modelConfigRequest.json();\n        }\n        catch (e) {\n            let message = `Failed to parse model JSON of response from ${this.path}.`;\n            // TODO(nsthorat): Remove this after some time when we're comfortable that\n            // .pb files are mostly gone.\n            if (this.path.endsWith('.pb')) {\n                message += ' Your path contains a .pb file extension. ' +\n                    'Support for .pb models have been removed in TensorFlow.js 1.0 ' +\n                    'in favor of .json models. You can re-convert your Python ' +\n                    'TensorFlow model using the TensorFlow.js 1.0 conversion scripts ' +\n                    'or you can convert your.pb models with the \\'pb2json\\'' +\n                    'NPM script in the tensorflow/tfjs-converter repository.';\n            }\n            else {\n                message += ' Please make sure the server is serving valid ' +\n                    'JSON for this request.';\n            }\n            throw new Error(message);\n        }\n        // We do not allow both modelTopology and weightsManifest to be missing.\n        const modelTopology = modelJSON.modelTopology;\n        const weightsManifest = modelJSON.weightsManifest;\n        if (modelTopology == null && weightsManifest == null) {\n            throw new Error(`The JSON from HTTP path ${this.path} contains neither model ` +\n                `topology or manifest for weights.`);\n        }\n        return (0,_io_utils__WEBPACK_IMPORTED_MODULE_0__.getModelArtifactsForJSON)(modelJSON, (weightsManifest) => this.loadWeights(weightsManifest));\n    }\n    async loadWeights(weightsManifest) {\n        const weightPath = Array.isArray(this.path) ? this.path[1] : this.path;\n        const [prefix, suffix] = parseUrl(weightPath);\n        const pathPrefix = this.weightPathPrefix || prefix;\n        const weightSpecs = [];\n        for (const entry of weightsManifest) {\n            weightSpecs.push(...entry.weights);\n        }\n        const fetchURLs = [];\n        const urlPromises = [];\n        for (const weightsGroup of weightsManifest) {\n            for (const path of weightsGroup.paths) {\n                if (this.weightUrlConverter != null) {\n                    urlPromises.push(this.weightUrlConverter(path));\n                }\n                else {\n                    fetchURLs.push(pathPrefix + path + suffix);\n                }\n            }\n        }\n        if (this.weightUrlConverter) {\n            fetchURLs.push(...await Promise.all(urlPromises));\n        }\n        const buffers = await (0,_weights_loader__WEBPACK_IMPORTED_MODULE_2__.loadWeightsAsArrayBuffer)(fetchURLs, {\n            requestInit: this.requestInit,\n            fetchFunc: this.fetch,\n            onProgress: this.onProgress\n        });\n        return [weightSpecs, (0,_io_utils__WEBPACK_IMPORTED_MODULE_0__.concatenateArrayBuffers)(buffers)];\n    }\n}\nHTTPRequest.URL_SCHEME_REGEX = /^https?:\\/\\//;\n/**\n * Extract the prefix and suffix of the url, where the prefix is the path before\n * the last file, and suffix is the search params after the last file.\n * ```\n * const url = 'http://tfhub.dev/model/1/tensorflowjs_model.pb?tfjs-format=file'\n * [prefix, suffix] = parseUrl(url)\n * // prefix = 'http://tfhub.dev/model/1/'\n * // suffix = '?tfjs-format=file'\n * ```\n * @param url the model url to be parsed.\n */\nfunction parseUrl(url) {\n    const lastSlash = url.lastIndexOf('/');\n    const lastSearchParam = url.lastIndexOf('?');\n    const prefix = url.substring(0, lastSlash);\n    const suffix = lastSearchParam > lastSlash ? url.substring(lastSearchParam) : '';\n    return [prefix + '/', suffix];\n}\nfunction isHTTPScheme(url) {\n    return url.match(HTTPRequest.URL_SCHEME_REGEX) != null;\n}\nconst httpRouter = (url, loadOptions) => {\n    if (typeof fetch === 'undefined' &&\n        (loadOptions == null || loadOptions.fetchFunc == null)) {\n        // `http` uses `fetch` or `node-fetch`, if one wants to use it in\n        // an environment that is not the browser or node they have to setup a\n        // global fetch polyfill.\n        return null;\n    }\n    else {\n        let isHTTP = true;\n        if (Array.isArray(url)) {\n            isHTTP = url.every(urlItem => isHTTPScheme(urlItem));\n        }\n        else {\n            isHTTP = isHTTPScheme(url);\n        }\n        if (isHTTP) {\n            return http(url, loadOptions);\n        }\n    }\n    return null;\n};\n_router_registry__WEBPACK_IMPORTED_MODULE_1__.IORouterRegistry.registerSaveRouter(httpRouter);\n_router_registry__WEBPACK_IMPORTED_MODULE_1__.IORouterRegistry.registerLoadRouter(httpRouter);\n/**\n * Creates an IOHandler subtype that sends model artifacts to HTTP server.\n *\n * An HTTP request of the `multipart/form-data` mime type will be sent to the\n * `path` URL. The form data includes artifacts that represent the topology\n * and/or weights of the model. In the case of Keras-style `tf.Model`, two\n * blobs (files) exist in form-data:\n *   - A JSON file consisting of `modelTopology` and `weightsManifest`.\n *   - A binary weights file consisting of the concatenated weight values.\n * These files are in the same format as the one generated by\n * [tfjs_converter](https://js.tensorflow.org/tutorials/import-keras.html).\n *\n * The following code snippet exemplifies the client-side code that uses this\n * function:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save(tf.io.http(\n *     'http://model-server:5000/upload', {requestInit: {method: 'PUT'}}));\n * console.log(saveResult);\n * ```\n *\n * If the default `POST` method is to be used, without any custom parameters\n * such as headers, you can simply pass an HTTP or HTTPS URL to `model.save`:\n *\n * ```js\n * const saveResult = await model.save('http://model-server:5000/upload');\n * ```\n *\n * The following GitHub Gist\n * https://gist.github.com/dsmilkov/1b6046fd6132d7408d5257b0976f7864\n * implements a server based on [flask](https://github.com/pallets/flask) that\n * can receive the request. Upon receiving the model artifacts via the requst,\n * this particular server reconsistutes instances of [Keras\n * Models](https://keras.io/models/model/) in memory.\n *\n *\n * @param path A URL path to the model.\n *   Can be an absolute HTTP path (e.g.,\n *   'http://localhost:8000/model-upload)') or a relative path (e.g.,\n *   './model-upload').\n * @param requestInit Request configurations to be used when sending\n *    HTTP request to server using `fetch`. It can contain fields such as\n *    `method`, `credentials`, `headers`, `mode`, etc. See\n *    https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n *    for more information. `requestInit` must not have a body, because the\n * body will be set by TensorFlow.js. File blobs representing the model\n * topology (filename: 'model.json') and the weights of the model (filename:\n * 'model.weights.bin') will be appended to the body. If `requestInit` has a\n * `body`, an Error will be thrown.\n * @param loadOptions Optional configuration for the loading. It includes the\n *   following fields:\n *   - weightPathPrefix Optional, this specifies the path prefix for weight\n *     files, by default this is calculated from the path param.\n *   - fetchFunc Optional, custom `fetch` function. E.g., in Node.js,\n *     the `fetch` from node-fetch can be used here.\n *   - onProgress Optional, progress callback function, fired periodically\n *     before the load is completed.\n * @returns An instance of `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction http(path, loadOptions) {\n    return new HTTPRequest(path, loadOptions);\n}\n/**\n * Deprecated. Use `tf.io.http`.\n * @param path\n * @param loadOptions\n */\nfunction browserHTTPRequest(path, loadOptions) {\n    return http(path, loadOptions);\n}\n//# sourceMappingURL=http.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/http.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deleteDatabase\": () => (/* binding */ deleteDatabase),\n/* harmony export */   \"BrowserIndexedDB\": () => (/* binding */ BrowserIndexedDB),\n/* harmony export */   \"indexedDBRouter\": () => (/* binding */ indexedDBRouter),\n/* harmony export */   \"browserIndexedDB\": () => (/* binding */ browserIndexedDB),\n/* harmony export */   \"BrowserIndexedDBManager\": () => (/* binding */ BrowserIndexedDBManager)\n/* harmony export */ });\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flags */ \"./node_modules/@tensorflow/tfjs-core/dist/flags.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nconst DATABASE_NAME = 'tensorflowjs';\nconst DATABASE_VERSION = 1;\n// Model data and ModelArtifactsInfo (metadata) are stored in two separate\n// stores for efficient access of the list of stored models and their metadata.\n// 1. The object store for model data: topology, weights and weight manifests.\nconst MODEL_STORE_NAME = 'models_store';\n// 2. The object store for ModelArtifactsInfo, including meta-information such\n//    as the type of topology (JSON vs binary), byte size of the topology, byte\n//    size of the weights, etc.\nconst INFO_STORE_NAME = 'model_info_store';\n/**\n * Delete the entire database for tensorflow.js, including the models store.\n */\nasync function deleteDatabase() {\n    const idbFactory = getIndexedDBFactory();\n    return new Promise((resolve, reject) => {\n        const deleteRequest = idbFactory.deleteDatabase(DATABASE_NAME);\n        deleteRequest.onsuccess = () => resolve();\n        deleteRequest.onerror = error => reject(error);\n    });\n}\nfunction getIndexedDBFactory() {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER')) {\n        // TODO(cais): Add more info about what IOHandler subtypes are available.\n        //   Maybe point to a doc page on the web and/or automatically determine\n        //   the available IOHandlers and print them in the error message.\n        throw new Error('Failed to obtain IndexedDB factory because the current environment' +\n            'is not a web browser.');\n    }\n    // tslint:disable-next-line:no-any\n    const theWindow = typeof window === 'undefined' ? self : window;\n    const factory = theWindow.indexedDB || theWindow.mozIndexedDB ||\n        theWindow.webkitIndexedDB || theWindow.msIndexedDB ||\n        theWindow.shimIndexedDB;\n    if (factory == null) {\n        throw new Error('The current browser does not appear to support IndexedDB.');\n    }\n    return factory;\n}\nfunction setUpDatabase(openRequest) {\n    const db = openRequest.result;\n    db.createObjectStore(MODEL_STORE_NAME, { keyPath: 'modelPath' });\n    db.createObjectStore(INFO_STORE_NAME, { keyPath: 'modelPath' });\n}\n/**\n * IOHandler subclass: Browser IndexedDB.\n *\n * See the doc string of `browserIndexedDB` for more details.\n */\nclass BrowserIndexedDB {\n    constructor(modelPath) {\n        this.indexedDB = getIndexedDBFactory();\n        if (modelPath == null || !modelPath) {\n            throw new Error('For IndexedDB, modelPath must not be null, undefined or empty.');\n        }\n        this.modelPath = modelPath;\n    }\n    async save(modelArtifacts) {\n        // TODO(cais): Support saving GraphDef models.\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        return this.databaseAction(this.modelPath, modelArtifacts);\n    }\n    async load() {\n        return this.databaseAction(this.modelPath);\n    }\n    /**\n     * Perform database action to put model artifacts into or read model artifacts\n     * from IndexedDB object store.\n     *\n     * Whether the action is put or get depends on whether `modelArtifacts` is\n     * specified. If it is specified, the action will be put; otherwise the action\n     * will be get.\n     *\n     * @param modelPath A unique string path for the model.\n     * @param modelArtifacts If specified, it will be the model artifacts to be\n     *   stored in IndexedDB.\n     * @returns A `Promise` of `SaveResult`, if the action is put, or a `Promise`\n     *   of `ModelArtifacts`, if the action is get.\n     */\n    databaseAction(modelPath, modelArtifacts) {\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (modelArtifacts == null) {\n                    // Read model out from object store.\n                    const modelTx = db.transaction(MODEL_STORE_NAME, 'readonly');\n                    const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                    const getRequest = modelStore.get(this.modelPath);\n                    getRequest.onsuccess = () => {\n                        if (getRequest.result == null) {\n                            db.close();\n                            return reject(new Error(`Cannot find model with path '${this.modelPath}' ` +\n                                `in IndexedDB.`));\n                        }\n                        else {\n                            resolve(getRequest.result.modelArtifacts);\n                        }\n                    };\n                    getRequest.onerror = error => {\n                        db.close();\n                        return reject(getRequest.error);\n                    };\n                    modelTx.oncomplete = () => db.close();\n                }\n                else {\n                    // Put model into object store.\n                    const modelArtifactsInfo = (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.getModelArtifactsInfoForJSON)(modelArtifacts);\n                    // First, put ModelArtifactsInfo into info store.\n                    const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n                    let infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                    const putInfoRequest = infoStore.put({ modelPath: this.modelPath, modelArtifactsInfo });\n                    let modelTx;\n                    putInfoRequest.onsuccess = () => {\n                        // Second, put model data into model store.\n                        modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                        const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                        const putModelRequest = modelStore.put({\n                            modelPath: this.modelPath,\n                            modelArtifacts,\n                            modelArtifactsInfo\n                        });\n                        putModelRequest.onsuccess = () => resolve({ modelArtifactsInfo });\n                        putModelRequest.onerror = error => {\n                            // If the put-model request fails, roll back the info entry as\n                            // well.\n                            infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                            const deleteInfoRequest = infoStore.delete(this.modelPath);\n                            deleteInfoRequest.onsuccess = () => {\n                                db.close();\n                                return reject(putModelRequest.error);\n                            };\n                            deleteInfoRequest.onerror = error => {\n                                db.close();\n                                return reject(putModelRequest.error);\n                            };\n                        };\n                    };\n                    putInfoRequest.onerror = error => {\n                        db.close();\n                        return reject(putInfoRequest.error);\n                    };\n                    infoTx.oncomplete = () => {\n                        if (modelTx == null) {\n                            db.close();\n                        }\n                        else {\n                            modelTx.oncomplete = () => db.close();\n                        }\n                    };\n                }\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n}\nBrowserIndexedDB.URL_SCHEME = 'indexeddb://';\nconst indexedDBRouter = (url) => {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserIndexedDB.URL_SCHEME)) {\n            return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\n_router_registry__WEBPACK_IMPORTED_MODULE_2__.IORouterRegistry.registerSaveRouter(indexedDBRouter);\n_router_registry__WEBPACK_IMPORTED_MODULE_2__.IORouterRegistry.registerLoadRouter(indexedDBRouter);\n/**\n * Creates a browser IndexedDB IOHandler for saving and loading models.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save('indexeddb://MyModel'));\n * console.log(saveResult);\n * ```\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `BrowserIndexedDB` (sublcass of `IOHandler`),\n *   which can be used with, e.g., `tf.Model.save`.\n */\nfunction browserIndexedDB(modelPath) {\n    return new BrowserIndexedDB(modelPath);\n}\nfunction maybeStripScheme(key) {\n    return key.startsWith(BrowserIndexedDB.URL_SCHEME) ?\n        key.slice(BrowserIndexedDB.URL_SCHEME.length) :\n        key;\n}\nclass BrowserIndexedDBManager {\n    constructor() {\n        this.indexedDB = getIndexedDBFactory();\n    }\n    async listModels() {\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                const tx = db.transaction(INFO_STORE_NAME, 'readonly');\n                const store = tx.objectStore(INFO_STORE_NAME);\n                // tslint:disable:max-line-length\n                // Need to cast `store` as `any` here because TypeScript's DOM\n                // library does not have the `getAll()` method even though the\n                // method is supported in the latest version of most mainstream\n                // browsers:\n                // https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAll\n                // tslint:enable:max-line-length\n                // tslint:disable-next-line:no-any\n                const getAllInfoRequest = store.getAll();\n                getAllInfoRequest.onsuccess = () => {\n                    const out = {};\n                    for (const item of getAllInfoRequest.result) {\n                        out[item.modelPath] = item.modelArtifactsInfo;\n                    }\n                    resolve(out);\n                };\n                getAllInfoRequest.onerror = error => {\n                    db.close();\n                    return reject(getAllInfoRequest.error);\n                };\n                tx.oncomplete = () => db.close();\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n    async removeModel(path) {\n        path = maybeStripScheme(path);\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n                const infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                const getInfoRequest = infoStore.get(path);\n                let modelTx;\n                getInfoRequest.onsuccess = () => {\n                    if (getInfoRequest.result == null) {\n                        db.close();\n                        return reject(new Error(`Cannot find model with path '${path}' ` +\n                            `in IndexedDB.`));\n                    }\n                    else {\n                        // First, delete the entry in the info store.\n                        const deleteInfoRequest = infoStore.delete(path);\n                        const deleteModelData = () => {\n                            // Second, delete the entry in the model store.\n                            modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                            const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                            const deleteModelRequest = modelStore.delete(path);\n                            deleteModelRequest.onsuccess = () => resolve(getInfoRequest.result.modelArtifactsInfo);\n                            deleteModelRequest.onerror = error => reject(getInfoRequest.error);\n                        };\n                        // Proceed with deleting model data regardless of whether deletion\n                        // of info data succeeds or not.\n                        deleteInfoRequest.onsuccess = deleteModelData;\n                        deleteInfoRequest.onerror = error => {\n                            deleteModelData();\n                            db.close();\n                            return reject(getInfoRequest.error);\n                        };\n                    }\n                };\n                getInfoRequest.onerror = error => {\n                    db.close();\n                    return reject(getInfoRequest.error);\n                };\n                infoTx.oncomplete = () => {\n                    if (modelTx == null) {\n                        db.close();\n                    }\n                    else {\n                        modelTx.oncomplete = () => db.close();\n                    }\n                };\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n}\n//# sourceMappingURL=indexed_db.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/io.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/io.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"copyModel\": () => (/* reexport safe */ _model_management__WEBPACK_IMPORTED_MODULE_8__.copyModel),\n/* harmony export */   \"listModels\": () => (/* reexport safe */ _model_management__WEBPACK_IMPORTED_MODULE_8__.listModels),\n/* harmony export */   \"moveModel\": () => (/* reexport safe */ _model_management__WEBPACK_IMPORTED_MODULE_8__.moveModel),\n/* harmony export */   \"removeModel\": () => (/* reexport safe */ _model_management__WEBPACK_IMPORTED_MODULE_8__.removeModel),\n/* harmony export */   \"browserFiles\": () => (/* reexport safe */ _browser_files__WEBPACK_IMPORTED_MODULE_2__.browserFiles),\n/* harmony export */   \"browserHTTPRequest\": () => (/* reexport safe */ _http__WEBPACK_IMPORTED_MODULE_3__.browserHTTPRequest),\n/* harmony export */   \"concatenateArrayBuffers\": () => (/* reexport safe */ _io_utils__WEBPACK_IMPORTED_MODULE_4__.concatenateArrayBuffers),\n/* harmony export */   \"decodeWeights\": () => (/* reexport safe */ _io_utils__WEBPACK_IMPORTED_MODULE_4__.decodeWeights),\n/* harmony export */   \"encodeWeights\": () => (/* reexport safe */ _io_utils__WEBPACK_IMPORTED_MODULE_4__.encodeWeights),\n/* harmony export */   \"fromMemory\": () => (/* reexport safe */ _passthrough__WEBPACK_IMPORTED_MODULE_5__.fromMemory),\n/* harmony export */   \"getLoadHandlers\": () => (/* reexport safe */ _router_registry__WEBPACK_IMPORTED_MODULE_6__.getLoadHandlers),\n/* harmony export */   \"getModelArtifactsForJSON\": () => (/* reexport safe */ _io_utils__WEBPACK_IMPORTED_MODULE_4__.getModelArtifactsForJSON),\n/* harmony export */   \"getModelArtifactsInfoForJSON\": () => (/* reexport safe */ _io_utils__WEBPACK_IMPORTED_MODULE_4__.getModelArtifactsInfoForJSON),\n/* harmony export */   \"getSaveHandlers\": () => (/* reexport safe */ _router_registry__WEBPACK_IMPORTED_MODULE_6__.getSaveHandlers),\n/* harmony export */   \"http\": () => (/* reexport safe */ _http__WEBPACK_IMPORTED_MODULE_3__.http),\n/* harmony export */   \"isHTTPScheme\": () => (/* reexport safe */ _http__WEBPACK_IMPORTED_MODULE_3__.isHTTPScheme),\n/* harmony export */   \"loadWeights\": () => (/* reexport safe */ _weights_loader__WEBPACK_IMPORTED_MODULE_7__.loadWeights),\n/* harmony export */   \"registerLoadRouter\": () => (/* reexport safe */ _router_registry__WEBPACK_IMPORTED_MODULE_6__.registerLoadRouter),\n/* harmony export */   \"registerSaveRouter\": () => (/* reexport safe */ _router_registry__WEBPACK_IMPORTED_MODULE_6__.registerSaveRouter),\n/* harmony export */   \"weightsLoaderFactory\": () => (/* reexport safe */ _weights_loader__WEBPACK_IMPORTED_MODULE_7__.weightsLoaderFactory),\n/* harmony export */   \"withSaveHandler\": () => (/* reexport safe */ _passthrough__WEBPACK_IMPORTED_MODULE_5__.withSaveHandler)\n/* harmony export */ });\n/* harmony import */ var _indexed_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./indexed_db */ \"./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js\");\n/* harmony import */ var _local_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./local_storage */ \"./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js\");\n/* harmony import */ var _browser_files__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./browser_files */ \"./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js\");\n/* harmony import */ var _http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./http */ \"./node_modules/@tensorflow/tfjs-core/dist/io/http.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _passthrough__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./passthrough */ \"./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/* harmony import */ var _weights_loader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./weights_loader */ \"./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js\");\n/* harmony import */ var _model_management__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./model_management */ \"./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Importing local_storage and indexed_db is necessary for the routers to be\n// registered.\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=io.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/io.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encodeWeights\": () => (/* binding */ encodeWeights),\n/* harmony export */   \"decodeWeights\": () => (/* binding */ decodeWeights),\n/* harmony export */   \"concatenateTypedArrays\": () => (/* binding */ concatenateTypedArrays),\n/* harmony export */   \"stringByteLength\": () => (/* binding */ stringByteLength),\n/* harmony export */   \"arrayBufferToBase64String\": () => (/* binding */ arrayBufferToBase64String),\n/* harmony export */   \"base64StringToArrayBuffer\": () => (/* binding */ base64StringToArrayBuffer),\n/* harmony export */   \"concatenateArrayBuffers\": () => (/* binding */ concatenateArrayBuffers),\n/* harmony export */   \"basename\": () => (/* binding */ basename),\n/* harmony export */   \"getModelJSONForModelArtifacts\": () => (/* binding */ getModelJSONForModelArtifacts),\n/* harmony export */   \"getModelArtifactsForJSON\": () => (/* binding */ getModelArtifactsForJSON),\n/* harmony export */   \"getModelArtifactsInfoForJSON\": () => (/* binding */ getModelArtifactsInfoForJSON),\n/* harmony export */   \"getFloat16Decoder\": () => (/* binding */ getFloat16Decoder)\n/* harmony export */ });\n/* harmony import */ var _ops_complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _ops_tensor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ops/tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"./node_modules/@tensorflow/tfjs-core/dist/io/types.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/** Number of bytes reserved for the length of the string. (32bit integer). */\nconst NUM_BYTES_STRING_LENGTH = 4;\n/**\n * Encode a map from names to weight values as an ArrayBuffer, along with an\n * `Array` of `WeightsManifestEntry` as specification of the encoded weights.\n *\n * This function does not perform sharding.\n *\n * This function is the reverse of `decodeWeights`.\n *\n * @param tensors A map (\"dict\") from names to tensors.\n * @param group Group to which the weights belong (optional).\n * @returns A `Promise` of\n *   - A flat `ArrayBuffer` with all the binary values of the `Tensor`s\n *     concatenated.\n *   - An `Array` of `WeightManifestEntry`s, carrying information including\n *     tensor names, `dtype`s and shapes.\n * @throws Error: on unsupported tensor `dtype`.\n */\nasync function encodeWeights(tensors, group) {\n    // TODO(adarob, cais): Support quantization.\n    const specs = [];\n    const dataPromises = [];\n    const names = Array.isArray(tensors) ?\n        tensors.map(tensor => tensor.name) :\n        Object.keys(tensors);\n    for (let i = 0; i < names.length; ++i) {\n        const name = names[i];\n        const t = Array.isArray(tensors) ? tensors[i].tensor : tensors[name];\n        if (t.dtype !== 'float32' && t.dtype !== 'int32' && t.dtype !== 'bool' &&\n            t.dtype !== 'string' && t.dtype !== 'complex64') {\n            throw new Error(`Unsupported dtype in weight '${name}': ${t.dtype}`);\n        }\n        const spec = { name, shape: t.shape, dtype: t.dtype };\n        if (t.dtype === 'string') {\n            const utf8bytes = new Promise(async (resolve) => {\n                const vals = await t.bytes();\n                const totalNumBytes = vals.reduce((p, c) => p + c.length, 0) +\n                    NUM_BYTES_STRING_LENGTH * vals.length;\n                const bytes = new Uint8Array(totalNumBytes);\n                let offset = 0;\n                for (let i = 0; i < vals.length; i++) {\n                    const val = vals[i];\n                    const bytesOfLength = new Uint8Array(new Uint32Array([val.length]).buffer);\n                    bytes.set(bytesOfLength, offset);\n                    offset += NUM_BYTES_STRING_LENGTH;\n                    bytes.set(val, offset);\n                    offset += val.length;\n                }\n                resolve(bytes);\n            });\n            dataPromises.push(utf8bytes);\n        }\n        else {\n            dataPromises.push(t.data());\n        }\n        if (group != null) {\n            spec.group = group;\n        }\n        specs.push(spec);\n    }\n    const tensorValues = await Promise.all(dataPromises);\n    return { data: concatenateTypedArrays(tensorValues), specs };\n}\n/**\n * Decode flat ArrayBuffer as weights.\n *\n * This function does not handle sharding.\n *\n * This function is the reverse of `encodeWeights`.\n *\n * @param buffer A flat ArrayBuffer carrying the binary values of the tensors\n *   concatenated in the order specified in `specs`.\n * @param specs Specifications of the names, dtypes and shapes of the tensors\n *   whose value are encoded by `buffer`.\n * @return A map from tensor name to tensor value, with the names corresponding\n *   to names in `specs`.\n * @throws Error, if any of the tensors has unsupported dtype.\n */\nfunction decodeWeights(buffer, specs) {\n    // TODO(adarob, cais): Support quantization.\n    const out = {};\n    let float16Decode;\n    let offset = 0;\n    for (const spec of specs) {\n        const name = spec.name;\n        const dtype = spec.dtype;\n        const shape = spec.shape;\n        const size = (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(shape);\n        let values;\n        if ('quantization' in spec) {\n            const quantization = spec.quantization;\n            if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n                if (!('min' in quantization && 'scale' in quantization)) {\n                    throw new Error(`Weight ${spec.name} with quantization ${quantization.dtype} ` +\n                        `doesn't have corresponding metadata min and scale.`);\n                }\n            }\n            else if (quantization.dtype === 'float16') {\n                if (dtype !== 'float32') {\n                    throw new Error(`Weight ${spec.name} is quantized with ${quantization.dtype} ` +\n                        `which only supports weights of type float32 not ${dtype}.`);\n                }\n            }\n            else {\n                throw new Error(`Weight ${spec.name} has unknown ` +\n                    `quantization dtype ${quantization.dtype}. ` +\n                    `Supported quantization dtypes are: ` +\n                    `'uint8', 'uint16', and 'float16'.`);\n            }\n            const quantizationSizeFactor = _types__WEBPACK_IMPORTED_MODULE_0__.DTYPE_VALUE_SIZE_MAP[quantization.dtype];\n            const byteBuffer = buffer.slice(offset, offset + size * quantizationSizeFactor);\n            const quantizedArray = (quantization.dtype === 'uint8') ?\n                new Uint8Array(byteBuffer) :\n                new Uint16Array(byteBuffer);\n            if (dtype === 'float32') {\n                if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n                    values = new Float32Array(quantizedArray.length);\n                    for (let i = 0; i < quantizedArray.length; i++) {\n                        const v = quantizedArray[i];\n                        values[i] = v * quantization.scale + quantization.min;\n                    }\n                }\n                else if (quantization.dtype === 'float16') {\n                    if (float16Decode === undefined) {\n                        float16Decode = getFloat16Decoder();\n                    }\n                    values = float16Decode(quantizedArray);\n                }\n                else {\n                    throw new Error(`Unsupported quantization type ${quantization.dtype} ` +\n                        `for weight type float32.`);\n                }\n            }\n            else if (dtype === 'int32') {\n                if (quantization.dtype !== 'uint8' && quantization.dtype !== 'uint16') {\n                    throw new Error(`Unsupported quantization type ${quantization.dtype} ` +\n                        `for weight type int32.`);\n                }\n                values = new Int32Array(quantizedArray.length);\n                for (let i = 0; i < quantizedArray.length; i++) {\n                    const v = quantizedArray[i];\n                    values[i] = Math.round(v * quantization.scale + quantization.min);\n                }\n            }\n            else {\n                throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n            }\n            offset += size * quantizationSizeFactor;\n        }\n        else if (dtype === 'string') {\n            const size = (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(spec.shape);\n            values = [];\n            for (let i = 0; i < size; i++) {\n                const byteLength = new Uint32Array(buffer.slice(offset, offset + NUM_BYTES_STRING_LENGTH))[0];\n                offset += NUM_BYTES_STRING_LENGTH;\n                const bytes = new Uint8Array(buffer.slice(offset, offset + byteLength));\n                values.push(bytes);\n                offset += byteLength;\n            }\n        }\n        else {\n            const dtypeFactor = _types__WEBPACK_IMPORTED_MODULE_0__.DTYPE_VALUE_SIZE_MAP[dtype];\n            const byteBuffer = buffer.slice(offset, offset + size * dtypeFactor);\n            if (dtype === 'float32') {\n                values = new Float32Array(byteBuffer);\n            }\n            else if (dtype === 'int32') {\n                values = new Int32Array(byteBuffer);\n            }\n            else if (dtype === 'bool') {\n                values = new Uint8Array(byteBuffer);\n            }\n            else if (dtype === 'complex64') {\n                values = new Float32Array(byteBuffer);\n                const real = new Float32Array(values.length / 2);\n                const image = new Float32Array(values.length / 2);\n                for (let i = 0; i < real.length; i++) {\n                    real[i] = values[i * 2];\n                    image[i] = values[i * 2 + 1];\n                }\n                const realTensor = (0,_ops_tensor__WEBPACK_IMPORTED_MODULE_2__.tensor)(real, shape, 'float32');\n                const imageTensor = (0,_ops_tensor__WEBPACK_IMPORTED_MODULE_2__.tensor)(image, shape, 'float32');\n                out[name] = (0,_ops_complex__WEBPACK_IMPORTED_MODULE_3__.complex)(realTensor, imageTensor);\n                realTensor.dispose();\n                imageTensor.dispose();\n            }\n            else {\n                throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n            }\n            offset += size * dtypeFactor;\n        }\n        if (dtype !== 'complex64') {\n            out[name] = (0,_ops_tensor__WEBPACK_IMPORTED_MODULE_2__.tensor)(values, shape, dtype);\n        }\n    }\n    return out;\n}\n/**\n * Concatenate TypedArrays into an ArrayBuffer.\n */\nfunction concatenateTypedArrays(xs) {\n    // TODO(adarob, cais): Support quantization.\n    if (xs === null) {\n        throw new Error(`Invalid input value: ${JSON.stringify(xs)}`);\n    }\n    let totalByteLength = 0;\n    // `normalizedXs` is here for this reason: a `TypedArray`'s `buffer'\n    // can have a different byte length from that of the `TypedArray` itself,\n    // for example, when the `TypedArray` is created from an offset in an\n    // `ArrayBuffer`. `normliazedXs` holds `TypedArray`s whose `buffer`s match\n    // the `TypedArray` in byte length. If an element of `xs` does not show\n    // this property, a new `TypedArray` that satisfy this property will be\n    // constructed and pushed into `normalizedXs`.\n    const normalizedXs = [];\n    xs.forEach((x) => {\n        totalByteLength += x.byteLength;\n        // tslint:disable:no-any\n        normalizedXs.push(x.byteLength === x.buffer.byteLength ? x :\n            new x.constructor(x));\n        if (!(x instanceof Float32Array || x instanceof Int32Array ||\n            x instanceof Uint8Array)) {\n            throw new Error(`Unsupported TypedArray subtype: ${x.constructor.name}`);\n        }\n        // tslint:enable:no-any\n    });\n    const y = new Uint8Array(totalByteLength);\n    let offset = 0;\n    normalizedXs.forEach((x) => {\n        y.set(new Uint8Array(x.buffer), offset);\n        offset += x.byteLength;\n    });\n    return y.buffer;\n}\n// Use Buffer on Node.js instead of Blob/atob/btoa\nconst useNodeBuffer = typeof Buffer !== 'undefined' &&\n    (typeof Blob === 'undefined' || typeof atob === 'undefined' ||\n        typeof btoa === 'undefined');\n/**\n * Calculate the byte length of a JavaScript string.\n *\n * Note that a JavaScript string can contain wide characters, therefore the\n * length of the string is not necessarily equal to the byte length.\n *\n * @param str Input string.\n * @returns Byte length.\n */\nfunction stringByteLength(str) {\n    if (useNodeBuffer) {\n        return Buffer.byteLength(str);\n    }\n    return new Blob([str]).size;\n}\n/**\n * Encode an ArrayBuffer as a base64 encoded string.\n *\n * @param buffer `ArrayBuffer` to be converted.\n * @returns A string that base64-encodes `buffer`.\n */\nfunction arrayBufferToBase64String(buffer) {\n    if (useNodeBuffer) {\n        return Buffer.from(buffer).toString('base64');\n    }\n    const buf = new Uint8Array(buffer);\n    let s = '';\n    for (let i = 0, l = buf.length; i < l; i++) {\n        s += String.fromCharCode(buf[i]);\n    }\n    return btoa(s);\n}\n/**\n * Decode a base64 string as an ArrayBuffer.\n *\n * @param str Base64 string.\n * @returns Decoded `ArrayBuffer`.\n */\nfunction base64StringToArrayBuffer(str) {\n    if (useNodeBuffer) {\n        const buf = Buffer.from(str, 'base64');\n        return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n    }\n    const s = atob(str);\n    const buffer = new Uint8Array(s.length);\n    for (let i = 0; i < s.length; ++i) {\n        buffer.set([s.charCodeAt(i)], i);\n    }\n    return buffer.buffer;\n}\n/**\n * Concatenate a number of ArrayBuffers into one.\n *\n * @param buffers A number of array buffers to concatenate.\n * @returns Result of concatenating `buffers` in order.\n */\nfunction concatenateArrayBuffers(buffers) {\n    if (buffers.length === 1) {\n        return buffers[0];\n    }\n    let totalByteLength = 0;\n    buffers.forEach((buffer) => {\n        totalByteLength += buffer.byteLength;\n    });\n    const temp = new Uint8Array(totalByteLength);\n    let offset = 0;\n    buffers.forEach((buffer) => {\n        temp.set(new Uint8Array(buffer), offset);\n        offset += buffer.byteLength;\n    });\n    return temp.buffer;\n}\n/**\n * Get the basename of a path.\n *\n * Behaves in a way analogous to Linux's basename command.\n *\n * @param path\n */\nfunction basename(path) {\n    const SEPARATOR = '/';\n    path = path.trim();\n    while (path.endsWith(SEPARATOR)) {\n        path = path.slice(0, path.length - 1);\n    }\n    const items = path.split(SEPARATOR);\n    return items[items.length - 1];\n}\n/**\n * Create `ModelJSON` from `ModelArtifacts`.\n *\n * @param artifacts Model artifacts, describing the model and its weights.\n * @param manifest Weight manifest, describing where the weights of the\n *     `ModelArtifacts` are stored, and some metadata about them.\n * @returns Object representing the `model.json` file describing the model\n *     artifacts and weights\n */\nfunction getModelJSONForModelArtifacts(artifacts, manifest) {\n    const result = {\n        modelTopology: artifacts.modelTopology,\n        format: artifacts.format,\n        generatedBy: artifacts.generatedBy,\n        convertedBy: artifacts.convertedBy,\n        weightsManifest: manifest\n    };\n    if (artifacts.signature != null) {\n        result.signature = artifacts.signature;\n    }\n    if (artifacts.userDefinedMetadata != null) {\n        result.userDefinedMetadata = artifacts.userDefinedMetadata;\n    }\n    if (artifacts.modelInitializer != null) {\n        result.modelInitializer = artifacts.modelInitializer;\n    }\n    if (artifacts.trainingConfig != null) {\n        result.trainingConfig = artifacts.trainingConfig;\n    }\n    return result;\n}\n/**\n * Create `ModelArtifacts` from a JSON file.\n *\n * @param modelJSON Object containing the parsed JSON of `model.json`\n * @param loadWeights Function that takes the JSON file's weights manifest,\n *     reads weights from the listed path(s), and returns a Promise of the\n *     weight manifest entries along with the weights data.\n * @returns A Promise of the `ModelArtifacts`, as described by the JSON file.\n */\nasync function getModelArtifactsForJSON(modelJSON, loadWeights) {\n    const modelArtifacts = {\n        modelTopology: modelJSON.modelTopology,\n        format: modelJSON.format,\n        generatedBy: modelJSON.generatedBy,\n        convertedBy: modelJSON.convertedBy\n    };\n    if (modelJSON.trainingConfig != null) {\n        modelArtifacts.trainingConfig = modelJSON.trainingConfig;\n    }\n    if (modelJSON.weightsManifest != null) {\n        const [weightSpecs, weightData] = await loadWeights(modelJSON.weightsManifest);\n        modelArtifacts.weightSpecs = weightSpecs;\n        modelArtifacts.weightData = weightData;\n    }\n    if (modelJSON.signature != null) {\n        modelArtifacts.signature = modelJSON.signature;\n    }\n    if (modelJSON.userDefinedMetadata != null) {\n        modelArtifacts.userDefinedMetadata = modelJSON.userDefinedMetadata;\n    }\n    if (modelJSON.modelInitializer != null) {\n        modelArtifacts.modelInitializer = modelJSON.modelInitializer;\n    }\n    return modelArtifacts;\n}\n/**\n * Populate ModelArtifactsInfo fields for a model with JSON topology.\n * @param modelArtifacts\n * @returns A ModelArtifactsInfo object.\n */\nfunction getModelArtifactsInfoForJSON(modelArtifacts) {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n        throw new Error('Expected JSON model topology, received ArrayBuffer.');\n    }\n    return {\n        dateSaved: new Date(),\n        modelTopologyType: 'JSON',\n        modelTopologyBytes: modelArtifacts.modelTopology == null ?\n            0 :\n            stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),\n        weightSpecsBytes: modelArtifacts.weightSpecs == null ?\n            0 :\n            stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),\n        weightDataBytes: modelArtifacts.weightData == null ?\n            0 :\n            modelArtifacts.weightData.byteLength,\n    };\n}\n/**\n * Computes mantisa table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 2048 mantissa lookup values.\n */\nfunction computeFloat16MantisaTable() {\n    const convertMantissa = (i) => {\n        let m = i << 13;\n        let e = 0;\n        while ((m & 0x00800000) === 0) {\n            e -= 0x00800000;\n            m <<= 1;\n        }\n        m &= ~0x00800000;\n        e += 0x38800000;\n        return m | e;\n    };\n    const mantisaTable = new Uint32Array(2048);\n    mantisaTable[0] = 0;\n    for (let i = 1; i < 1024; i++) {\n        mantisaTable[i] = convertMantissa(i);\n    }\n    for (let i = 1024; i < 2048; i++) {\n        mantisaTable[i] = 0x38000000 + ((i - 1024) << 13);\n    }\n    return mantisaTable;\n}\n/**\n * Computes exponent table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 64 exponent lookup values.\n */\nfunction computeFloat16ExponentTable() {\n    const exponentTable = new Uint32Array(64);\n    exponentTable[0] = 0;\n    exponentTable[31] = 0x47800000;\n    exponentTable[32] = 0x80000000;\n    exponentTable[63] = 0xc7800000;\n    for (let i = 1; i < 31; i++) {\n        exponentTable[i] = i << 23;\n    }\n    for (let i = 33; i < 63; i++) {\n        exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n    }\n    return exponentTable;\n}\n/**\n * Computes offset table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 6d offset values.\n */\nfunction computeFloat16OffsetTable() {\n    const offsetTable = new Uint32Array(64);\n    for (let i = 0; i < 64; i++) {\n        offsetTable[i] = 1024;\n    }\n    offsetTable[0] = offsetTable[32] = 0;\n    return offsetTable;\n}\n/**\n * Retrieve a Float16 decoder which will decode a ByteArray of Float16 values\n * to a Float32Array.\n *\n * @returns Function (buffer: Uint16Array) => Float32Array which decodes\n *          the Uint16Array of Float16 bytes to a Float32Array.\n */\nfunction getFloat16Decoder() {\n    // Algorithm is based off of\n    // http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n    // Cache lookup tables\n    const mantisaTable = computeFloat16MantisaTable();\n    const exponentTable = computeFloat16ExponentTable();\n    const offsetTable = computeFloat16OffsetTable();\n    return (quantizedArray) => {\n        const buffer = new ArrayBuffer(4 * quantizedArray.length);\n        const bufferUint32View = new Uint32Array(buffer);\n        for (let index = 0; index < quantizedArray.length; index++) {\n            const float16Bits = quantizedArray[index];\n            const float32Bits = mantisaTable[offsetTable[float16Bits >> 10] + (float16Bits & 0x3ff)] +\n                exponentTable[float16Bits >> 10];\n            bufferUint32View[index] = float32Bits;\n        }\n        return new Float32Array(buffer);\n    };\n}\n//# sourceMappingURL=io_utils.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"purgeLocalStorageArtifacts\": () => (/* binding */ purgeLocalStorageArtifacts),\n/* harmony export */   \"BrowserLocalStorage\": () => (/* binding */ BrowserLocalStorage),\n/* harmony export */   \"localStorageRouter\": () => (/* binding */ localStorageRouter),\n/* harmony export */   \"browserLocalStorage\": () => (/* binding */ browserLocalStorage),\n/* harmony export */   \"BrowserLocalStorageManager\": () => (/* binding */ BrowserLocalStorageManager)\n/* harmony export */ });\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flags */ \"./node_modules/@tensorflow/tfjs-core/dist/flags.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\nconst PATH_SEPARATOR = '/';\nconst PATH_PREFIX = 'tensorflowjs_models';\nconst INFO_SUFFIX = 'info';\nconst MODEL_TOPOLOGY_SUFFIX = 'model_topology';\nconst WEIGHT_SPECS_SUFFIX = 'weight_specs';\nconst WEIGHT_DATA_SUFFIX = 'weight_data';\nconst MODEL_METADATA_SUFFIX = 'model_metadata';\n/**\n * Purge all tensorflow.js-saved model artifacts from local storage.\n *\n * @returns Paths of the models purged.\n */\nfunction purgeLocalStorageArtifacts() {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER') || typeof window === 'undefined' ||\n        typeof window.localStorage === 'undefined') {\n        throw new Error('purgeLocalStorageModels() cannot proceed because local storage is ' +\n            'unavailable in the current environment.');\n    }\n    const LS = window.localStorage;\n    const purgedModelPaths = [];\n    for (let i = 0; i < LS.length; ++i) {\n        const key = LS.key(i);\n        const prefix = PATH_PREFIX + PATH_SEPARATOR;\n        if (key.startsWith(prefix) && key.length > prefix.length) {\n            LS.removeItem(key);\n            const modelName = getModelPathFromKey(key);\n            if (purgedModelPaths.indexOf(modelName) === -1) {\n                purgedModelPaths.push(modelName);\n            }\n        }\n    }\n    return purgedModelPaths;\n}\nfunction getModelKeys(path) {\n    return {\n        info: [PATH_PREFIX, path, INFO_SUFFIX].join(PATH_SEPARATOR),\n        topology: [PATH_PREFIX, path, MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),\n        weightSpecs: [PATH_PREFIX, path, WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),\n        weightData: [PATH_PREFIX, path, WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),\n        modelMetadata: [PATH_PREFIX, path, MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)\n    };\n}\nfunction removeItems(keys) {\n    for (const key of Object.values(keys)) {\n        window.localStorage.removeItem(key);\n    }\n}\n/**\n * Get model path from a local-storage key.\n *\n * E.g., 'tensorflowjs_models/my/model/1/info' --> 'my/model/1'\n *\n * @param key\n */\nfunction getModelPathFromKey(key) {\n    const items = key.split(PATH_SEPARATOR);\n    if (items.length < 3) {\n        throw new Error(`Invalid key format: ${key}`);\n    }\n    return items.slice(1, items.length - 1).join(PATH_SEPARATOR);\n}\nfunction maybeStripScheme(key) {\n    return key.startsWith(BrowserLocalStorage.URL_SCHEME) ?\n        key.slice(BrowserLocalStorage.URL_SCHEME.length) :\n        key;\n}\n/**\n * IOHandler subclass: Browser Local Storage.\n *\n * See the doc string to `browserLocalStorage` for more details.\n */\nclass BrowserLocalStorage {\n    constructor(modelPath) {\n        if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER') || typeof window === 'undefined' ||\n            typeof window.localStorage === 'undefined') {\n            // TODO(cais): Add more info about what IOHandler subtypes are\n            // available.\n            //   Maybe point to a doc page on the web and/or automatically determine\n            //   the available IOHandlers and print them in the error message.\n            throw new Error('The current environment does not support local storage.');\n        }\n        this.LS = window.localStorage;\n        if (modelPath == null || !modelPath) {\n            throw new Error('For local storage, modelPath must not be null, undefined or empty.');\n        }\n        this.modelPath = modelPath;\n        this.keys = getModelKeys(this.modelPath);\n    }\n    /**\n     * Save model artifacts to browser local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @param modelArtifacts The model artifacts to be stored.\n     * @returns An instance of SaveResult.\n     */\n    async save(modelArtifacts) {\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        else {\n            const topology = JSON.stringify(modelArtifacts.modelTopology);\n            const weightSpecs = JSON.stringify(modelArtifacts.weightSpecs);\n            const modelArtifactsInfo = (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.getModelArtifactsInfoForJSON)(modelArtifacts);\n            try {\n                this.LS.setItem(this.keys.info, JSON.stringify(modelArtifactsInfo));\n                this.LS.setItem(this.keys.topology, topology);\n                this.LS.setItem(this.keys.weightSpecs, weightSpecs);\n                this.LS.setItem(this.keys.weightData, (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.arrayBufferToBase64String)(modelArtifacts.weightData));\n                // Note that JSON.stringify doesn't write out keys that have undefined\n                // values, so for some keys, we set undefined instead of a null-ish\n                // value.\n                const metadata = {\n                    format: modelArtifacts.format,\n                    generatedBy: modelArtifacts.generatedBy,\n                    convertedBy: modelArtifacts.convertedBy,\n                    signature: modelArtifacts.signature != null ?\n                        modelArtifacts.signature :\n                        undefined,\n                    userDefinedMetadata: modelArtifacts.userDefinedMetadata != null ?\n                        modelArtifacts.userDefinedMetadata :\n                        undefined,\n                    modelInitializer: modelArtifacts.modelInitializer != null ?\n                        modelArtifacts.modelInitializer :\n                        undefined,\n                    trainingConfig: modelArtifacts.trainingConfig != null ?\n                        modelArtifacts.trainingConfig :\n                        undefined\n                };\n                this.LS.setItem(this.keys.modelMetadata, JSON.stringify(metadata));\n                return { modelArtifactsInfo };\n            }\n            catch (err) {\n                // If saving failed, clean up all items saved so far.\n                removeItems(this.keys);\n                throw new Error(`Failed to save model '${this.modelPath}' to local storage: ` +\n                    `size quota being exceeded is a possible cause of this failure: ` +\n                    `modelTopologyBytes=${modelArtifactsInfo.modelTopologyBytes}, ` +\n                    `weightSpecsBytes=${modelArtifactsInfo.weightSpecsBytes}, ` +\n                    `weightDataBytes=${modelArtifactsInfo.weightDataBytes}.`);\n            }\n        }\n    }\n    /**\n     * Load a model from local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model (if loading succeeds).\n     */\n    async load() {\n        const info = JSON.parse(this.LS.getItem(this.keys.info));\n        if (info == null) {\n            throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);\n        }\n        if (info.modelTopologyType !== 'JSON') {\n            throw new Error('BrowserLocalStorage does not support loading non-JSON model ' +\n                'topology yet.');\n        }\n        const out = {};\n        // Load topology.\n        const topology = JSON.parse(this.LS.getItem(this.keys.topology));\n        if (topology == null) {\n            throw new Error(`In local storage, the topology of model '${this.modelPath}' ` +\n                `is missing.`);\n        }\n        out.modelTopology = topology;\n        // Load weight specs.\n        const weightSpecs = JSON.parse(this.LS.getItem(this.keys.weightSpecs));\n        if (weightSpecs == null) {\n            throw new Error(`In local storage, the weight specs of model '${this.modelPath}' ` +\n                `are missing.`);\n        }\n        out.weightSpecs = weightSpecs;\n        // Load meta-data fields.\n        const metadataString = this.LS.getItem(this.keys.modelMetadata);\n        if (metadataString != null) {\n            const metadata = JSON.parse(metadataString);\n            out.format = metadata.format;\n            out.generatedBy = metadata.generatedBy;\n            out.convertedBy = metadata.convertedBy;\n            if (metadata.signature != null) {\n                out.signature = metadata.signature;\n            }\n            if (metadata.userDefinedMetadata != null) {\n                out.userDefinedMetadata = metadata.userDefinedMetadata;\n            }\n            if (metadata.modelInitializer != null) {\n                out.modelInitializer = metadata.modelInitializer;\n            }\n            if (metadata.trainingConfig != null) {\n                out.trainingConfig = metadata.trainingConfig;\n            }\n        }\n        // Load weight data.\n        const weightDataBase64 = this.LS.getItem(this.keys.weightData);\n        if (weightDataBase64 == null) {\n            throw new Error(`In local storage, the binary weight values of model ` +\n                `'${this.modelPath}' are missing.`);\n        }\n        out.weightData = (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.base64StringToArrayBuffer)(weightDataBase64);\n        return out;\n    }\n}\nBrowserLocalStorage.URL_SCHEME = 'localstorage://';\nconst localStorageRouter = (url) => {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserLocalStorage.URL_SCHEME)) {\n            return browserLocalStorage(url.slice(BrowserLocalStorage.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\n_router_registry__WEBPACK_IMPORTED_MODULE_2__.IORouterRegistry.registerSaveRouter(localStorageRouter);\n_router_registry__WEBPACK_IMPORTED_MODULE_2__.IORouterRegistry.registerLoadRouter(localStorageRouter);\n/**\n * Factory function for local storage IOHandler.\n *\n * This `IOHandler` supports both `save` and `load`.\n *\n * For each model's saved artifacts, four items are saved to local storage.\n *   - `${PATH_SEPARATOR}/${modelPath}/info`: Contains meta-info about the\n *     model, such as date saved, type of the topology, size in bytes, etc.\n *   - `${PATH_SEPARATOR}/${modelPath}/topology`: Model topology. For Keras-\n *     style models, this is a stringized JSON.\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_specs`: Weight specs of the\n *     model, can be used to decode the saved binary weight values (see\n *     item below).\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_data`: Concatenated binary\n *     weight values, stored as a base64-encoded string.\n *\n * Saving may throw an `Error` if the total size of the artifacts exceed the\n * browser-specific quota.\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `IOHandler`, which can be used with, e.g.,\n *   `tf.Model.save`.\n */\nfunction browserLocalStorage(modelPath) {\n    return new BrowserLocalStorage(modelPath);\n}\nclass BrowserLocalStorageManager {\n    constructor() {\n        (0,_util__WEBPACK_IMPORTED_MODULE_4__.assert)((0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER'), () => 'Current environment is not a web browser');\n        (0,_util__WEBPACK_IMPORTED_MODULE_4__.assert)(typeof window === 'undefined' ||\n            typeof window.localStorage !== 'undefined', () => 'Current browser does not appear to support localStorage');\n        this.LS = window.localStorage;\n    }\n    async listModels() {\n        const out = {};\n        const prefix = PATH_PREFIX + PATH_SEPARATOR;\n        const suffix = PATH_SEPARATOR + INFO_SUFFIX;\n        for (let i = 0; i < this.LS.length; ++i) {\n            const key = this.LS.key(i);\n            if (key.startsWith(prefix) && key.endsWith(suffix)) {\n                const modelPath = getModelPathFromKey(key);\n                out[modelPath] = JSON.parse(this.LS.getItem(key));\n            }\n        }\n        return out;\n    }\n    async removeModel(path) {\n        path = maybeStripScheme(path);\n        const keys = getModelKeys(path);\n        if (this.LS.getItem(keys.info) == null) {\n            throw new Error(`Cannot find model at path '${path}'`);\n        }\n        const info = JSON.parse(this.LS.getItem(keys.info));\n        removeItems(keys);\n        return info;\n    }\n}\n//# sourceMappingURL=local_storage.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ModelStoreManagerRegistry\": () => (/* binding */ ModelStoreManagerRegistry),\n/* harmony export */   \"moveModel\": () => (/* binding */ moveModel),\n/* harmony export */   \"copyModel\": () => (/* binding */ copyModel),\n/* harmony export */   \"removeModel\": () => (/* binding */ removeModel),\n/* harmony export */   \"listModels\": () => (/* binding */ listModels)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Classes and functions for model management across multiple storage mediums.\n *\n * Supported client actions:\n * - Listing models on all registered storage mediums.\n * - Remove model by URL from any registered storage mediums, by using URL\n *   string.\n * - Moving or copying model from one path to another in the same medium or from\n *   one medium to another, by using URL strings.\n */\n\n\nconst URL_SCHEME_SUFFIX = '://';\nclass ModelStoreManagerRegistry {\n    constructor() {\n        this.managers = {};\n    }\n    static getInstance() {\n        if (ModelStoreManagerRegistry.instance == null) {\n            ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();\n        }\n        return ModelStoreManagerRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n    static registerManager(scheme, manager) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(scheme != null, () => 'scheme must not be undefined or null.');\n        if (scheme.endsWith(URL_SCHEME_SUFFIX)) {\n            scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));\n        }\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(scheme.length > 0, () => 'scheme must not be an empty string.');\n        const registry = ModelStoreManagerRegistry.getInstance();\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(registry.managers[scheme] == null, () => `A model store manager is already registered for scheme '${scheme}'.`);\n        registry.managers[scheme] = manager;\n    }\n    static getManager(scheme) {\n        const manager = this.getInstance().managers[scheme];\n        if (manager == null) {\n            throw new Error(`Cannot find model manager for scheme '${scheme}'`);\n        }\n        return manager;\n    }\n    static getSchemes() {\n        return Object.keys(this.getInstance().managers);\n    }\n}\n/**\n * Helper method for parsing a URL string into a scheme and a path.\n *\n * @param url E.g., 'localstorage://my-model'\n * @returns A dictionary with two fields: scheme and path.\n *   Scheme: e.g., 'localstorage' in the example above.\n *   Path: e.g., 'my-model' in the example above.\n */\nfunction parseURL(url) {\n    if (url.indexOf(URL_SCHEME_SUFFIX) === -1) {\n        throw new Error(`The url string provided does not contain a scheme. ` +\n            `Supported schemes are: ` +\n            `${ModelStoreManagerRegistry.getSchemes().join(',')}`);\n    }\n    return {\n        scheme: url.split(URL_SCHEME_SUFFIX)[0],\n        path: url.split(URL_SCHEME_SUFFIX)[1],\n    };\n}\nasync function cloneModelInternal(sourceURL, destURL, deleteSource = false) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(sourceURL !== destURL, () => `Old path and new path are the same: '${sourceURL}'`);\n    const loadHandlers = _router_registry__WEBPACK_IMPORTED_MODULE_0__.IORouterRegistry.getLoadHandlers(sourceURL);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(loadHandlers.length > 0, () => `Copying failed because no load handler is found for source URL ${sourceURL}.`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(loadHandlers.length < 2, () => `Copying failed because more than one (${loadHandlers.length}) ` +\n        `load handlers for source URL ${sourceURL}.`);\n    const loadHandler = loadHandlers[0];\n    const saveHandlers = _router_registry__WEBPACK_IMPORTED_MODULE_0__.IORouterRegistry.getSaveHandlers(destURL);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(saveHandlers.length > 0, () => `Copying failed because no save handler is found for destination ` +\n        `URL ${destURL}.`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(saveHandlers.length < 2, () => `Copying failed because more than one (${loadHandlers.length}) ` +\n        `save handlers for destination URL ${destURL}.`);\n    const saveHandler = saveHandlers[0];\n    const sourceScheme = parseURL(sourceURL).scheme;\n    const sourcePath = parseURL(sourceURL).path;\n    const sameMedium = sourceScheme === parseURL(sourceURL).scheme;\n    const modelArtifacts = await loadHandler.load();\n    // If moving within the same storage medium, remove the old model as soon as\n    // the loading is done. Without doing this, it is possible that the combined\n    // size of the two models will cause the cloning to fail.\n    if (deleteSource && sameMedium) {\n        await ModelStoreManagerRegistry.getManager(sourceScheme)\n            .removeModel(sourcePath);\n    }\n    const saveResult = await saveHandler.save(modelArtifacts);\n    // If moving between mediums, the deletion is done after the save succeeds.\n    // This guards against the case in which saving to the destination medium\n    // fails.\n    if (deleteSource && !sameMedium) {\n        await ModelStoreManagerRegistry.getManager(sourceScheme)\n            .removeModel(sourcePath);\n    }\n    return saveResult.modelArtifactsInfo;\n}\n/**\n * List all models stored in registered storage mediums.\n *\n * For a web browser environment, the registered mediums are Local Storage and\n * IndexedDB.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @returns A `Promise` of a dictionary mapping URLs of existing models to\n * their model artifacts info. URLs include medium-specific schemes, e.g.,\n *   'indexeddb://my/model/1'. Model artifacts info include type of the\n * model's topology, byte sizes of the topology, weights, etc.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function listModels() {\n    const schemes = ModelStoreManagerRegistry.getSchemes();\n    const out = {};\n    for (const scheme of schemes) {\n        const schemeOut = await ModelStoreManagerRegistry.getManager(scheme).listModels();\n        for (const path in schemeOut) {\n            const url = scheme + URL_SCHEME_SUFFIX + path;\n            out[url] = schemeOut[path];\n        }\n    }\n    return out;\n}\n/**\n * Remove a model specified by URL from a reigstered storage medium.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @param url A URL to a stored model, with a scheme prefix, e.g.,\n *   'localstorage://my-model-1', 'indexeddb://my/model/2'.\n * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n *   is successful).\n * @throws Error if deletion fails, e.g., if no model exists at `path`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function removeModel(url) {\n    const schemeAndPath = parseURL(url);\n    const manager = ModelStoreManagerRegistry.getManager(schemeAndPath.scheme);\n    return manager.removeModel(schemeAndPath.path);\n}\n/**\n * Copy a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Copying within a storage medium, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Copying between two storage mediums, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Copy the model, from Local Storage to IndexedDB.\n * await tf.io.copyModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove both models.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of copying.\n * @param destURL Destination URL of copying.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if copying fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function copyModel(sourceURL, destURL) {\n    const deleteSource = false;\n    return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n/**\n * Move a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Moving within a storage medium, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Moving between two storage mediums, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Move the model, from Local Storage to IndexedDB.\n * await tf.io.moveModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove the moved model.\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of moving.\n * @param destURL Destination URL of moving.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if moving fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function moveModel(sourceURL, destURL) {\n    const deleteSource = true;\n    return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n\n//# sourceMappingURL=model_management.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fromMemory\": () => (/* binding */ fromMemory),\n/* harmony export */   \"withSaveHandler\": () => (/* binding */ withSaveHandler)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass PassthroughLoader {\n    constructor(modelArtifacts) {\n        this.modelArtifacts = modelArtifacts;\n    }\n    async load() {\n        return this.modelArtifacts;\n    }\n}\nclass PassthroughSaver {\n    constructor(saveHandler) {\n        this.saveHandler = saveHandler;\n    }\n    async save(modelArtifacts) {\n        return this.saveHandler(modelArtifacts);\n    }\n}\n/**\n * Creates an IOHandler that loads model artifacts from memory.\n *\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * const model = await tf.loadLayersModel(tf.io.fromMemory(\n *     modelTopology, weightSpecs, weightData));\n * ```\n *\n * @param modelArtifacts a object containing model topology (i.e., parsed from\n *   the JSON format).\n * @param weightSpecs An array of `WeightsManifestEntry` objects describing the\n *   names, shapes, types, and quantization of the weight data.\n * @param weightData A single `ArrayBuffer` containing the weight data,\n *   concatenated in the order described by the weightSpecs.\n * @param trainingConfig Model training configuration. Optional.\n *\n * @returns A passthrough `IOHandler` that simply loads the provided data.\n */\nfunction fromMemory(modelArtifacts, weightSpecs, weightData, trainingConfig) {\n    if (arguments.length === 1) {\n        const isModelArtifacts = modelArtifacts.modelTopology != null ||\n            modelArtifacts.weightSpecs != null;\n        if (isModelArtifacts) {\n            return new PassthroughLoader(modelArtifacts);\n        }\n        else {\n            // Legacy support: with only modelTopology.\n            // TODO(cais): Remove this deprecated API.\n            console.warn('Please call tf.io.fromMemory() with only one argument. ' +\n                'The argument should be of type ModelArtifacts. ' +\n                'The multi-argument signature of tf.io.fromMemory() has been ' +\n                'deprecated and will be removed in a future release.');\n            return new PassthroughLoader({ modelTopology: modelArtifacts });\n        }\n    }\n    else {\n        // Legacy support.\n        // TODO(cais): Remove this deprecated API.\n        console.warn('Please call tf.io.fromMemory() with only one argument. ' +\n            'The argument should be of type ModelArtifacts. ' +\n            'The multi-argument signature of tf.io.fromMemory() has been ' +\n            'deprecated and will be removed in a future release.');\n        return new PassthroughLoader({\n            modelTopology: modelArtifacts,\n            weightSpecs,\n            weightData,\n            trainingConfig\n        });\n    }\n}\n/**\n * Creates an IOHandler that passes saved model artifacts to a callback.\n *\n * ```js\n * function handleSave(artifacts) {\n *   // ... do something with the artifacts ...\n *   return {modelArtifactsInfo: {...}, ...};\n * }\n *\n * const saveResult = model.save(tf.io.withSaveHandler(handleSave));\n * ```\n *\n * @param saveHandler A function that accepts a `ModelArtifacts` and returns a\n *     `SaveResult`.\n */\nfunction withSaveHandler(saveHandler) {\n    return new PassthroughSaver(saveHandler);\n}\n//# sourceMappingURL=passthrough.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/progress.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/progress.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"monitorPromisesProgress\": () => (/* binding */ monitorPromisesProgress)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Monitor Promise.all progress, fire onProgress callback function.\n *\n * @param promises Promise list going to be monitored\n * @param onProgress Callback function. Fired when a promise resolved.\n * @param startFraction Optional fraction start. Default to 0.\n * @param endFraction Optional fraction end. Default to 1.\n */\nfunction monitorPromisesProgress(promises, onProgress, startFraction, endFraction) {\n    checkPromises(promises);\n    startFraction = startFraction == null ? 0 : startFraction;\n    endFraction = endFraction == null ? 1 : endFraction;\n    checkFraction(startFraction, endFraction);\n    let resolvedPromise = 0;\n    const registerMonitor = (promise) => {\n        promise.then(value => {\n            const fraction = startFraction +\n                ++resolvedPromise / promises.length * (endFraction - startFraction);\n            // pass fraction as parameter to callback function.\n            onProgress(fraction);\n            return value;\n        });\n        return promise;\n    };\n    function checkPromises(promises) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(promises != null && Array.isArray(promises) && promises.length > 0, () => 'promises must be a none empty array');\n    }\n    function checkFraction(startFraction, endFraction) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(startFraction >= 0 && startFraction <= 1, () => `Progress fraction must be in range [0, 1], but ` +\n            `got startFraction ${startFraction}`);\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(endFraction >= 0 && endFraction <= 1, () => `Progress fraction must be in range [0, 1], but ` +\n            `got endFraction ${endFraction}`);\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(endFraction >= startFraction, () => `startFraction must be no more than endFraction, but ` +\n            `got startFraction ${startFraction} and endFraction ` +\n            `${endFraction}`);\n    }\n    return Promise.all(promises.map(registerMonitor));\n}\n//# sourceMappingURL=progress.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/progress.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IORouterRegistry\": () => (/* binding */ IORouterRegistry),\n/* harmony export */   \"registerSaveRouter\": () => (/* binding */ registerSaveRouter),\n/* harmony export */   \"registerLoadRouter\": () => (/* binding */ registerLoadRouter),\n/* harmony export */   \"getSaveHandlers\": () => (/* binding */ getSaveHandlers),\n/* harmony export */   \"getLoadHandlers\": () => (/* binding */ getLoadHandlers)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass IORouterRegistry {\n    constructor() {\n        this.saveRouters = [];\n        this.loadRouters = [];\n    }\n    static getInstance() {\n        if (IORouterRegistry.instance == null) {\n            IORouterRegistry.instance = new IORouterRegistry();\n        }\n        return IORouterRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n    static registerSaveRouter(saveRouter) {\n        IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n    }\n    /**\n     * Register a load-handler router.\n     *\n     * @param loadRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `load` method defined or `null`.\n     */\n    static registerLoadRouter(loadRouter) {\n        IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n    }\n    /**\n     * Look up IOHandler for saving, given a URL-like string.\n     *\n     * @param url\n     * @returns If only one match is found, an instance of IOHandler with the\n     * `save` method defined. If no match is found, `null`.\n     * @throws Error, if more than one match is found.\n     */\n    static getSaveHandlers(url) {\n        return IORouterRegistry.getHandlers(url, 'save');\n    }\n    /**\n     * Look up IOHandler for loading, given a URL-like string.\n     *\n     * @param url\n     * @param loadOptions Optional, custom load options.\n     * @returns All valid handlers for `url`, given the currently registered\n     *   handler routers.\n     */\n    static getLoadHandlers(url, loadOptions) {\n        return IORouterRegistry.getHandlers(url, 'load', loadOptions);\n    }\n    static getHandlers(url, handlerType, loadOptions) {\n        const validHandlers = [];\n        const routers = handlerType === 'load' ?\n            IORouterRegistry.getInstance().loadRouters :\n            IORouterRegistry.getInstance().saveRouters;\n        routers.forEach(router => {\n            const handler = router(url, loadOptions);\n            if (handler !== null) {\n                validHandlers.push(handler);\n            }\n        });\n        return validHandlers;\n    }\n}\nconst registerSaveRouter = (loudRouter) => IORouterRegistry.registerSaveRouter(loudRouter);\nconst registerLoadRouter = (loudRouter) => IORouterRegistry.registerLoadRouter(loudRouter);\nconst getSaveHandlers = (url) => IORouterRegistry.getSaveHandlers(url);\nconst getLoadHandlers = (url, loadOptions) => IORouterRegistry.getLoadHandlers(url, loadOptions);\n//# sourceMappingURL=router_registry.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/types.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/types.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DTYPE_VALUE_SIZE_MAP\": () => (/* binding */ DTYPE_VALUE_SIZE_MAP)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/* Type definitions for exporting and importing of models. */\n/**\n * A map from Tensor dtype to number of bytes per element of the Tensor.\n */\nconst DTYPE_VALUE_SIZE_MAP = {\n    'float32': 4,\n    'float16': 2,\n    'int32': 4,\n    'uint16': 2,\n    'uint8': 1,\n    'bool': 1,\n    'complex64': 8\n};\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/types.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loadWeightsAsArrayBuffer\": () => (/* binding */ loadWeightsAsArrayBuffer),\n/* harmony export */   \"loadWeights\": () => (/* binding */ loadWeights),\n/* harmony export */   \"weightsLoaderFactory\": () => (/* binding */ weightsLoaderFactory)\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _progress__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./progress */ \"./node_modules/@tensorflow/tfjs-core/dist/io/progress.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"./node_modules/@tensorflow/tfjs-core/dist/io/types.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Reads binary weights data from a number of URLs.\n *\n * @param fetchURLs URLs to send the HTTP requests at, using `fetch` calls.\n * @param requestOptions RequestInit (options) for the HTTP requests.\n * @param fetchFunc Optional overriding value for the `window.fetch` function.\n * @param onProgress Optional, progress callback function, fired periodically\n *   before the load is completed.\n * @returns A `Promise` of an Array of `ArrayBuffer`. The Array has the same\n *   length as `fetchURLs`.\n */\nasync function loadWeightsAsArrayBuffer(fetchURLs, loadOptions) {\n    if (loadOptions == null) {\n        loadOptions = {};\n    }\n    const fetchFunc = loadOptions.fetchFunc == null ? (0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().platform.fetch :\n        loadOptions.fetchFunc;\n    // Create the requests for all of the weights in parallel.\n    const requests = fetchURLs.map(fetchURL => fetchFunc(fetchURL, loadOptions.requestInit, { isBinary: true }));\n    const fetchStartFraction = 0;\n    const fetchEndFraction = 0.5;\n    const responses = loadOptions.onProgress == null ?\n        await Promise.all(requests) :\n        await (0,_progress__WEBPACK_IMPORTED_MODULE_1__.monitorPromisesProgress)(requests, loadOptions.onProgress, fetchStartFraction, fetchEndFraction);\n    const bufferPromises = responses.map(response => response.arrayBuffer());\n    const bufferStartFraction = 0.5;\n    const bufferEndFraction = 1;\n    const buffers = loadOptions.onProgress == null ?\n        await Promise.all(bufferPromises) :\n        await (0,_progress__WEBPACK_IMPORTED_MODULE_1__.monitorPromisesProgress)(bufferPromises, loadOptions.onProgress, bufferStartFraction, bufferEndFraction);\n    return buffers;\n}\n/**\n * Reads a weights manifest JSON configuration, fetches the weights and\n * returns them as `Tensor`s.\n *\n * @param manifest The weights manifest JSON.\n * @param filePathPrefix The path prefix for filenames given in the manifest.\n *     Defaults to the empty string.\n * @param weightNames The names of the weights to be fetched.\n */\nasync function loadWeights(manifest, filePathPrefix = '', weightNames, requestInit) {\n    // TODO(nsthorat): Groups are currently fetched atomically. If you need a\n    // single weight from a group, the whole group will be fetched. At a future\n    // date, we should support fetching only the individual shards within a\n    // group that are needed to reconstruct the requested weight.\n    // TODO(cais): Use `decodeWeights` for implementation.\n    const fetchWeights = (fetchUrls) => loadWeightsAsArrayBuffer(fetchUrls, { requestInit });\n    const loadWeights = weightsLoaderFactory(fetchWeights);\n    return loadWeights(manifest, filePathPrefix, weightNames);\n}\n/**\n * Creates a function, which reads a weights manifest JSON configuration,\n * fetches the weight files using the specified function and returns them as\n * `Tensor`s.\n *\n * ```js\n * // example for creating a nodejs weight loader, which reads the weight files\n * // from disk using fs.readFileSync\n *\n * import * as fs from 'fs'\n *\n * const fetchWeightsFromDisk = (filePaths: string[]) =>\n *   filePaths.map(filePath => fs.readFileSync(filePath).buffer)\n *\n * const loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk)\n *\n * const manifest = JSON.parse(\n *   fs.readFileSync('./my_model-weights_manifest').toString()\n * )\n * const weightMap = await loadWeights(manifest, './')\n * ```\n * @param fetchWeightsFunction The function used for fetching the weight files.\n * @returns Weight loading function.\n */\nfunction weightsLoaderFactory(fetchWeightsFunction) {\n    return async (manifest, filePathPrefix = '', weightNames) => {\n        // Collect all the groups, weights, and their relative offsets to be\n        // fetched.\n        const groupIndicesToFetchMap = manifest.map(() => false);\n        const groupWeightsToFetch = {};\n        const weightsFound = weightNames != null ? weightNames.map(() => false) : [];\n        const allManifestWeightNames = [];\n        manifest.forEach((manifestGroupConfig, groupIndex) => {\n            let groupOffset = 0;\n            manifestGroupConfig.weights.forEach(weightsEntry => {\n                const rawDtype = ('quantization' in weightsEntry) ?\n                    weightsEntry.quantization.dtype :\n                    weightsEntry.dtype;\n                const weightsBytes = _types__WEBPACK_IMPORTED_MODULE_2__.DTYPE_VALUE_SIZE_MAP[rawDtype] *\n                    _util__WEBPACK_IMPORTED_MODULE_4__.sizeFromShape(weightsEntry.shape);\n                const enqueueWeightsForFetchingFn = () => {\n                    groupIndicesToFetchMap[groupIndex] = true;\n                    if (groupWeightsToFetch[groupIndex] == null) {\n                        groupWeightsToFetch[groupIndex] = [];\n                    }\n                    groupWeightsToFetch[groupIndex].push({\n                        manifestEntry: weightsEntry,\n                        groupOffset,\n                        sizeBytes: weightsBytes\n                    });\n                };\n                if (weightNames != null) {\n                    weightNames.forEach((weightName, weightIndex) => {\n                        if (weightName === weightsEntry.name) {\n                            enqueueWeightsForFetchingFn();\n                            weightsFound[weightIndex] = true;\n                        }\n                    });\n                }\n                else {\n                    enqueueWeightsForFetchingFn();\n                }\n                allManifestWeightNames.push(weightsEntry.name);\n                groupOffset += weightsBytes;\n            });\n        });\n        if (!weightsFound.every(found => found)) {\n            const weightsNotFound = weightNames.filter((_, i) => !weightsFound[i]);\n            throw new Error(`Could not find weights in manifest with names: ` +\n                `${weightsNotFound.join(', ')}. \\n` +\n                `Manifest JSON has weights with names: ` +\n                `${allManifestWeightNames.join(', ')}.`);\n        }\n        // Convert the one-hot boolean groupId => shouldFetch map to a list of group\n        // IDs.\n        const groupIndicesToFetch = groupIndicesToFetchMap.reduce((accumulator, shouldFetch, i) => {\n            if (shouldFetch) {\n                accumulator.push(i);\n            }\n            return accumulator;\n        }, []);\n        const fetchUrls = [];\n        groupIndicesToFetch.forEach(i => {\n            manifest[i].paths.forEach(filepath => {\n                const fetchUrl = filePathPrefix +\n                    (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n                fetchUrls.push(fetchUrl);\n            });\n        });\n        const buffers = await fetchWeightsFunction(fetchUrls);\n        const weightsTensorMap = {};\n        let bufferIndexOffset = 0;\n        groupIndicesToFetch.forEach(i => {\n            const numBuffers = manifest[i].paths.length;\n            let groupBytes = 0;\n            for (let i = 0; i < numBuffers; i++) {\n                groupBytes += buffers[bufferIndexOffset + i].byteLength;\n            }\n            // Create a buffer for the whole group.\n            const groupBuffer = new ArrayBuffer(groupBytes);\n            const groupByteBuffer = new Uint8Array(groupBuffer);\n            let groupBufferOffset = 0;\n            for (let i = 0; i < numBuffers; i++) {\n                const buffer = new Uint8Array(buffers[bufferIndexOffset + i]);\n                groupByteBuffer.set(buffer, groupBufferOffset);\n                groupBufferOffset += buffer.byteLength;\n            }\n            const weightsEntries = groupWeightsToFetch[i];\n            weightsEntries.forEach(weightsEntry => {\n                const byteBuffer = groupBuffer.slice(weightsEntry.groupOffset, weightsEntry.groupOffset + weightsEntry.sizeBytes);\n                const nameToTensorMap = (0,_io_utils__WEBPACK_IMPORTED_MODULE_0__.decodeWeights)(byteBuffer, [weightsEntry.manifestEntry]);\n                for (const name in nameToTensorMap) {\n                    weightsTensorMap[name] = nameToTensorMap[name];\n                }\n            });\n            bufferIndexOffset += numBuffers;\n        });\n        return weightsTensorMap;\n    };\n}\n//# sourceMappingURL=weights_loader.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Abs\": () => (/* binding */ Abs),\n/* harmony export */   \"Acos\": () => (/* binding */ Acos),\n/* harmony export */   \"Acosh\": () => (/* binding */ Acosh),\n/* harmony export */   \"Add\": () => (/* binding */ Add),\n/* harmony export */   \"AddN\": () => (/* binding */ AddN),\n/* harmony export */   \"All\": () => (/* binding */ All),\n/* harmony export */   \"Any\": () => (/* binding */ Any),\n/* harmony export */   \"ArgMax\": () => (/* binding */ ArgMax),\n/* harmony export */   \"ArgMin\": () => (/* binding */ ArgMin),\n/* harmony export */   \"Asin\": () => (/* binding */ Asin),\n/* harmony export */   \"Asinh\": () => (/* binding */ Asinh),\n/* harmony export */   \"Atan\": () => (/* binding */ Atan),\n/* harmony export */   \"Atanh\": () => (/* binding */ Atanh),\n/* harmony export */   \"Atan2\": () => (/* binding */ Atan2),\n/* harmony export */   \"AvgPool\": () => (/* binding */ AvgPool),\n/* harmony export */   \"AvgPoolGrad\": () => (/* binding */ AvgPoolGrad),\n/* harmony export */   \"AvgPool3D\": () => (/* binding */ AvgPool3D),\n/* harmony export */   \"AvgPool3DGrad\": () => (/* binding */ AvgPool3DGrad),\n/* harmony export */   \"BatchMatMul\": () => (/* binding */ BatchMatMul),\n/* harmony export */   \"BatchToSpaceND\": () => (/* binding */ BatchToSpaceND),\n/* harmony export */   \"Bincount\": () => (/* binding */ Bincount),\n/* harmony export */   \"BroadcastTo\": () => (/* binding */ BroadcastTo),\n/* harmony export */   \"Cast\": () => (/* binding */ Cast),\n/* harmony export */   \"Ceil\": () => (/* binding */ Ceil),\n/* harmony export */   \"ClipByValue\": () => (/* binding */ ClipByValue),\n/* harmony export */   \"Complex\": () => (/* binding */ Complex),\n/* harmony export */   \"ComplexAbs\": () => (/* binding */ ComplexAbs),\n/* harmony export */   \"Concat\": () => (/* binding */ Concat),\n/* harmony export */   \"Conv2D\": () => (/* binding */ Conv2D),\n/* harmony export */   \"Conv2DBackpropFilter\": () => (/* binding */ Conv2DBackpropFilter),\n/* harmony export */   \"Conv2DBackpropInput\": () => (/* binding */ Conv2DBackpropInput),\n/* harmony export */   \"Conv3D\": () => (/* binding */ Conv3D),\n/* harmony export */   \"Conv3DBackpropFilterV2\": () => (/* binding */ Conv3DBackpropFilterV2),\n/* harmony export */   \"Conv3DBackpropInputV2\": () => (/* binding */ Conv3DBackpropInputV2),\n/* harmony export */   \"Cos\": () => (/* binding */ Cos),\n/* harmony export */   \"Cosh\": () => (/* binding */ Cosh),\n/* harmony export */   \"Cumsum\": () => (/* binding */ Cumsum),\n/* harmony export */   \"CropAndResize\": () => (/* binding */ CropAndResize),\n/* harmony export */   \"DenseBincount\": () => (/* binding */ DenseBincount),\n/* harmony export */   \"DepthToSpace\": () => (/* binding */ DepthToSpace),\n/* harmony export */   \"DepthwiseConv2dNative\": () => (/* binding */ DepthwiseConv2dNative),\n/* harmony export */   \"DepthwiseConv2dNativeBackpropFilter\": () => (/* binding */ DepthwiseConv2dNativeBackpropFilter),\n/* harmony export */   \"DepthwiseConv2dNativeBackpropInput\": () => (/* binding */ DepthwiseConv2dNativeBackpropInput),\n/* harmony export */   \"Diag\": () => (/* binding */ Diag),\n/* harmony export */   \"Dilation2D\": () => (/* binding */ Dilation2D),\n/* harmony export */   \"Dilation2DBackpropInput\": () => (/* binding */ Dilation2DBackpropInput),\n/* harmony export */   \"Dilation2DBackpropFilter\": () => (/* binding */ Dilation2DBackpropFilter),\n/* harmony export */   \"RealDiv\": () => (/* binding */ RealDiv),\n/* harmony export */   \"Einsum\": () => (/* binding */ Einsum),\n/* harmony export */   \"Elu\": () => (/* binding */ Elu),\n/* harmony export */   \"EluGrad\": () => (/* binding */ EluGrad),\n/* harmony export */   \"Erf\": () => (/* binding */ Erf),\n/* harmony export */   \"Equal\": () => (/* binding */ Equal),\n/* harmony export */   \"Exp\": () => (/* binding */ Exp),\n/* harmony export */   \"ExpandDims\": () => (/* binding */ ExpandDims),\n/* harmony export */   \"Expm1\": () => (/* binding */ Expm1),\n/* harmony export */   \"FFT\": () => (/* binding */ FFT),\n/* harmony export */   \"Fill\": () => (/* binding */ Fill),\n/* harmony export */   \"FlipLeftRight\": () => (/* binding */ FlipLeftRight),\n/* harmony export */   \"Floor\": () => (/* binding */ Floor),\n/* harmony export */   \"FloorDiv\": () => (/* binding */ FloorDiv),\n/* harmony export */   \"FusedBatchNorm\": () => (/* binding */ FusedBatchNorm),\n/* harmony export */   \"GatherV2\": () => (/* binding */ GatherV2),\n/* harmony export */   \"GatherNd\": () => (/* binding */ GatherNd),\n/* harmony export */   \"Greater\": () => (/* binding */ Greater),\n/* harmony export */   \"GreaterEqual\": () => (/* binding */ GreaterEqual),\n/* harmony export */   \"Identity\": () => (/* binding */ Identity),\n/* harmony export */   \"IFFT\": () => (/* binding */ IFFT),\n/* harmony export */   \"Imag\": () => (/* binding */ Imag),\n/* harmony export */   \"IsFinite\": () => (/* binding */ IsFinite),\n/* harmony export */   \"IsInf\": () => (/* binding */ IsInf),\n/* harmony export */   \"IsNan\": () => (/* binding */ IsNan),\n/* harmony export */   \"LeakyRelu\": () => (/* binding */ LeakyRelu),\n/* harmony export */   \"Less\": () => (/* binding */ Less),\n/* harmony export */   \"LessEqual\": () => (/* binding */ LessEqual),\n/* harmony export */   \"LinSpace\": () => (/* binding */ LinSpace),\n/* harmony export */   \"Log\": () => (/* binding */ Log),\n/* harmony export */   \"Log1p\": () => (/* binding */ Log1p),\n/* harmony export */   \"LogicalAnd\": () => (/* binding */ LogicalAnd),\n/* harmony export */   \"LogicalNot\": () => (/* binding */ LogicalNot),\n/* harmony export */   \"LogicalOr\": () => (/* binding */ LogicalOr),\n/* harmony export */   \"LogSoftmax\": () => (/* binding */ LogSoftmax),\n/* harmony export */   \"LRN\": () => (/* binding */ LRN),\n/* harmony export */   \"LRNGrad\": () => (/* binding */ LRNGrad),\n/* harmony export */   \"Max\": () => (/* binding */ Max),\n/* harmony export */   \"Maximum\": () => (/* binding */ Maximum),\n/* harmony export */   \"MaxPool\": () => (/* binding */ MaxPool),\n/* harmony export */   \"MaxPoolGrad\": () => (/* binding */ MaxPoolGrad),\n/* harmony export */   \"MaxPool3D\": () => (/* binding */ MaxPool3D),\n/* harmony export */   \"MaxPool3DGrad\": () => (/* binding */ MaxPool3DGrad),\n/* harmony export */   \"MaxPoolWithArgmax\": () => (/* binding */ MaxPoolWithArgmax),\n/* harmony export */   \"Mean\": () => (/* binding */ Mean),\n/* harmony export */   \"Min\": () => (/* binding */ Min),\n/* harmony export */   \"Minimum\": () => (/* binding */ Minimum),\n/* harmony export */   \"MirrorPad\": () => (/* binding */ MirrorPad),\n/* harmony export */   \"Mod\": () => (/* binding */ Mod),\n/* harmony export */   \"Multinomial\": () => (/* binding */ Multinomial),\n/* harmony export */   \"Multiply\": () => (/* binding */ Multiply),\n/* harmony export */   \"Neg\": () => (/* binding */ Neg),\n/* harmony export */   \"NotEqual\": () => (/* binding */ NotEqual),\n/* harmony export */   \"NonMaxSuppressionV3\": () => (/* binding */ NonMaxSuppressionV3),\n/* harmony export */   \"NonMaxSuppressionV4\": () => (/* binding */ NonMaxSuppressionV4),\n/* harmony export */   \"NonMaxSuppressionV5\": () => (/* binding */ NonMaxSuppressionV5),\n/* harmony export */   \"OnesLike\": () => (/* binding */ OnesLike),\n/* harmony export */   \"OneHot\": () => (/* binding */ OneHot),\n/* harmony export */   \"Pack\": () => (/* binding */ Pack),\n/* harmony export */   \"PadV2\": () => (/* binding */ PadV2),\n/* harmony export */   \"Pool\": () => (/* binding */ Pool),\n/* harmony export */   \"Pow\": () => (/* binding */ Pow),\n/* harmony export */   \"Prelu\": () => (/* binding */ Prelu),\n/* harmony export */   \"Prod\": () => (/* binding */ Prod),\n/* harmony export */   \"Range\": () => (/* binding */ Range),\n/* harmony export */   \"Real\": () => (/* binding */ Real),\n/* harmony export */   \"Reciprocal\": () => (/* binding */ Reciprocal),\n/* harmony export */   \"Relu\": () => (/* binding */ Relu),\n/* harmony export */   \"Reshape\": () => (/* binding */ Reshape),\n/* harmony export */   \"ResizeNearestNeighbor\": () => (/* binding */ ResizeNearestNeighbor),\n/* harmony export */   \"ResizeNearestNeighborGrad\": () => (/* binding */ ResizeNearestNeighborGrad),\n/* harmony export */   \"ResizeBilinear\": () => (/* binding */ ResizeBilinear),\n/* harmony export */   \"ResizeBilinearGrad\": () => (/* binding */ ResizeBilinearGrad),\n/* harmony export */   \"Relu6\": () => (/* binding */ Relu6),\n/* harmony export */   \"Reverse\": () => (/* binding */ Reverse),\n/* harmony export */   \"Round\": () => (/* binding */ Round),\n/* harmony export */   \"Rsqrt\": () => (/* binding */ Rsqrt),\n/* harmony export */   \"ScatterNd\": () => (/* binding */ ScatterNd),\n/* harmony export */   \"Select\": () => (/* binding */ Select),\n/* harmony export */   \"Selu\": () => (/* binding */ Selu),\n/* harmony export */   \"Slice\": () => (/* binding */ Slice),\n/* harmony export */   \"Sin\": () => (/* binding */ Sin),\n/* harmony export */   \"Sinh\": () => (/* binding */ Sinh),\n/* harmony export */   \"Sign\": () => (/* binding */ Sign),\n/* harmony export */   \"Sigmoid\": () => (/* binding */ Sigmoid),\n/* harmony export */   \"Softplus\": () => (/* binding */ Softplus),\n/* harmony export */   \"Sqrt\": () => (/* binding */ Sqrt),\n/* harmony export */   \"Sum\": () => (/* binding */ Sum),\n/* harmony export */   \"SpaceToBatchND\": () => (/* binding */ SpaceToBatchND),\n/* harmony export */   \"SplitV\": () => (/* binding */ SplitV),\n/* harmony export */   \"Softmax\": () => (/* binding */ Softmax),\n/* harmony export */   \"SparseFillEmptyRows\": () => (/* binding */ SparseFillEmptyRows),\n/* harmony export */   \"SparseReshape\": () => (/* binding */ SparseReshape),\n/* harmony export */   \"SparseSegmentMean\": () => (/* binding */ SparseSegmentMean),\n/* harmony export */   \"SparseSegmentSum\": () => (/* binding */ SparseSegmentSum),\n/* harmony export */   \"SparseToDense\": () => (/* binding */ SparseToDense),\n/* harmony export */   \"SquaredDifference\": () => (/* binding */ SquaredDifference),\n/* harmony export */   \"Square\": () => (/* binding */ Square),\n/* harmony export */   \"StridedSlice\": () => (/* binding */ StridedSlice),\n/* harmony export */   \"StringNGrams\": () => (/* binding */ StringNGrams),\n/* harmony export */   \"StringSplit\": () => (/* binding */ StringSplit),\n/* harmony export */   \"StringToHashBucketFast\": () => (/* binding */ StringToHashBucketFast),\n/* harmony export */   \"Sub\": () => (/* binding */ Sub),\n/* harmony export */   \"Tan\": () => (/* binding */ Tan),\n/* harmony export */   \"Tanh\": () => (/* binding */ Tanh),\n/* harmony export */   \"Tile\": () => (/* binding */ Tile),\n/* harmony export */   \"TopK\": () => (/* binding */ TopK),\n/* harmony export */   \"Transform\": () => (/* binding */ Transform),\n/* harmony export */   \"Transpose\": () => (/* binding */ Transpose),\n/* harmony export */   \"Unique\": () => (/* binding */ Unique),\n/* harmony export */   \"Unpack\": () => (/* binding */ Unpack),\n/* harmony export */   \"UnsortedSegmentSum\": () => (/* binding */ UnsortedSegmentSum),\n/* harmony export */   \"ZerosLike\": () => (/* binding */ ZerosLike),\n/* harmony export */   \"Step\": () => (/* binding */ Step),\n/* harmony export */   \"FromPixels\": () => (/* binding */ FromPixels),\n/* harmony export */   \"RotateWithOffset\": () => (/* binding */ RotateWithOffset),\n/* harmony export */   \"_FusedMatMul\": () => (/* binding */ _FusedMatMul),\n/* harmony export */   \"FusedConv2D\": () => (/* binding */ FusedConv2D),\n/* harmony export */   \"FusedDepthwiseConv2D\": () => (/* binding */ FusedDepthwiseConv2D)\n/* harmony export */ });\nconst Abs = 'Abs';\nconst Acos = 'Acos';\nconst Acosh = 'Acosh';\nconst Add = 'Add';\nconst AddN = 'AddN';\nconst All = 'All';\nconst Any = 'Any';\nconst ArgMax = 'ArgMax';\nconst ArgMin = 'ArgMin';\nconst Asin = 'Asin';\nconst Asinh = 'Asinh';\nconst Atan = 'Atan';\nconst Atanh = 'Atanh';\nconst Atan2 = 'Atan2';\nconst AvgPool = 'AvgPool';\nconst AvgPoolGrad = 'AvgPoolGrad';\nconst AvgPool3D = 'AvgPool3D';\nconst AvgPool3DGrad = 'AvgPool3DGrad';\nconst BatchMatMul = 'BatchMatMul';\nconst BatchToSpaceND = 'BatchToSpaceND';\nconst Bincount = 'Bincount';\nconst BroadcastTo = 'BroadcastTo';\nconst Cast = 'Cast';\nconst Ceil = 'Ceil';\nconst ClipByValue = 'ClipByValue';\nconst Complex = 'Complex';\nconst ComplexAbs = 'ComplexAbs';\nconst Concat = 'Concat';\nconst Conv2D = 'Conv2D';\nconst Conv2DBackpropFilter = 'Conv2DBackpropFilter';\nconst Conv2DBackpropInput = 'Conv2DBackpropInput';\nconst Conv3D = 'Conv3D';\nconst Conv3DBackpropFilterV2 = 'Conv3DBackpropFilterV2';\nconst Conv3DBackpropInputV2 = 'Conv3DBackpropInputV2';\nconst Cos = 'Cos';\nconst Cosh = 'Cosh';\nconst Cumsum = 'Cumsum';\nconst CropAndResize = 'CropAndResize';\nconst DenseBincount = 'DenseBincount';\nconst DepthToSpace = 'DepthToSpace';\nconst DepthwiseConv2dNative = 'DepthwiseConv2dNative';\nconst DepthwiseConv2dNativeBackpropFilter = 'DepthwiseConv2dNativeBackpropFilter';\nconst DepthwiseConv2dNativeBackpropInput = 'DepthwiseConv2dNativeBackpropInput';\nconst Diag = 'Diag';\nconst Dilation2D = 'Dilation2D';\nconst Dilation2DBackpropInput = 'Dilation2DBackpropInput';\nconst Dilation2DBackpropFilter = 'Dilation2DBackpropFilter';\nconst RealDiv = 'RealDiv';\nconst Einsum = 'Einsum';\nconst Elu = 'Elu';\nconst EluGrad = 'EluGrad';\nconst Erf = 'Erf';\nconst Equal = 'Equal';\nconst Exp = 'Exp';\nconst ExpandDims = 'ExpandDims';\nconst Expm1 = 'Expm1';\nconst FFT = 'FFT';\nconst Fill = 'Fill';\nconst FlipLeftRight = 'FlipLeftRight';\nconst Floor = 'Floor';\nconst FloorDiv = 'FloorDiv';\nconst FusedBatchNorm = 'FusedBatchNorm';\nconst GatherV2 = 'GatherV2';\nconst GatherNd = 'GatherNd';\nconst Greater = 'Greater';\nconst GreaterEqual = 'GreaterEqual';\nconst Identity = 'Identity';\nconst IFFT = 'IFFT';\nconst Imag = 'Imag';\nconst IsFinite = 'IsFinite';\nconst IsInf = 'IsInf';\nconst IsNan = 'IsNan';\nconst LeakyRelu = 'LeakyRelu';\nconst Less = 'Less';\nconst LessEqual = 'LessEqual';\nconst LinSpace = 'LinSpace';\nconst Log = 'Log';\nconst Log1p = 'Log1p';\nconst LogicalAnd = 'LogicalAnd';\nconst LogicalNot = 'LogicalNot';\nconst LogicalOr = 'LogicalOr';\nconst LogSoftmax = 'LogSoftmax';\nconst LRN = 'LRN';\nconst LRNGrad = 'LRNGrad';\nconst Max = 'Max';\nconst Maximum = 'Maximum';\nconst MaxPool = 'MaxPool';\nconst MaxPoolGrad = 'MaxPoolGrad';\nconst MaxPool3D = 'MaxPool3D';\nconst MaxPool3DGrad = 'MaxPool3DGrad';\nconst MaxPoolWithArgmax = 'MaxPoolWithArgmax';\nconst Mean = 'Mean';\nconst Min = 'Min';\nconst Minimum = 'Minimum';\nconst MirrorPad = 'MirrorPad';\nconst Mod = 'Mod';\nconst Multinomial = 'Multinomial';\nconst Multiply = 'Multiply';\nconst Neg = 'Neg';\nconst NotEqual = 'NotEqual';\nconst NonMaxSuppressionV3 = 'NonMaxSuppressionV3';\nconst NonMaxSuppressionV4 = 'NonMaxSuppressionV4';\nconst NonMaxSuppressionV5 = 'NonMaxSuppressionV5';\nconst OnesLike = 'OnesLike';\nconst OneHot = 'OneHot';\nconst Pack = 'Pack';\nconst PadV2 = 'PadV2';\nconst Pool = 'Pool';\nconst Pow = 'Pow';\nconst Prelu = 'Prelu';\nconst Prod = 'Prod';\nconst Range = 'Range';\nconst Real = 'Real';\nconst Reciprocal = 'Reciprocal';\nconst Relu = 'Relu';\nconst Reshape = 'Reshape';\nconst ResizeNearestNeighbor = 'ResizeNearestNeighbor';\nconst ResizeNearestNeighborGrad = 'ResizeNearestNeighborGrad';\nconst ResizeBilinear = 'ResizeBilinear';\nconst ResizeBilinearGrad = 'ResizeBilinearGrad';\nconst Relu6 = 'Relu6';\nconst Reverse = 'Reverse';\nconst Round = 'Round';\nconst Rsqrt = 'Rsqrt';\nconst ScatterNd = 'ScatterNd';\nconst Select = 'Select';\nconst Selu = 'Selu';\nconst Slice = 'Slice';\nconst Sin = 'Sin';\nconst Sinh = 'Sinh';\nconst Sign = 'Sign';\nconst Sigmoid = 'Sigmoid';\nconst Softplus = 'Softplus';\nconst Sqrt = 'Sqrt';\nconst Sum = 'Sum';\nconst SpaceToBatchND = 'SpaceToBatchND';\nconst SplitV = 'SplitV';\nconst Softmax = 'Softmax';\nconst SparseFillEmptyRows = 'SparseFillEmptyRows';\nconst SparseReshape = 'SparseReshape';\nconst SparseSegmentMean = 'SparseSegmentMean';\nconst SparseSegmentSum = 'SparseSegmentSum';\nconst SparseToDense = 'SparseToDense';\nconst SquaredDifference = 'SquaredDifference';\nconst Square = 'Square';\nconst StridedSlice = 'StridedSlice';\nconst StringNGrams = 'StringNGrams';\nconst StringSplit = 'StringSplit';\nconst StringToHashBucketFast = 'StringToHashBucketFast';\nconst Sub = 'Sub';\nconst Tan = 'Tan';\nconst Tanh = 'Tanh';\nconst Tile = 'Tile';\nconst TopK = 'TopK';\nconst Transform = 'Transform';\nconst Transpose = 'Transpose';\nconst Unique = 'Unique';\nconst Unpack = 'Unpack';\nconst UnsortedSegmentSum = 'UnsortedSegmentSum';\nconst ZerosLike = 'ZerosLike';\n/**\n * TensorFlow.js-only kernels\n */\nconst Step = 'Step';\nconst FromPixels = 'FromPixels';\nconst RotateWithOffset = 'RotateWithOffset';\nconst _FusedMatMul = '_FusedMatMul';\nconst FusedConv2D = 'FusedConv2D';\nconst FusedDepthwiseConv2D = 'FusedDepthwiseConv2D';\n//# sourceMappingURL=kernel_names.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getKernel\": () => (/* binding */ getKernel),\n/* harmony export */   \"getGradient\": () => (/* binding */ getGradient),\n/* harmony export */   \"getKernelsForBackend\": () => (/* binding */ getKernelsForBackend),\n/* harmony export */   \"registerKernel\": () => (/* binding */ registerKernel),\n/* harmony export */   \"registerGradient\": () => (/* binding */ registerGradient),\n/* harmony export */   \"unregisterKernel\": () => (/* binding */ unregisterKernel),\n/* harmony export */   \"unregisterGradient\": () => (/* binding */ unregisterGradient),\n/* harmony export */   \"copyRegisteredKernels\": () => (/* binding */ copyRegisteredKernels)\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _global_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global_util */ \"./node_modules/@tensorflow/tfjs-core/dist/global_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst kernelRegistry = (0,_global_util__WEBPACK_IMPORTED_MODULE_0__.getGlobal)('kernelRegistry', () => new Map());\nconst gradRegistry = (0,_global_util__WEBPACK_IMPORTED_MODULE_0__.getGlobal)('gradRegistry', () => new Map());\n/**\n * Returns the kernel function (code) associated with the provided names.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n */\nfunction getKernel(kernelName, backendName) {\n    const key = makeKey(kernelName, backendName);\n    return kernelRegistry.get(key);\n}\n/**\n * Returns the registered gradient info associated with the provided kernel.\n * @param kernelName The official TF kernel name.\n */\nfunction getGradient(kernelName) {\n    return gradRegistry.get(kernelName);\n}\nfunction getKernelsForBackend(backendName) {\n    const it = kernelRegistry.entries();\n    const result = [];\n    while (true) {\n        const { done, value } = it.next();\n        if (done) {\n            break;\n        }\n        const [key, config] = value;\n        const [backend,] = key.split('_');\n        if (backend === backendName) {\n            result.push(config);\n        }\n    }\n    return result;\n}\n/**\n * Registers the function (forward pass) for the kernel in a global registry.\n *\n * @param config A config object with the following properties:\n * - `kernelName` The official name of the kernel.\n * - `backendName` The official name of the backend.\n * - `kernelFunc` The function to run during the forward pass of the kernel.\n * - `setupFunc` Optional. Gets called once, after the backend initializes.\n * - `disposeFunc` Optional. Gets called once, right before the backend is\n * disposed.\n */\nfunction registerKernel(config) {\n    const { kernelName, backendName } = config;\n    const key = makeKey(kernelName, backendName);\n    if (kernelRegistry.has(key)) {\n        console.warn(`The kernel '${kernelName}' for backend ` +\n            `'${backendName}' is already registered`);\n    }\n    kernelRegistry.set(key, config);\n}\n/**\n * Registers a gradient function for a given kernel in the global registry,\n * to be used during the back-propagation of that kernel.\n *\n * @param config An object with the following properties:\n * - `kernelName` The name of the kernel that the gradient function is for.\n * - `gradFunc` The function to run during back-propagation.\n */\nfunction registerGradient(config) {\n    const { kernelName } = config;\n    if (gradRegistry.has(kernelName)) {\n        // TODO (yassogba) after 3.0 assess whether we need to keep this gated\n        // to debug mode.\n        if ((0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('DEBUG')) {\n            console.warn(`Overriding the gradient for '${kernelName}'`);\n        }\n    }\n    gradRegistry.set(kernelName, config);\n}\n/**\n * Removes the kernel function from the registry.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n *\n */\nfunction unregisterKernel(kernelName, backendName) {\n    const key = makeKey(kernelName, backendName);\n    if (!kernelRegistry.has(key)) {\n        throw new Error(`The kernel '${kernelName}' for backend ` +\n            `'${backendName}' is not registered`);\n    }\n    kernelRegistry.delete(key);\n}\n/** Removes the registered gradient from the global registry. */\nfunction unregisterGradient(kernelName) {\n    if (!gradRegistry.has(kernelName)) {\n        throw new Error(`The gradient '${kernelName}' for backend is not registered`);\n    }\n    gradRegistry.delete(kernelName);\n}\n/**\n * Finds kernels that have already been registered to a backend and re-registers\n * them for a new backend. Useful for registering custom backends.\n * @param registeredBackendName Already registered backend.\n * @param newBackendName New backend.\n */\nfunction copyRegisteredKernels(registeredBackendName, newBackendName) {\n    const kernels = getKernelsForBackend(registeredBackendName);\n    kernels.forEach(kernelConfig => {\n        const newKernelConfig = Object.assign({}, kernelConfig, { backendName: newBackendName });\n        registerKernel(newKernelConfig);\n    });\n}\nfunction makeKey(kernelName, backendName) {\n    return `${backendName}_${kernelName}`;\n}\n//# sourceMappingURL=kernel_registry.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/log.js":
/*!********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/log.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"warn\": () => (/* binding */ warn),\n/* harmony export */   \"log\": () => (/* binding */ log)\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction warn(...msg) {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('IS_TEST')) {\n        console.warn(...msg);\n    }\n}\nfunction log(...msg) {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('IS_TEST')) {\n        console.log(...msg);\n    }\n}\n//# sourceMappingURL=log.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/log.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/math.js":
/*!*********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/math.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"confusionMatrix\": () => (/* reexport safe */ _ops_confusion_matrix__WEBPACK_IMPORTED_MODULE_0__.confusionMatrix)\n/* harmony export */ });\n/* harmony import */ var _ops_confusion_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ops/confusion_matrix */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Exports under the tf.math.* namespace.\n */\n\n\n//# sourceMappingURL=math.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/math.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"abs\": () => (/* binding */ abs)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction abs_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'abs');\n    if ($x.dtype === 'complex64') {\n        const inputs = { x: $x };\n        return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.ComplexAbs, inputs);\n    }\n    else {\n        const inputs = { x: $x };\n        return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Abs, inputs);\n    }\n}\nconst abs = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ abs_ });\n//# sourceMappingURL=abs.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"acos\": () => (/* binding */ acos)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes acos of the input `tf.Tensor` element-wise: `acos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.acos().print();  // or tf.acos(x)\n * ```\n * @param x The input tensor.\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction acos_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'acos');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Acos, inputs);\n}\nconst acos = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ acos_ });\n//# sourceMappingURL=acos.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"acosh\": () => (/* binding */ acosh)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the inverse hyperbolic cos of the input `tf.Tensor` element-wise:\n * `acosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([10, 1, 3, 5.7]);\n *\n * x.acosh().print();  // or tf.acosh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction acosh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'acosh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Acosh, inputs);\n}\nconst acosh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ acosh_ });\n//# sourceMappingURL=acosh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/add.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/add.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"add\": () => (/* binding */ add)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Adds two `tf.Tensor`s element-wise, A + B. Supports broadcasting.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n *\n * ```js\n * // Broadcast add a with b.\n * const a = tf.scalar(5);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n * @param a The first `tf.Tensor` to add.\n * @param b The second `tf.Tensor` to add. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction add_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'add');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'add');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Add, inputs);\n}\nconst add = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ add_ });\n//# sourceMappingURL=add.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/add.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addN\": () => (/* binding */ addN)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Adds a list of `tf.Tensor`s element-wise, each with the same shape and dtype.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n *\n * tf.addN([a, b, c]).print();\n * ```\n * @param tensors A list of tensors with the same shape and dtype.\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction addN_(tensors) {\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(Array.isArray(tensors), () => 'The argument passed to tf.addN() must be a list of tensors');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(tensors.length >= 1, () => `Must pass at least one tensor to tf.addN(), but got ` +\n        `${tensors.length}`);\n    const $tensors = tensors.map((t, i) => (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_2__.convertToTensor)(t, `tensors${i}`, 'addN'));\n    const firstTensor = $tensors[0];\n    $tensors.forEach(t => {\n        if (t.dtype !== firstTensor.dtype) {\n            throw new Error('All tensors passed to tf.addN() must have the same dtype');\n        }\n    });\n    $tensors.forEach(t => {\n        if (!_util__WEBPACK_IMPORTED_MODULE_1__.arraysEqual(t.shape, firstTensor.shape)) {\n            throw new Error('All tensors passed to tf.addN() must have the same shape');\n        }\n    });\n    const inputs = $tensors;\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.AddN, inputs);\n}\nconst addN = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ addN_ });\n//# sourceMappingURL=add_n.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/all.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/all.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"all\": () => (/* binding */ all)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the logical and of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.all().print();  // or tf.all(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.all(axis).print();  // or tf.all(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction all_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'all', 'bool');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.All, inputs, attrs);\n}\nconst all = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ all_ });\n//# sourceMappingURL=all.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/all.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/any.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/any.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"any\": () => (/* binding */ any)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the logical or of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.any().print();  // or tf.any(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.any(axis).print();  // or tf.any(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction any_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'any', 'bool');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Any, inputs, attrs);\n}\n// tslint:disable-next-line:variable-name\nconst any = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ any_ });\n//# sourceMappingURL=any.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/any.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"argMax\": () => (/* binding */ argMax)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Returns the indices of the maximum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMax().print();  // or tf.argMax(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMax(axis).print();  // or tf.argMax(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction argMax_(x, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'argMax');\n    const inputs = { x: $x };\n    const attrs = { axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.ArgMax, inputs, attrs);\n}\nconst argMax = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ argMax_ });\n//# sourceMappingURL=arg_max.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"argMin\": () => (/* binding */ argMin)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Returns the indices of the minimum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMin().print();  // or tf.argMin(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMin(axis).print();  // or tf.argMin(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction argMin_(x, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'argMin');\n    const inputs = { x: $x };\n    const attrs = { axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.ArgMin, inputs, attrs);\n}\nconst argMin = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ argMin_ });\n//# sourceMappingURL=arg_min.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getReshaped\": () => (/* binding */ getReshaped),\n/* harmony export */   \"getPermuted\": () => (/* binding */ getPermuted),\n/* harmony export */   \"getReshapedPermuted\": () => (/* binding */ getReshapedPermuted),\n/* harmony export */   \"getSliceBeginCoords\": () => (/* binding */ getSliceBeginCoords),\n/* harmony export */   \"getSliceSize\": () => (/* binding */ getSliceSize)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Gets the new shape of the input Tensor after it's been reshaped\n * to:\n * [blockShape[0], ..., blockShape[M-1], batch / prod(blockShape),\n * inputShape[1], ..., inputShape[N-1]]\n *\n * See step 1: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getReshaped(inputShape, blockShape, prod, batchToSpace = true) {\n    let reshaped = [];\n    if (batchToSpace) {\n        reshaped = reshaped.concat(blockShape.slice(0));\n        reshaped.push(inputShape[0] / prod);\n        reshaped = reshaped.concat(inputShape.slice(1));\n    }\n    else {\n        reshaped = reshaped.concat(inputShape[0]);\n        const spatialLength = blockShape.length;\n        for (let i = 0; i < spatialLength; ++i) {\n            reshaped =\n                reshaped.concat([inputShape[i + 1] / blockShape[i], blockShape[i]]);\n        }\n        reshaped = reshaped.concat(inputShape.slice(spatialLength + 1));\n    }\n    return reshaped;\n}\n/**\n * Gets the permutation that will transpose the dimensions of the\n * reshaped tensor to shape:\n *\n * [batch / prod(block_shape),inputShape[1], blockShape[0], ...,\n * inputShape[M], blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * see step 2: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getPermuted(reshapedRank, blockShapeRank, batchToSpace = true) {\n    const permuted = [];\n    if (batchToSpace) {\n        permuted.push(blockShapeRank);\n        for (let i = blockShapeRank + 1; i < reshapedRank; ++i) {\n            if (i <= 2 * blockShapeRank) {\n                permuted.push(i);\n                permuted.push(i - (blockShapeRank + 1));\n            }\n            else {\n                permuted.push(i);\n            }\n        }\n    }\n    else {\n        const permutedBeforeBatch = [];\n        const permutedAfterBatch = [];\n        for (let i = 1; i < reshapedRank; ++i) {\n            if (i >= blockShapeRank * 2 + 1 || i % 2 === 1) {\n                permutedAfterBatch.push(i);\n            }\n            else {\n                permutedBeforeBatch.push(i);\n            }\n        }\n        permuted.push(...permutedBeforeBatch);\n        permuted.push(0);\n        permuted.push(...permutedAfterBatch);\n    }\n    return permuted;\n}\n/**\n * Gets the shape of the reshaped and permuted input Tensor before any cropping\n * is applied.  The new shape will be:\n *\n * [batch / prod(blockShape),inputShape[1] * blockShape[0], ...,\n * inputShape[M] * blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 3: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getReshapedPermuted(inputShape, blockShape, prod, batchToSpace = true) {\n    const reshapedPermuted = [];\n    if (batchToSpace) {\n        reshapedPermuted.push(inputShape[0] / prod);\n    }\n    else {\n        reshapedPermuted.push(inputShape[0] * prod);\n    }\n    for (let i = 1; i < inputShape.length; ++i) {\n        if (i <= blockShape.length) {\n            if (batchToSpace) {\n                reshapedPermuted.push(blockShape[i - 1] * inputShape[i]);\n            }\n            else {\n                reshapedPermuted.push(inputShape[i] / blockShape[i - 1]);\n            }\n        }\n        else {\n            reshapedPermuted.push(inputShape[i]);\n        }\n    }\n    return reshapedPermuted;\n}\n/**\n * Converts the crops argument into the beginning coordinates of a slice\n * operation.\n */\nfunction getSliceBeginCoords(crops, blockShape) {\n    const sliceBeginCoords = [0];\n    for (let i = 0; i < blockShape; ++i) {\n        sliceBeginCoords.push(crops[i][0]);\n    }\n    return sliceBeginCoords;\n}\n/**\n * Converts the crops argument into the size of a slice operation.  When\n * combined with getSliceBeginCoords this function allows the reshaped and\n * permuted Tensor to be cropped to its final output shape of:\n *\n * inputShape[1] * blockShape[0] - crops[0,0] - crops[0,1], ...,\n * inputShape[M] * blockShape[M-1] -crops[M-1,0] -\n * crops[M-1,1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 4: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getSliceSize(uncroppedShape, crops, blockShape) {\n    const sliceSize = uncroppedShape.slice(0, 1);\n    for (let i = 0; i < blockShape; ++i) {\n        sliceSize.push(uncroppedShape[i + 1] - crops[i][0] - crops[i][1]);\n    }\n    return sliceSize;\n}\n//# sourceMappingURL=array_ops_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"asin\": () => (/* binding */ asin)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes asin of the input `tf.Tensor` element-wise: `asin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asin().print();  // or tf.asin(x)\n * ```\n * @param x The input tensor.\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction asin_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'asin');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Asin, inputs);\n}\nconst asin = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ asin_ });\n//# sourceMappingURL=asin.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"asinh\": () => (/* binding */ asinh)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes inverse hyperbolic sin of the input `tf.Tensor` element-wise:\n * `asinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asinh().print();  // or tf.asinh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction asinh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'asinh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Asinh, inputs);\n}\nconst asinh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ asinh_ });\n//# sourceMappingURL=asinh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atan\": () => (/* binding */ atan)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes atan of the input `tf.Tensor` element-wise: `atan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.atan().print();  // or tf.atan(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atan_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'atan');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Atan, inputs);\n}\nconst atan = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ atan_ });\n//# sourceMappingURL=atan.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atan2\": () => (/* binding */ atan2)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Computes arctangent of `tf.Tensor`s a / b element-wise: `atan2(a, b)`.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1.0, 1.0, -1.0, .7]);\n * const b = tf.tensor1d([2.0, 13.0, 3.5, .21]);\n *\n * tf.atan2(a, b).print()\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atan2_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'atan2');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'atan2');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Atan2, inputs);\n}\nconst atan2 = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ atan2_ });\n//# sourceMappingURL=atan2.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atanh\": () => (/* binding */ atanh)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes inverse hyperbolic tan of the input `tf.Tensor` element-wise:\n * `atanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.atanh().print();  // or tf.atanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atanh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'atanh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Atanh, inputs);\n}\nconst atanh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ atanh_ });\n//# sourceMappingURL=atanh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPool\": () => (/* binding */ avgPool)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *         https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction avgPool_(x, filterSize, strides, pad, dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'avgPool', 'float32');\n    const dilations = 1;\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_3__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_4__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(x4D.rank === 4, () => `Error in avgPool: x must be rank 4 but got rank ${x4D.rank}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isInt(pad), () => `Error in avgPool: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    let res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.AvgPool, inputs, attrs);\n    res = (0,_cast__WEBPACK_IMPORTED_MODULE_6__.cast)(res, $x.dtype);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_4__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst avgPool = (0,_operation__WEBPACK_IMPORTED_MODULE_7__.op)({ avgPool_ });\n//# sourceMappingURL=avg_pool.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPool3d\": () => (/* binding */ avgPool3d)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Computes the 3D average pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.avgPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction avgPool3d_(x, filterSize, strides, pad, dimRoundingMode, dataFormat = 'NDHWC') {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'avgPool3d', 'float32');\n    let x5D = $x;\n    let reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x5D.rank === 5, () => `Error in avgPool3d: x must be rank 5 but got rank ${x5D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(dataFormat === 'NDHWC', () => `Error in avgPool3d: Only NDHWC is currently supported, ` +\n        `but got dataFormat of ${dataFormat}`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_3__.assert(_util__WEBPACK_IMPORTED_MODULE_3__.isInt(pad), () => `Error in avgPool3d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x5D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode, dataFormat };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    let res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.AvgPool3D, inputs, attrs);\n    res = (0,_cast__WEBPACK_IMPORTED_MODULE_5__.cast)(res, x5D.dtype);\n    if (reshapedTo5D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nconst avgPool3d = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ avgPool3d_ });\n//# sourceMappingURL=avg_pool_3d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"axesAreInnerMostDims\": () => (/* binding */ axesAreInnerMostDims),\n/* harmony export */   \"combineLocations\": () => (/* binding */ combineLocations),\n/* harmony export */   \"computeOutAndReduceShapes\": () => (/* binding */ computeOutAndReduceShapes),\n/* harmony export */   \"expandShapeToKeepDim\": () => (/* binding */ expandShapeToKeepDim),\n/* harmony export */   \"assertAxesAreInnerMostDims\": () => (/* binding */ assertAxesAreInnerMostDims),\n/* harmony export */   \"getAxesPermutation\": () => (/* binding */ getAxesPermutation),\n/* harmony export */   \"getUndoAxesPermutation\": () => (/* binding */ getUndoAxesPermutation),\n/* harmony export */   \"getInnerMostAxes\": () => (/* binding */ getInnerMostAxes)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Returns true if the axis specifies the inner most dimensions of the\n * array.\n */\nfunction axesAreInnerMostDims(axes, rank) {\n    for (let i = 0; i < axes.length; ++i) {\n        if (axes[axes.length - i - 1] !== rank - 1 - i) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction combineLocations(outputLoc, reduceLoc, axes) {\n    const rank = outputLoc.length + reduceLoc.length;\n    const loc = [];\n    let outIdx = 0;\n    let reduceIdx = 0;\n    for (let dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            loc.push(outputLoc[outIdx++]);\n        }\n        else {\n            loc.push(reduceLoc[reduceIdx++]);\n        }\n    }\n    return loc;\n}\nfunction computeOutAndReduceShapes(aShape, axes) {\n    const outShape = [];\n    const rank = aShape.length;\n    for (let dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            outShape.push(aShape[dim]);\n        }\n    }\n    const reduceShape = axes.map(dim => aShape[dim]);\n    return [outShape, reduceShape];\n}\nfunction expandShapeToKeepDim(shape, axes) {\n    const reduceSubShape = axes.map(x => 1);\n    return combineLocations(shape, reduceSubShape, axes);\n}\nfunction assertAxesAreInnerMostDims(msg, axes, rank) {\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(axesAreInnerMostDims(axes, rank), () => `${msg} supports only inner-most axes for now. ` +\n        `Got axes ${axes} and rank-${rank} input.`);\n}\n/**\n * Returns the axes permutation to be used with `tf.transpose`, if such\n * permutation is necessary. Otherwise it returns null. This method is used by\n * operations that operate only on inner-most axes.\n */\nfunction getAxesPermutation(axes, rank) {\n    if (axesAreInnerMostDims(axes, rank)) {\n        return null;\n    }\n    const result = [];\n    for (let i = 0; i < rank; ++i) {\n        if (axes.indexOf(i) === -1) {\n            result.push(i);\n        }\n    }\n    axes.forEach(axis => result.push(axis));\n    return result;\n}\n/** Returns the axes permutation that undoes the original permutation. */\nfunction getUndoAxesPermutation(axes) {\n    return axes.map((axis, i) => [i, axis])\n        .sort((a, b) => a[1] - b[1])\n        .map(x => x[0]);\n}\nfunction getInnerMostAxes(numAxes, rank) {\n    const res = [];\n    for (let i = rank - numAxes; i < rank; ++i) {\n        res.push(i);\n    }\n    return res;\n}\n//# sourceMappingURL=axis_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"basicLSTMCell\": () => (/* binding */ basicLSTMCell)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _sigmoid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sigmoid */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _tanh__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tanh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n/**\n * Computes the next state and output of a BasicLSTMCell.\n *\n * Returns `[newC, newH]`.\n *\n * Derived from tf.contrib.rnn.BasicLSTMCell.\n *\n * @param forgetBias Forget bias for the cell.\n * @param lstmKernel The weights for the cell.\n * @param lstmBias The bias for the cell.\n * @param data The input to the cell.\n * @param c Previous cell state.\n * @param h Previous cell output.\n *\n * @doc {heading: 'Operations', subheading: 'RNN'}\n */\nfunction basicLSTMCell_(forgetBias, lstmKernel, lstmBias, data, c, h) {\n    const $forgetBias = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(forgetBias, 'forgetBias', 'basicLSTMCell');\n    const $lstmKernel = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(lstmKernel, 'lstmKernel', 'basicLSTMCell');\n    const $lstmBias = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(lstmBias, 'lstmBias', 'basicLSTMCell');\n    const $data = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(data, 'data', 'basicLSTMCell');\n    const $c = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(c, 'c', 'basicLSTMCell');\n    const $h = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(h, 'h', 'basicLSTMCell');\n    const combined = (0,_concat__WEBPACK_IMPORTED_MODULE_1__.concat)([$data, $h], 1);\n    const weighted = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(combined, $lstmKernel);\n    const res = (0,_add__WEBPACK_IMPORTED_MODULE_3__.add)(weighted, $lstmBias);\n    // i = input_gate, j = new_input, f = forget_gate, o = output_gate\n    const batchSize = res.shape[0];\n    const sliceCols = res.shape[1] / 4;\n    const sliceSize = [batchSize, sliceCols];\n    const i = (0,_slice__WEBPACK_IMPORTED_MODULE_4__.slice)(res, [0, 0], sliceSize);\n    const j = (0,_slice__WEBPACK_IMPORTED_MODULE_4__.slice)(res, [0, sliceCols], sliceSize);\n    const f = (0,_slice__WEBPACK_IMPORTED_MODULE_4__.slice)(res, [0, sliceCols * 2], sliceSize);\n    const o = (0,_slice__WEBPACK_IMPORTED_MODULE_4__.slice)(res, [0, sliceCols * 3], sliceSize);\n    const newC = (0,_add__WEBPACK_IMPORTED_MODULE_3__.add)((0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_sigmoid__WEBPACK_IMPORTED_MODULE_6__.sigmoid)(i), (0,_tanh__WEBPACK_IMPORTED_MODULE_7__.tanh)(j)), (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)($c, (0,_sigmoid__WEBPACK_IMPORTED_MODULE_6__.sigmoid)((0,_add__WEBPACK_IMPORTED_MODULE_3__.add)($forgetBias, f))));\n    const newH = (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_tanh__WEBPACK_IMPORTED_MODULE_7__.tanh)(newC), (0,_sigmoid__WEBPACK_IMPORTED_MODULE_6__.sigmoid)(o));\n    return [newC, newH];\n}\nconst basicLSTMCell = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ basicLSTMCell_ });\n//# sourceMappingURL=basic_lstm_cell.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchToSpaceND\": () => (/* binding */ batchToSpaceND)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * This operation reshapes the \"batch\" dimension 0 into `M + 1` dimensions of\n * shape `blockShape + [batch]`, interleaves these blocks back into the grid\n * defined by the spatial dimensions `[1, ..., M]`, to obtain a result with\n * the same rank as the input. The spatial dimensions of this intermediate\n * result are then optionally cropped according to `crops` to produce the\n * output. This is the reverse of `tf.spaceToBatchND`. See below for a precise\n * description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [4, 1, 1, 1]);\n * const blockShape = [2, 2];\n * const crops = [[0, 0], [0, 0]];\n *\n * x.batchToSpaceND(blockShape, crops).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param crops A 2-D array.  Must have shape `[M, 2]`, all values must be >= 0.\n * `crops[i] = [cropStart, cropEnd]` specifies the amount to crop from input\n * dimension `i + 1`, which corresponds to spatial dimension `i`. It is required\n * that `cropStart[i] + cropEnd[i] <= blockShape[i] * inputShape[i + 1]`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Reshape `x` to `reshaped` of shape: `[blockShape[0], ...,\n * blockShape[M-1], batch / prod(blockShape), x.shape[1], ...,\n * x.shape[N-1]]`\n *\n * 2. Permute dimensions of `reshaped`to produce `permuted` of shape `[batch /\n * prod(blockShape),x.shape[1], blockShape[0], ..., x.shape[M],\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 3. Reshape `permuted` to produce `reshapedPermuted` of shape `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0], ..., x.shape[M] *\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 4. Crop the start and end of dimensions `[1, ..., M]` of `reshapedPermuted`\n * according to `crops` to produce the output of shape: `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0] - crops[0,0] - crops[0,1],\n * ..., x.shape[M] * blockShape[M-1] - crops[M-1,0] -\n * crops[M-1,1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction batchToSpaceND_(x, blockShape, crops) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'batchToSpaceND');\n    const prod = blockShape.reduce((a, b) => a * b);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank >= 1 + blockShape.length, () => `input rank is ${$x.rank} but should be > than blockShape.length ${blockShape.length}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(crops.length === blockShape.length, () => `crops.length is ${crops.length} but should be equal to blockShape.length  ${blockShape.length}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.shape[0] % prod === 0, () => `input tensor batch is ${$x.shape[0]} but is not divisible by the product of ` +\n        `the elements of blockShape ${blockShape.join(' * ')} === ${prod}`);\n    const inputs = { x: $x };\n    const attrs = { blockShape, crops };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.BatchToSpaceND, inputs, attrs);\n}\nconst batchToSpaceND = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ batchToSpaceND_ });\n//# sourceMappingURL=batch_to_space_nd.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchNorm\": () => (/* binding */ batchNorm)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _batchnorm_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./batchnorm_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Batch normalization.\n *\n * As described in\n * [http://arxiv.org/abs/1502.03167](http://arxiv.org/abs/1502.03167).\n *\n * Mean, variance, scale, and offset can be of two shapes:\n *   - The same shape as the input.\n *   - In the common case, the depth dimension is the last dimension of x, so\n *     the values would be an `tf.Tensor1D` of shape [depth].\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that parameters passed are of given rank\n *   - `tf.batchNorm2d`\n *   - `tf.batchNorm3d`\n *   - `tf.batchNorm4d`\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction batchNorm_(x, mean, variance, offset, scale, varianceEpsilon) {\n    if (varianceEpsilon == null) {\n        varianceEpsilon = 0.001;\n    }\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'batchNorm');\n    const $mean = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(mean, 'mean', 'batchNorm');\n    const $variance = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(offset, 'offset', 'batchNorm');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($mean.rank === $variance.rank, () => 'Batch normalization gradient requires mean and variance to have ' +\n        'equal ranks.');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($offset == null || $mean.rank === $offset.rank, () => 'Batch normalization gradient requires mean and offset to have ' +\n        'equal ranks.');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($scale == null || $mean.rank === $scale.rank, () => 'Batch normalization gradient requires mean and scale to have ' +\n        'equal ranks.');\n    const x4D = (0,_batchnorm_util__WEBPACK_IMPORTED_MODULE_3__.xAs4D)($x);\n    const inputs = {\n        x: x4D,\n        scale: $scale,\n        offset: $offset,\n        mean: $mean,\n        variance: $variance\n    };\n    const attrs = { varianceEpsilon };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.FusedBatchNorm, inputs, attrs);\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)(res, $x.shape);\n}\nconst batchNorm = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ batchNorm_ });\n//# sourceMappingURL=batchnorm.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchNorm2d\": () => (/* binding */ batchNorm2d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _batchnorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./batchnorm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n\n\n\n\n/**\n * Batch normalization, strictly for 2D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm2d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'batchNorm');\n    const $mean = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(mean, 'mean', 'batchNorm');\n    const $variance = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(offset, 'offset', 'batchNorm');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 2, () => `Error in batchNorm2D: x must be rank 2 but got rank ` +\n        `${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($mean.rank === 2 || $mean.rank === 1, () => `Error in batchNorm2D: mean must be rank 2 or rank 1 but ` +\n        `got rank ${$mean.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($variance.rank === 2 || $variance.rank === 1, () => `Error in batchNorm2D: variance must be rank 2 or rank 1 ` +\n        `but got rank ${$variance.rank}.`);\n    if ($scale != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($scale.rank === 2 || $scale.rank === 1, () => `Error in batchNorm2D: scale must be rank 2 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n    }\n    if ($offset != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($offset.rank === 2 || $offset.rank === 1, () => `Error in batchNorm2D: offset must be rank 2 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n    }\n    return (0,_batchnorm__WEBPACK_IMPORTED_MODULE_2__.batchNorm)($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\nconst batchNorm2d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ batchNorm2d_ });\n//# sourceMappingURL=batchnorm2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchNorm3d\": () => (/* binding */ batchNorm3d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _batchnorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./batchnorm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n\n\n\n\n/**\n * Batch normalization, strictly for 3D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm3d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'batchNorm');\n    const $mean = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(mean, 'mean', 'batchNorm');\n    const $variance = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(offset, 'offset', 'batchNorm');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 3, () => `Error in batchNorm3D: x must be rank 3 but got rank ` +\n        `${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($mean.rank === 3 || $mean.rank === 1, () => `Error in batchNorm3D: mean must be rank 3 or rank 1 but ` +\n        `got rank ${$mean.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($variance.rank === 3 || $variance.rank === 1, () => `Error in batchNorm3D: variance must be rank 3 or rank 1 ` +\n        `but got rank ${$variance.rank}.`);\n    if ($scale != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($scale.rank === 3 || $scale.rank === 1, () => `Error in batchNorm3D: scale must be rank 3 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n    }\n    if ($offset != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($offset.rank === 3 || $offset.rank === 1, () => `Error in batchNorm3D: offset must be rank 3 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n    }\n    return (0,_batchnorm__WEBPACK_IMPORTED_MODULE_2__.batchNorm)($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\nconst batchNorm3d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ batchNorm3d_ });\n//# sourceMappingURL=batchnorm3d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchNorm4d\": () => (/* binding */ batchNorm4d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _batchnorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./batchnorm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n\n\n\n\n/**\n * Batch normalization, strictly for 4D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm4d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'batchNorm');\n    const $mean = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(mean, 'mean', 'batchNorm');\n    const $variance = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(offset, 'offset', 'batchNorm');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 4, () => `Error in batchNorm4D: x must be rank 4 but got rank ` +\n        `${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($mean.rank === 4 || $mean.rank === 1, () => `Error in batchNorm4D: mean must be rank 4 or rank 1 but ` +\n        `got rank ${$mean.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($variance.rank === 4 || $variance.rank === 1, () => `Error in batchNorm4D: variance must be rank 4 or rank 1 ` +\n        `but got rank ${$variance.rank}.`);\n    if ($scale != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($scale.rank === 4 || $scale.rank === 1, () => `Error in batchNorm4D: scale must be rank 4 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n    }\n    if ($offset != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($offset.rank === 4 || $offset.rank === 1, () => `Error in batchNorm4D: offset must be rank 4 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n    }\n    return (0,_batchnorm__WEBPACK_IMPORTED_MODULE_2__.batchNorm)($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\nconst batchNorm4d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ batchNorm4d_ });\n//# sourceMappingURL=batchnorm4d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"xAs4D\": () => (/* binding */ xAs4D)\n/* harmony export */ });\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n\nfunction xAs4D(x) {\n    let x4D;\n    if (x.rank === 0 || x.rank === 1) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)(x, [1, 1, 1, x.size]);\n    }\n    else if (x.rank === 2) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)(x, [1, 1, x.shape[0], x.shape[1]]);\n    }\n    else if (x.rank === 3) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    else {\n        x4D = x;\n    }\n    return x4D;\n}\n//# sourceMappingURL=batchnorm_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bincount\": () => (/* binding */ bincount)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction bincount_(x, weights, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'bincount');\n    const $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'bincount');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.dtype === 'int32', () => `Error in bincount: input ` +\n        `dtype must be int32, but got ${$x.dtype}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(size >= 0, () => `size must be non-negative, but got ${size}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($weights.size === $x.size || $weights.size === 0, () => `Error in bincount: weights must have the same size as input or` +\n        `0-length, but got input shape: ${$x.shape}, weights shape: ` +\n        `${$weights.shape}.`);\n    const inputs = { x: $x, weights: $weights };\n    const attrs = { size };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Bincount, inputs, attrs);\n}\nconst bincount = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ bincount_ });\n//# sourceMappingURL=bincount.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"booleanMaskAsync\": () => (/* binding */ booleanMaskAsync)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _gather__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./gather */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _squeeze__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./squeeze */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js\");\n/* harmony import */ var _where_async__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./where_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Apply boolean mask to tensor.\n *\n * ```js\n * const tensor = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n * const mask = tf.tensor1d([1, 0, 1], 'bool');\n * const result = await tf.booleanMaskAsync(tensor, mask);\n * result.print();\n * ```\n *\n * @param tensor N-D tensor.\n * @param mask K-D boolean tensor, K <= N and K must be known statically.\n * @param axis A 0-D int Tensor representing the axis in tensor to mask from.\n *     By default, axis is 0 which will mask from the first dimension.\n *     Otherwise K + axis <= N.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nasync function booleanMaskAsync_(tensor, mask, axis) {\n    const $tensor = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(tensor, 'tensor', 'boolMask');\n    const $mask = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(mask, 'mask', 'boolMask', 'bool');\n    const axisFrom = axis == null ? 0 : axis;\n    const maskDim = $mask.rank;\n    const tensorShape = $tensor.shape;\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(maskDim > 0, () => 'mask cannot be scalar');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatch(tensorShape.slice(axisFrom, axisFrom + maskDim), $mask.shape, `mask's shape must match the first K dimensions of tensor's shape,`);\n    let leadingSize = 1;\n    for (let i = axisFrom; i < axisFrom + maskDim; i++) {\n        leadingSize *= tensorShape[i];\n    }\n    const targetTensorShape = tensorShape.slice(0, axisFrom)\n        .concat([leadingSize], tensorShape.slice(axisFrom + maskDim));\n    const reshapedTensor = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($tensor, targetTensorShape);\n    const reshapedMask = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($mask, [-1]);\n    const positivePositions = await (0,_where_async__WEBPACK_IMPORTED_MODULE_3__.whereAsync)(reshapedMask);\n    const indices = (0,_squeeze__WEBPACK_IMPORTED_MODULE_4__.squeeze)(positivePositions, [1]);\n    const res = (0,_gather__WEBPACK_IMPORTED_MODULE_5__.gather)(reshapedTensor, indices, axisFrom);\n    // Ensure no memory leak.\n    if (tensor !== $tensor) {\n        $tensor.dispose();\n    }\n    if (mask !== $mask) {\n        $mask.dispose();\n    }\n    indices.dispose();\n    reshapedTensor.dispose();\n    reshapedMask.dispose();\n    positivePositions.dispose();\n    return res;\n}\nconst booleanMaskAsync = booleanMaskAsync_;\n//# sourceMappingURL=boolean_mask.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"broadcastTo\": () => (/* binding */ broadcastTo)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./clone */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Broadcast an array to a compatible shape NumPy-style.\n *\n * The tensor's shape is compared to the broadcast shape from end to beginning.\n * Ones are prepended to the tensor's shape until is has the same length as\n * the broadcast shape. If input.shape[i]==shape[i], the (i+1)-th axis is\n * already broadcast-compatible. If input.shape[i]==1 and shape[i]==N, then\n * the input tensor is tiled N times along that axis (using tf.tile).\n *\n * @param input The tensor that is to be broadcasted.\n * @param shape The input is to be broadcast to this shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction broadcastTo_(x, shape) {\n    let input = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'broadcastTo', 'x');\n    const xShape = input.shape;\n    if (shape.some(d => !(d > 0) || d % 1 !== 0)) {\n        throw new Error(`broadcastTo(): Invalid broadcast shape [${shape}].`);\n    }\n    if (shape.length < input.rank) {\n        throw new Error(`broadcastTo(): shape.length=${shape.length} < input.rank=${input.rank}.`);\n    }\n    if (shape.length > input.rank) {\n        const newShape = input.shape.slice();\n        while (newShape.length < shape.length) {\n            newShape.unshift(1);\n        }\n        input = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(input, newShape);\n    }\n    const inputShape = input.shape;\n    const reps = Array.from(shape);\n    for (let i = shape.length - 1; i >= 0; i--) {\n        if (inputShape[i] === shape[i]) {\n            reps[i] = 1;\n        }\n        else if (input.shape[i] !== 1) {\n            throw new Error(`broadcastTo(): [${xShape}] cannot be broadcast to [${shape}].`);\n        }\n    }\n    const axes = reps.map((n, i) => n > 1 ? i : -1).filter(i => i >= 0);\n    if (axes.length === 0) {\n        return (0,_clone__WEBPACK_IMPORTED_MODULE_3__.clone)(input);\n    }\n    // TODO call broadcastTo kernel directly once backends implement broadcstTo\n    const inputs = { x: input };\n    const attrs = { reps };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Tile, inputs, attrs);\n}\nconst broadcastTo = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ broadcastTo_ });\n//# sourceMappingURL=broadcast_to.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getBroadcastDims\": () => (/* binding */ getBroadcastDims),\n/* harmony export */   \"getReductionAxes\": () => (/* binding */ getReductionAxes),\n/* harmony export */   \"assertAndGetBroadcastShape\": () => (/* binding */ assertAndGetBroadcastShape)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Returns the dimensions in the input shape that are broadcasted to\n * produce the provided output shape.\n *\n * The returned dimensions are 0-indexed and sorted. An example:\n * inShape = [4, 1, 3]\n * outShape = [5, 4, 3, 3]\n * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.\n */\nfunction getBroadcastDims(inShape, outShape) {\n    const inRank = inShape.length;\n    const dims = [];\n    for (let i = 0; i < inRank; i++) {\n        const dim = inRank - 1 - i;\n        const a = inShape[dim] || 1;\n        const b = outShape[outShape.length - 1 - i] || 1;\n        if (b > 1 && a === 1) {\n            dims.unshift(dim);\n        }\n    }\n    return dims;\n}\n/**\n * Returns the axes in the output space that should be reduced to produce\n * the input space.\n */\nfunction getReductionAxes(inShape, outShape) {\n    const result = [];\n    for (let i = 0; i < outShape.length; i++) {\n        const inDim = inShape[inShape.length - i - 1];\n        const outAxis = outShape.length - i - 1;\n        const outDim = outShape[outAxis];\n        if (inDim == null || (inDim === 1 && outDim > 1)) {\n            result.unshift(outAxis);\n        }\n    }\n    return result;\n}\nfunction assertAndGetBroadcastShape(shapeA, shapeB) {\n    const result = [];\n    const l = Math.max(shapeA.length, shapeB.length);\n    for (let i = 0; i < l; i++) {\n        let a = shapeA[shapeA.length - i - 1];\n        if (a == null) {\n            a = 1;\n        }\n        let b = shapeB[shapeB.length - i - 1];\n        if (b == null) {\n            b = 1;\n        }\n        if (a === 1) {\n            result.unshift(b);\n        }\n        else if (b === 1) {\n            result.unshift(a);\n        }\n        else if (a !== b) {\n            const errMsg = `Operands could not be broadcast together with shapes ` +\n                `${shapeA} and ${shapeB}.`;\n            throw Error(errMsg);\n        }\n        else {\n            result.unshift(a);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=broadcast_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fromPixelsAsync\": () => (/* binding */ fromPixelsAsync),\n/* harmony export */   \"toPixels\": () => (/* binding */ toPixels),\n/* harmony export */   \"fromPixels\": () => (/* binding */ fromPixels)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _kernel_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _tensor3d__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tensor3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\nlet fromPixels2DContext;\n/**\n * Creates a `tf.Tensor` from an image.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * tf.browser.fromPixels(image).print();\n * ```\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n *\n * @returns A Tensor3D with the shape `[height, width, numChannels]`.\n *\n * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}\n */\nfunction fromPixels_(pixels, numChannels = 3) {\n    // Sanity checks.\n    if (numChannels > 4) {\n        throw new Error('Cannot construct Tensor with more than 4 channels from pixels.');\n    }\n    if (pixels == null) {\n        throw new Error('pixels passed to tf.browser.fromPixels() can not be null');\n    }\n    let isPixelData = false;\n    let isImageData = false;\n    let isVideo = false;\n    let isImage = false;\n    let isCanvasLike = false;\n    let isImageBitmap = false;\n    if (pixels.data instanceof Uint8Array) {\n        isPixelData = true;\n    }\n    else if (typeof (ImageData) !== 'undefined' && pixels instanceof ImageData) {\n        isImageData = true;\n    }\n    else if (typeof (HTMLVideoElement) !== 'undefined' &&\n        pixels instanceof HTMLVideoElement) {\n        isVideo = true;\n    }\n    else if (typeof (HTMLImageElement) !== 'undefined' &&\n        pixels instanceof HTMLImageElement) {\n        isImage = true;\n        // tslint:disable-next-line: no-any\n    }\n    else if (pixels.getContext != null) {\n        isCanvasLike = true;\n    }\n    else if (typeof (ImageBitmap) !== 'undefined' && pixels instanceof ImageBitmap) {\n        isImageBitmap = true;\n    }\n    else {\n        throw new Error('pixels passed to tf.browser.fromPixels() must be either an ' +\n            `HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData ` +\n            `in browser, or OffscreenCanvas, ImageData in webworker` +\n            ` or {data: Uint32Array, width: number, height: number}, ` +\n            `but was ${pixels.constructor.name}`);\n    }\n    if (isVideo) {\n        const HAVE_CURRENT_DATA_READY_STATE = 2;\n        if (isVideo &&\n            pixels.readyState <\n                HAVE_CURRENT_DATA_READY_STATE) {\n            throw new Error('The video element has not loaded data yet. Please wait for ' +\n                '`loadeddata` event on the <video> element.');\n        }\n    }\n    // If the current backend has 'FromPixels' registered, it has a more\n    // efficient way of handling pixel uploads, so we call that.\n    const kernel = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getKernel)(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.FromPixels, _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backendName);\n    if (kernel != null) {\n        const inputs = { pixels };\n        const attrs = { numChannels };\n        return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.FromPixels, inputs, attrs);\n    }\n    const [width, height] = isVideo ?\n        [\n            pixels.videoWidth,\n            pixels.videoHeight\n        ] :\n        [pixels.width, pixels.height];\n    let vals;\n    if (isCanvasLike) {\n        vals =\n            // tslint:disable-next-line:no-any\n            pixels.getContext('2d').getImageData(0, 0, width, height).data;\n    }\n    else if (isImageData || isPixelData) {\n        vals = pixels.data;\n    }\n    else if (isImage || isVideo || isImageBitmap) {\n        if (fromPixels2DContext == null) {\n            fromPixels2DContext = document.createElement('canvas').getContext('2d');\n        }\n        fromPixels2DContext.canvas.width = width;\n        fromPixels2DContext.canvas.height = height;\n        fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n        vals = fromPixels2DContext.getImageData(0, 0, width, height).data;\n    }\n    let values;\n    if (numChannels === 4) {\n        values = new Int32Array(vals);\n    }\n    else {\n        const numPixels = width * height;\n        values = new Int32Array(numPixels * numChannels);\n        for (let i = 0; i < numPixels; i++) {\n            for (let channel = 0; channel < numChannels; ++channel) {\n                values[i * numChannels + channel] = vals[i * 4 + channel];\n            }\n        }\n    }\n    const outShape = [height, width, numChannels];\n    return (0,_tensor3d__WEBPACK_IMPORTED_MODULE_4__.tensor3d)(values, outShape, 'int32');\n}\n// Helper functions for |fromPixelsAsync| to check whether the input can\n// be wrapped into imageBitmap.\nfunction isPixelData(pixels) {\n    return (pixels != null) && (pixels.data instanceof Uint8Array);\n}\nfunction isImageBitmapFullySupported() {\n    return typeof window !== 'undefined' &&\n        typeof (ImageBitmap) !== 'undefined' &&\n        window.hasOwnProperty('createImageBitmap');\n}\nfunction isNonEmptyPixels(pixels) {\n    return pixels != null && pixels.width !== 0 && pixels.height !== 0;\n}\nfunction canWrapPixelsToImageBitmap(pixels) {\n    return isImageBitmapFullySupported() && !(pixels instanceof ImageBitmap) &&\n        isNonEmptyPixels(pixels) && !isPixelData(pixels);\n}\n/**\n * Creates a `tf.Tensor` from an image in async way.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * (await tf.browser.fromPixelsAsync(image)).print();\n * ```\n * This API is the async version of fromPixels. The API will first\n * check |WRAP_TO_IMAGEBITMAP| flag, and try to wrap the input to\n * imageBitmap if the flag is set to true.\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n *\n * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}\n */\nasync function fromPixelsAsync(pixels, numChannels = 3) {\n    let inputs = null;\n    // Check whether the backend needs to wrap |pixels| to imageBitmap and\n    // whether |pixels| can be wrapped to imageBitmap.\n    if ((0,_environment__WEBPACK_IMPORTED_MODULE_5__.env)().getBool('WRAP_TO_IMAGEBITMAP') &&\n        canWrapPixelsToImageBitmap(pixels)) {\n        // Force the imageBitmap creation to not do any premultiply alpha\n        // ops.\n        let imageBitmap;\n        try {\n            // wrap in try-catch block, because createImageBitmap may not work\n            // properly in some browsers, e.g.\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1335594\n            // tslint:disable-next-line: no-any\n            imageBitmap = await createImageBitmap(pixels, { premultiplyAlpha: 'none' });\n        }\n        catch (e) {\n            imageBitmap = null;\n        }\n        // createImageBitmap will clip the source size.\n        // In some cases, the input will have larger size than its content.\n        // E.g. new Image(10, 10) but with 1 x 1 content. Using\n        // createImageBitmap will clip the size from 10 x 10 to 1 x 1, which\n        // is not correct. We should avoid wrapping such resouce to\n        // imageBitmap.\n        if (imageBitmap != null && imageBitmap.width === pixels.width &&\n            imageBitmap.height === pixels.height) {\n            inputs = imageBitmap;\n        }\n        else {\n            inputs = pixels;\n        }\n    }\n    else {\n        inputs = pixels;\n    }\n    return fromPixels_(inputs, numChannels);\n}\n/**\n * Draws a `tf.Tensor` of pixel values to a byte array or optionally a\n * canvas.\n *\n * When the dtype of the input is 'float32', we assume values in the range\n * [0-1]. Otherwise, when input is 'int32', we assume values in the range\n * [0-255].\n *\n * Returns a promise that resolves when the canvas has been drawn to.\n *\n * @param img A rank-2 tensor with shape `[height, width]`, or a rank-3 tensor\n * of shape `[height, width, numChannels]`. If rank-2, draws grayscale. If\n * rank-3, must have depth of 1, 3 or 4. When depth of 1, draws\n * grayscale. When depth of 3, we draw with the first three components of\n * the depth dimension corresponding to r, g, b and alpha = 1. When depth of\n * 4, all four components of the depth dimension correspond to r, g, b, a.\n * @param canvas The canvas to draw to.\n *\n * @doc {heading: 'Browser', namespace: 'browser'}\n */\nasync function toPixels(img, canvas) {\n    let $img = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_6__.convertToTensor)(img, 'img', 'toPixels');\n    if (!(img instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor)) {\n        // Assume int32 if user passed a native array.\n        const originalImgTensor = $img;\n        $img = (0,_cast__WEBPACK_IMPORTED_MODULE_7__.cast)(originalImgTensor, 'int32');\n        originalImgTensor.dispose();\n    }\n    if ($img.rank !== 2 && $img.rank !== 3) {\n        throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${$img.rank}.`);\n    }\n    const [height, width] = $img.shape.slice(0, 2);\n    const depth = $img.rank === 2 ? 1 : $img.shape[2];\n    if (depth > 4 || depth === 2) {\n        throw new Error(`toPixels only supports depth of size ` +\n            `1, 3 or 4 but got ${depth}`);\n    }\n    if ($img.dtype !== 'float32' && $img.dtype !== 'int32') {\n        throw new Error(`Unsupported type for toPixels: ${$img.dtype}.` +\n            ` Please use float32 or int32 tensors.`);\n    }\n    const data = await $img.data();\n    const multiplier = $img.dtype === 'float32' ? 255 : 1;\n    const bytes = new Uint8ClampedArray(width * height * 4);\n    for (let i = 0; i < height * width; ++i) {\n        const rgba = [0, 0, 0, 255];\n        for (let d = 0; d < depth; d++) {\n            const value = data[i * depth + d];\n            if ($img.dtype === 'float32') {\n                if (value < 0 || value > 1) {\n                    throw new Error(`Tensor values for a float32 Tensor must be in the ` +\n                        `range [0 - 1] but encountered ${value}.`);\n                }\n            }\n            else if ($img.dtype === 'int32') {\n                if (value < 0 || value > 255) {\n                    throw new Error(`Tensor values for a int32 Tensor must be in the ` +\n                        `range [0 - 255] but encountered ${value}.`);\n                }\n            }\n            if (depth === 1) {\n                rgba[0] = value * multiplier;\n                rgba[1] = value * multiplier;\n                rgba[2] = value * multiplier;\n            }\n            else {\n                rgba[d] = value * multiplier;\n            }\n        }\n        const j = i * 4;\n        bytes[j + 0] = Math.round(rgba[0]);\n        bytes[j + 1] = Math.round(rgba[1]);\n        bytes[j + 2] = Math.round(rgba[2]);\n        bytes[j + 3] = Math.round(rgba[3]);\n    }\n    if (canvas != null) {\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        const imageData = new ImageData(bytes, width, height);\n        ctx.putImageData(imageData, 0, 0);\n    }\n    if ($img !== img) {\n        $img.dispose();\n    }\n    return bytes;\n}\nconst fromPixels = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ fromPixels_ });\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buffer\": () => (/* binding */ buffer)\n/* harmony export */ });\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Creates an empty `tf.TensorBuffer` with the specified `shape` and `dtype`.\n *\n * The values are stored in CPU as `TypedArray`. Fill the buffer using\n * `buffer.set()`, or by modifying directly `buffer.values`.\n *\n * When done, call `buffer.toTensor()` to get an immutable `tf.Tensor` with\n * those values.\n *\n * ```js\n * // Create a buffer and set values at particular indices.\n * const buffer = tf.buffer([2, 2]);\n * buffer.set(3, 0, 0);\n * buffer.set(5, 1, 0);\n *\n * // Convert the buffer back to a tensor.\n * buffer.toTensor().print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The dtype of the buffer. Defaults to 'float32'.\n * @param values The values of the buffer as `TypedArray`. Defaults to\n * zeros.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction buffer(shape, dtype = 'float32', values) {\n    dtype = dtype || 'float32';\n    _util__WEBPACK_IMPORTED_MODULE_1__.assertNonNegativeIntegerDimensions(shape);\n    return new _tensor__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(shape, dtype, values);\n}\n//# sourceMappingURL=buffer.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cast\": () => (/* binding */ cast)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction cast_(x, dtype) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'cast');\n    // Sanity checks.\n    if (!_util__WEBPACK_IMPORTED_MODULE_2__.isValidDtype(dtype)) {\n        throw new Error(`Failed to cast to unknown dtype ${dtype}`);\n    }\n    if (dtype === 'string' && $x.dtype !== 'string' ||\n        dtype !== 'string' && $x.dtype === 'string') {\n        throw new Error('Only strings can be casted to strings');\n    }\n    const inputs = { x: $x };\n    const attrs = { dtype };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Cast, inputs, attrs);\n}\nconst cast = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ cast_ });\n//# sourceMappingURL=cast.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ceil\": () => (/* binding */ ceil)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes ceiling of input `tf.Tensor` element-wise: `ceil(x)`\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.ceil().print();  // or tf.ceil(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction ceil_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'ceil');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Ceil, inputs);\n}\nconst ceil = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ ceil_ });\n//# sourceMappingURL=ceil.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clipByValue\": () => (/* binding */ clipByValue)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Clips values element-wise. `max(min(x, clipValueMax), clipValueMin)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.clipByValue(-2, 3).print();  // or tf.clipByValue(x, -2, 3)\n * ```\n * @param x The input tensor.\n * @param clipValueMin Lower-bound of range to be clipped to.\n * @param clipValueMax Upper-bound of range to be clipped to.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction clipByValue_(x, clipValueMin, clipValueMax) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'clipByValue');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert((clipValueMin <= clipValueMax), () => `Error in clip: min (${clipValueMin}) must be ` +\n        `less than or equal to max (${clipValueMax}).`);\n    const inputs = { x: $x };\n    const attrs = { clipValueMin, clipValueMax };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.ClipByValue, inputs, attrs);\n}\nconst clipByValue = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ clipByValue_ });\n//# sourceMappingURL=clip_by_value.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clone\": () => (/* binding */ clone)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Creates a new tensor with the same values and shape as the specified\n * tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n *\n * x.clone().print();\n * ```\n *\n * @param x The tensor to clone.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction clone_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'clone', 'string_or_numeric');\n    const inputs = { x: $x };\n    // Note this op is called tf.identity in python. Hence the kernel name used\n    // here.\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Identity, inputs);\n}\nconst clone = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ clone_ });\n//# sourceMappingURL=clone.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"complex\": () => (/* binding */ complex)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Converts two real numbers to a complex number.\n *\n * Given a tensor `real` representing the real part of a complex number, and a\n * tensor `imag` representing the imaginary part of a complex number, this\n * operation returns complex numbers elementwise of the form [r0, i0, r1, i1],\n * where r represents the real part and i represents the imag part.\n *\n * The input tensors real and imag must have the same shape.\n *\n * ```js\n * const real = tf.tensor1d([2.25, 3.25]);\n * const imag = tf.tensor1d([4.75, 5.75]);\n * const complex = tf.complex(real, imag);\n *\n * complex.print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction complex_(real, imag) {\n    const $real = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(real, 'real', 'complex');\n    const $imag = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(imag, 'imag', 'complex');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch($real.shape, $imag.shape, `real and imag shapes, ${$real.shape} and ${$imag.shape}, ` +\n        `must match in call to tf.complex().`);\n    const inputs = { real: $real, imag: $imag };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Complex, inputs);\n}\nconst complex = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ complex_ });\n//# sourceMappingURL=complex.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat\": () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./clone */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Concatenates a list of `tf.Tensor`s along a given axis.\n *\n * The tensors ranks and types must match, and their sizes must match in all\n * dimensions except `axis`.\n *\n * Also available are stricter rank-specific methods that assert that\n * `tensors` are of the given rank:\n *   - `tf.concat1d`\n *   - `tf.concat2d`\n *   - `tf.concat3d`\n *   - `tf.concat4d`\n *\n * Except `tf.concat1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * a.concat(b).print();  // or a.concat(b)\n * ```\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.concat([a, b, c]).print();\n * ```\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [10, 20]]);\n * const b = tf.tensor2d([[3, 4], [30, 40]]);\n * const axis = 1;\n * tf.concat([a, b], axis).print();\n * ```\n * @param tensors A list of tensors to concatenate.\n * @param axis The axis to concate along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction concat_(tensors, axis = 0) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(tensors.length >= 1, () => 'Pass at least one tensor to concat');\n    const $tensors = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_2__.convertToTensorArray)(tensors, 'tensors', 'concat', 'string_or_numeric');\n    if ($tensors[0].dtype === 'complex64') {\n        $tensors.forEach(tensor => {\n            if (tensor.dtype !== 'complex64') {\n                throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${tensor.dtype}. `);\n            }\n        });\n    }\n    if ($tensors.length === 1) {\n        return (0,_clone__WEBPACK_IMPORTED_MODULE_3__.clone)($tensors[0]);\n    }\n    const inputs = $tensors;\n    const attr = { axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Concat, inputs, attr);\n}\nconst concat = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ concat_ });\n//# sourceMappingURL=concat.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat1d\": () => (/* binding */ concat1d)\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n\n\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors) {\n    return (0,_concat__WEBPACK_IMPORTED_MODULE_0__.concat)(tensors, 0 /* axis */);\n}\nconst concat1d = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ concat1d_ });\n//# sourceMappingURL=concat_1d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat2d\": () => (/* binding */ concat2d)\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n\n\n/**\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *\n * B: shape(2, 3) = | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * C = tf.concat2d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *                  | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * if axis = 1:\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\n *                   | r2, g2, b2, r4, g4, b4 |\n *\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concatenate along.\n * @return The concatenated array.\n */\nfunction concat2d_(tensors, axis) {\n    return (0,_concat__WEBPACK_IMPORTED_MODULE_0__.concat)(tensors, axis);\n}\nconst concat2d = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ concat2d_ });\n//# sourceMappingURL=concat_2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat3d\": () => (/* binding */ concat3d)\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n\n\n/**\n * Concatenates a list of `tf.Tensor3D`s along an axis.\n * See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *\n * B: shape(2, 1, 3) = | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * C = tf.concat3d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *                     | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * if axis = 1:\n * C: shape(2, 2, 3) = | r1, g1, b1, r3, g3, b3 |\n *                     | r2, g2, b2, r4, g4, b4 |\n *\n * if axis = 2:\n * C = shape(2, 1, 6) = | r1, g1, b1, r3, g3, b3 |\n *                      | r2, g2, b2, r4, g4, b4 |\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat3d_(tensors, axis) {\n    return (0,_concat__WEBPACK_IMPORTED_MODULE_0__.concat)(tensors, axis);\n}\nconst concat3d = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ concat3d_ });\n//# sourceMappingURL=concat_3d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat4d\": () => (/* binding */ concat4d)\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n\n\n/**\n * Concatenates a list of `tf.Tensor4D`s along an axis.\n * See `concat` for details.\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat4d_(tensors, axis) {\n    return (0,_concat__WEBPACK_IMPORTED_MODULE_0__.concat)(tensors, axis);\n}\nconst concat4d = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ concat4d_ });\n//# sourceMappingURL=concat_4d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"assertParamsConsistent\": () => (/* binding */ assertParamsConsistent),\n/* harmony export */   \"computeOutShape\": () => (/* binding */ computeOutShape)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction assertParamsConsistent(shapes, axis) {\n    const rank = shapes[0].length;\n    shapes.forEach((shape, i) => {\n        _util__WEBPACK_IMPORTED_MODULE_0__.assert(shape.length === rank, () => `Error in concat${rank}D: rank of tensors[${i}] must be the same ` +\n            `as the rank of the rest (${rank})`);\n    });\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(axis >= 0 && axis < rank, () => `Error in concat${rank}D: axis must be between 0 and ${rank - 1}.`);\n    const firstShape = shapes[0];\n    shapes.forEach((shape, i) => {\n        for (let r = 0; r < rank; r++) {\n            _util__WEBPACK_IMPORTED_MODULE_0__.assert((r === axis) || (shape[r] === firstShape[r]), () => `Error in concat${rank}D: Shape of tensors[${i}] (${shape}) ` +\n                `does not match the shape of the rest (${firstShape}) ` +\n                `along the non-concatenated axis ${i}.`);\n        }\n    });\n}\nfunction computeOutShape(shapes, axis) {\n    const outputShape = shapes[0].slice();\n    for (let i = 1; i < shapes.length; i++) {\n        outputShape[axis] += shapes[i][axis];\n    }\n    return outputShape;\n}\n//# sourceMappingURL=concat_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"confusionMatrix_\": () => (/* binding */ confusionMatrix_),\n/* harmony export */   \"confusionMatrix\": () => (/* binding */ confusionMatrix)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _one_hot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./one_hot */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./transpose */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Computes the confusion matrix from true labels and predicted labels.\n *\n * ```js\n * const labels = tf.tensor1d([0, 1, 2, 1, 0], 'int32');\n * const predictions = tf.tensor1d([0, 2, 2, 1, 0], 'int32');\n * const numClasses = 3;\n * const out = tf.math.confusionMatrix(labels, predictions, numClasses);\n * out.print();\n * // Expected output matrix:\n * // [[2, 0, 0],\n * //  [0, 1, 1],\n * //  [0, 0, 1]]\n * ```\n *\n * @param labels The target labels, assumed to be 0-based integers\n *   for the classes. The shape is `[numExamples]`, where\n *   `numExamples` is the number of examples included.\n * @param predictions The predicted classes, assumed to be\n *   0-based integers for the classes. Must have the same shape as `labels`.\n * @param numClasses Number of all classes, as an integer.\n *   Its value must be larger than the largest element in `labels` and\n *   `predictions`.\n * @returns The confusion matrix as a int32-type 2D tensor. The value at\n *   row `r` and column `c` is the number of times examples of actual class\n *   `r` were predicted as class `c`.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nfunction confusionMatrix_(labels, predictions, numClasses) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(labels, 'labels', 'confusionMatrix');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(predictions, 'predictions', 'confusionMatrix');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(numClasses == null || numClasses > 0 && Number.isInteger(numClasses), () => `If provided, numClasses must be a positive integer, ` +\n        `but got ${numClasses}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($labels.rank === 1, () => `Expected the rank of labels to be 1, but got ${$labels.rank}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($predictions.rank === 1, () => `Expected the rank of predictions to be 1, ` +\n        `but got ${$predictions.rank}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($labels.shape[0] === $predictions.shape[0], () => `Mismatch in the number of examples: ` +\n        `${$labels.shape[0]} vs. ${$predictions.shape[0]}. ` +\n        `Labels and predictions should have the same number of elements.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(numClasses > 0 && Number.isInteger(numClasses), () => `numClasses is required to be a positive integer, but got ` +\n        `${numClasses}`);\n    // TODO(cais): In the future, if oneHot supports tensors inputs for\n    //   `numClasses`, `confusionMatrix` can make `numClasses` optional.\n    const oneHotLabels = (0,_one_hot__WEBPACK_IMPORTED_MODULE_2__.oneHot)((0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($labels, 'int32'), numClasses);\n    const oneHotPredictions = (0,_one_hot__WEBPACK_IMPORTED_MODULE_2__.oneHot)((0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($predictions, 'int32'), numClasses);\n    const oneHotLabelsT = (0,_transpose__WEBPACK_IMPORTED_MODULE_4__.transpose)(oneHotLabels);\n    const product = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_5__.matMul)(oneHotLabelsT, oneHotPredictions);\n    return (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)(product, 'int32');\n}\nconst confusionMatrix = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ confusionMatrix_ });\n//# sourceMappingURL=confusion_matrix.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv1d\": () => (/* binding */ conv1d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _conv2d__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n\n\n\n\n\n\n/**\n * Computes a 1D convolution over the input x.\n *\n * @param x The input tensor, of rank 3 or rank 2, of shape\n *     `[batch, width, inChannels]`. If rank 2, batch of 1 is assumed.\n * @param filter The filter, rank 3, of shape\n *     `[filterWidth, inDepth, outDepth]`.\n * @param stride The number of entries by which the filter is moved right at\n *     each step.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat An optional string from \"NWC\", \"NCW\". Defaults to \"NWC\",\n *     the data is stored in the order of [batch, in_width, in_channels]. Only\n *     \"NWC\" is currently supported.\n * @param dilation The dilation rate in which we sample input values in\n *     atrous convolution. Defaults to `1`. If it is greater than 1, then\n *     stride must be `1`.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv1d_(x, filter, stride, pad, dataFormat = 'NWC', dilation = 1, dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'conv1d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(filter, 'filter', 'conv1d');\n    let x3D = $x;\n    let reshapedTo3D = false;\n    if ($x.rank === 2) {\n        reshapedTo3D = true;\n        x3D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)($x, [1, $x.shape[0], $x.shape[1]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(x3D.rank === 3, () => `Error in conv1d: input must be rank 3, but got rank ${x3D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($filter.rank === 3, () => `Error in conv1d: filter must be rank 3, but got rank ` +\n        `${$filter.rank}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isInt(pad), () => `Error in conv1d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(x3D.shape[2] === $filter.shape[1], () => `Error in conv1d: depth of input (${x3D.shape[2]}) must match ` +\n        `input depth for filter ${$filter.shape[1]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_3__.eitherStridesOrDilationsAreOne(stride, dilation), () => 'Error in conv1D: Either stride or dilation must be 1. ' +\n        `Got stride ${stride} and dilation '${dilation}'`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(dataFormat === 'NWC', () => `Error in conv1d: got dataFormat of ${dataFormat} but only NWC is currently supported.`);\n    const filter4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)($filter, [1, $filter.shape[0], $filter.shape[1], $filter.shape[2]]);\n    const input4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(x3D, [x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]]);\n    const strides = [1, stride];\n    const dilations = [1, dilation];\n    const conv2dDataFormat = 'NHWC';\n    const res = (0,_conv2d__WEBPACK_IMPORTED_MODULE_4__.conv2d)(input4D, filter4D, strides, pad, conv2dDataFormat, dilations, dimRoundingMode);\n    if (reshapedTo3D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(res, [res.shape[2], res.shape[3]]);\n    }\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(res, [res.shape[0], res.shape[2], res.shape[3]]);\n}\nconst conv1d = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ conv1d_ });\n//# sourceMappingURL=conv1d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2d\": () => (/* binding */ conv2d)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Computes a 2D convolution over the input x.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2d_(x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'conv2d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(filter, 'filter', 'conv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x4D.rank === 4, () => `Error in conv2d: input must be rank 4, but got rank ${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert($filter.rank === 4, () => `Error in conv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_3__.assert(_util__WEBPACK_IMPORTED_MODULE_3__.isInt(pad), () => `Error in conv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(inDepth === $filter.shape[2], () => `Error in conv2d: depth of input (${inDepth}) must match ` +\n        `input depth for filter ${$filter.shape[2]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_4__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.Conv2D, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst conv2d = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ conv2d_ });\n//# sourceMappingURL=conv2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_filter.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_filter.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2DBackpropFilter\": () => (/* binding */ conv2DBackpropFilter)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Computes the derivative of the filter of a 2D convolution.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     [batch, height, width, inChannels]. If rank 3, batch of 1 is assumed.\n * @param dy The dy image, of rank 4 or rank 3, of shape\n *     [batch, height, width, outDepth]. If rank 3, batch of 1 is assumed.\n * @param filterShape The shape of the filter, length 4,\n *     [filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction conv2DBackpropFilter_(x, dy, filterShape, strides, pad, dataFormat = 'NHWC', dimRoundingMode) {\n    let x4D = x;\n    if (x.rank === 3) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    let dy4D = dy;\n    if (dy4D.rank === 3) {\n        dy4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(x4D.rank === 4, () => `Error in conv2dDerFilter: input must be rank 4, but got shape ` +\n        `${x4D.shape}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(dy4D.rank === 4, () => `Error in conv2dDerFilter: dy must be rank 4, but got shape ` +\n        `${dy4D.shape}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(filterShape.length === 4, () => `Error in conv2dDerFilter: filterShape must be length 4, but got ` +\n        `${filterShape}.`);\n    const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n    const outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(inDepth === filterShape[2], () => `Error in conv2dDerFilter: depth of input ${inDepth}) must ` +\n        `match input depth in filter (${filterShape[2]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(outDepth === filterShape[3], () => `Error in conv2dDerFilter: depth of dy (${outDepth}) must ` +\n        `match output depth for filter (${filterShape[3]}).`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isInt(pad), () => `Error in conv2dDerFilter: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D, dy: dy4D };\n    const attrs = { strides, pad, dataFormat, dimRoundingMode, filterShape };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Conv2DBackpropFilter, inputs, attrs);\n}\nconst conv2DBackpropFilter = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ conv2DBackpropFilter_ });\n//# sourceMappingURL=conv2d_backprop_filter.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_filter.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2DBackpropInput\": () => (/* binding */ conv2DBackpropInput)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Computes the derivative of the input of a 2D convolution.\n *\n * @param xShape The shape of the input: [batch, height, width, inDepth].\n * If length of 3, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 4 or rank 3 of shape\n *   `[batch, outHeight, outWidth, outDepth]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction conv2DBackpropInput_(xShape, dy, filter, strides, pad, dataFormat = 'NHWC', dimRoundingMode) {\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(xShape.length === dy.rank, () => `Length of inShape ` +\n        `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n    let xShape4D = xShape;\n    let dy4D = dy;\n    let reshapedTo4D = false;\n    if (dy.rank === 3) {\n        reshapedTo4D = true;\n        dy4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n        xShape4D = [1, xShape[0], xShape[1], xShape[2]];\n    }\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(xShape4D.length === 4, () => `Error in conv2dDerInput: inShape must be length 4, but got length ` +\n        `${xShape4D.length}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(dy4D.rank === 4, () => `Error in conv2dDerInput: dy must be rank 4, but got ` +\n        `rank ${dy4D.rank}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(filter.rank === 4, () => `Error in conv2dDerInput: filter must be rank 4, but got ` +\n        `rank ${filter.rank}`);\n    const inDepth = dataFormat === 'NHWC' ? xShape4D[3] : xShape4D[1];\n    const outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(inDepth === filter.shape[2], () => `Error in conv2dDerInput: depth of input (${inDepth}) must ` +\n        `match input depth for filter ${filter.shape[2]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(outDepth === filter.shape[3], () => `Error in conv2dDerInput: depth of output (${outDepth}) must ` +\n        `match output depth for filter ${filter.shape[3]}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert(_util__WEBPACK_IMPORTED_MODULE_1__.isInt(pad), () => `Error in conv2dDerInput: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { dy: dy4D, filter };\n    const attrs = { strides, pad, dataFormat, dimRoundingMode, inputShape: xShape4D };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Conv2DBackpropInput, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst conv2DBackpropInput = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ conv2DBackpropInput_ });\n//# sourceMappingURL=conv2d_backprop_input.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2dTranspose\": () => (/* binding */ conv2dTranspose)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _conv2d_backprop_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conv2d_backprop_input */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n\n\n\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2dTranspose_(x, filter, outputShape, strides, pad, dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'conv2dTranspose');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(filter, 'filter', 'conv2dTranspose');\n    return (0,_conv2d_backprop_input__WEBPACK_IMPORTED_MODULE_1__.conv2DBackpropInput)(outputShape, $x, $filter, strides, pad, 'NHWC', dimRoundingMode);\n}\nconst conv2dTranspose = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ conv2dTranspose_ });\n//# sourceMappingURL=conv2d_transpose.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3d\": () => (/* binding */ conv3d)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Computes a 3D convolution over the input x.\n *\n * @param x The input tensor, of rank 5 or rank 4, of shape\n *     `[batch, depth, height, width, channels]`. If rank 4,\n * batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inChannels, outChannels]`.\n *      inChannels must match between input and filter.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat: An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationDepth, dilationHeight,\n *     dilationWidth]` in which we sample input values across the height\n *     and width dimensions in atrous convolution. Defaults to `[1, 1, 1]`.\n *     If `dilations` is a single number, then\n *     `dilationDepth == dilationHeight == dilationWidth`. If it is greater\n *     than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3d_(x, filter, strides, pad, dataFormat = 'NDHWC', dilations = [1, 1, 1]) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'conv3d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(filter, 'filter', 'conv3d');\n    let x5D = $x;\n    let reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x5D.rank === 5, () => `Error in conv3d: input must be rank 5, but got rank ${x5D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert($filter.rank === 5, () => `Error in conv3d: filter must be rank 5, but got rank ` +\n        `${$filter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x5D.shape[4] === $filter.shape[3], () => `Error in conv3d: depth of input (${x5D.shape[4]}) must match ` +\n        `input depth for filter ${$filter.shape[3]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert((0,_conv_util__WEBPACK_IMPORTED_MODULE_4__.eitherStridesOrDilationsAreOne)(strides, dilations), () => 'Error in conv3D: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(dataFormat === 'NDHWC', () => `Error in conv3d: got dataFormat of ${dataFormat} but only NDHWC is currently supported.`);\n    const inputs = { x: x5D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.Conv3D, inputs, attrs);\n    if (reshapedTo5D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nconst conv3d = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ conv3d_ });\n//# sourceMappingURL=conv3d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_input.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_input.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3DBackpropInput\": () => (/* binding */ conv3DBackpropInput)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Computes the derivative of the input of a 3D convolution.\n *\n * @param xShape The shape of the input: [batch, depth, height, width,\n * in_channels]. If length of 4, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 5 or rank 4 of shape\n *   `[batch, outDepth, outHeight, outWidth, in_channels]`.\n * If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n */\nfunction conv3DBackpropInput_(xShape, dy, filter, strides, pad) {\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(xShape.length === dy.rank, () => `Length of inShape ` +\n        `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n    let xShape5D = xShape;\n    let dy5D = dy;\n    let reshapedTo5D = false;\n    if (dy.rank === 4) {\n        reshapedTo5D = true;\n        dy5D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]]);\n        xShape5D = [1, xShape[0], xShape[1], xShape[2], xShape[3]];\n    }\n    const inDepth = xShape5D[4];\n    const outDepth = dy5D.shape[4];\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(xShape5D.length === 5, () => `Error in conv3dDerInput: inShape must be length 5, but got length ` +\n        `${xShape5D.length}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(dy5D.rank === 5, () => `Error in conv3dDerInput: dy must be rank 5, but got ` +\n        `rank ${dy5D.rank}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(filter.rank === 5, () => `Error in conv3dDerInput: filter must be rank 5, but got ` +\n        `rank ${filter.rank}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(inDepth === filter.shape[3], () => `Error in conv3dDerInput: depth of input (${inDepth}) must ` +\n        `match input depth for filter ${filter.shape[3]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(outDepth === filter.shape[4], () => `Error in conv3dDerInput: depth of output (${outDepth}) must ` +\n        `match output depth for filter ${filter.shape[4]}.`);\n    const inputs = { dy: dy5D, filter };\n    const attrs = { pad, strides, inputShape: xShape5D };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Conv3DBackpropInputV2, inputs, attrs);\n    if (reshapedTo5D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nconst conv3DBackpropInput = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ conv3DBackpropInput_ });\n//# sourceMappingURL=conv3d_backprop_input.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_input.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3dTranspose\": () => (/* binding */ conv3dTranspose)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _conv3d_backprop_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conv3d_backprop_input */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_input.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n\n\n\n/**\n * Computes the transposed 3D convolution of a volume, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 5 or rank 4, of shape\n *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 5 or rank 4:\n *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is\n *    assumed.\n * @param strides The strides of the original convolution:\n *     `[strideDepth, strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3dTranspose_(x, filter, outputShape, strides, pad) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'conv3dTranspose');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(filter, 'filter', 'conv3dTranspose');\n    return (0,_conv3d_backprop_input__WEBPACK_IMPORTED_MODULE_1__.conv3DBackpropInput)(outputShape, $x, $filter, strides, pad);\n}\nconst conv3dTranspose = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ conv3dTranspose_ });\n//# sourceMappingURL=conv3d_transpose.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"computeDilation2DInfo\": () => (/* binding */ computeDilation2DInfo),\n/* harmony export */   \"computePool2DInfo\": () => (/* binding */ computePool2DInfo),\n/* harmony export */   \"computePool3DInfo\": () => (/* binding */ computePool3DInfo),\n/* harmony export */   \"computeConv2DInfo\": () => (/* binding */ computeConv2DInfo),\n/* harmony export */   \"computeConv3DInfo\": () => (/* binding */ computeConv3DInfo),\n/* harmony export */   \"computeDefaultPad\": () => (/* binding */ computeDefaultPad),\n/* harmony export */   \"tupleValuesAreOne\": () => (/* binding */ tupleValuesAreOne),\n/* harmony export */   \"eitherStridesOrDilationsAreOne\": () => (/* binding */ eitherStridesOrDilationsAreOne),\n/* harmony export */   \"convertConv2DDataFormat\": () => (/* binding */ convertConv2DDataFormat)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n *\n * @param inputShape Input tensor shape is of the following dimensions:\n *     `[batch, height, width, inChannels]`.\n * @param filterShape The filter shape is of the following dimensions:\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat The data format of the input and output data.\n *     Defaults to 'NHWC'.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`.\n *     Defaults to `[1, 1]`. If `dilations` is a single number, then\n *     `dilationHeight == dilationWidth`.\n */\nfunction computeDilation2DInfo(inputShape, filterShape, strides, pad, dataFormat = 'NHWC', dilations) {\n    // `computerConv2DInfo` require filterShape to be in the dimension of:\n    // `[filterHeight, filterWidth, depth, outDepth]`, dilation2d doesn't have\n    // outDepth, it should have the same depth as the input.\n    // Input shape: [batch, height, width, inChannels]\n    const inputChannels = inputShape[3];\n    const $filterShape = [...filterShape, inputChannels];\n    const $dataFormat = convertConv2DDataFormat(dataFormat);\n    return computeConv2DInfo(inputShape, $filterShape, strides, dilations, pad, null /* roundingMode */, null /* depthWise */, $dataFormat);\n}\nfunction computePool2DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat = 'channelsLast') {\n    const [filterHeight, filterWidth] = parseTupleParam(filterSize);\n    let filterShape;\n    if (dataFormat === 'channelsLast') {\n        filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    return computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, false, dataFormat);\n}\n/**\n * Computes the information for a forward pass of a pooling3D operation.\n */\nfunction computePool3DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat = 'NDHWC') {\n    const [filterDepth, filterHeight, filterWidth] = parse3TupleParam(filterSize);\n    let filterShape;\n    let $dataFormat;\n    if (dataFormat === 'NDHWC') {\n        $dataFormat = 'channelsLast';\n        filterShape =\n            [filterDepth, filterHeight, filterWidth, inShape[4], inShape[4]];\n    }\n    else if (dataFormat === 'NCDHW') {\n        $dataFormat = 'channelsFirst';\n        filterShape =\n            [filterDepth, filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    return computeConv3DInfo(inShape, filterShape, strides, dilations, pad, false, $dataFormat, roundingMode);\n}\n/**\n * Computes the information for a forward pass of a convolution/pooling\n * operation.\n */\nfunction computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, depthwise = false, dataFormat = 'channelsLast') {\n    let [batchSize, inHeight, inWidth, inChannels] = [-1, -1, -1, -1];\n    if (dataFormat === 'channelsLast') {\n        [batchSize, inHeight, inWidth, inChannels] = inShape;\n    }\n    else if (dataFormat === 'channelsFirst') {\n        [batchSize, inChannels, inHeight, inWidth] = inShape;\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    const [filterHeight, filterWidth, , filterChannels] = filterShape;\n    const [strideHeight, strideWidth] = parseTupleParam(strides);\n    const [dilationHeight, dilationWidth] = parseTupleParam(dilations);\n    const effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    const effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    const { padInfo, outHeight, outWidth } = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight, effectiveFilterWidth, roundingMode, dataFormat);\n    const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    let outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize,\n        dataFormat,\n        inHeight,\n        inWidth,\n        inChannels,\n        outHeight,\n        outWidth,\n        outChannels,\n        padInfo,\n        strideHeight,\n        strideWidth,\n        filterHeight,\n        filterWidth,\n        effectiveFilterHeight,\n        effectiveFilterWidth,\n        dilationHeight,\n        dilationWidth,\n        inShape,\n        outShape,\n        filterShape\n    };\n}\n/**\n * Computes the information for a forward pass of a 3D convolution/pooling\n * operation.\n */\nfunction computeConv3DInfo(inShape, filterShape, strides, dilations, pad, depthwise = false, dataFormat = 'channelsLast', roundingMode) {\n    let [batchSize, inDepth, inHeight, inWidth, inChannels] = [-1, -1, -1, -1, -1];\n    if (dataFormat === 'channelsLast') {\n        [batchSize, inDepth, inHeight, inWidth, inChannels] = inShape;\n    }\n    else if (dataFormat === 'channelsFirst') {\n        [batchSize, inChannels, inDepth, inHeight, inWidth] = inShape;\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    const [filterDepth, filterHeight, filterWidth, , filterChannels] = filterShape;\n    const [strideDepth, strideHeight, strideWidth] = parse3TupleParam(strides);\n    const [dilationDepth, dilationHeight, dilationWidth] = parse3TupleParam(dilations);\n    const effectiveFilterDepth = getEffectiveFilterSize(filterDepth, dilationDepth);\n    const effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    const effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    const { padInfo, outDepth, outHeight, outWidth } = get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, effectiveFilterDepth, effectiveFilterHeight, effectiveFilterWidth, roundingMode);\n    const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    let outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outDepth, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outDepth, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize,\n        dataFormat,\n        inDepth,\n        inHeight,\n        inWidth,\n        inChannels,\n        outDepth,\n        outHeight,\n        outWidth,\n        outChannels,\n        padInfo,\n        strideDepth,\n        strideHeight,\n        strideWidth,\n        filterDepth,\n        filterHeight,\n        filterWidth,\n        effectiveFilterDepth,\n        effectiveFilterHeight,\n        effectiveFilterWidth,\n        dilationDepth,\n        dilationHeight,\n        dilationWidth,\n        inShape,\n        outShape,\n        filterShape\n    };\n}\nfunction computeOutputShape2D(inShape, fieldSize, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    const inputRows = inShape[0];\n    const inputCols = inShape[1];\n    const outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    return [outputRows, outputCols];\n}\nfunction computeOutputShape4D(inShape, fieldSize, outChannels, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    const inputDepth = inShape[0];\n    const inputRows = inShape[1];\n    const inputCols = inShape[2];\n    const outputDepths = round((inputDepth - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    return [outputDepths, outputRows, outputCols, outChannels];\n}\nfunction computeDefaultPad(inputShape, fieldSize, stride, dilation = 1) {\n    const effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n    return Math.floor((inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\nfunction parseTupleParam(param) {\n    if (typeof param === 'number') {\n        return [param, param, param];\n    }\n    if (param.length === 2) {\n        return [param[0], param[1], 1];\n    }\n    return param;\n}\nfunction parse3TupleParam(param) {\n    return typeof param === 'number' ? [param, param, param] : param;\n}\n/* See https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d\n * Atrous convolution is equivalent to standard convolution with upsampled\n * filters with effective_filter_height =\n * filter_height + (filter_height - 1) * (dilation - 1)\n * and effective_filter_width =\n * filter_width + (filter_width - 1) * (dilation - 1),\n * produced by inserting dilation - 1 zeros along consecutive elements across\n * the filters' spatial dimensions.\n * When there is a dilation, this converts a filter dimension to the\n * effective filter dimension, so it can be used in a standard convolution.\n */\nfunction getEffectiveFilterSize(filterSize, dilation) {\n    if (dilation <= 1) {\n        return filterSize;\n    }\n    return filterSize + (filterSize - 1) * (dilation - 1);\n}\nfunction getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth, roundingMode, dataFormat) {\n    let padInfo;\n    let outHeight;\n    let outWidth;\n    if (typeof pad === 'number') {\n        const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = { top: pad, bottom: pad, left: pad, right: pad, type: padType };\n        const outShape = computeOutputShape2D([inHeight, inWidth], filterHeight, strideHeight, pad, roundingMode);\n        outHeight = outShape[0];\n        outWidth = outShape[1];\n    }\n    else if (pad === 'same') {\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        const padAlongHeight = Math.max(0, (outHeight - 1) * strideHeight + filterHeight - inHeight);\n        const padAlongWidth = Math.max(0, (outWidth - 1) * strideWidth + filterWidth - inWidth);\n        const top = Math.floor(padAlongHeight / 2);\n        const bottom = padAlongHeight - top;\n        const left = Math.floor(padAlongWidth / 2);\n        const right = padAlongWidth - left;\n        padInfo = { top, bottom, left, right, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = { top: 0, bottom: 0, left: 0, right: 0, type: 'VALID' };\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else if (typeof pad === 'object') {\n        const top = dataFormat === 'channelsLast' ? pad[1][0] : pad[2][0];\n        const bottom = dataFormat === 'channelsLast' ? pad[1][1] : pad[2][1];\n        const left = dataFormat === 'channelsLast' ? pad[2][0] : pad[3][0];\n        const right = dataFormat === 'channelsLast' ? pad[2][1] : pad[3][1];\n        const padType = (top === 0 && bottom === 0 && left === 0 && right === 0) ?\n            'VALID' :\n            'EXPLICIT';\n        padInfo = { top, bottom, left, right, type: padType };\n        outHeight = round((inHeight - filterHeight + top + bottom) / strideHeight + 1, roundingMode);\n        outWidth = round((inWidth - filterWidth + left + right) / strideWidth + 1, roundingMode);\n    }\n    else {\n        throw Error(`Unknown padding parameter: ${pad}`);\n    }\n    return { padInfo, outHeight, outWidth };\n}\nfunction get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, filterDepth, filterHeight, filterWidth, roundingMode) {\n    let padInfo;\n    let outDepth;\n    let outHeight;\n    let outWidth;\n    if (typeof pad === 'number') {\n        const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = {\n            top: pad,\n            bottom: pad,\n            left: pad,\n            right: pad,\n            front: pad,\n            back: pad,\n            type: padType\n        };\n        const outShape = computeOutputShape4D([inDepth, inHeight, inWidth, 1], filterDepth, 1, strideDepth, pad, roundingMode);\n        outDepth = outShape[0];\n        outHeight = outShape[1];\n        outWidth = outShape[2];\n    }\n    else if (pad === 'same') {\n        outDepth = Math.ceil(inDepth / strideDepth);\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        const padAlongDepth = (outDepth - 1) * strideDepth + filterDepth - inDepth;\n        const padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;\n        const padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n        const front = Math.floor(padAlongDepth / 2);\n        const back = padAlongDepth - front;\n        const top = Math.floor(padAlongHeight / 2);\n        const bottom = padAlongHeight - top;\n        const left = Math.floor(padAlongWidth / 2);\n        const right = padAlongWidth - left;\n        padInfo = { top, bottom, left, right, front, back, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            front: 0,\n            back: 0,\n            type: 'VALID'\n        };\n        outDepth = Math.ceil((inDepth - filterDepth + 1) / strideDepth);\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else {\n        throw Error(`Unknown padding parameter: ${pad}`);\n    }\n    return { padInfo, outDepth, outHeight, outWidth };\n}\n/**\n * Rounds a value depending on the rounding mode\n * @param value\n * @param roundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction round(value, roundingMode) {\n    if (!roundingMode) {\n        return Math.trunc(value);\n    }\n    switch (roundingMode) {\n        case 'round':\n            // used for Caffe Conv\n            return Math.round(value);\n        case 'ceil':\n            // used for Caffe Pool\n            return Math.ceil(value);\n        case 'floor':\n            return Math.floor(value);\n        default:\n            throw new Error(`Unknown roundingMode ${roundingMode}`);\n    }\n}\nfunction tupleValuesAreOne(param) {\n    const [dimA, dimB, dimC] = parseTupleParam(param);\n    return dimA === 1 && dimB === 1 && dimC === 1;\n}\nfunction eitherStridesOrDilationsAreOne(strides, dilations) {\n    return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n/**\n * Convert Conv2D dataFormat from 'NHWC'|'NCHW' to\n *    'channelsLast'|'channelsFirst'\n * @param dataFormat in 'NHWC'|'NCHW' mode\n * @return dataFormat in 'channelsLast'|'channelsFirst' mode\n * @throws unknown dataFormat\n */\nfunction convertConv2DDataFormat(dataFormat) {\n    if (dataFormat === 'NHWC') {\n        return 'channelsLast';\n    }\n    else if (dataFormat === 'NCHW') {\n        return 'channelsFirst';\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n}\n//# sourceMappingURL=conv_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cos\": () => (/* binding */ cos)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes cos of the input `tf.Tensor` element-wise: `cos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.cos().print();  // or tf.cos(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction cos_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'cos');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Cos, inputs);\n}\nconst cos = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ cos_ });\n//# sourceMappingURL=cos.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cosh\": () => (/* binding */ cosh)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes hyperbolic cos of the input `tf.Tensor` element-wise: `cosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.cosh().print();  // or tf.cosh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction cosh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'cosh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Cosh, inputs);\n}\nconst cosh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ cosh_ });\n//# sourceMappingURL=cosh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cumsum\": () => (/* binding */ cumsum)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the cumulative sum of a `tf.Tensor` along `axis`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4]);\n * x.cumsum().print();\n * ```\n * ```js\n * const x = tf.tensor([[1, 2], [3, 4]]);\n * x.cumsum().print();\n * ```\n *\n * @param x The input tensor to be summed.\n * @param axis The axis along which to sum. Optional. Defaults to 0.\n * @param exclusive Whether to perform exclusive cumulative sum. Optional.\n *     Defaults to false. If set to true then the sum of each tensor entry\n *     does not include its own value, but only the values previous to it\n *     along the specified axis.\n * @param reverse Whether to sum in the opposite direction. Optional.\n *     Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Scan'}\n */\nfunction cumsum_(x, axis = 0, exclusive = false, reverse = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'cumsum');\n    const inputs = { x: $x };\n    const attrs = { axis, exclusive, reverse };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Cumsum, inputs, attrs);\n}\nconst cumsum = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ cumsum_ });\n//# sourceMappingURL=cumsum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"denseBincount\": () => (/* binding */ denseBincount)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1 or rank 2.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n * @param binaryOutput Optional. Whether the kernel should count the appearance\n *     or number of occurrences. Defaults to False.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction denseBincount_(x, weights, size, binaryOutput = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'denseBincount');\n    const $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'denseBincount');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.dtype === 'int32', () => `Error in denseBincount: input ` +\n        `dtype must be int32, but got ${$x.dtype}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank <= 2, () => `Error in denseBincount: input must be at most rank 2, but got ` +\n        `rank ${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(size >= 0, () => `size must be non-negative, but got ${size}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($weights.size === $x.size || $weights.size === 0, () => `Error in denseBincount: weights must have the same shape as x or ` +\n        `0-length, but got x shape: ${$x.shape}, weights shape: ` +\n        `${$weights.shape}.`);\n    const inputs = { x: $x, weights: $weights };\n    const attrs = { size, binaryOutput };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.DenseBincount, inputs, attrs);\n}\nconst denseBincount = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ denseBincount_ });\n//# sourceMappingURL=dense_bincount.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthToSpace\": () => (/* binding */ depthToSpace)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Rearranges data from depth into blocks of spatial data. More specifically,\n * this op outputs a copy of the input tensor where values from the `depth`\n * dimension are moved in spatial blocks to the `height` and `width` dimensions.\n * The attr `blockSize` indicates the input block size and how the data is\n * moved.\n *\n *  - Chunks of data of size `blockSize * blockSize` from depth are rearranged\n * into non-overlapping blocks of size `blockSize x blockSize`\n *\n *  - The width the output tensor is `inputWidth * blockSize`, whereas the\n * height is `inputHeight * blockSize`\n *\n *  - The Y, X coordinates within each block of the output image are determined\n * by the high order component of the input channel index\n *\n *  - The depth of the input tensor must be divisible by `blockSize *\n * blockSize`\n *\n * The `dataFormat` attr specifies the layout of the input and output tensors\n * with the following options: \"NHWC\": [ `batch, height, width, channels` ]\n * \"NCHW\": [ `batch, channels, height, width` ]\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 1, 1, 4]);\n * const blockSize = 2;\n * const dataFormat = \"NHWC\";\n *\n * tf.depthToSpace(x, blockSize, dataFormat).print();\n * ```\n *\n * @param x The input tensor of rank 4\n * @param blockSIze  An `int` that is `>= 2`. The size of the spatial block\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to \"NHWC\"\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction depthToSpace_(x, blockSize, dataFormat = 'NHWC') {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'depthToSpace');\n    const inputHeight = (dataFormat === 'NHWC') ? $x.shape[1] : $x.shape[2];\n    const inputWidth = (dataFormat === 'NHWC') ? $x.shape[2] : $x.shape[3];\n    const inputDepth = (dataFormat === 'NHWC') ? $x.shape[3] : $x.shape[1];\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(inputHeight * blockSize >= 0, () => `Negative dimension size caused by overflow when multiplying\n    ${inputHeight} and ${blockSize}  for depthToSpace with input shape\n    ${$x.shape}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(inputWidth * blockSize >= 0, () => `Negative dimension size caused by overflow when multiplying\n    ${inputWidth} and ${blockSize} for depthToSpace with input shape\n        ${$x.shape}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert((inputDepth % (blockSize * blockSize) === 0), () => `Dimension size must be evenly divisible by ${blockSize * blockSize} but is ${inputDepth} for depthToSpace with input shape ${$x.shape}`);\n    const inputs = { x: $x };\n    const attrs = { blockSize, dataFormat };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.DepthToSpace, inputs, attrs);\n}\nconst depthToSpace = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ depthToSpace_ });\n//# sourceMappingURL=depth_to_space.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2d\": () => (/* binding */ depthwiseConv2d)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Depthwise 2D convolution.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction depthwiseConv2d_(x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'depthwiseConv2d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(filter, 'filter', 'depthwiseConv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x4D.rank === 4, () => `Error in depthwiseConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert($filter.rank === 4, () => `Error in depthwiseConv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x4D.shape[3] === $filter.shape[2], () => `Error in depthwiseConv2d: number of input channels ` +\n        `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n        `filter ${$filter.shape[2]}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_3__.assert(_util__WEBPACK_IMPORTED_MODULE_3__.isInt(pad), () => `Error in depthwiseConv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.DepthwiseConv2dNative, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst depthwiseConv2d = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ depthwiseConv2d_ });\n//# sourceMappingURL=depthwise_conv2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_filter.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_filter.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2dNativeBackpropFilter\": () => (/* binding */ depthwiseConv2dNativeBackpropFilter)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction depthwiseConv2dNativeBackpropFilter_(x, dy, filterShape, strides, pad, dilations = [1, 1], dimRoundingMode) {\n    let x4D = x;\n    if (x.rank === 3) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    let dy4D = dy;\n    if (dy4D.rank === 3) {\n        dy4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    const inputs = { x: x4D, dy: dy4D };\n    const attrs = { strides, pad, dimRoundingMode, dilations, filterShape };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.DepthwiseConv2dNativeBackpropFilter, inputs, attrs);\n}\nconst depthwiseConv2dNativeBackpropFilter = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ depthwiseConv2dNativeBackpropFilter_ });\n//# sourceMappingURL=depthwise_conv2d_native_backprop_filter.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_filter.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2dNativeBackpropInput\": () => (/* binding */ depthwiseConv2dNativeBackpropInput)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction depthwiseConv2dNativeBackpropInput_(xShape, dy, filter, strides, pad, dilations = [1, 1], dimRoundingMode) {\n    let dy4D = dy;\n    let reshapedTo4D = false;\n    if (dy.rank === 3) {\n        reshapedTo4D = true;\n        dy4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    const inputs = { dy: dy4D, filter };\n    const attrs = { strides, pad, dimRoundingMode, dilations, inputShape: xShape };\n    const res = \n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.DepthwiseConv2dNativeBackpropInput, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst depthwiseConv2dNativeBackpropInput = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ depthwiseConv2dNativeBackpropInput_ });\n//# sourceMappingURL=depthwise_conv2d_native_backprop_input.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"diag\": () => (/* binding */ diag)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Returns a diagonal tensor with a given diagonal values.\n *\n * Given a diagonal, this operation returns a tensor with the diagonal and\n * everything else padded with zeros.\n *\n * Assume the input has dimensions `[D1,..., Dk]`, then the output is a tensor\n * of rank 2k with dimensions `[D1,..., Dk, D1,..., Dk]`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * tf.diag(x).print()\n * ```\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4, 5, 6, 6, 8], [4, 2])\n *\n * tf.diag(x).print()\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction diag_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'diag');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Diag, inputs);\n}\nconst diag = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ diag_ });\n//# sourceMappingURL=diag.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dilation2d\": () => (/* binding */ dilation2d)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Computes the grayscale dilation over the input `x`.\n *\n * @param x The input tensor, rank 3 or rank 4 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter tensor, rank 3, of shape\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat Specify the data format of the input and output data.\n *      Defaults to 'NHWC'. Only 'NHWC' is currently supported. With the\n *      default format \"NHWC\", the data is stored in the order of: [batch,\n *      height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     for atrous morphological dilation. Defaults to `[1, 1]`. If `dilations`\n *     is a single number, then `dilationHeight == dilationWidth`. If it is\n *     greater than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction dilation2d_(x, filter, strides, pad, dilations = [1, 1], dataFormat = 'NHWC') {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'dilation2d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(filter, 'filter', 'dilation2d');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank === 3 || $x.rank === 4, () => `Error in dilation2d: input must be rank 3 or 4, but got rank ` +\n        `${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($filter.rank === 3, () => `Error in dilation2d: filter must be rank 3, but got rank ` +\n        `${$filter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(dataFormat === 'NHWC', () => `Error in dilation2d: Only NHWC is currently supported, ` +\n        `but got dataFormat of ${dataFormat}`);\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n        reshapedTo4D = true;\n    }\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dilations };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Dilation2D, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst dilation2d = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ dilation2d_ });\n//# sourceMappingURL=dilation2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/div.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/div.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"div\": () => (/* binding */ div)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _floorDiv__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./floorDiv */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction div_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'div');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'div');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    if ($a.dtype === 'int32' && $b.dtype === 'int32') {\n        return (0,_floorDiv__WEBPACK_IMPORTED_MODULE_3__.floorDiv)($a, $b);\n    }\n    const inputs = { a: $a, b: $b };\n    const attrs = {};\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.RealDiv, inputs, attrs);\n}\nconst div = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ div_ });\n//# sourceMappingURL=div.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/div.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"divNoNan\": () => (/* binding */ divNoNan)\n/* harmony export */ });\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _where__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./where */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where.js\");\n/* harmony import */ var _zeros_like__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting. Return 0\n * if denominator is 0.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n * const c = tf.tensor1d([0, 0, 0, 0]);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n * const c = tf.scalar(0);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction divNoNan_(a, b) {\n    // TODO: Make this into its own kernel.\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(a, 'a', 'div');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(b, 'b', 'div');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_1__.makeTypesMatch)($a, $b);\n    const divResult = (0,_div__WEBPACK_IMPORTED_MODULE_2__.div)($a, $b);\n    const zeros = (0,_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(divResult);\n    const bEqualsZero = (0,_equal__WEBPACK_IMPORTED_MODULE_4__.equal)($b, zeros);\n    return (0,_where__WEBPACK_IMPORTED_MODULE_5__.where)(bEqualsZero, zeros, divResult);\n}\nconst divNoNan = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ divNoNan_ });\n//# sourceMappingURL=div_no_nan.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dot\": () => (/* binding */ dot)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Computes the dot product of two matrices and/or vectors, `t1` and `t2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor2d([[1, 2], [3, 4]]);\n * const c = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n *\n * a.dot(b).print();  // or tf.dot(a, b)\n * b.dot(a).print();\n * b.dot(c).print();\n * ```\n * @param t1 The first tensor in the dot operation.\n * @param t2 The second tensor in the dot operation.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction dot_(t1, t2) {\n    const $t1 = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(t1, 't1', 'dot');\n    const $t2 = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(t2, 't2', 'dot');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(($t1.rank === 1 || $t1.rank === 2) && ($t2.rank === 1 || $t2.rank === 2), () => `Error in dot: inputs must all be rank 1 or 2, but got ranks ` +\n        `${$t1.rank} and ${$t2.rank}.`);\n    const t1Inner = ($t1.rank === 1 ? $t1.size : $t1.shape[1]);\n    const t2Inner = ($t2.rank === 1 ? $t2.size : $t2.shape[0]);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(t1Inner === t2Inner, () => `Error in dot: inner dimensions of inputs must match, but got ` +\n        `${t1Inner} and ${t2Inner}.`);\n    if ($t1.rank === 1 && $t2.rank === 1) {\n        const t12D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t1, [1, -1]);\n        const t22D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t2, [-1, 1]);\n        const t1t2 = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_3__.matMul)(t12D, t22D);\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(t1t2, []);\n    }\n    else if ($t1.rank === 1 && $t2.rank === 2) {\n        const t12D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t1, [1, -1]);\n        const t22D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t2, [$t2.shape[0], $t2.shape[1]]);\n        const t1t2 = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_3__.matMul)(t12D, t22D);\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(t1t2, [t1t2.size]);\n    }\n    else if ($t1.rank === 2 && $t2.rank === 1) {\n        const t22D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t2, [-1, 1]);\n        const t1t2 = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_3__.matMul)($t1, t22D);\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(t1t2, [t1t2.size]);\n    }\n    else {\n        const t22D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t2, [$t2.shape[0], $t2.shape[1]]);\n        const t1t2 = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_3__.matMul)($t1, t22D);\n        return t1t2;\n    }\n}\nconst dot = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ dot_ });\n//# sourceMappingURL=dot.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dropout\": () => (/* binding */ dropout)\n/* harmony export */ });\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _dropout_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dropout_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dropout_util.js\");\n/* harmony import */ var _floor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./floor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _random_uniform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./random_uniform */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes dropout.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 2, 1]);\n * const rate = 0.75;\n * const output = tf.dropout(x, rate);\n * output.print();\n * ```\n *\n * @param x A floating point Tensor or TensorLike.\n * @param rate A float in the range [0, 1). The probability that each element\n *   of x is discarded.\n * @param noiseShape An array of numbers of type int32, representing the\n * shape for randomly generated keep/drop flags. If the noiseShape has null\n * value, it will be automatically replaced with the x's relative dimension\n * size. Optional.\n * @param seed Used to create random seeds. Optional.\n * @returns A Tensor of the same shape of x.\n *\n * @doc {heading: 'Operations', subheading: 'Dropout'}\n */\nfunction dropout_(x, rate, noiseShape, seed) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'dropout');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.dtype === 'float32', () => `x has to be a floating point tensor since it's going to be ` +\n        `scaled, but got a ${$x.dtype} tensor instead.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(rate >= 0 && rate < 1, () => `rate must be a float in the range [0, 1), but got ${rate}.`);\n    if (rate === 0) {\n        return x instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor ? $x.clone() : $x;\n    }\n    const $noiseShape = (0,_dropout_util__WEBPACK_IMPORTED_MODULE_3__.getNoiseShape)($x, noiseShape);\n    const keepProb = 1 - rate;\n    const multiplier = (0,_div__WEBPACK_IMPORTED_MODULE_4__.div)((0,_floor__WEBPACK_IMPORTED_MODULE_5__.floor)((0,_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_random_uniform__WEBPACK_IMPORTED_MODULE_7__.randomUniform)($noiseShape, 0, 1, 'float32', seed), keepProb)), keepProb);\n    return (0,_mul__WEBPACK_IMPORTED_MODULE_8__.mul)($x, multiplier);\n}\nconst dropout = (0,_operation__WEBPACK_IMPORTED_MODULE_9__.op)({ dropout_ });\n//# sourceMappingURL=dropout.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/dropout_util.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/dropout_util.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNoiseShape\": () => (/* binding */ getNoiseShape)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Normalize noise shape based on provided tensor and noise shape.\n *\n * @param x Tensor.\n * @param noiseShape The shape for the randomly generated keep/drop flags, as\n *   an array of numbers. Optional.\n * @returns Normalized noise shape.\n */\nfunction getNoiseShape(x, noiseShape) {\n    if (noiseShape == null) {\n        return x.shape.slice();\n    }\n    if (_util__WEBPACK_IMPORTED_MODULE_0__.arraysEqual(x.shape, noiseShape)) {\n        return noiseShape;\n    }\n    if (x.shape.length === noiseShape.length) {\n        const newDimension = [];\n        for (let i = 0; i < x.shape.length; i++) {\n            if (noiseShape[i] == null && x.shape[i] != null) {\n                newDimension.push(x.shape[i]);\n            }\n            else {\n                newDimension.push(noiseShape[i]);\n            }\n        }\n        return newDimension;\n    }\n    return noiseShape;\n}\n//# sourceMappingURL=dropout_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/dropout_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/einsum.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/einsum.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"einsum_\": () => (/* binding */ einsum_),\n/* harmony export */   \"einsum\": () => (/* binding */ einsum)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Tensor contraction over specified indices and outer product.\n *\n * `einsum` allows defining Tensors by defining their element-wise computation.\n * This computation is based on\n * [Einstein summation](https://en.wikipedia.org/wiki/Einstein_notation).\n *\n * Some special cases include:\n *\n * Matrix multiplication:\n * ```js\n * const x = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n * const y = tf.tensor2d([[0, 1], [2, 3], [4, 5]]);\n * x.print();\n * y.print();\n * tf.einsum('ij,jk->ik', x, y).print();\n * ```\n *\n * Dot product:\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n * const y = tf.tensor1d([0, 1, 2]);\n * x.print();\n * y.print();\n * tf.einsum('i,i->', x, y).print();\n * ```\n *\n * Batch dot product:\n * ```js\n * const x = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n * const y = tf.tensor2d([[0, 1, 2], [3, 4, 5]]);\n * x.print();\n * y.print();\n * tf.einsum('bi,bi->b', x, y).print();\n * ```\n *\n * Outer prouduct:\n * ```js\n * const x = tf.tensor1d([1, 3, 5]);\n * const y = tf.tensor1d([2, 4, 6]);\n * x.print();\n * y.print();\n * tf.einsum('i,j->ij', x, y).print();\n * ```\n *\n * Matrix transpose:\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * x.print();\n * tf.einsum('ij->ji', x).print();\n * ```\n *\n * Batch matrix transpose:\n * ```js\n * const x = tf.tensor3d([[[1, 2], [3, 4]], [[-1, -2], [-3, -4]]]);\n * x.print();\n * tf.einsum('bij->bji', x).print();\n * ```\n *\n * Limitations:\n *\n * This implementation of einsum has the following limitations:\n *\n * - Does not support >2 input tensors.\n * - Does not support duplicate axes for any given input tensor. E.g., equation\n *   'ii->' is not suppoted.\n * - The `...` notation is not supported.\n *\n * @param equation a string describing the contraction, in the same format as\n * [numpy.einsum](https://numpy.org/doc/stable/reference/generated/numpy.einsum.html).\n * @param tensors the input(s) to contract (each one a Tensor), whose shapes\n *     should be consistent with equation.\n * @returns The output tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Matrices'}\n */\nfunction einsum_(equation, ...tensors) {\n    const $tensors = tensors.map((t, i) => (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(t, `tensors${i}`, 'einsum'));\n    const attrs = { equation };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Einsum, $tensors, attrs);\n}\nconst einsum = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ einsum_ });\n//# sourceMappingURL=einsum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/einsum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"elu\": () => (/* binding */ elu)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes exponential linear element-wise: `x > 0 ? e ^ x - 1 : 0`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 1, -3, 2]);\n *\n * x.elu().print();  // or tf.elu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction elu_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'elu');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Elu, inputs);\n}\nconst elu = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ elu_ });\n//# sourceMappingURL=elu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"equal\": () => (/* binding */ equal)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Returns the truth value of (a == b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.equal(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction equal_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'equal', 'string_or_numeric');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'equal', 'string_or_numeric');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Equal, inputs);\n}\nconst equal = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ equal_ });\n//# sourceMappingURL=equal.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"erf\": () => (/* binding */ erf)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Computes gause error function of the input `tf.Tensor` element-wise:\n * `erf(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.erf().print(); // or tf.erf(x);\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction erf_(x) {\n    let $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'erf');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.dtype === 'int32' || $x.dtype === 'float32', () => 'Input dtype must be `int32` or `float32`.');\n    if ($x.dtype === 'int32') {\n        $x = (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($x, 'float32');\n    }\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Erf, inputs);\n}\nconst erf = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ erf_ });\n//# sourceMappingURL=erf.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ERF_P\": () => (/* binding */ ERF_P),\n/* harmony export */   \"ERF_A1\": () => (/* binding */ ERF_A1),\n/* harmony export */   \"ERF_A2\": () => (/* binding */ ERF_A2),\n/* harmony export */   \"ERF_A3\": () => (/* binding */ ERF_A3),\n/* harmony export */   \"ERF_A4\": () => (/* binding */ ERF_A4),\n/* harmony export */   \"ERF_A5\": () => (/* binding */ ERF_A5)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst ERF_P = 0.3275911;\nconst ERF_A1 = 0.254829592;\nconst ERF_A2 = -0.284496736;\nconst ERF_A3 = 1.421413741;\nconst ERF_A4 = -1.453152027;\nconst ERF_A5 = 1.061405429;\n//# sourceMappingURL=erf_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exp\": () => (/* binding */ exp)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes exponential of the input `tf.Tensor` element-wise. `e ^ x`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.exp().print();  // or tf.exp(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction exp_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'exp');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Exp, inputs);\n}\nconst exp = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ exp_ });\n//# sourceMappingURL=exp.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expandDims\": () => (/* binding */ expandDims)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n * into the tensor's shape.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const axis = 1;\n * x.expandDims(axis).print();\n * ```\n *\n * @param x The input tensor whose dimensions to be expanded.\n * @param axis The dimension index at which to insert shape of `1`. Defaults\n *     to 0 (the first dimension).\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction expandDims_(x, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'expandDims', 'string_or_numeric');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(axis <= $x.rank, () => 'Axis must be <= rank of the tensor');\n    const inputs = { input: $x };\n    const attrs = { dim: axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.ExpandDims, inputs, attrs);\n}\nconst expandDims = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ expandDims_ });\n//# sourceMappingURL=expand_dims.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expm1\": () => (/* binding */ expm1)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes exponential of the input `tf.Tensor` minus one element-wise.\n * `e ^ x - 1`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.expm1().print();  // or tf.expm1(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction expm1_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'expm1');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Expm1, inputs);\n}\nconst expm1 = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ expm1_ });\n//# sourceMappingURL=expm1.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eye\": () => (/* binding */ eye)\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _expand_dims__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./expand_dims */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _tile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tile */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Create an identity matrix.\n *\n * @param numRows Number of rows.\n * @param numColumns Number of columns. Defaults to `numRows`.\n * @param batchShape If provided, will add the batch shape to the beginning\n *   of the shape of the returned `tf.Tensor` by repeating the identity\n *   matrix.\n * @param dtype Data type.\n * @returns Identity matrix of the specified size and data type, possibly\n *   with batch repetition if `batchShape` is specified.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction eye_(numRows, numColumns, batchShape, dtype = 'float32') {\n    if (numColumns == null) {\n        numColumns = numRows;\n    }\n    const buff = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__.buffer)([numRows, numColumns], dtype);\n    const n = numRows <= numColumns ? numRows : numColumns;\n    for (let i = 0; i < n; ++i) {\n        buff.set(1, i, i);\n    }\n    const out = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(buff.toTensor(), [numRows, numColumns]);\n    if (batchShape == null) {\n        return out;\n    }\n    else {\n        if (batchShape.length === 1) {\n            return (0,_tile__WEBPACK_IMPORTED_MODULE_2__.tile)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)(out, 0), [batchShape[0], 1, 1]);\n        }\n        else if (batchShape.length === 2) {\n            // tslint:disable-next-line:no-unnecessary-type-assertion\n            return (0,_tile__WEBPACK_IMPORTED_MODULE_2__.tile)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)(out, 0), 0), [batchShape[0], batchShape[1], 1, 1]);\n        }\n        else if (batchShape.length === 3) {\n            // tslint:disable-next-line:no-unnecessary-type-assertion\n            return (0,_tile__WEBPACK_IMPORTED_MODULE_2__.tile)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)(out, 0), 0), 0), [\n                batchShape[0], batchShape[1], batchShape[2], 1, 1\n            ]);\n        }\n        else {\n            throw new Error(`eye() currently supports only 1D and 2D ` +\n                // tslint:disable-next-line:no-any\n                `batchShapes, but received ${batchShape.length}D.`);\n        }\n    }\n}\nconst eye = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ eye_ });\n//# sourceMappingURL=eye.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fill\": () => (/* binding */ fill)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Creates a `tf.Tensor` filled with a scalar value.\n *\n * ```js\n * tf.fill([2, 2], 4).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param value The scalar value to fill the tensor with.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n * 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction fill(shape, value, dtype) {\n    const attrs = { shape, value, dtype };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_1__.Fill, {}, attrs);\n}\n\n//# sourceMappingURL=fill.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floor\": () => (/* binding */ floor)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes floor of input `tf.Tensor` element-wise: `floor(x)`.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.floor().print();  // or tf.floor(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction floor_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'floor');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Floor, inputs);\n}\nconst floor = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ floor_ });\n//# sourceMappingURL=floor.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floorDiv\": () => (/* binding */ floorDiv)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n * The result is rounded with floor function.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.floorDiv(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.floorDiv(b).print();  // or tf.floorDiv(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction floorDiv_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'floorDiv');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'floorDiv');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.FloorDiv, inputs);\n}\nconst floorDiv = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ floorDiv_ });\n//# sourceMappingURL=floorDiv.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2d\": () => (/* binding */ conv2d)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _conv2d__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js\");\n/* harmony import */ var _conv2d_backprop_filter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../conv2d_backprop_filter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_filter.js\");\n/* harmony import */ var _conv2d_backprop_input__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../conv2d_backprop_input */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _fused_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fused_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes a 2D convolution over the input x, optionally fused with adding a\n * bias and applying an activation.\n *\n * ```js\n * const inputDepth = 2;\n * const inShape = [2, 2, 2, inputDepth];\n * const outputDepth = 2;\n * const fSize = 1;\n * const pad = 0;\n * const strides = 1;\n *\n * const x = tf.tensor4d( [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n * 16], inShape);\n * const w = tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth,\n * outputDepth]);\n *\n * tf.fused.conv2d({ x, filter: w, strides, pad, dataFormat: 'NHWC',\n * dilations: [1, 1], bias: tf.scalar(5), activation: 'relu' }).print();\n * ```\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid` output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`) to be\n *     applied\n *      after biasAdd.\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\nfunction fusedConv2d_({ x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode, bias, activation = 'linear', preluActivationWeights, leakyreluAlpha }) {\n    activation = activation || 'linear';\n    if ((0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.shouldFuse)(_engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.state.gradientDepth, activation) === false) {\n        let result = (0,_conv2d__WEBPACK_IMPORTED_MODULE_2__.conv2d)(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n        if (bias != null) {\n            result = (0,_add__WEBPACK_IMPORTED_MODULE_3__.add)(result, bias);\n        }\n        return (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.applyActivation)(result, activation, preluActivationWeights, leakyreluAlpha);\n    }\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(x, 'x', 'conv2d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(filter, 'filter', 'conv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(x4D.rank === 4, () => `Error in fused conv2d: input must be rank 4, but got rank ` +\n        `${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert($filter.rank === 4, () => `Error in fused conv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_6__.assert(_util__WEBPACK_IMPORTED_MODULE_6__.isInt(pad), () => `Error in fused conv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(x4D.shape[3] === $filter.shape[2], () => `Error in conv2d: depth of input (${x4D.shape[3]}) must match ` +\n        `input depth for filter ${$filter.shape[2]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_7__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(dataFormat === 'NHWC', () => `Error in conv2d: got dataFormat of ${dataFormat} but only NHWC is currently supported.`);\n    const convInfo = _conv_util__WEBPACK_IMPORTED_MODULE_7__.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode);\n    let $bias;\n    if (bias != null) {\n        $bias = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(bias, 'bias', 'fused conv2d');\n        [$bias] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_8__.makeTypesMatch)($bias, $x);\n        _broadcast_util__WEBPACK_IMPORTED_MODULE_9__.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n    }\n    let $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(preluActivationWeights, 'prelu weights', 'fused conv2d');\n    }\n    const grad = (dy, saved) => {\n        const [$filter, x4D, y, $bias] = saved;\n        const dyActivation = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedDyActivation)(dy, y, activation);\n        _util__WEBPACK_IMPORTED_MODULE_6__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_7__.tupleValuesAreOne(dilations), () => 'Error in gradient of fused conv2D: ' +\n            `dilation rates greater than 1 ` +\n            `are not yet supported in gradients. Got dilations '${dilations}'`);\n        const xDer = (0,_conv2d_backprop_input__WEBPACK_IMPORTED_MODULE_10__.conv2DBackpropInput)(x4D.shape, dyActivation, $filter, strides, pad);\n        const filterDer = (0,_conv2d_backprop_filter__WEBPACK_IMPORTED_MODULE_11__.conv2DBackpropFilter)(x4D, dyActivation, $filter.shape, strides, pad);\n        const der = [xDer, filterDer];\n        if ($bias != null) {\n            const biasDer = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedBiasGradient)($bias, dyActivation);\n            der.push(biasDer);\n        }\n        return der;\n    };\n    const inputs = {\n        x: x4D,\n        filter: $filter,\n        bias: $bias,\n        preluActivationWeights: $preluActivationWeights\n    };\n    const attrs = {\n        strides,\n        pad,\n        dataFormat,\n        dilations,\n        dimRoundingMode,\n        activation,\n        leakyreluAlpha\n    };\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n        const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_12__.customGrad)((x4D, filter, save) => {\n            let res = \n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_13__.FusedConv2D, inputs, attrs);\n            save([filter, x4D, res]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOp(x4D, $filter);\n    }\n    else {\n        const customOpWithBias = (0,_gradients__WEBPACK_IMPORTED_MODULE_12__.customGrad)((x4D, filter, bias, save) => {\n            let res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_13__.FusedConv2D, inputs, attrs);\n            save([filter, x4D, res, bias]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOpWithBias(x4D, $filter, $bias);\n    }\n}\nconst conv2d = (0,_operation__WEBPACK_IMPORTED_MODULE_14__.op)({ fusedConv2d_ });\n//# sourceMappingURL=conv2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2d\": () => (/* binding */ depthwiseConv2d)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _depthwise_conv2d__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../depthwise_conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js\");\n/* harmony import */ var _depthwise_conv2d_native_backprop_filter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../depthwise_conv2d_native_backprop_filter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_filter.js\");\n/* harmony import */ var _depthwise_conv2d_native_backprop_input__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../depthwise_conv2d_native_backprop_input */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js\");\n/* harmony import */ var _fused_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fused_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes depthwise 2D convolution, optionally fused with adding a\n * bias and applying an activation.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`).\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\nfunction fusedDepthwiseConv2d_({ x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode, bias, activation = 'linear', preluActivationWeights, leakyreluAlpha }) {\n    if ((0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.shouldFuse)(_engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.state.gradientDepth, activation) === false) {\n        let result = (0,_depthwise_conv2d__WEBPACK_IMPORTED_MODULE_2__.depthwiseConv2d)(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n        if (bias != null) {\n            result = (0,_add__WEBPACK_IMPORTED_MODULE_3__.add)(result, bias);\n        }\n        return (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.applyActivation)(result, activation, preluActivationWeights, leakyreluAlpha);\n    }\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(x, 'x', 'depthwiseConv2d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(filter, 'filter', 'depthwiseConv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(x4D.rank === 4, () => `Error in fused depthwiseConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert($filter.rank === 4, () => `Error in fused depthwiseConv2d: filter must be rank 4, ` +\n        `but got rank ${$filter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(x4D.shape[3] === $filter.shape[2], () => `Error in fused depthwiseConv2d: number of input channels ` +\n        `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n        `filter ${$filter.shape[2]}.`);\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_7__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in fused depthwiseConv2d: Either strides or dilations must ' +\n        `be 1. Got strides ${strides} and dilations '${dilations}'`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_6__.assert(_util__WEBPACK_IMPORTED_MODULE_6__.isInt(pad), () => `Error in fused depthwiseConv2d: pad must be an integer when ` +\n            `using dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const convInfo = _conv_util__WEBPACK_IMPORTED_MODULE_7__.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    let $bias;\n    if (bias != null) {\n        $bias = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(bias, 'bias', 'fused conv2d');\n        [$bias] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_8__.makeTypesMatch)($bias, $x);\n        _broadcast_util__WEBPACK_IMPORTED_MODULE_9__.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n    }\n    let $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(preluActivationWeights, 'prelu weights', 'fused depthwiseConv2d');\n    }\n    const grad = (dy, saved) => {\n        _util__WEBPACK_IMPORTED_MODULE_6__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_7__.tupleValuesAreOne(dilations), () => 'Error in gradient of fused depthwiseConv2d: dilation rates ' +\n            `greater than 1 are not yet supported. Got dilations ` +\n            `'${dilations}'`);\n        const [$filter, x4D, y, bias] = saved;\n        const dyActivation = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedDyActivation)(dy, y, activation);\n        const xDer = (0,_depthwise_conv2d_native_backprop_input__WEBPACK_IMPORTED_MODULE_10__.depthwiseConv2dNativeBackpropInput)(x4D.shape, dyActivation, $filter, strides, pad, dilations, dimRoundingMode);\n        const filterDer = (0,_depthwise_conv2d_native_backprop_filter__WEBPACK_IMPORTED_MODULE_11__.depthwiseConv2dNativeBackpropFilter)(x4D, dyActivation, $filter.shape, strides, pad, dilations, dimRoundingMode);\n        if (bias != null) {\n            const biasDer = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedBiasGradient)($bias, dyActivation);\n            return [xDer, filterDer, biasDer];\n        }\n        return [xDer, filterDer];\n    };\n    const inputs = {\n        x: x4D,\n        filter: $filter,\n        bias: $bias,\n        preluActivationWeights: $preluActivationWeights\n    };\n    const attrs = {\n        strides,\n        pad,\n        dataFormat,\n        dilations,\n        dimRoundingMode,\n        activation,\n        leakyreluAlpha\n    };\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n        const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_12__.customGrad)((x4D, filter, save) => {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            let res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_13__.FusedDepthwiseConv2D, inputs, attrs);\n            save([filter, x4D, res]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOp(x4D, $filter);\n    }\n    else {\n        const customOpWithBias = (0,_gradients__WEBPACK_IMPORTED_MODULE_12__.customGrad)((x4D, filter, bias, save) => {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            let res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_13__.FusedDepthwiseConv2D, inputs, attrs);\n            save([filter, x4D, res, bias]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOpWithBias(x4D, $filter, $bias);\n    }\n}\nconst depthwiseConv2d = (0,_operation__WEBPACK_IMPORTED_MODULE_14__.op)({ fusedDepthwiseConv2d_ });\n//# sourceMappingURL=depthwise_conv2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"matMul\": () => (/* binding */ matMul)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _fused_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fused_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the dot product of two matrices with optional activation and bias.\n *\n * ```js\n * const a = tf.tensor2d([-1, -2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const bias = tf.tensor2d([1, 2], [1, 2]);\n *\n * tf.fused.matMul({a, b, bias, activation: 'relu'}).print();\n * ```\n *\n * @param obj An object with the following properties:\n * - `a` First matrix in dot product operation.\n * - `b` Second matrix in dot product operation.\n * - `transposeA` If true, `a` is transposed before multiplication.\n * - `transposeB` If true, `b` is transposed before multiplication.\n * - `bias` Matrix to be added to the result.\n * - `activation` Name of activation kernel (defaults to `linear`).\n * - `preluActivationWeights` Tensor of prelu weights.\n * - `leakyreluAlpha` Alpha of leakyrelu.\n */\nfunction fusedMatMul_({ a, b, transposeA = false, transposeB = false, bias, activation = 'linear', preluActivationWeights, leakyreluAlpha, }) {\n    if ((0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.shouldFuse)(_engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.state.gradientDepth, activation) === false) {\n        let result = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(a, b, transposeA, transposeB);\n        if (bias != null) {\n            result = (0,_add__WEBPACK_IMPORTED_MODULE_3__.add)(result, bias);\n        }\n        return (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.applyActivation)(result, activation, preluActivationWeights, leakyreluAlpha);\n    }\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(a, 'a', 'fused matMul');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(b, 'b', 'fused matMul');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_5__.makeTypesMatch)($a, $b);\n    const innerShapeA = transposeA ? $a.shape[$a.rank - 2] : $a.shape[$a.rank - 1];\n    const innerShapeB = transposeB ? $b.shape[$b.rank - 1] : $b.shape[$b.rank - 2];\n    const outerShapeA = transposeA ? $a.shape[$a.rank - 1] : $a.shape[$a.rank - 2];\n    const outerShapeB = transposeB ? $b.shape[$b.rank - 2] : $b.shape[$b.rank - 1];\n    const outerDimsA = $a.shape.slice(0, -2);\n    const outerDimsB = $b.shape.slice(0, -2);\n    const batchDimA = _util__WEBPACK_IMPORTED_MODULE_6__.sizeFromShape(outerDimsA);\n    const batchDimB = _util__WEBPACK_IMPORTED_MODULE_6__.sizeFromShape(outerDimsB);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert($a.rank >= 2 && $b.rank >= 2 && $a.rank === $b.rank, () => `Error in fused matMul: inputs must have the same rank of at ` +\n        `least 2, got ranks ${$a.rank} and ${$b.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(_util__WEBPACK_IMPORTED_MODULE_6__.arraysEqual(outerDimsA, outerDimsB), () => `Error in fused matMul: outer dimensions (${outerDimsA}) and (` +\n        `${outerDimsB}) of Tensors with shapes ${$a.shape} and ` +\n        `${$b.shape} must match.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(innerShapeA === innerShapeB, () => `Error in fused matMul: inner shapes (${innerShapeA}) and (` +\n        `${innerShapeB}) of Tensors with shapes ${$a.shape} and ` +\n        `${$b.shape} and transposeA=${transposeA}` +\n        ` and transposeB=${transposeB} must match.`);\n    const outShape = $a.shape.slice(0, -2).concat([outerShapeA, outerShapeB]);\n    const a3D = transposeA ?\n        (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)($a, [batchDimA, innerShapeA, outerShapeA]) :\n        (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)($a, [batchDimA, outerShapeA, innerShapeA]);\n    const b3D = transposeB ?\n        (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)($b, [batchDimB, outerShapeB, innerShapeB]) :\n        (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)($b, [batchDimB, innerShapeB, outerShapeB]);\n    let $bias;\n    if (bias != null) {\n        $bias = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(bias, 'bias', 'fused matMul');\n        [$bias] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_5__.makeTypesMatch)($bias, $a);\n        _broadcast_util__WEBPACK_IMPORTED_MODULE_8__.assertAndGetBroadcastShape(outShape, $bias.shape);\n    }\n    let $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(preluActivationWeights, 'prelu weights', 'fused matMul');\n    }\n    const grad = (dy, saved) => {\n        const [a3D, b3D, y, $bias] = saved;\n        // we reshape dy because the result of the forward is not\n        // necessarily going to be a 3d tensor due to a reshape done at the end of\n        // the customOp.\n        const dyActivation = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedDyActivation)((0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)(dy, y.shape), y, activation);\n        let aDer;\n        let bDer;\n        if (!transposeA && !transposeB) {\n            aDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(dyActivation, b3D, false, true);\n            bDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(a3D, dyActivation, true, false);\n        }\n        else if (!transposeA && transposeB) {\n            aDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(dyActivation, b3D, false, false);\n            bDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(dyActivation, a3D, true, false);\n        }\n        else if (transposeA && !transposeB) {\n            aDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(b3D, dyActivation, false, true);\n            bDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(a3D, dyActivation, false, false);\n        }\n        else {\n            aDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(b3D, dyActivation, true, true);\n            bDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(dyActivation, a3D, true, true);\n        }\n        if (bias != null) {\n            const biasDer = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedBiasGradient)($bias, dyActivation);\n            return [aDer, bDer, biasDer];\n        }\n        else {\n            return [aDer, bDer];\n        }\n    };\n    const inputs = {\n        a: a3D,\n        b: b3D,\n        bias: $bias,\n        preluActivationWeights: $preluActivationWeights\n    };\n    const attrs = { transposeA, transposeB, activation, leakyreluAlpha };\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n        const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_9__.customGrad)((a3D, b3D, save) => {\n            const res = \n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_10__._FusedMatMul, inputs, attrs);\n            save([a3D, b3D, res]);\n            return { value: (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)(res, outShape), gradFunc: grad };\n        });\n        return customOp(a3D, b3D);\n    }\n    else {\n        const customOpWithBias = (0,_gradients__WEBPACK_IMPORTED_MODULE_9__.customGrad)((a3D, b3D, $bias, save) => {\n            const res = \n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_10__._FusedMatMul, inputs, attrs);\n            save([a3D, b3D, res, $bias]);\n            return { value: (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)(res, outShape), gradFunc: grad };\n        });\n        return customOpWithBias(a3D, b3D, $bias);\n    }\n}\nconst matMul = (0,_operation__WEBPACK_IMPORTED_MODULE_11__.op)({ fusedMatMul_ });\n//# sourceMappingURL=mat_mul.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2d\": () => (/* reexport safe */ _fused_conv2d__WEBPACK_IMPORTED_MODULE_0__.conv2d),\n/* harmony export */   \"depthwiseConv2d\": () => (/* reexport safe */ _fused_depthwise_conv2d__WEBPACK_IMPORTED_MODULE_1__.depthwiseConv2d),\n/* harmony export */   \"matMul\": () => (/* reexport safe */ _fused_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)\n/* harmony export */ });\n/* harmony import */ var _fused_conv2d__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fused/conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js\");\n/* harmony import */ var _fused_depthwise_conv2d__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fused/depthwise_conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js\");\n/* harmony import */ var _fused_mat_mul__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fused/mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n//# sourceMappingURL=fused_ops.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getFusedDyActivation\": () => (/* binding */ getFusedDyActivation),\n/* harmony export */   \"getFusedBiasGradient\": () => (/* binding */ getFusedBiasGradient),\n/* harmony export */   \"applyActivation\": () => (/* binding */ applyActivation),\n/* harmony export */   \"shouldFuse\": () => (/* binding */ shouldFuse)\n/* harmony export */ });\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _elu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./elu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js\");\n/* harmony import */ var _leaky_relu__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./leaky_relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _prelu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./prelu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js\");\n/* harmony import */ var _relu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js\");\n/* harmony import */ var _relu6__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./relu6 */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _sigmoid__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sigmoid */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js\");\n/* harmony import */ var _step__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./step */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/step.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n// Returns gradient for fused activation.\nfunction getFusedDyActivation(dy, y, activation) {\n    if (activation == null || activation === 'linear') {\n        return dy;\n    }\n    if (activation === 'relu') {\n        return (0,_mul__WEBPACK_IMPORTED_MODULE_0__.mul)(dy, (0,_step__WEBPACK_IMPORTED_MODULE_1__.step)(y));\n    }\n    throw new Error(`Cannot compute gradient for fused activation ${activation}.`);\n}\n// Returns gradient for fused bias.\nfunction getFusedBiasGradient(bias, dyActivation) {\n    let res = dyActivation;\n    const reduceAxes = _broadcast_util__WEBPACK_IMPORTED_MODULE_2__.getReductionAxes(bias.shape, dyActivation.shape);\n    if (reduceAxes.length > 0) {\n        res = (0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)(res, reduceAxes);\n    }\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_4__.reshape)(res, bias.shape);\n}\nfunction applyActivation(x, activation, preluActivationWeights, leakyreluAlpha) {\n    if (activation === 'linear') {\n        return x;\n    }\n    else if (activation === 'relu') {\n        return (0,_relu__WEBPACK_IMPORTED_MODULE_5__.relu)(x);\n    }\n    else if (activation === 'elu') {\n        return (0,_elu__WEBPACK_IMPORTED_MODULE_6__.elu)(x);\n    }\n    else if (activation === 'relu6') {\n        return (0,_relu6__WEBPACK_IMPORTED_MODULE_7__.relu6)(x);\n    }\n    else if (activation === 'prelu') {\n        return (0,_prelu__WEBPACK_IMPORTED_MODULE_8__.prelu)(x, preluActivationWeights);\n    }\n    else if (activation === 'leakyrelu') {\n        return (0,_leaky_relu__WEBPACK_IMPORTED_MODULE_9__.leakyRelu)(x, leakyreluAlpha);\n    }\n    else if (activation === 'sigmoid') {\n        return (0,_sigmoid__WEBPACK_IMPORTED_MODULE_10__.sigmoid)(x);\n    }\n    throw new Error(`Unknown fused activation ${activation}.`);\n}\n// Whether we should call fused ops.\nconst shouldFuse = (gradientDepth, activation) => {\n    const gradientMode = gradientDepth > 0;\n    return !gradientMode || activation === 'linear';\n};\n//# sourceMappingURL=fused_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gather\": () => (/* binding */ gather)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Gather slices from tensor `x`'s axis `axis` according to `indices`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const indices = tf.tensor1d([1, 3, 3], 'int32');\n *\n * x.gather(indices).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const indices = tf.tensor1d([1, 1, 0], 'int32');\n *\n * x.gather(indices).print();\n * ```\n * @param x The input tensor whose slices to be gathered.\n * @param indices The indices of the values to extract.\n * @param axis The axis over which to select values. Defaults to 0.\n * @param batchDims Optional. The number of batch dimensions. It must be less\n *     than or equal to rank(indices). Defaults to 0.\n *     The output tensor will have shape of\n *     `x.shape[:axis] + indices.shape[batchDims:] + x.shape[axis + 1:]`\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction gather_(x, indices, axis = 0, batchDims = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'gather');\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'gather', 'int32');\n    const inputs = { x: $x, indices: $indices };\n    const attrs = { axis, batchDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.GatherV2, inputs, attrs);\n}\nconst gather = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ gather_ });\n//# sourceMappingURL=gather.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gatherND\": () => (/* binding */ gatherND)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Gather slices from input tensor into a Tensor with shape specified by\n * `indices`.\n *\n * `indices` is an K-dimensional integer tensor, best thought of as a\n * (K-1)-dimensional tensor of indices into input, where each element defines a\n * slice of input:\n * output[\\\\(i_0, ..., i_{K-2}\\\\)] = input[indices[\\\\(i_0, ..., i_{K-2}\\\\)]]\n *\n * Whereas in `tf.gather`, `indices` defines slices into the first dimension of\n * input, in `tf.gatherND`, `indices` defines slices into the first N dimensions\n * of input, where N = indices.shape[-1].\n *\n * The last dimension of indices can be at most the rank of input:\n * indices.shape[-1] <= input.rank\n *\n * The last dimension of `indices` corresponds to elements\n * (if indices.shape[-1] == input.rank) or slices\n * (if indices.shape[-1] < input.rank) along dimension indices.shape[-1] of\n * input.\n * The output tensor has shape\n * indices.shape[:-1] + input.shape[indices.shape[-1]:]\n *\n * Note that on CPU, if an out of bound index is found, an error is returned. On\n * GPU, if an out of bound index is found, a 0 is stored in the corresponding\n * output value.\n *\n * ```js\n * const indices = tf.tensor2d([0, 1, 1, 0], [2,2], 'int32');\n * const input = tf.tensor2d([9, 10, 11, 12], [2, 2]);\n * tf.gatherND(input, indices).print() // [10, 11]\n * ```\n *\n * @param x The tensor from which to gather values.\n * @param indices Index tensor, must be of type int32.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction gatherND_(x, indices) {\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'gatherND', 'int32');\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'gatherND', 'string_or_numeric');\n    const inputs = { params: $x, indices: $indices };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.GatherNd, inputs);\n}\nconst gatherND = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ gatherND_ });\n//# sourceMappingURL=gather_nd.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prepareAndValidate\": () => (/* binding */ prepareAndValidate)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n\n/**\n * Validate gather nd inputs.\n *\n * @param tensor The tensor contains the source values.\n * @param indices The tensor contains the indices to slice the source.\n *\n * @returns [resultShape, numUpdates, sliceSize, strides]\n */\nfunction prepareAndValidate(tensor, indices) {\n    const tensorRank = tensor.shape.length;\n    const indicesRank = indices.shape.length;\n    if (tensorRank < 1) {\n        throw new Error('tf.gatherND() expects the input to be rank 1 or higher,' +\n            ` but the rank was ${tensorRank}.`);\n    }\n    if (indicesRank < 1) {\n        throw new Error('tf.gatherND() expects the indices to be rank 1 or higher,' +\n            ` but the rank was ${indicesRank}.`);\n    }\n    if (indices.dtype !== 'int32') {\n        throw new Error('tf.gatherND() expects the indices to be int32 type,' +\n            ` but the dtype was ${indices.dtype}.`);\n    }\n    if (indices.shape[indicesRank - 1] > tensorRank) {\n        throw new Error('index innermost dimension length must be <= tensor rank; saw: ' +\n            `${indices.shape[indicesRank - 1]} vs. ${tensorRank}`);\n    }\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape)(tensor.shape) === 0) {\n        throw new Error('Requested more than 0 entries, but input is empty.' +\n            ` Input shape: ${tensor.shape}.`);\n    }\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    // The result shape is\n    //   indices.shape[:-1] + params.shape[indices.shape[-1]:]\n    let nResult = 1;\n    for (let i = 0; i < indicesShape.length - 1; ++i) {\n        nResult *= indicesShape[i];\n    }\n    const inputShape = tensor.shape;\n    const resultShape = indicesShape.slice();\n    resultShape.pop();\n    let sliceSize = 1;\n    for (let i = sliceRank; i < tensorRank; ++i) {\n        sliceSize *= inputShape[i];\n        resultShape.push(inputShape[i]);\n    }\n    const strides = [...(0,_util__WEBPACK_IMPORTED_MODULE_0__.computeStrides)(tensor.shape).map(stride => stride / sliceSize),\n        1].slice(0, sliceRank);\n    return [resultShape, nResult, sliceSize, strides];\n}\n//# sourceMappingURL=gather_nd_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"greater\": () => (/* binding */ greater)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Returns the truth value of (a > b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greater(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greater_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'greater', 'string_or_numeric');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'greater', 'string_or_numeric');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Greater, inputs);\n}\nconst greater = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ greater_ });\n//# sourceMappingURL=greater.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"greaterEqual\": () => (/* binding */ greaterEqual)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Returns the truth value of (a >= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greaterEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greaterEqual_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'greaterEqual', 'string_or_numeric');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'greaterEqual', 'string_or_numeric');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.GreaterEqual, inputs);\n}\nconst greaterEqual = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ greaterEqual_ });\n//# sourceMappingURL=greater_equal.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"imag\": () => (/* binding */ imag)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Returns the imaginary part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the imaginary part of each element in input considered as a complex number.\n * If input is real, a tensor of all zeros is returned.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.imag(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction imag_(input) {\n    const $input = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(input, 'input', 'imag');\n    const inputs = { input: $input };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Imag, inputs);\n}\nconst imag = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ imag_ });\n//# sourceMappingURL=imag.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cropAndResize\": () => (/* binding */ cropAndResize)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Extracts crops from the input image tensor and resizes them using bilinear\n * sampling or nearest neighbor sampling (possibly with aspect ratio change)\n * to a common output size specified by cropSize.\n *\n * @param image 4d tensor of shape `[batch,imageHeight,imageWidth, depth]`,\n *     where imageHeight and imageWidth must be positive, specifying the\n *     batch of images from which to take crops\n * @param boxes 2d float32 tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the normalized\n *     coordinates of the box in the boxInd[i]'th image in the batch\n * @param boxInd 1d int32 tensor of shape `[numBoxes]` with values in range\n *     `[0, batch)` that specifies the image that the `i`-th box refers to.\n * @param cropSize 1d int32 tensor of 2 elements `[cropHeigh, cropWidth]`\n *     specifying the size to which all crops are resized to.\n * @param method Optional string from `'bilinear' | 'nearest'`,\n *     defaults to bilinear, which specifies the sampling method for resizing\n * @param extrapolationValue A threshold for deciding when to remove boxes based\n *     on score. Defaults to 0.\n * @return A 4D tensor of the shape `[numBoxes,cropHeight,cropWidth,depth]`\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction cropAndResize_(image, boxes, boxInd, cropSize, method = 'bilinear', extrapolationValue = 0) {\n    const $image = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(image, 'image', 'cropAndResize');\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(boxes, 'boxes', 'cropAndResize', 'float32');\n    const $boxInd = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(boxInd, 'boxInd', 'cropAndResize', 'int32');\n    const numBoxes = $boxes.shape[0];\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($image.rank === 4, () => 'Error in cropAndResize: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($boxes.rank === 2 && $boxes.shape[1] === 4, () => `Error in cropAndResize: boxes must be have size [${numBoxes},4] ` +\n        `but had shape ${$boxes.shape}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($boxInd.rank === 1 && $boxInd.shape[0] === numBoxes, () => `Error in cropAndResize: boxInd must be have size [${numBoxes}] ` +\n        `but had shape ${$boxes.shape}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(cropSize.length === 2, () => `Error in cropAndResize: cropSize must be of length 2, but got ` +\n        `length ${cropSize.length}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(cropSize[0] >= 1 && cropSize[1] >= 1, () => `cropSize must be atleast [1,1], but was ${cropSize}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(method === 'bilinear' || method === 'nearest', () => `method must be bilinear or nearest, but was ${method}`);\n    const inputs = { image: $image, boxes: $boxes, boxInd: $boxInd };\n    const attrs = { method, extrapolationValue, cropSize };\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.CropAndResize, inputs, attrs);\n    return res;\n}\nconst cropAndResize = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ cropAndResize_ });\n//# sourceMappingURL=crop_and_resize.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"flipLeftRight\": () => (/* binding */ flipLeftRight)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Flips the image left to right. Currently available in the CPU, WebGL, and\n * WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction flipLeftRight_(image) {\n    const $image = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(image, 'image', 'flipLeftRight', 'float32');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($image.rank === 4, () => 'Error in flipLeftRight: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    const inputs = { image: $image };\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.FlipLeftRight, inputs, {});\n    return res;\n}\nconst flipLeftRight = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ flipLeftRight_ });\n//# sourceMappingURL=flip_left_right.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppression\": () => (/* binding */ nonMaxSuppression)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppression_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(scores, 'scores', 'nonMaxSuppression');\n    const inputs = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n    maxOutputSize = inputs.maxOutputSize;\n    iouThreshold = inputs.iouThreshold;\n    scoreThreshold = inputs.scoreThreshold;\n    const attrs = { maxOutputSize, iouThreshold, scoreThreshold };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.NonMaxSuppressionV3, { boxes: $boxes, scores: $scores }, attrs);\n}\nconst nonMaxSuppression = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ nonMaxSuppression_ });\n//# sourceMappingURL=non_max_suppression.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionAsync\": () => (/* binding */ nonMaxSuppressionAsync)\n/* harmony export */ });\n/* harmony import */ var _backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../backends/non_max_suppression_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This is the async version of `nonMaxSuppression`\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scores, 'scores', 'nonMaxSuppressionAsync');\n    const inputs = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_1__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n    maxOutputSize = inputs.maxOutputSize;\n    iouThreshold = inputs.iouThreshold;\n    scoreThreshold = inputs.scoreThreshold;\n    const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n    const boxesVals = boxesAndScores[0];\n    const scoresVals = boxesAndScores[1];\n    // We call a cpu based impl directly with the typedarray data  here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices } = (0,_backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppressionV3Impl)(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return (0,_tensor1d__WEBPACK_IMPORTED_MODULE_3__.tensor1d)(selectedIndices, 'int32');\n}\nconst nonMaxSuppressionAsync = nonMaxSuppressionAsync_;\n//# sourceMappingURL=non_max_suppression_async.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionPadded\": () => (/* binding */ nonMaxSuppressionPadded)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionPadded_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, padToMaxOutputSize = false) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(scores, 'scores', 'nonMaxSuppression');\n    const params = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null /* softNmsSigma */);\n    const $maxOutputSize = params.maxOutputSize;\n    const $iouThreshold = params.iouThreshold;\n    const $scoreThreshold = params.scoreThreshold;\n    const inputs = { boxes: $boxes, scores: $scores };\n    const attrs = {\n        maxOutputSize: $maxOutputSize,\n        iouThreshold: $iouThreshold,\n        scoreThreshold: $scoreThreshold,\n        padToMaxOutputSize\n    };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.NonMaxSuppressionV4, inputs, attrs);\n    return { selectedIndices: result[0], validOutputs: result[1] };\n}\nconst nonMaxSuppressionPadded = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ nonMaxSuppressionPadded_ });\n//# sourceMappingURL=non_max_suppression_padded.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionPaddedAsync\": () => (/* binding */ nonMaxSuppressionPaddedAsync)\n/* harmony export */ });\n/* harmony import */ var _backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../backends/non_max_suppression_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionPaddedAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, padToMaxOutputSize = false) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scores, 'scores', 'nonMaxSuppressionAsync');\n    const params = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_1__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null /* softNmsSigma */);\n    const $maxOutputSize = params.maxOutputSize;\n    const $iouThreshold = params.iouThreshold;\n    const $scoreThreshold = params.scoreThreshold;\n    const [boxesVals, scoresVals] = await Promise.all([$boxes.data(), $scores.data()]);\n    // We call a cpu based impl directly with the typedarray data here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices, validOutputs } = (0,_backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppressionV4Impl)(boxesVals, scoresVals, $maxOutputSize, $iouThreshold, $scoreThreshold, padToMaxOutputSize);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return {\n        selectedIndices: (0,_tensor1d__WEBPACK_IMPORTED_MODULE_3__.tensor1d)(selectedIndices, 'int32'),\n        validOutputs: (0,_scalar__WEBPACK_IMPORTED_MODULE_4__.scalar)(validOutputs, 'int32')\n    };\n}\nconst nonMaxSuppressionPaddedAsync = nonMaxSuppressionPaddedAsync_;\n//# sourceMappingURL=non_max_suppression_padded_async.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionWithScore\": () => (/* binding */ nonMaxSuppressionWithScore)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionWithScore_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, softNmsSigma = 0.0) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(scores, 'scores', 'nonMaxSuppression');\n    const params = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    maxOutputSize = params.maxOutputSize;\n    iouThreshold = params.iouThreshold;\n    scoreThreshold = params.scoreThreshold;\n    softNmsSigma = params.softNmsSigma;\n    const inputs = { boxes: $boxes, scores: $scores };\n    const attrs = { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.NonMaxSuppressionV5, inputs, attrs);\n    return { selectedIndices: result[0], selectedScores: result[1] };\n}\nconst nonMaxSuppressionWithScore = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ nonMaxSuppressionWithScore_ });\n//# sourceMappingURL=non_max_suppression_with_score.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionWithScoreAsync\": () => (/* binding */ nonMaxSuppressionWithScoreAsync)\n/* harmony export */ });\n/* harmony import */ var _backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../backends/non_max_suppression_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionWithScoreAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, softNmsSigma = 0.0) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scores, 'scores', 'nonMaxSuppressionAsync');\n    const params = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_1__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    maxOutputSize = params.maxOutputSize;\n    iouThreshold = params.iouThreshold;\n    scoreThreshold = params.scoreThreshold;\n    softNmsSigma = params.softNmsSigma;\n    const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n    const boxesVals = boxesAndScores[0];\n    const scoresVals = boxesAndScores[1];\n    // We call a cpu based impl directly with the typedarray data  here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices, selectedScores } = (0,_backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppressionV5Impl)(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return {\n        selectedIndices: (0,_tensor1d__WEBPACK_IMPORTED_MODULE_3__.tensor1d)(selectedIndices, 'int32'),\n        selectedScores: (0,_tensor1d__WEBPACK_IMPORTED_MODULE_3__.tensor1d)(selectedScores)\n    };\n}\nconst nonMaxSuppressionWithScoreAsync = nonMaxSuppressionWithScoreAsync_;\n//# sourceMappingURL=non_max_suppression_with_score_async.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeBilinear\": () => (/* binding */ resizeBilinear)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Bilinear resize a single 3D image or a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to `false`. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assume pixel centers\n *     are at 0.5, which would make the floating point coordinates of the top\n *     left pixel 0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeBilinear_(images, size, alignCorners = false, halfPixelCenters = false) {\n    const $images = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(images, 'images', 'resizeBilinear');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($images.rank === 3 || $images.rank === 4, () => `Error in resizeBilinear: x must be rank 3 or 4, but got ` +\n        `rank ${$images.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(size.length === 2, () => `Error in resizeBilinear: new shape must 2D, but got shape ` +\n        `${size}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(halfPixelCenters === false || alignCorners === false, () => `Error in resizeBilinear: If halfPixelCenters is true, ` +\n        `alignCorners must be false.`);\n    let batchImages = $images;\n    let reshapedTo4D = false;\n    if ($images.rank === 3) {\n        reshapedTo4D = true;\n        batchImages = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n    }\n    const [] = size;\n    const inputs = { images: batchImages };\n    const attrs = { alignCorners, halfPixelCenters, size };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.ResizeBilinear, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst resizeBilinear = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ resizeBilinear_ });\n//# sourceMappingURL=resize_bilinear.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeNearestNeighbor\": () => (/* binding */ resizeNearestNeighbor)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * NearestNeighbor resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assumes pixels are of\n *      half the actual dimensions, and yields more accurate resizes. This flag\n *      would also make the floating point coordinates of the top left pixel\n *      0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeNearestNeighbor_(images, size, alignCorners = false, halfPixelCenters = false) {\n    const $images = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(images, 'images', 'resizeNearestNeighbor');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($images.rank === 3 || $images.rank === 4, () => `Error in resizeNearestNeighbor: x must be rank 3 or 4, but got ` +\n        `rank ${$images.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(size.length === 2, () => `Error in resizeNearestNeighbor: new shape must 2D, but got shape ` +\n        `${size}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($images.dtype === 'float32' || $images.dtype === 'int32', () => '`images` must have `int32` or `float32` as dtype');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(halfPixelCenters === false || alignCorners === false, () => `Error in resizeNearestNeighbor: If halfPixelCenters is true, ` +\n        `alignCorners must be false.`);\n    let batchImages = $images;\n    let reshapedTo4D = false;\n    if ($images.rank === 3) {\n        reshapedTo4D = true;\n        batchImages = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n    }\n    const [] = size;\n    const inputs = { images: batchImages };\n    const attrs = { alignCorners, halfPixelCenters, size };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.ResizeNearestNeighbor, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst resizeNearestNeighbor = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ resizeNearestNeighbor_ });\n//# sourceMappingURL=resize_nearest_neighbor.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rotateWithOffset\": () => (/* binding */ rotateWithOffset)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Rotates the input image tensor counter-clockwise with an optional offset\n * center of rotation. Currently available in the CPU, WebGL, and WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param radians The amount of rotation.\n * @param fillValue The value to fill in the empty space leftover\n *     after rotation. Can be either a single grayscale value (0-255), or an\n *     array of three numbers `[red, green, blue]` specifying the red, green,\n *     and blue channels. Defaults to `0` (black).\n * @param center The center of rotation. Can be either a single value (0-1), or\n *     an array of two numbers `[centerX, centerY]`. Defaults to `0.5` (rotates\n *     the image around its center).\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction rotateWithOffset_(image, radians, fillValue = 0, center = 0.5) {\n    const $image = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(image, 'image', 'rotateWithOffset', 'float32');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($image.rank === 4, () => 'Error in rotateWithOffset: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    const inputs = { image: $image };\n    const attrs = { radians, fillValue, center };\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.RotateWithOffset, inputs, attrs);\n    return res;\n}\nconst rotateWithOffset = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ rotateWithOffset_ });\n//# sourceMappingURL=rotate_with_offset.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/threshold.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/threshold.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"threshold\": () => (/* binding */ threshold)\n/* harmony export */ });\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../split */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/split.js\");\n/* harmony import */ var _bincount__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../bincount */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js\");\n/* harmony import */ var _less_equal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../less_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js\");\n/* harmony import */ var _greater__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../greater */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../round */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/round.js\");\n/* harmony import */ var _where__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../where */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where.js\");\n/* harmony import */ var _fill__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../fill */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../range */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/range.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Performs image binarization with corresponding threshold\n * (depends on the method)value, which creates a binary image from a grayscale.\n * @param image 3d tensor of shape [imageHeight,imageWidth, depth],\n * where imageHeight and imageWidth must be positive.The image color\n * range should be [0, 255].\n * @param method Optional string from `'binary' | 'otsu'`\n * which specifies the method for thresholding. Defaults to 'binary'.\n * @param inverted Optional boolean whichspecifies\n * if colours should be inverted. Defaults to false.\n * @param threshValue Optional number which defines threshold value from 0 to 1.\n * Defaults to 0.5.\n * @return A 3d tensor of shape [imageHeight,imageWidth, depth], which\n * contains binarized image.\n */\nfunction threshold_(image, method = 'binary', inverted = false, threshValue = 0.5) {\n    const $image = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(image, 'image', 'threshold');\n    /* 0.2989, 0.5870, 0.1140 are represent luma coefficients in CCIR601.\n    Reference for converting between RGB and grayscale: https://en.wikipedia.org/wiki/Luma_%28video%29  */\n    const RED_INTENCITY_COEF = 0.2989;\n    const GREEN_INTENCITY_COEF = 0.5870;\n    const BLUE_INTENCITY_COEF = 0.1140;\n    const totalPixelsInImage = $image.shape[0] * $image.shape[1];\n    let $threshold = (0,_mul__WEBPACK_IMPORTED_MODULE_1__.mul)((0,_tensor1d__WEBPACK_IMPORTED_MODULE_2__.tensor1d)([threshValue]), 255);\n    let r, g, b, grayscale;\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert($image.rank === 3, () => 'Error in threshold: image must be rank 3,' +\n        `but got rank ${$image.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert($image.shape[2] === 3 || $image.shape[2] === 1, () => 'Error in threshold: ' +\n        'image color channel must be equal to 3 or 1' +\n        `but got ${$image.shape[2]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert($image.dtype === 'int32' || $image.dtype === 'float32', () => 'Error in dtype: image dtype must be int32 or float32,' +\n        `but got dtype ${$image.dtype}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(method === 'otsu' || method === 'binary', () => `Method must be binary or otsu, but was ${method}`);\n    if ($image.shape[2] === 3) {\n        [r, g, b] = (0,_split__WEBPACK_IMPORTED_MODULE_4__.split)($image, [1, 1, 1], -1);\n        const $r = (0,_mul__WEBPACK_IMPORTED_MODULE_1__.mul)(r, RED_INTENCITY_COEF);\n        const $g = (0,_mul__WEBPACK_IMPORTED_MODULE_1__.mul)(g, GREEN_INTENCITY_COEF);\n        const $b = (0,_mul__WEBPACK_IMPORTED_MODULE_1__.mul)(b, BLUE_INTENCITY_COEF);\n        grayscale = (0,_add__WEBPACK_IMPORTED_MODULE_5__.add)((0,_add__WEBPACK_IMPORTED_MODULE_5__.add)($r, $g), $b);\n    }\n    else {\n        grayscale = image;\n    }\n    if (method === 'otsu') {\n        const $histogram = (0,_bincount__WEBPACK_IMPORTED_MODULE_6__.bincount)((0,_cast__WEBPACK_IMPORTED_MODULE_7__.cast)((0,_round__WEBPACK_IMPORTED_MODULE_8__.round)(grayscale), 'int32'), (0,_tensor__WEBPACK_IMPORTED_MODULE_9__.tensor)([]), 256);\n        $threshold = otsu($histogram, totalPixelsInImage);\n    }\n    const invCondition = inverted ?\n        (0,_less_equal__WEBPACK_IMPORTED_MODULE_10__.lessEqual)(grayscale, $threshold) : (0,_greater__WEBPACK_IMPORTED_MODULE_11__.greater)(grayscale, $threshold);\n    const result = (0,_cast__WEBPACK_IMPORTED_MODULE_7__.cast)((0,_mul__WEBPACK_IMPORTED_MODULE_1__.mul)(invCondition, 255), 'int32');\n    return result;\n}\nfunction otsu(histogram, total) {\n    let bestThresh = (0,_tensor1d__WEBPACK_IMPORTED_MODULE_2__.tensor1d)([-1]);\n    let bestInBetVar = (0,_tensor1d__WEBPACK_IMPORTED_MODULE_2__.tensor1d)([0]);\n    let cInBetVar = (0,_tensor1d__WEBPACK_IMPORTED_MODULE_2__.tensor1d)([0]);\n    let classFirst, classSecond, meanFirst, meanSec, weightForeground, weightBack;\n    for (let index = 0; index < histogram.size - 1; index++) {\n        classFirst = (0,_slice__WEBPACK_IMPORTED_MODULE_12__.slice)(histogram, 0, index + 1);\n        classSecond = (0,_slice__WEBPACK_IMPORTED_MODULE_12__.slice)(histogram, index + 1);\n        weightForeground = (0,_div__WEBPACK_IMPORTED_MODULE_13__.div)((0,_sum__WEBPACK_IMPORTED_MODULE_14__.sum)(classFirst), total);\n        weightBack = (0,_div__WEBPACK_IMPORTED_MODULE_13__.div)((0,_sum__WEBPACK_IMPORTED_MODULE_14__.sum)(classSecond), total);\n        const meanFirstDivA = (0,_sum__WEBPACK_IMPORTED_MODULE_14__.sum)((0,_mul__WEBPACK_IMPORTED_MODULE_1__.mul)(classFirst, (0,_range__WEBPACK_IMPORTED_MODULE_15__.range)(0, classFirst.size)));\n        meanFirst = (0,_div__WEBPACK_IMPORTED_MODULE_13__.div)(meanFirstDivA, (0,_sum__WEBPACK_IMPORTED_MODULE_14__.sum)(classFirst));\n        const meanSecFill = (0,_fill__WEBPACK_IMPORTED_MODULE_16__.fill)(classSecond.shape, classFirst.size);\n        const meanSecAdd = (0,_add__WEBPACK_IMPORTED_MODULE_5__.add)((0,_range__WEBPACK_IMPORTED_MODULE_15__.range)(0, classSecond.size), meanSecFill);\n        const meanSecMul = (0,_mul__WEBPACK_IMPORTED_MODULE_1__.mul)(classSecond, (meanSecAdd));\n        meanSec = (0,_div__WEBPACK_IMPORTED_MODULE_13__.div)((0,_sum__WEBPACK_IMPORTED_MODULE_14__.sum)(meanSecMul), (0,_sum__WEBPACK_IMPORTED_MODULE_14__.sum)(classSecond));\n        const cInBetVarSubA = (0,_sub__WEBPACK_IMPORTED_MODULE_17__.sub)(meanFirst, meanSec);\n        const cInBetVarSubB = (0,_sub__WEBPACK_IMPORTED_MODULE_17__.sub)(meanFirst, meanSec);\n        const cInBetVarMul = (0,_mul__WEBPACK_IMPORTED_MODULE_1__.mul)(weightForeground, weightBack);\n        cInBetVar = (0,_mul__WEBPACK_IMPORTED_MODULE_1__.mul)((0,_mul__WEBPACK_IMPORTED_MODULE_1__.mul)(cInBetVarMul, cInBetVarSubA), cInBetVarSubB);\n        const condition = (0,_greater__WEBPACK_IMPORTED_MODULE_11__.greater)(cInBetVar, bestInBetVar);\n        bestInBetVar = (0,_where__WEBPACK_IMPORTED_MODULE_18__.where)(condition, cInBetVar, bestInBetVar);\n        bestThresh = (0,_where__WEBPACK_IMPORTED_MODULE_18__.where)(condition, (0,_tensor1d__WEBPACK_IMPORTED_MODULE_2__.tensor1d)([index]), bestThresh);\n    }\n    return bestThresh;\n}\nconst threshold = (0,_operation__WEBPACK_IMPORTED_MODULE_19__.op)({ threshold_ });\n//# sourceMappingURL=threshold.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/threshold.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/transform.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/transform.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transform\": () => (/* binding */ transform)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Applies the given transform(s) to the image(s).\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param transforms Projective transform matrix/matrices. A tensor1d of length\n *     8 or tensor of size N x 8. If one row of transforms is [a0, a1, a2, b0\n *     b1, b2, c0, c1], then it maps the output point (x, y) to a transformed\n *     input point (x', y') = ((a0 x + a1 y + a2) / k, (b0 x + b1 y + b2) / k),\n *     where k = c0 x + c1 y + 1. The transforms are inverted compared to the\n *     transform mapping input points to output points.\n * @param interpolation Interpolation mode.\n *     Supported values: 'nearest', 'bilinear'. Default to 'nearest'.\n * @param fillMode Points outside the boundaries of the input are filled\n *     according to the given mode, one of 'constant', 'reflect', 'wrap',\n *     'nearest'. Default to 'constant'.\n *     'reflect': (d c b a | a b c d | d c b a ) The input is extended by\n *     reflecting about the edge of the last pixel.\n *     'constant': (k k k k | a b c d | k k k k) The input is extended by\n *     filling all values beyond the edge with the same constant value k.\n *     'wrap': (a b c d | a b c d | a b c d) The input is extended by\n *     wrapping around to the opposite edge.\n *     'nearest': (a a a a | a b c d | d d d d) The input is extended by\n *     the nearest pixel.\n * @param fillValue A float represents the value to be filled outside the\n *     boundaries when fillMode is 'constant'.\n * @param Output dimension after the transform, [height, width]. If undefined,\n *     output is the same size as input image.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction transform_(image, transforms, interpolation = 'nearest', fillMode = 'constant', fillValue = 0, outputShape) {\n    const $image = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(image, 'image', 'transform', 'float32');\n    const $transforms = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(transforms, 'transforms', 'transform', 'float32');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($image.rank === 4, () => 'Error in transform: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($transforms.rank === 2 &&\n        ($transforms.shape[0] === $image.shape[0] ||\n            $transforms.shape[0] === 1) &&\n        $transforms.shape[1] === 8, () => `Error in transform: Input transform should be batch x 8 or 1 x 8`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(outputShape == null || outputShape.length === 2, () => 'Error in transform: outputShape must be [height, width] or null, ' +\n        `but got ${outputShape}.`);\n    const inputs = { image: $image, transforms: $transforms };\n    const attrs = { interpolation, fillMode, fillValue, outputShape };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Transform, inputs, attrs);\n}\nconst transform = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ transform_ });\n//# sourceMappingURL=transform.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/image/transform.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inTopKAsync\": () => (/* binding */ inTopKAsync)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Returns whether the targets are in the top K predictions.\n *\n * ```js\n * const predictions = tf.tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);\n * const targets = tf.tensor1d([2, 0]);\n * const precision = await tf.inTopKAsync(predictions, targets);\n * precision.print();\n * ```\n * @param predictions 2-D or higher `tf.Tensor` with last dimension being\n *     at least `k`.\n * @param targets 1-D or higher `tf.Tensor`.\n * @param k Optional Number of top elements to look at for computing precision,\n *     default to 1.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nasync function inTopKAsync_(predictions, targets, k = 1) {\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(predictions, 'predictions', 'inTopK');\n    const $targets = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(targets, 'targets', 'inTopK');\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)($predictions.rank > 1, () => 'inTopK() expects the predictions to be of rank 2 or higher, ' +\n        `but got ${$predictions.rank}`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)($predictions.rank - 1 === $targets.rank, () => `predictions rank should be 1 larger than ` +\n        `targets rank, but got predictions rank ` +\n        `${$predictions.rank} and targets rank ${$targets.rank}`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatch)($predictions.shape.slice(0, $predictions.shape.length - 1), $targets.shape, `predictions's shape should be align with the targets' shape, ` +\n        'except the last dimension.');\n    const lastDim = $predictions.shape[$predictions.shape.length - 1];\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(k > 0 && k <= lastDim, () => `'k' passed to inTopK() must be > 0 && <= the predictions last ` +\n        `dimension (${lastDim}), but got ${k}`);\n    const predictionsVals = await $predictions.data();\n    const targetsVals = await $targets.data();\n    // Reshape predictionsVals into a 2d tensor [batch, lastDim]\n    // and look up topK along lastDim.\n    const [batch, size] = [predictionsVals.length / lastDim, lastDim];\n    const precision = (0,_util__WEBPACK_IMPORTED_MODULE_1__.getTypedArrayFromDType)('bool', batch);\n    for (let b = 0; b < batch; b++) {\n        const offset = b * size;\n        const vals = predictionsVals.subarray(offset, offset + size);\n        const valAndInd = [];\n        for (let i = 0; i < vals.length; i++) {\n            valAndInd.push({ value: vals[i], index: i });\n        }\n        valAndInd.sort((a, b) => b.value - a.value);\n        precision[b] = 0;\n        for (let i = 0; i < k; i++) {\n            if (valAndInd[i].index === targetsVals[b]) {\n                precision[b] = 1;\n                break;\n            }\n        }\n    }\n    if (predictions !== $predictions) {\n        $predictions.dispose();\n    }\n    if (targets !== $targets) {\n        $targets.dispose();\n    }\n    // Output precision has the same shape as targets.\n    return (0,_tensor__WEBPACK_IMPORTED_MODULE_2__.tensor)(precision, $targets.shape, 'bool');\n}\nconst inTopKAsync = inTopKAsync_;\n//# sourceMappingURL=in_top_k.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isFinite\": () => (/* binding */ isFinite)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Returns which elements of x are finite.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isFinite().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isFinite_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'isFinite');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.IsFinite, inputs);\n}\nconst isFinite = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ isFinite_ });\n//# sourceMappingURL=is_finite.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isInf\": () => (/* binding */ isInf)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Returns which elements of x are Infinity or -Infinity.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isInf().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isInf_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'isInf');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.IsInf, inputs);\n}\nconst isInf = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ isInf_ });\n//# sourceMappingURL=is_inf.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNaN\": () => (/* binding */ isNaN)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * RReturns which elements of x are NaN.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isNaN().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isNaN_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'isNaN');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.IsNan, inputs);\n}\nconst isNaN = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ isNaN_ });\n//# sourceMappingURL=is_nan.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"leakyRelu\": () => (/* binding */ leakyRelu)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes leaky rectified linear element-wise.\n *\n * See\n * [http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf](\n *     http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf)\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.leakyRelu(0.1).print();  // or tf.leakyRelu(x, 0.1)\n * ```\n * @param x The input tensor.\n * @param alpha The scaling factor for negative values, defaults to 0.2.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction leakyRelu_(x, alpha = 0.2) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'leakyRelu');\n    const inputs = { x: $x };\n    const attrs = { alpha };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.LeakyRelu, inputs, attrs);\n}\nconst leakyRelu = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ leakyRelu_ });\n//# sourceMappingURL=leaky_relu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/less.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/less.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"less\": () => (/* binding */ less)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Returns the truth value of (a < b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.less(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction less_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'less', 'string_or_numeric');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'less', 'string_or_numeric');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Less, inputs);\n}\nconst less = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ less_ });\n//# sourceMappingURL=less.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/less.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lessEqual\": () => (/* binding */ lessEqual)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Returns the truth value of (a <= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.lessEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction lessEqual_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'lessEqual', 'string_or_numeric');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'lessEqual', 'string_or_numeric');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.LessEqual, inputs);\n}\nconst lessEqual = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ lessEqual_ });\n//# sourceMappingURL=less_equal.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/band_part.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/band_part.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bandPart\": () => (/* binding */ bandPart)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _greater_equal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../greater_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js\");\n/* harmony import */ var _less_equal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../less_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js\");\n/* harmony import */ var _logical_and__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logical_and */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../range */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/range.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../stack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _unstack__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../unstack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js\");\n/* harmony import */ var _where__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../where */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where.js\");\n/* harmony import */ var _zeros__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../zeros */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Copy a tensor setting everything outside a central band in each innermost\n * matrix to zero.\n *\n * The band part is computed as follows: Assume input has `k` dimensions\n * `[I, J, K, ..., M, N]`, then the output is a tensor with the same shape where\n * `band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n]`.\n * The indicator function\n * `in_band(m, n) = (num_lower < 0 || (m-n) <= num_lower))`\n * `&& (num_upper < 0 || (n-m) <= num_upper)`\n *\n * ```js\n * const x = tf.tensor2d([[ 0,  1,  2, 3],\n *                        [-1,  0,  1, 2],\n *                        [-2, -1,  0, 1],\n *                        [-3, -2, -1, 0]]);\n * let y = tf.linalg.bandPart(x, 1, -1);\n * y.print(); // [[ 0,  1,  2, 3],\n *            //  [-1,  0,  1, 2],\n *            //  [ 0, -1,  0, 1],\n *            //  [ 0, 0 , -1, 0]]\n * let z = tf.linalg.bandPart(x, 2, 1);\n * z.print(); // [[ 0,  1,  0, 0],\n *            //  [-1,  0,  1, 0],\n *            //  [-2, -1,  0, 1],\n *            //  [ 0, -2, -1, 0]]\n * ```\n *\n * @param x Rank `k` tensor\n * @param numLower Number of subdiagonals to keep.\n *   If negative, keep entire lower triangle.\n * @param numUpper Number of subdiagonals to keep.\n *   If negative, keep entire upper triangle.\n * @returns Rank `k` tensor of the same shape as input.\n *   The extracted banded tensor.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\nfunction bandPart_(a, numLower, numUpper) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(numLower % 1 === 0, () => `bandPart(): numLower must be an integer, got ${numLower}.`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(numUpper % 1 === 0, () => `bandPart(): numUpper must be an integer, got ${numUpper}.`);\n    const $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'bandPart');\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)($a.rank >= 2, () => `bandPart(): Rank must be at least 2, got ${$a.rank}.`);\n    const shape = $a.shape;\n    const [M, N] = $a.shape.slice(-2);\n    if (!(numLower <= M)) {\n        throw new Error(`bandPart(): numLower (${numLower})` +\n            ` must not be greater than the number of rows (${M}).`);\n    }\n    if (!(numUpper <= N)) {\n        throw new Error(`bandPart(): numUpper (${numUpper})` +\n            ` must not be greater than the number of columns (${N}).`);\n    }\n    if (numLower < 0) {\n        numLower = M;\n    }\n    if (numUpper < 0) {\n        numUpper = N;\n    }\n    const i = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)((0,_range__WEBPACK_IMPORTED_MODULE_3__.range)(0, M, 1, 'int32'), [-1, 1]);\n    const j = (0,_range__WEBPACK_IMPORTED_MODULE_3__.range)(0, N, 1, 'int32');\n    const ij = (0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(i, j);\n    const inBand = (0,_logical_and__WEBPACK_IMPORTED_MODULE_5__.logicalAnd)((0,_less_equal__WEBPACK_IMPORTED_MODULE_6__.lessEqual)(ij, (0,_scalar__WEBPACK_IMPORTED_MODULE_7__.scalar)(+numLower, 'int32')), (0,_greater_equal__WEBPACK_IMPORTED_MODULE_8__.greaterEqual)(ij, (0,_scalar__WEBPACK_IMPORTED_MODULE_7__.scalar)(-numUpper, 'int32')));\n    const zero = (0,_zeros__WEBPACK_IMPORTED_MODULE_9__.zeros)([M, N], $a.dtype);\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)((0,_stack__WEBPACK_IMPORTED_MODULE_10__.stack)((0,_unstack__WEBPACK_IMPORTED_MODULE_11__.unstack)((0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($a, [-1, M, N]))\n        .map(mat => (0,_where__WEBPACK_IMPORTED_MODULE_12__.where)(inBand, mat, zero))), shape);\n}\nconst bandPart = (0,_operation__WEBPACK_IMPORTED_MODULE_13__.op)({ bandPart_ });\n//# sourceMappingURL=band_part.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/band_part.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/gram_schmidt.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/gram_schmidt.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gramSchmidt\": () => (/* binding */ gramSchmidt)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _norm__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../norm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../split */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/split.js\");\n/* harmony import */ var _squeeze__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../squeeze */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js\");\n/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../stack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Gram-Schmidt orthogonalization.\n *\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * let y = tf.linalg.gramSchmidt(x);\n * y.print();\n * console.log('Othogonalized:');\n * y.dot(y.transpose()).print();  // should be nearly the identity matrix.\n * console.log('First row direction maintained:');\n * const data = await y.array();\n * console.log(data[0][1] / data[0][0]);  // should be nearly 2.\n * ```\n *\n * @param xs The vectors to be orthogonalized, in one of the two following\n *   formats:\n *   - An Array of `tf.Tensor1D`.\n *   - A `tf.Tensor2D`, i.e., a matrix, in which case the vectors are the rows\n *     of `xs`.\n *   In each case, all the vectors must have the same length and the length\n *   must be greater than or equal to the number of vectors.\n * @returns The orthogonalized and normalized vectors or matrix.\n *   Orthogonalization means that the vectors or the rows of the matrix\n *   are orthogonal (zero inner products). Normalization means that each\n *   vector or each row of the matrix has an L2 norm that equals `1`.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\nfunction gramSchmidt_(xs) {\n    let inputIsTensor2D;\n    if (Array.isArray(xs)) {\n        inputIsTensor2D = false;\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(xs != null && xs.length > 0, () => 'Gram-Schmidt process: input must not be null, undefined, or ' +\n            'empty');\n        const dim = xs[0].shape[0];\n        for (let i = 1; i < xs.length; ++i) {\n            (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(xs[i].shape[0] === dim, () => 'Gram-Schmidt: Non-unique lengths found in the input vectors: ' +\n                `(${xs[i].shape[0]} vs. ${dim})`);\n        }\n    }\n    else {\n        inputIsTensor2D = true;\n        xs = (0,_split__WEBPACK_IMPORTED_MODULE_2__.split)(xs, xs.shape[0], 0).map(x => (0,_squeeze__WEBPACK_IMPORTED_MODULE_3__.squeeze)(x, [0]));\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(xs.length <= xs[0].shape[0], () => `Gram-Schmidt: Number of vectors (${xs.length}) exceeds ` +\n        `number of dimensions (${xs[0].shape[0]}).`);\n    const ys = [];\n    const xs1d = xs;\n    for (let i = 0; i < xs.length; ++i) {\n        ys.push(_engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(() => {\n            let x = xs1d[i];\n            if (i > 0) {\n                for (let j = 0; j < i; ++j) {\n                    const proj = (0,_mul__WEBPACK_IMPORTED_MODULE_4__.mul)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_mul__WEBPACK_IMPORTED_MODULE_4__.mul)(ys[j], x)), ys[j]);\n                    x = (0,_sub__WEBPACK_IMPORTED_MODULE_6__.sub)(x, proj);\n                }\n            }\n            return (0,_div__WEBPACK_IMPORTED_MODULE_7__.div)(x, (0,_norm__WEBPACK_IMPORTED_MODULE_8__.norm)(x, 'euclidean'));\n        }));\n    }\n    if (inputIsTensor2D) {\n        return (0,_stack__WEBPACK_IMPORTED_MODULE_9__.stack)(ys, 0);\n    }\n    else {\n        return ys;\n    }\n}\nconst gramSchmidt = (0,_operation__WEBPACK_IMPORTED_MODULE_10__.op)({ gramSchmidt_ });\n//# sourceMappingURL=gram_schmidt.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/gram_schmidt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/qr.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/qr.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"qr\": () => (/* binding */ qr)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../clone */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _eye__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../eye */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js\");\n/* harmony import */ var _greater__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../greater */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _norm__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../norm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../stack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _tensor2d__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../tensor2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js\");\n/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../transpose */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js\");\n/* harmony import */ var _unstack__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../unstack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js\");\n/* harmony import */ var _where__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../where */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Compute QR decomposition of m-by-n matrix using Householder transformation.\n *\n * Implementation based on\n *   [http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf]\n * (http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf)\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [3, 4]]);\n * let [q, r] = tf.linalg.qr(a);\n * console.log('Q');\n * q.print();\n * console.log('R');\n * r.print();\n * console.log('Orthogonalized');\n * q.dot(q.transpose()).print()  // should be nearly the identity matrix.\n * console.log('Reconstructed');\n * q.dot(r).print(); // should be nearly [[1, 2], [3, 4]];\n * ```\n *\n * @param x The `tf.Tensor` to be QR-decomposed. Must have rank >= 2. Suppose\n *   it has the shape `[..., M, N]`.\n * @param fullMatrices An optional boolean parameter. Defaults to `false`.\n *   If `true`, compute full-sized `Q`. If `false` (the default),\n *   compute only the leading N columns of `Q` and `R`.\n * @returns An `Array` of two `tf.Tensor`s: `[Q, R]`. `Q` is a unitary matrix,\n *   i.e., its columns all have unit norm and are mutually orthogonal.\n *   If `M >= N`,\n *     If `fullMatrices` is `false` (default),\n *       - `Q` has a shape of `[..., M, N]`,\n *       - `R` has a shape of `[..., N, N]`.\n *     If `fullMatrices` is `true` (default),\n *       - `Q` has a shape of `[..., M, M]`,\n *       - `R` has a shape of `[..., M, N]`.\n *   If `M < N`,\n *     - `Q` has a shape of `[..., M, M]`,\n *     - `R` has a shape of `[..., M, N]`.\n * @throws If the rank of `x` is less than 2.\n *\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\nfunction qr_(x, fullMatrices = false) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(x.rank >= 2, () => `qr() requires input tensor to have a rank >= 2, but got rank ${x.rank}`);\n    if (x.rank === 2) {\n        return qr2d(x, fullMatrices);\n    }\n    else {\n        // Rank > 2.\n        // TODO(cais): Below we split the input into individual 2D tensors,\n        //   perform QR decomposition on them and then stack the results back\n        //   together. We should explore whether this can be parallelized.\n        const outerDimsProd = x.shape.slice(0, x.shape.length - 2)\n            .reduce((value, prev) => value * prev);\n        const x2ds = (0,_unstack__WEBPACK_IMPORTED_MODULE_2__.unstack)((0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(x, [\n            outerDimsProd, x.shape[x.shape.length - 2],\n            x.shape[x.shape.length - 1]\n        ]), 0);\n        const q2ds = [];\n        const r2ds = [];\n        x2ds.forEach(x2d => {\n            const [q2d, r2d] = qr2d(x2d, fullMatrices);\n            q2ds.push(q2d);\n            r2ds.push(r2d);\n        });\n        const q = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)((0,_stack__WEBPACK_IMPORTED_MODULE_4__.stack)(q2ds, 0), x.shape);\n        const r = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)((0,_stack__WEBPACK_IMPORTED_MODULE_4__.stack)(r2ds, 0), x.shape);\n        return [q, r];\n    }\n}\nfunction qr2d(x, fullMatrices = false) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(() => {\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(x.shape.length === 2, () => `qr2d() requires a 2D Tensor, but got a ${x.shape.length}D Tensor.`);\n        const m = x.shape[0];\n        const n = x.shape[1];\n        let q = (0,_eye__WEBPACK_IMPORTED_MODULE_5__.eye)(m); // Orthogonal transform so far.\n        let r = (0,_clone__WEBPACK_IMPORTED_MODULE_6__.clone)(x); // Transformed matrix so far.\n        const one2D = (0,_tensor2d__WEBPACK_IMPORTED_MODULE_7__.tensor2d)([[1]], [1, 1]);\n        let w = (0,_clone__WEBPACK_IMPORTED_MODULE_6__.clone)(one2D);\n        const iters = m >= n ? n : m;\n        for (let j = 0; j < iters; ++j) {\n            // This tidy within the for-loop ensures we clean up temporary\n            // tensors as soon as they are no longer needed.\n            const rTemp = r;\n            const wTemp = w;\n            const qTemp = q;\n            [w, r, q] = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(() => {\n                // Find H = I - tau * w * w', to put zeros below R(j, j).\n                const rjEnd1 = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(r, [j, j], [m - j, 1]);\n                const normX = (0,_norm__WEBPACK_IMPORTED_MODULE_9__.norm)(rjEnd1);\n                const rjj = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(r, [j, j], [1, 1]);\n                // The sign() function returns 0 on 0, which causes division by zero.\n                const s = (0,_where__WEBPACK_IMPORTED_MODULE_10__.where)((0,_greater__WEBPACK_IMPORTED_MODULE_11__.greater)(rjj, 0), (0,_tensor2d__WEBPACK_IMPORTED_MODULE_7__.tensor2d)([[-1]]), (0,_tensor2d__WEBPACK_IMPORTED_MODULE_7__.tensor2d)([[1]]));\n                const u1 = (0,_sub__WEBPACK_IMPORTED_MODULE_12__.sub)(rjj, (0,_mul__WEBPACK_IMPORTED_MODULE_13__.mul)(s, normX));\n                const wPre = (0,_div__WEBPACK_IMPORTED_MODULE_14__.div)(rjEnd1, u1);\n                if (wPre.shape[0] === 1) {\n                    w = (0,_clone__WEBPACK_IMPORTED_MODULE_6__.clone)(one2D);\n                }\n                else {\n                    w = (0,_concat__WEBPACK_IMPORTED_MODULE_15__.concat)([\n                        one2D,\n                        (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(wPre, [1, 0], [wPre.shape[0] - 1, wPre.shape[1]])\n                    ], 0);\n                }\n                const tau = (0,_neg__WEBPACK_IMPORTED_MODULE_16__.neg)((0,_div__WEBPACK_IMPORTED_MODULE_14__.div)((0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(s, u1), normX));\n                // -- R := HR, Q := QH.\n                const rjEndAll = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(r, [j, 0], [m - j, n]);\n                const tauTimesW = (0,_mul__WEBPACK_IMPORTED_MODULE_13__.mul)(tau, w);\n                const wT = (0,_transpose__WEBPACK_IMPORTED_MODULE_18__.transpose)(w);\n                if (j === 0) {\n                    r = (0,_sub__WEBPACK_IMPORTED_MODULE_12__.sub)(rjEndAll, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(tauTimesW, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(wT, rjEndAll)));\n                }\n                else {\n                    const rTimesTau = (0,_sub__WEBPACK_IMPORTED_MODULE_12__.sub)(rjEndAll, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(tauTimesW, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(wT, rjEndAll)));\n                    r = (0,_concat__WEBPACK_IMPORTED_MODULE_15__.concat)([(0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(r, [0, 0], [j, n]), rTimesTau], 0);\n                }\n                const tawTimesWT = (0,_transpose__WEBPACK_IMPORTED_MODULE_18__.transpose)(tauTimesW);\n                const qAllJEnd = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(q, [0, j], [m, q.shape[1] - j]);\n                if (j === 0) {\n                    q = (0,_sub__WEBPACK_IMPORTED_MODULE_12__.sub)(qAllJEnd, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)((0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(qAllJEnd, w), tawTimesWT));\n                }\n                else {\n                    const qTimesTau = (0,_sub__WEBPACK_IMPORTED_MODULE_12__.sub)(qAllJEnd, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)((0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(qAllJEnd, w), tawTimesWT));\n                    q = (0,_concat__WEBPACK_IMPORTED_MODULE_15__.concat)([(0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(q, [0, 0], [m, j]), qTimesTau], 1);\n                }\n                return [w, r, q];\n            });\n            (0,_globals__WEBPACK_IMPORTED_MODULE_19__.dispose)([rTemp, wTemp, qTemp]);\n        }\n        if (!fullMatrices && m > n) {\n            q = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(q, [0, 0], [m, n]);\n            r = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(r, [0, 0], [n, n]);\n        }\n        return [q, r];\n    });\n}\nconst qr = (0,_operation__WEBPACK_IMPORTED_MODULE_20__.op)({ qr_ });\n//# sourceMappingURL=qr.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/qr.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"linspace\": () => (/* binding */ linspace)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Return an evenly spaced sequence of numbers over the given interval.\n *\n * ```js\n * tf.linspace(0, 9, 10).print();\n * ```\n * @param start The start value of the sequence.\n * @param stop The end value of the sequence.\n * @param num The number of values to generate.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction linspace(start, stop, num) {\n    if (num <= 0) {\n        throw new Error('The number of values should be positive.');\n    }\n    const attrs = { start, stop, num };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_1__.LinSpace, {}, attrs);\n}\n//# sourceMappingURL=linspace.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"localResponseNormalization\": () => (/* binding */ localResponseNormalization)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Normalizes the activation of a local neighborhood across or within\n * channels.\n *\n * @param x The input tensor. The 4-D input tensor is treated as a 3-D array\n *     of 1D vectors (along the last dimension), and each vector is\n *     normalized independently.\n * @param depthRadius The number of adjacent channels in the 1D normalization\n *     window.\n * @param bias A constant bias term for the basis.\n * @param alpha A scale factor, usually positive.\n * @param beta An exponent.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction localResponseNormalization_(x, depthRadius = 5, bias = 1, alpha = 1, beta = 0.5) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'localResponseNormalization');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank === 4 || $x.rank === 3, () => `Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isInt(depthRadius), () => `Error in localResponseNormalization: depthRadius must be an ` +\n        `integer but got depthRadius ${depthRadius}.`);\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    const inputs = { x: x4D };\n    const attrs = { depthRadius, bias, alpha, beta };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.LRN, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    else {\n        return res;\n    }\n}\nconst localResponseNormalization = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ localResponseNormalization_ });\n//# sourceMappingURL=local_response_normalization.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/log.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/log.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"log\": () => (/* binding */ log)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes natural logarithm of the input `tf.Tensor` element-wise: `ln(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E]);\n *\n * x.log().print();  // or tf.log(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction log_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'log');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Log, inputs);\n}\nconst log = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ log_ });\n//# sourceMappingURL=log.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/log.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"log1p\": () => (/* binding */ log1p)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes natural logarithm of the input `tf.Tensor` plus one\n * element-wise: `ln(1 + x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E - 1]);\n *\n * x.log1p().print();  // or tf.log1p(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction log1p_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'log1p');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Log1p, inputs);\n}\nconst log1p = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ log1p_ });\n//# sourceMappingURL=log1p.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logSigmoid\": () => (/* binding */ logSigmoid)\n/* harmony export */ });\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _sigmoid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sigmoid */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js\");\n/* harmony import */ var _softplus__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./softplus */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Computes log sigmoid of the input `tf.Tensor` element-wise:\n * `logSigmoid(x)`. For numerical stability, we use `-tf.softplus(-x)`.\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.logSigmoid().print();  // or tf.logSigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction logSigmoid_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'logSigmoid');\n    // Use a custom gradient to maintain previous implementation.\n    // There is no LogSigmoid kernel in TF so we can't use engine.runKernel\n    // directly\n    const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_1__.customGrad)((x) => {\n        // TODO(yassogba) we can remove the chained softplus call here only\n        // after backends have modualrized softplus at which point we can call\n        // engine runKernel(..., Sotfplus, ...) directly.\n        const value = (0,_neg__WEBPACK_IMPORTED_MODULE_2__.neg)((0,_softplus__WEBPACK_IMPORTED_MODULE_3__.softplus)((0,_neg__WEBPACK_IMPORTED_MODULE_2__.neg)(x)));\n        const gradFunc = (dy) => {\n            const derX = (0,_mul__WEBPACK_IMPORTED_MODULE_4__.mul)(dy, (0,_sigmoid__WEBPACK_IMPORTED_MODULE_5__.sigmoid)((0,_neg__WEBPACK_IMPORTED_MODULE_2__.neg)(x)));\n            return derX;\n        };\n        return { value, gradFunc };\n    });\n    return customOp($x);\n}\nconst logSigmoid = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ logSigmoid_ });\n//# sourceMappingURL=log_sigmoid.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logSoftmax\": () => (/* binding */ logSoftmax)\n/* harmony export */ });\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./log */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log.js\");\n/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./max */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the log softmax.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param axis The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction logSoftmax_(logits, axis = -1) {\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(logits, 'logits', 'logSoftmax');\n    if (axis === -1) {\n        axis = $logits.rank - 1;\n    }\n    if (axis !== $logits.rank - 1) {\n        throw Error('Log Softmax along a non-last dimension is not yet supported. ' +\n            `Logits was rank ${$logits.rank} and axis was ${axis}`);\n    }\n    // const forward: ForwardFunc<Tensor> = (backend, save) => {\n    //   const keepDims = true;\n    //   const xMax = max(logits, axis, true);\n    //   const shifted = sub(logits, xMax);\n    //   const value =\n    //       sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis,\n    //       keepDims)));\n    //   save([value]);\n    //   return value;\n    // };\n    // Use a custom gradient for numerical stability.\n    const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_1__.customGrad)((logits, save) => {\n        const keepDims = true;\n        const xMax = (0,_max__WEBPACK_IMPORTED_MODULE_2__.max)(logits, axis, true);\n        const shifted = (0,_sub__WEBPACK_IMPORTED_MODULE_3__.sub)(logits, xMax);\n        const value = (0,_sub__WEBPACK_IMPORTED_MODULE_3__.sub)((0,_cast__WEBPACK_IMPORTED_MODULE_4__.cast)(shifted, 'float32'), (0,_log__WEBPACK_IMPORTED_MODULE_5__.log)((0,_sum__WEBPACK_IMPORTED_MODULE_6__.sum)((0,_exp__WEBPACK_IMPORTED_MODULE_7__.exp)(shifted), axis, keepDims)));\n        save([value]);\n        const gradFunc = (dy, saved) => {\n            const [value] = saved;\n            const keepDims = true;\n            const softmax = (0,_exp__WEBPACK_IMPORTED_MODULE_7__.exp)(value);\n            return (0,_sub__WEBPACK_IMPORTED_MODULE_3__.sub)(dy, (0,_mul__WEBPACK_IMPORTED_MODULE_8__.mul)((0,_sum__WEBPACK_IMPORTED_MODULE_6__.sum)(dy, axis, keepDims), softmax));\n        };\n        return { value, gradFunc };\n    });\n    return customOp($logits);\n    // TODO Use Engine.runKernel when CPU/WebGL/WASM backends implement this.\n    // const inputs: LogSoftmaxInputs = {logits: $logits};\n    // const attrs: LogSoftmaxAttrs = {axis};\n    // return ENGINE.runKernel(\n    //            LogSoftmax, inputs as {} as NamedTensorMap,\n    //            attrs as {} as NamedAttrMap);\n}\nconst logSoftmax = (0,_operation__WEBPACK_IMPORTED_MODULE_9__.op)({ logSoftmax_ });\n//# sourceMappingURL=log_softmax.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logSumExp\": () => (/* binding */ logSumExp)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _axis_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./axis_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js\");\n/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./log */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log.js\");\n/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./max */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the log(sum(exp(elements across the reduction dimensions)).\n *\n * Reduces the input along the dimensions given in `axis`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.logSumExp().print();  // or tf.logSumExp(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)\n * ```\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. If null (the default),\n *     reduces all dimensions.\n * @param keepDims If true, retains reduced dimensions with length\n *     of 1. Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction logSumExp_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'logSumExp');\n    const axes = (0,_util__WEBPACK_IMPORTED_MODULE_1__.parseAxisParam)(axis, $x.shape);\n    const xMax = (0,_max__WEBPACK_IMPORTED_MODULE_2__.max)($x, axes, true /* keepDims */);\n    const a = (0,_sub__WEBPACK_IMPORTED_MODULE_3__.sub)($x, xMax);\n    const b = (0,_exp__WEBPACK_IMPORTED_MODULE_4__.exp)(a);\n    const c = (0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)(b, axes);\n    const d = (0,_log__WEBPACK_IMPORTED_MODULE_6__.log)(c);\n    const res = (0,_add__WEBPACK_IMPORTED_MODULE_7__.add)((0,_reshape__WEBPACK_IMPORTED_MODULE_8__.reshape)(xMax, d.shape), d);\n    if (keepDims) {\n        const newShape = (0,_axis_util__WEBPACK_IMPORTED_MODULE_9__.expandShapeToKeepDim)(res.shape, axes);\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_8__.reshape)(res, newShape);\n    }\n    return res;\n}\nconst logSumExp = (0,_operation__WEBPACK_IMPORTED_MODULE_10__.op)({ logSumExp_ });\n//# sourceMappingURL=log_sum_exp.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalAnd\": () => (/* binding */ logicalAnd)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Returns the truth value of `a AND b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalAnd(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalAnd_(a, b) {\n    const $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'logicalAnd', 'bool');\n    const $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'logicalAnd', 'bool');\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_2__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.LogicalAnd, inputs);\n}\nconst logicalAnd = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ logicalAnd_ });\n//# sourceMappingURL=logical_and.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalNot\": () => (/* binding */ logicalNot)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Returns the truth value of `NOT x` element-wise.\n *\n * ```js\n * const a = tf.tensor1d([false, true], 'bool');\n *\n * a.logicalNot().print();\n * ```\n *\n * @param x The input tensor. Must be of dtype 'bool'.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalNot_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'logicalNot', 'bool');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.LogicalNot, inputs);\n}\nconst logicalNot = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ logicalNot_ });\n//# sourceMappingURL=logical_not.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalOr\": () => (/* binding */ logicalOr)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Returns the truth value of `a OR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalOr(b).print();\n * ```\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalOr_(a, b) {\n    const $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'logicalOr', 'bool');\n    const $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'logicalOr', 'bool');\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_2__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.LogicalOr, inputs);\n}\nconst logicalOr = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ logicalOr_ });\n//# sourceMappingURL=logical_or.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalXor\": () => (/* binding */ logicalXor)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _logical_and__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logical_and */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js\");\n/* harmony import */ var _logical_not__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logical_not */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js\");\n/* harmony import */ var _logical_or__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logical_or */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Returns the truth value of `a XOR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalXor(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalXor_(a, b) {\n    const $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(a, 'a', 'logicalXor', 'bool');\n    const $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(b, 'b', 'logicalXor', 'bool');\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_1__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    // x ^ y = (x | y) & ~(x & y)\n    return (0,_logical_and__WEBPACK_IMPORTED_MODULE_2__.logicalAnd)((0,_logical_or__WEBPACK_IMPORTED_MODULE_3__.logicalOr)(a, b), (0,_logical_not__WEBPACK_IMPORTED_MODULE_4__.logicalNot)((0,_logical_and__WEBPACK_IMPORTED_MODULE_2__.logicalAnd)(a, b)));\n}\nconst logicalXor = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ logicalXor_ });\n//# sourceMappingURL=logical_xor.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Reduction\": () => (/* binding */ Reduction)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar Reduction;\n(function (Reduction) {\n    Reduction[Reduction[\"NONE\"] = 0] = \"NONE\";\n    Reduction[Reduction[\"MEAN\"] = 1] = \"MEAN\";\n    Reduction[Reduction[\"SUM\"] = 2] = \"SUM\";\n    Reduction[Reduction[\"SUM_BY_NONZERO_WEIGHTS\"] = 3] = \"SUM_BY_NONZERO_WEIGHTS\";\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=loss_ops_utils.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/absolute_difference.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/absolute_difference.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"absoluteDifference\": () => (/* binding */ absoluteDifference)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _abs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Computes the absolute difference loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction absoluteDifference_(labels, predictions, weights, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'absoluteDifference');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'absoluteDifference');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'absoluteDifference');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in absoluteDifference: ');\n    const losses = (0,_abs__WEBPACK_IMPORTED_MODULE_3__.abs)((0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)($labels, $predictions));\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_5__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst absoluteDifference = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ absoluteDifference_ });\n//# sourceMappingURL=absolute_difference.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/absolute_difference.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"computeWeightedLoss\": () => (/* binding */ computeWeightedLoss)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mean__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../mean */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _not_equal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../not_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js\");\n/* harmony import */ var _ones__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ones */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the weighted loss between two tensors.\n *\n * @param losses Tensor of shape `[batch_size, d1, ... dN]`.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `losses`, and must be broadcastable to `losses` (i.e., all\n *    dimensions must be either `1`, or the same as the corresponding\n *    `losses` dimension).\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction computeWeightedLoss_(losses, weights, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $losses = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(losses, 'losses', 'computeWeightedLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'computeWeightedLoss');\n    }\n    const weightedLoss = ($weights == null) ? $losses : (0,_mul__WEBPACK_IMPORTED_MODULE_2__.mul)($losses, $weights);\n    if (reduction === _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.NONE) {\n        return weightedLoss;\n    }\n    if (reduction === _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM) {\n        return (0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)(weightedLoss);\n    }\n    if (reduction === _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.MEAN) {\n        if ($weights == null) {\n            return (0,_mean__WEBPACK_IMPORTED_MODULE_4__.mean)(weightedLoss);\n        }\n        else {\n            const broadcastFactor = $losses.size / $weights.size;\n            const result = (0,_div__WEBPACK_IMPORTED_MODULE_5__.div)((0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)(weightedLoss), (0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)($weights));\n            return broadcastFactor > 1 ? (0,_div__WEBPACK_IMPORTED_MODULE_5__.div)(result, (0,_scalar__WEBPACK_IMPORTED_MODULE_6__.scalar)(broadcastFactor)) :\n                result;\n        }\n    }\n    if (reduction === _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n        if ($weights == null) {\n            return (0,_div__WEBPACK_IMPORTED_MODULE_5__.div)((0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)(weightedLoss), (0,_scalar__WEBPACK_IMPORTED_MODULE_6__.scalar)($losses.size));\n        }\n        else {\n            const broadcastedWeights = (0,_mul__WEBPACK_IMPORTED_MODULE_2__.mul)($weights, (0,_ones__WEBPACK_IMPORTED_MODULE_7__.ones)($losses.shape));\n            const numNonZeros = (0,_cast__WEBPACK_IMPORTED_MODULE_8__.cast)((0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)((0,_not_equal__WEBPACK_IMPORTED_MODULE_9__.notEqual)(broadcastedWeights, (0,_scalar__WEBPACK_IMPORTED_MODULE_6__.scalar)(0))), 'float32');\n            return (0,_div__WEBPACK_IMPORTED_MODULE_5__.div)((0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)(weightedLoss), numNonZeros);\n        }\n    }\n    throw Error(`Unknown reduction: ${reduction}`);\n}\nconst computeWeightedLoss = (0,_operation__WEBPACK_IMPORTED_MODULE_10__.op)({ computeWeightedLoss_ });\n//# sourceMappingURL=compute_weighted_loss.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/cosine_distance.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/cosine_distance.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cosineDistance\": () => (/* binding */ cosineDistance)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Computes the cosine distance loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param axis The dimension along which the cosine distance is computed.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction cosineDistance_(labels, predictions, axis, weights, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'cosineDistance');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'cosineDistance');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'cosineDistance');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in cosineDistance: ');\n    const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(1);\n    const losses = (0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(one, (0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_mul__WEBPACK_IMPORTED_MODULE_6__.mul)($labels, $predictions), axis, true));\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_7__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst cosineDistance = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ cosineDistance_ });\n//# sourceMappingURL=cosine_distance.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/cosine_distance.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/hinge_loss.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/hinge_loss.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hingeLoss\": () => (/* binding */ hingeLoss)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _relu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Computes the Hinge loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction hingeLoss_(labels, predictions, weights, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    let $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'hingeLoss');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'hingeLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'hingeLoss');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in hingeLoss: ');\n    const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(1);\n    // Convert binary labels to (-1, 1)\n    $labels = (0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)((0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(2), $labels), one);\n    const losses = (0,_relu__WEBPACK_IMPORTED_MODULE_6__.relu)((0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(one, (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)($labels, $predictions)));\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_7__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst hingeLoss = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ hingeLoss_ });\n//# sourceMappingURL=hinge_loss.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/hinge_loss.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/huber_loss.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/huber_loss.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"huberLoss\": () => (/* binding */ huberLoss)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _abs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _minimum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../minimum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _square__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the huber loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param delta Point where huber loss changes from quadratic to linear.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`.\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction huberLoss_(labels, predictions, weights, delta = 1.0, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'huberLoss');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'huberLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'huberLoss');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in huberLoss: ');\n    const deltaScalar = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(delta);\n    const error = (0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)((0,_sub__WEBPACK_IMPORTED_MODULE_5__.sub)($predictions, $labels));\n    const quadratic = (0,_minimum__WEBPACK_IMPORTED_MODULE_6__.minimum)(error, deltaScalar);\n    const linear = (0,_sub__WEBPACK_IMPORTED_MODULE_5__.sub)(error, quadratic);\n    const losses = (0,_add__WEBPACK_IMPORTED_MODULE_7__.add)((0,_mul__WEBPACK_IMPORTED_MODULE_8__.mul)((0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(0.5), (0,_square__WEBPACK_IMPORTED_MODULE_9__.square)(quadratic)), (0,_mul__WEBPACK_IMPORTED_MODULE_8__.mul)(deltaScalar, linear));\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_10__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst huberLoss = (0,_operation__WEBPACK_IMPORTED_MODULE_11__.op)({ huberLoss_ });\n//# sourceMappingURL=huber_loss.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/huber_loss.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/log_loss.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/log_loss.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logLoss\": () => (/* binding */ logLoss)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../log */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the log loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param epsilon A small increment to avoid taking log of zero\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction logLoss_(labels, predictions, weights, epsilon = 1e-7, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'logLoss');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'logLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'logLoss');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in logLoss: ');\n    const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(1);\n    const epsilonScalar = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(epsilon);\n    const l1 = (0,_neg__WEBPACK_IMPORTED_MODULE_4__.neg)((0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)($labels, (0,_log__WEBPACK_IMPORTED_MODULE_6__.log)((0,_add__WEBPACK_IMPORTED_MODULE_7__.add)($predictions, epsilonScalar))));\n    const l2 = (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_sub__WEBPACK_IMPORTED_MODULE_8__.sub)(one, $labels), (0,_log__WEBPACK_IMPORTED_MODULE_6__.log)((0,_add__WEBPACK_IMPORTED_MODULE_7__.add)((0,_sub__WEBPACK_IMPORTED_MODULE_8__.sub)(one, $predictions), epsilonScalar)));\n    const losses = (0,_sub__WEBPACK_IMPORTED_MODULE_8__.sub)(l1, l2);\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_9__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst logLoss = (0,_operation__WEBPACK_IMPORTED_MODULE_10__.op)({ logLoss_ });\n//# sourceMappingURL=log_loss.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/log_loss.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/mean_squared_error.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/mean_squared_error.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"meanSquaredError\": () => (/* binding */ meanSquaredError)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _squared_difference__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../squared_difference */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Computes the mean squared error between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction meanSquaredError_(labels, predictions, weights, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'meanSquaredError');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'meanSquaredError');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'meanSquaredError');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in meanSquaredError: ');\n    const losses = (0,_squared_difference__WEBPACK_IMPORTED_MODULE_3__.squaredDifference)($labels, $predictions);\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_4__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst meanSquaredError = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ meanSquaredError_ });\n//# sourceMappingURL=mean_squared_error.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/mean_squared_error.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/sigmoid_cross_entropy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/sigmoid_cross_entropy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sigmoidCrossEntropy\": () => (/* binding */ sigmoidCrossEntropy)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _abs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _log1p__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../log1p */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _relu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction sigmoidCrossEntropyWithLogits_(labels, logits) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(labels, 'labels', 'sigmoidCrossEntropyWithLogits');\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(logits, 'logits', 'sigmoidCrossEntropyWithLogits');\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatch)($labels.shape, $logits.shape, 'Error in sigmoidCrossEntropyWithLogits: ');\n    /**\n     * Implementation Details:\n     *\n     * For brevity, let `x = logits`, `z = labels`.  The logistic loss is\n     *     z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))\n     *   = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))\n     *   = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))\n     *   = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))\n     *   = (1 - z) * x + log(1 + exp(-x))\n     *   = x - x * z + log(1 + exp(-x))\n     *\n     *   For x < 0, to avoid overflow in exp(-x), we reformulate the above\n     *     x - x * z + log(1 + exp(-x))\n     *   = log(exp(x)) - x * z + log(1 + exp(-x))\n     *   = - x * z + log(1 + exp(x))\n     *\n     * Hence, to ensure stability and avoid overflow, the implementation uses\n     * this equivalent formulation:\n     *     max(x, 0) - x * z + log(1 + exp(-abs(x)))\n     */\n    const maxOutput = (0,_relu__WEBPACK_IMPORTED_MODULE_2__.relu)($logits);\n    const outputXTarget = (0,_mul__WEBPACK_IMPORTED_MODULE_3__.mul)($logits, $labels);\n    const sigmoidOutput = (0,_log1p__WEBPACK_IMPORTED_MODULE_4__.log1p)((0,_exp__WEBPACK_IMPORTED_MODULE_5__.exp)((0,_neg__WEBPACK_IMPORTED_MODULE_6__.neg)((0,_abs__WEBPACK_IMPORTED_MODULE_7__.abs)($logits))));\n    return (0,_add__WEBPACK_IMPORTED_MODULE_8__.add)((0,_sub__WEBPACK_IMPORTED_MODULE_9__.sub)(maxOutput, outputXTarget), sigmoidOutput);\n}\n/**\n * Computes the sigmoid cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newMulticlassLabels = multiclassLabels * (1 - labelSmoothing)\n *                         + 0.5 * labelSmoothing\n *\n * @param multiClassLabels The ground truth output tensor of shape\n * [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\nfunction sigmoidCrossEntropy_(multiClassLabels, logits, weights, labelSmoothing = 0, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_10__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    let $multiClassLabels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(multiClassLabels, 'multiClassLabels', 'sigmoidCrossEntropy');\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(logits, 'logits', 'sigmoidCrossEntropy');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(weights, 'weights', 'sigmoidCrossEntropy');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatch)($multiClassLabels.shape, $logits.shape, 'Error in sigmoidCrossEntropy: ');\n    if (labelSmoothing > 0) {\n        const labelSmoothingScalar = (0,_scalar__WEBPACK_IMPORTED_MODULE_11__.scalar)(labelSmoothing);\n        const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_11__.scalar)(1);\n        const half = (0,_scalar__WEBPACK_IMPORTED_MODULE_11__.scalar)(0.5);\n        $multiClassLabels =\n            (0,_add__WEBPACK_IMPORTED_MODULE_8__.add)((0,_mul__WEBPACK_IMPORTED_MODULE_3__.mul)($multiClassLabels, (0,_sub__WEBPACK_IMPORTED_MODULE_9__.sub)(one, labelSmoothingScalar)), (0,_mul__WEBPACK_IMPORTED_MODULE_3__.mul)(half, labelSmoothingScalar));\n    }\n    const losses = sigmoidCrossEntropyWithLogits_($multiClassLabels, $logits);\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_12__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst sigmoidCrossEntropy = (0,_operation__WEBPACK_IMPORTED_MODULE_13__.op)({ sigmoidCrossEntropy_ });\n//# sourceMappingURL=sigmoid_cross_entropy.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/sigmoid_cross_entropy.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/softmax_cross_entropy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/softmax_cross_entropy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"softmaxCrossEntropy\": () => (/* binding */ softmaxCrossEntropy)\n/* harmony export */ });\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _axis_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axis_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _log_sum_exp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log_sum_exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes softmax cross entropy between logits and labels.\n *\n * Measures the probability error in discrete classification tasks in which\n * the classes are mutually exclusive (each entry is in exactly one class).\n * For example, each CIFAR-10 image is labeled with one and only one label: an\n * image can be a dog or a truck, but not both.\n *\n * `NOTE`: While the classes are mutually exclusive, their probabilities need\n * not be. All that is required is that each row of labels is a valid\n * probability distribution. If they are not, the computation of the gradient\n * will be incorrect.\n *\n * `WARNING`: This op expects unscaled logits, since it performs a softmax on\n * logits internally for efficiency. Do not call this op with the output of\n * softmax, as it will produce incorrect results.\n *\n * logits and labels must have the same shape, e.g. [batch_size, num_classes]\n * and the same dtype.\n * @param labels The labels array.\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\nfunction softmaxCrossEntropyWithLogits_(labels, logits, dim = -1) {\n    if (dim === -1) {\n        dim = logits.rank - 1;\n    }\n    if (dim !== logits.rank - 1) {\n        throw Error(`Softmax cross entropy along a non-last dimension is not yet ` +\n            `supported. Labels / logits was rank ${logits.rank} ` +\n            `and dim was ${dim}`);\n    }\n    // Use a custom gradient for numerical stability.\n    const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_0__.customGrad)((labels, logits, save) => {\n        // Reference:\n        //   1. http://cs231n.github.io/linear-classify/#softmax\n        //   2. https://blog.feedly.com/tricks-of-the-trade-logsumexp/\n        const keepDims = true;\n        const lse = (0,_log_sum_exp__WEBPACK_IMPORTED_MODULE_1__.logSumExp)(logits, [dim], keepDims);\n        const logResult = (0,_sub__WEBPACK_IMPORTED_MODULE_2__.sub)((0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)(logits, 'float32'), lse);\n        save([labels, logResult]);\n        const costVector = (0,_neg__WEBPACK_IMPORTED_MODULE_4__.neg)((0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(logResult, labels));\n        const value = (0,_sum__WEBPACK_IMPORTED_MODULE_6__.sum)(costVector, [dim]);\n        const gradFunc = (dy, saved) => {\n            const [labels, logResult] = saved;\n            const dyShape = (0,_axis_util__WEBPACK_IMPORTED_MODULE_7__.expandShapeToKeepDim)(dy.shape, [dim]);\n            return [\n                (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_reshape__WEBPACK_IMPORTED_MODULE_8__.reshape)(dy, dyShape), (0,_sub__WEBPACK_IMPORTED_MODULE_2__.sub)((0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)(labels, 'float32'), (0,_exp__WEBPACK_IMPORTED_MODULE_9__.exp)(logResult))),\n                (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_reshape__WEBPACK_IMPORTED_MODULE_8__.reshape)(dy, dyShape), (0,_sub__WEBPACK_IMPORTED_MODULE_2__.sub)((0,_exp__WEBPACK_IMPORTED_MODULE_9__.exp)(logResult), (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)(labels, 'float32'))),\n            ];\n        };\n        return { value, gradFunc };\n    });\n    return customOp(labels, logits);\n}\n/**\n * Computes the softmax cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newOnehotLabels = onehotLabels * (1 - labelSmoothing)\n *                         + labelSmoothing / numClasses\n *\n * @param onehotLabels One hot encoded labels\n *    [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or 1, and must be\n *    broadcastable to `loss`  of shape [batch_size]\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\nfunction softmaxCrossEntropy_(onehotLabels, logits, weights, labelSmoothing = 0, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_10__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    let $onehotLabels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_11__.convertToTensor)(onehotLabels, 'onehotLabels', 'softmaxCrossEntropy');\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_11__.convertToTensor)(logits, 'logits', 'softmaxCrossEntropy');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_11__.convertToTensor)(weights, 'weights', 'softmaxCrossEntropy');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_12__.assertShapesMatch)($onehotLabels.shape, $logits.shape, 'Error in softmaxCrossEntropy: ');\n    if (labelSmoothing > 0) {\n        const labelSmoothingScalar = (0,_scalar__WEBPACK_IMPORTED_MODULE_13__.scalar)(labelSmoothing);\n        const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_13__.scalar)(1);\n        const numClasses = (0,_scalar__WEBPACK_IMPORTED_MODULE_13__.scalar)($onehotLabels.shape[1]);\n        $onehotLabels =\n            (0,_add__WEBPACK_IMPORTED_MODULE_14__.add)((0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)($onehotLabels, (0,_sub__WEBPACK_IMPORTED_MODULE_2__.sub)(one, labelSmoothingScalar)), (0,_div__WEBPACK_IMPORTED_MODULE_15__.div)(labelSmoothingScalar, numClasses));\n    }\n    const losses = softmaxCrossEntropyWithLogits_($onehotLabels, $logits);\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_16__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst softmaxCrossEntropy = (0,_operation__WEBPACK_IMPORTED_MODULE_17__.op)({ softmaxCrossEntropy_ });\n//# sourceMappingURL=softmax_cross_entropy.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/softmax_cross_entropy.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"matMul\": () => (/* binding */ matMul)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Computes the dot product of two matrices, A * B. These must be matrices.\n *\n * ```js\n * const a = tf.tensor2d([1, 2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.matMul(b).print();  // or tf.matMul(a, b)\n * ```\n * @param a First matrix in dot product operation.\n * @param b Second matrix in dot product operation.\n * @param transposeA If true, `a` is transposed before multiplication.\n * @param transposeB If true, `b` is transposed before multiplication.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction matMul_(a, b, transposeA = false, transposeB = false) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'matMul');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'matMul');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    const attrs = { transposeA, transposeB };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.BatchMatMul, inputs, attrs);\n}\nconst matMul = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ matMul_ });\n//# sourceMappingURL=mat_mul.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/max.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/max.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"max\": () => (/* binding */ max)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the maximum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.max().print();  // or tf.max(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.max(axis).print();  // or tf.max(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction max_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'max');\n    const inputs = { x: $x };\n    const attrs = { reductionIndices: axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Max, inputs, attrs);\n}\nconst max = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ max_ });\n//# sourceMappingURL=max.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/max.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPool\": () => (/* binding */ maxPool)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction maxPool_(x, filterSize, strides, pad, dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'maxPool');\n    const dilations = 1;\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x4D.rank === 4, () => `Error in maxPool: input must be rank 4 but got rank ${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_4__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_3__.assert(_util__WEBPACK_IMPORTED_MODULE_3__.isInt(pad), () => `Error in maxPool: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.MaxPool, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst maxPool = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ maxPool_ });\n//# sourceMappingURL=max_pool.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPool3d\": () => (/* binding */ maxPool3d)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Computes the 3D max pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.maxPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction maxPool3d_(x, filterSize = [1, 1, 1], strides, pad, dimRoundingMode, dataFormat = 'NDHWC') {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'maxPool3d');\n    let x5D = $x;\n    let reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x5D.rank === 5, () => `Error in maxPool3d: x must be rank 5 but got rank ${x5D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(dataFormat === 'NDHWC', () => `Error in maxPool3d: Only NDHWC is currently supported, ` +\n        `but got dataFormat of ${dataFormat}`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_3__.assert(_util__WEBPACK_IMPORTED_MODULE_3__.isInt(pad), () => `Error in maxPool3d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x5D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode, dataFormat };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.MaxPool3D, inputs, attrs);\n    if (reshapedTo5D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nconst maxPool3d = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ maxPool3d_ });\n//# sourceMappingURL=max_pool_3d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPoolWithArgmax\": () => (/* binding */ maxPoolWithArgmax)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the 2D max pooling of an image with Argmax index.\n * The indices in argmax are flattened, so that a maximum value at position `[b,\n * y, x, c]` becomes flattened index: `(y * width + x) * channels + c` if\n * include_batch_in_index is False; `((b * height + y) * width + x) * channels\n * +c` if include_batch_in_index is True.\n *\n * The indices returned are always in `[0, height) x [0, width)` before\n * flattening.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param includeBatchIndex Defaults to False. Whether to include batch\n *    dimension in flattened index of argmax.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction maxPoolWithArgmax_(x, filterSize, strides, pad, includeBatchInIndex = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'maxPoolWithArgmax');\n    const inputs = { x: $x };\n    const attrs = { filterSize, strides, pad, includeBatchInIndex };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.MaxPoolWithArgmax, inputs, attrs);\n    return { result: result[0], indexes: result[1] };\n}\nconst maxPoolWithArgmax = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ maxPoolWithArgmax_ });\n//# sourceMappingURL=max_pool_with_argmax.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maximum\": () => (/* binding */ maximum)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Returns the max of a and b (`a > b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `tf.maximumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * ```js\n * // Broadcast maximum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction maximum_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'maximum');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'maximum');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    if ($a.dtype === 'bool') {\n        $a = (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($a, 'int32');\n        $b = (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($b, 'int32');\n    }\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_4__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.Maximum, inputs);\n}\nconst maximum = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ maximum_ });\n//# sourceMappingURL=maximum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mean\": () => (/* binding */ mean)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the mean of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces `x` along the dimensions given in `axis`. Unless `keepDims` is\n * true, the rank of the `tf.Tensor` is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and a `tf.Tensor` with\n * a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.mean().print();  // or tf.mean(a)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.mean(axis).print();  // or tf.mean(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction mean_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'mean');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Mean, inputs, attrs);\n}\nconst mean = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ mean_ });\n//# sourceMappingURL=mean.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/meshgrid.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/meshgrid.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"meshgrid\": () => (/* binding */ meshgrid)\n/* harmony export */ });\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _ones__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ones */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util_base */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Broadcasts parameters for evaluation on an N-D grid.\n *\n * Given N one-dimensional coordinate arrays `*args`, returns a list `outputs`\n * of N-D coordinate arrays for evaluating expressions on an N-D grid.\n *\n * Notes:\n * `meshgrid` supports cartesian ('xy') and matrix ('ij') indexing conventions.\n * When the `indexing` argument is set to 'xy' (the default), the broadcasting\n * instructions for the first two dimensions are swapped.\n * Examples:\n * Calling `const [X, Y] = meshgrid(x, y)` with the tensors\n *\n * ```javascript\n * const x = [1, 2, 3];\n * const y = [4, 5, 6];\n * const [X, Y] = tf.meshgrid(x, y);\n * // X = [[1, 2, 3],\n * //      [1, 2, 3],\n * //      [1, 2, 3]]\n * // Y = [[4, 4, 4],\n * //      [5, 5, 5],\n * //      [6, 6, 6]]\n * ```\n *\n * @param x Tensor with rank geq 1.\n * @param y Tensor with rank geq 1.\n * @param indexing\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction meshgrid(x, y, { indexing = 'xy' } = {}) {\n    if (indexing !== 'xy' && indexing !== 'ij') {\n        throw new TypeError(`${indexing} is not a valid third argument to meshgrid`);\n    }\n    if (x === undefined) {\n        return [];\n    }\n    let $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'meshgrid', x instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor ? x.dtype : 'float32');\n    if (y === undefined) {\n        return [$x];\n    }\n    let $y = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(y, 'y', 'meshgrid', y instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor ? y.dtype : 'float32');\n    const w = (0,_util_base__WEBPACK_IMPORTED_MODULE_2__.sizeFromShape)($x.shape);\n    const h = (0,_util_base__WEBPACK_IMPORTED_MODULE_2__.sizeFromShape)($y.shape);\n    if (indexing === 'xy') {\n        $x = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($x, [1, -1]);\n        $y = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($y, [-1, 1]);\n        return [\n            (0,_mat_mul__WEBPACK_IMPORTED_MODULE_4__.matMul)((0,_ones__WEBPACK_IMPORTED_MODULE_5__.ones)([h, 1], $x.dtype), $x),\n            (0,_mat_mul__WEBPACK_IMPORTED_MODULE_4__.matMul)($y, (0,_ones__WEBPACK_IMPORTED_MODULE_5__.ones)([1, w], $y.dtype)),\n        ];\n    }\n    $x = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($x, [-1, 1]);\n    $y = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($y, [1, -1]);\n    return [\n        (0,_mat_mul__WEBPACK_IMPORTED_MODULE_4__.matMul)($x, (0,_ones__WEBPACK_IMPORTED_MODULE_5__.ones)([1, h], $x.dtype)),\n        (0,_mat_mul__WEBPACK_IMPORTED_MODULE_4__.matMul)((0,_ones__WEBPACK_IMPORTED_MODULE_5__.ones)([w, 1], $y.dtype), $y),\n    ];\n}\n//# sourceMappingURL=meshgrid.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/meshgrid.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/min.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/min.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"min\": () => (/* binding */ min)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the minimum value from the input.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axes`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axes` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.min().print();  // or tf.min(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.min(axis).print();  // or tf.min(x, axis)\n * ```\n *\n * @param x The input Tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction min_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'min');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Min, inputs, attrs);\n}\nconst min = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ min_ });\n//# sourceMappingURL=min.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/min.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"minimum\": () => (/* binding */ minimum)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/**\n * Returns the min of a and b (`a < b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `minimumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * ```js\n * // Broadcast minimum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction minimum_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'minimum');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'minimum');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    if ($a.dtype === 'bool') {\n        $a = (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($a, 'int32');\n        $b = (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($b, 'int32');\n    }\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_4__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.Minimum, inputs);\n}\nconst minimum = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ minimum_ });\n//# sourceMappingURL=minimum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mirrorPad\": () => (/* binding */ mirrorPad)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Pads a `tf.Tensor` using mirror padding.\n *\n * This operation implements the `REFLECT` and `SYMMETRIC` modes of pad.\n *\n * ```js\n * const x = tf.range(0, 9).reshape([1, 1, 3, 3]);\n * x.mirrorPad([[0, 0], [0, 0], [2, 2], [2, 2]], 'reflect').print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * In \"reflect\" mode, the padded regions do not include the borders,\n * while in \"symmetric\" mode the padded regions do include the borders.\n * For example, if the input is `[1, 2, 3]` and paddings is `[0, 2]`,\n * then the output is `[1, 2, 3, 2, 1]` in \"reflect\" mode, and\n * `[1, 2, 3, 3, 2]` in \"symmetric\" mode.\n * If `mode` is \"reflect\" then both `paddings[D, 0]` and `paddings[D, 1]`\n * must be no greater than `x.shape[D] - 1`. If mode is \"symmetric\"\n * then both `paddings[D, 0]` and `paddings[D, 1]` must be no greater than\n * `x.shape[D]`\n * @param mode String to specify padding mode. Can be `'reflect' | 'symmetric'`\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction mirrorPad_(x, paddings, mode) {\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(mode === 'reflect' || mode === 'symmetric', () => `Invalid mode. Mode must be either reflect or symmetric. ` +\n        `Got ${mode}.`);\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_2__.convertToTensor)(x, 'x', 'mirrorPad');\n    if ($x.rank === 0) {\n        throw new Error('mirrorPad(scalar) is not defined. ' +\n            'Pass non-scalar to mirrorPad');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(paddings.length === $x.rank, () => `Padding doesn't match input. Must be ${$x.rank}. ` +\n        `Got ${paddings.length}.`);\n    const shapeOffset = mode === 'reflect' ? 1 : 0;\n    for (let i = 0; i < $x.rank; i++) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert(paddings[i].length === 2, () => `Invalid number of paddings. Must be length of 2 each.`);\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert(paddings[i][0] >= 0 && paddings[i][0] <= $x.shape[i] - shapeOffset &&\n            paddings[i][1] >= 0 && paddings[i][1] <= $x.shape[i] - shapeOffset, () => `Padding in dimension ${i} cannot be greater than or equal ` +\n            `to ${$x.shape[i] - shapeOffset} or less than 0 for input of ` +\n            `shape ${$x.shape}`);\n    }\n    const attrs = { paddings, mode };\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.MirrorPad, inputs, attrs);\n}\nconst mirrorPad = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ mirrorPad_ });\n//# sourceMappingURL=mirror_pad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mod\": () => (/* binding */ mod)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Returns the mod of a and b element-wise.\n * `floor(x / y) * y + mod(x, y) = x`\n * Supports broadcasting.\n *\n * We also expose `tf.modStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * ```js\n * // Broadcast a mod b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction mod_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'mod');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'mod');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Mod, inputs);\n}\nconst mod = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ mod_ });\n//# sourceMappingURL=mod.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"moments\": () => (/* binding */ moments)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _axis_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./axis_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _mean__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mean */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _square__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n/**\n * Calculates the mean and variance of `x`. The mean and variance are\n * calculated by aggregating the contents of `x` across `axes`. If `x` is\n * 1-D and `axes = [0]` this is just the mean and variance of a vector.\n *\n * @param x The input tensor.\n * @param axis The dimension(s) along with to compute mean and\n *     variance. By default it reduces all dimensions.\n * @param keepDims If true, the moments have the same dimensionality as the\n *     input.\n * @return An object with two keys: `mean` and `variance`.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction moments_(x, axis = null, keepDims = false) {\n    x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'moments');\n    const axes = (0,_util__WEBPACK_IMPORTED_MODULE_1__.parseAxisParam)(axis, x.shape);\n    const xMean = (0,_mean__WEBPACK_IMPORTED_MODULE_2__.mean)(x, axes, keepDims);\n    let keepDimsShape = xMean.shape;\n    if (!keepDims) {\n        keepDimsShape = (0,_axis_util__WEBPACK_IMPORTED_MODULE_3__.expandShapeToKeepDim)(xMean.shape, axes);\n    }\n    const devSquared = (0,_square__WEBPACK_IMPORTED_MODULE_4__.square)((0,_sub__WEBPACK_IMPORTED_MODULE_5__.sub)((0,_cast__WEBPACK_IMPORTED_MODULE_6__.cast)(x, 'float32'), (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)(xMean, keepDimsShape)));\n    const variance = (0,_mean__WEBPACK_IMPORTED_MODULE_2__.mean)(devSquared, axes, keepDims);\n    return { mean: xMean, variance };\n}\nconst moments = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ moments_ });\n//# sourceMappingURL=moments.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"movingAverage\": () => (/* binding */ movingAverage)\n/* harmony export */ });\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pow */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Compute the moving average of a variable.\n *\n * Without zeroDebias, the moving average operation is defined by:\n *   `v += delta`\n * where\n *   `delta = (1 - decay) * (x - v)`\n *\n * With zeroDebias (default), the `delta` term is scaled to debias the\n * effect of the (assumed) zero-initialization of `v`.\n *   `delta /= (1 - decay ^ step)`\n *\n * For more details on the zero-debiasing algorithm, see:\n *   https://arxiv.org/abs/1412.6980\n *\n * Note that this function is completely stateless and does not keep track of\n * step count. The step count needs to be maintained by the caller and passed\n * in as `step`.\n *\n * @param v The current moving average value.\n * @param x New input value, must have the same shape and dtype as `v`.\n * @param decay The decay factor. Typical values are 0.95 and 0.99.\n * @param step Step count.\n * @param zeroDebias: Whether zeroDebias is to be performed (default: `true`).\n * @returns The new moving average value.\n *\n * @doc {heading: 'Operations', subheading: 'Moving Average'}\n */\nfunction movingAverage_(v, x, decay, step, zeroDebias = true) {\n    const $v = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(v, 'v', 'movingAverage');\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'movingAverage');\n    const $decay = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(decay, 'decay', 'movingAverage');\n    (0,_tensor_util__WEBPACK_IMPORTED_MODULE_1__.assertTypesMatch)($v, $x);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.arraysEqual($v.shape, $x.shape), () => 'Shape mismatch in v and x');\n    const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(1);\n    const oneMinusDecay = (0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(one, $decay);\n    let update = (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)($x, $v), oneMinusDecay);\n    if (zeroDebias) {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(step != null, () => 'When using zeroDebias: true, step is required.');\n        const $step = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(step, 'step', 'movingAverage');\n        update = (0,_div__WEBPACK_IMPORTED_MODULE_6__.div)(update, (0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(one, (0,_pow__WEBPACK_IMPORTED_MODULE_7__.pow)($decay, $step)));\n    }\n    return (0,_add__WEBPACK_IMPORTED_MODULE_8__.add)($v, update);\n}\nconst movingAverage = (0,_operation__WEBPACK_IMPORTED_MODULE_9__.op)({ movingAverage_ });\n//# sourceMappingURL=moving_average.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mul\": () => (/* binding */ mul)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B. Supports broadcasting.\n *\n * We also expose `tf.mulStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([2, 3, 4, 5]);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n *\n * ```js\n * // Broadcast mul a with b.\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.scalar(5);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n * @param a The first tensor to multiply.\n * @param b The second tensor to multiply. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction mul_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'mul');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'mul');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Multiply, inputs);\n}\nconst mul = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ mul_ });\n//# sourceMappingURL=mul.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multiRNNCell\": () => (/* binding */ multiRNNCell)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n\n\n/**\n * Computes the next states and outputs of a stack of LSTMCells.\n *\n * Each cell output is used as input to the next cell.\n *\n * Returns `[cellState, cellOutput]`.\n *\n * Derived from tf.contrib.rn.MultiRNNCell.\n *\n * @param lstmCells Array of LSTMCell functions.\n * @param data The input to the cell.\n * @param c Array of previous cell states.\n * @param h Array of previous cell outputs.\n *\n * @doc {heading: 'Operations', subheading: 'RNN'}\n */\nfunction multiRNNCell_(lstmCells, data, c, h) {\n    const $data = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(data, 'data', 'multiRNNCell');\n    const $c = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensorArray)(c, 'c', 'multiRNNCell');\n    const $h = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensorArray)(h, 'h', 'multiRNNCell');\n    let input = $data;\n    const newStates = [];\n    for (let i = 0; i < lstmCells.length; i++) {\n        const output = lstmCells[i](input, $c[i], $h[i]);\n        newStates.push(output[0]);\n        newStates.push(output[1]);\n        input = output[1];\n    }\n    const newC = [];\n    const newH = [];\n    for (let i = 0; i < newStates.length; i += 2) {\n        newC.push(newStates[i]);\n        newH.push(newStates[i + 1]);\n    }\n    return [newC, newH];\n}\nconst multiRNNCell = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ multiRNNCell_ });\n//# sourceMappingURL=multi_rnn_cell.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multinomial\": () => (/* binding */ multinomial)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Creates a `tf.Tensor` with values drawn from a multinomial distribution.\n *\n * ```js\n * const probs = tf.tensor([.75, .25]);\n * tf.multinomial(probs, 3).print();\n * ```\n *\n * @param logits 1D array with unnormalized log-probabilities, or\n *     2D array of shape `[batchSize, numOutcomes]`. See the `normalized`\n *     parameter.\n * @param numSamples Number of samples to draw for each row slice.\n * @param seed The seed number.\n * @param normalized Whether the provided `logits` are normalized true\n *     probabilities (sum to 1). Defaults to false.\n * @return 1D array of shape `[numSamples]`, or 2D array of shape\n *     `[batchSize, numSamples]`, depending on the rank of the input.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction multinomial_(logits, numSamples, seed, normalized = false) {\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(logits, 'logits', 'multinomial');\n    const numOutcomes = $logits.size;\n    const origRank = $logits.rank;\n    if (numOutcomes < 2) {\n        throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ` +\n            `${numOutcomes}.`);\n    }\n    if (origRank > 2) {\n        throw new Error(`Rank of probabilities must be 1 or 2, but is ${origRank}`);\n    }\n    // TODO(lina128): Investigate correct seed behavior. The code seems not allow\n    // setting see to 0.\n    seed = seed || Math.random();\n    // The kernel only accepts (and returns) rank 2 tensors.\n    const logits2D = origRank === 1 ? (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($logits, [1, -1]) : $logits;\n    const inputs = { logits: logits2D };\n    const attrs = { numSamples, seed, normalized };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Multinomial, inputs, attrs);\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    return origRank === 1 ? (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.size]) : res;\n}\nconst multinomial = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ multinomial_ });\n//# sourceMappingURL=multinomial.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"neg\": () => (/* binding */ neg)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes `-1 * x` element-wise.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, -2, 0], [2, 2]);\n *\n * x.neg().print();  // or tf.neg(x)\n * ```\n *\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction neg_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'neg');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Neg, inputs);\n}\nconst neg = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ neg_ });\n//# sourceMappingURL=neg.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppSanityCheck\": () => (/* binding */ nonMaxSuppSanityCheck)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction nonMaxSuppSanityCheck(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n    if (iouThreshold == null) {\n        iouThreshold = 0.5;\n    }\n    if (scoreThreshold == null) {\n        scoreThreshold = Number.NEGATIVE_INFINITY;\n    }\n    if (softNmsSigma == null) {\n        softNmsSigma = 0.0;\n    }\n    const numBoxes = boxes.shape[0];\n    maxOutputSize = Math.min(maxOutputSize, numBoxes);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(0 <= iouThreshold && iouThreshold <= 1, () => `iouThreshold must be in [0, 1], but was '${iouThreshold}'`);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(boxes.rank === 2, () => `boxes must be a 2D tensor, but was of rank '${boxes.rank}'`);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(boxes.shape[1] === 4, () => `boxes must have 4 columns, but 2nd dimension was ${boxes.shape[1]}`);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(scores.rank === 1, () => 'scores must be a 1D tensor');\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(scores.shape[0] === numBoxes, () => `scores has incompatible shape with boxes. Expected ${numBoxes}, ` +\n        `but was ${scores.shape[0]}`);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(0 <= softNmsSigma && softNmsSigma <= 1, () => `softNmsSigma must be in [0, 1], but was '${softNmsSigma}'`);\n    return { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma };\n}\n\n//# sourceMappingURL=nonmax_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"norm\": () => (/* binding */ norm)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _abs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _axis_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./axis_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js\");\n/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./max */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max.js\");\n/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./min */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/min.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pow */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sqrt__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./sqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _square__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the norm of scalar, vectors, and matrices.\n * This function can compute several different vector norms (the 1-norm, the\n * Euclidean or 2-norm, the inf-norm, and in general the p-norm for p > 0)\n * and matrix norms (Frobenius, 1-norm, and inf-norm).\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.norm().print();  // or tf.norm(x)\n * ```\n *\n * @param x The input array.\n * @param ord Optional. Order of the norm. Supported norm types are\n * following:\n *\n *  | ord        | norm for matrices         | norm for vectors\n *  |------------|---------------------------|---------------------\n *  |'euclidean' |Frobenius norm             |2-norm\n *  |'fro'       |Frobenius norm\t           |\n *  |Infinity    |max(sum(abs(x), axis=1))   |max(abs(x))\n *  |-Infinity   |min(sum(abs(x), axis=1))   |min(abs(x))\n *  |1           |max(sum(abs(x), axis=0))   |sum(abs(x))\n *  |2           |                           |sum(abs(x)^2)^1/2*\n *\n * @param axis Optional. If axis is null (the default), the input is\n * considered a vector and a single vector norm is computed over the entire\n * set of values in the Tensor, i.e. norm(x, ord) is equivalent\n * to norm(x.reshape([-1]), ord). If axis is a integer, the input\n * is considered a batch of vectors, and axis determines the axis in x\n * over which to compute vector norms. If axis is a 2-tuple of integer it is\n * considered a batch of matrices and axis determines the axes in NDArray\n * over which to compute a matrix norm.\n * @param keepDims Optional. If true, the norm have the same dimensionality\n * as the input.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction norm_(x, ord = 'euclidean', axis = null, keepDims = false) {\n    x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'norm');\n    const norm = normImpl(x, ord, axis);\n    let keepDimsShape = norm.shape;\n    if (keepDims) {\n        const axes = (0,_util__WEBPACK_IMPORTED_MODULE_1__.parseAxisParam)(axis, x.shape);\n        keepDimsShape = _axis_util__WEBPACK_IMPORTED_MODULE_2__.expandShapeToKeepDim(norm.shape, axes);\n    }\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(norm, keepDimsShape);\n}\nfunction normImpl(x, p, axis = null) {\n    if (x.rank === 0) {\n        return (0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x);\n    }\n    // consider vector when no axis is specified\n    if (x.rank !== 1 && axis === null) {\n        return normImpl((0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(x, [-1]), p, axis);\n    }\n    // vector\n    if (x.rank === 1 || typeof axis === 'number' ||\n        Array.isArray(axis) && axis.length === 1) {\n        if (p === 1) {\n            return (0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis);\n        }\n        if (p === Infinity) {\n            return (0,_max__WEBPACK_IMPORTED_MODULE_6__.max)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis);\n        }\n        if (p === -Infinity) {\n            return (0,_min__WEBPACK_IMPORTED_MODULE_7__.min)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis);\n        }\n        if (p === 'euclidean' || p === 2) {\n            // norm(x, 2) = sum(abs(xi) ^ 2) ^ 1/2\n            return (0,_sqrt__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_pow__WEBPACK_IMPORTED_MODULE_9__.pow)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), (0,_scalar__WEBPACK_IMPORTED_MODULE_10__.scalar)(2, 'int32')), axis));\n        }\n        throw new Error(`Error in norm: invalid ord value: ${p}`);\n    }\n    // matrix (assumption axis[0] < axis[1])\n    if (Array.isArray(axis) && axis.length === 2) {\n        if (p === 1) {\n            return (0,_max__WEBPACK_IMPORTED_MODULE_6__.max)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis[0]), axis[1] - 1);\n        }\n        if (p === Infinity) {\n            return (0,_max__WEBPACK_IMPORTED_MODULE_6__.max)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis[1]), axis[0]);\n        }\n        if (p === -Infinity) {\n            return (0,_min__WEBPACK_IMPORTED_MODULE_7__.min)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis[1]), axis[0]);\n        }\n        if (p === 'fro' || p === 'euclidean') {\n            // norm(x) = sqrt(sum(pow(x, 2)))\n            return (0,_sqrt__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_square__WEBPACK_IMPORTED_MODULE_11__.square)(x), axis));\n        }\n        throw new Error(`Error in norm: invalid ord value: ${p}`);\n    }\n    throw new Error(`Error in norm: invalid axis: ${axis}`);\n}\nconst norm = (0,_operation__WEBPACK_IMPORTED_MODULE_12__.op)({ norm_ });\n//# sourceMappingURL=norm.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"notEqual\": () => (/* binding */ notEqual)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Returns the truth value of (a != b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([0, 2, 3]);\n *\n * a.notEqual(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction notEqual_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'notEqual', 'string_or_numeric');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'notEqual', 'string_or_numeric');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.NotEqual, inputs);\n}\nconst notEqual = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ notEqual_ });\n//# sourceMappingURL=not_equal.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"oneHot\": () => (/* binding */ oneHot)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Creates a one-hot `tf.Tensor`. The locations represented by `indices` take\n * value `onValue` (defaults to 1), while all other locations take value\n * `offValue` (defaults to 0). If `indices` is rank `R`, the output has rank\n * `R+1` with the last axis of size `depth`.\n *\n * ```js\n * tf.oneHot(tf.tensor1d([0, 1], 'int32'), 3).print();\n * ```\n *\n * @param indices `tf.Tensor` of indices with dtype `int32`.\n * @param depth The depth of the one hot dimension.\n * @param onValue A number used to fill in the output when the index matches\n * the location.\n * @param offValue A number used to fill in the output when the index does\n *     not match the location.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction oneHot_(indices, depth, onValue = 1, offValue = 0) {\n    if (depth < 2) {\n        throw new Error(`Error in oneHot: depth must be >=2, but it is ${depth}`);\n    }\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'oneHot', 'int32');\n    const inputs = { indices: $indices };\n    const attrs = { depth, onValue, offValue };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.OneHot, inputs, attrs);\n}\nconst oneHot = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ oneHot_ });\n//# sourceMappingURL=one_hot.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ones\": () => (/* binding */ ones)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _complex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _zeros__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./zeros */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Creates a `tf.Tensor` with all elements set to 1.\n *\n * ```js\n * tf.ones([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n *     'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction ones(shape, dtype = 'float32') {\n    if (dtype === 'complex64') {\n        const real = ones(shape, 'float32');\n        const imag = (0,_zeros__WEBPACK_IMPORTED_MODULE_1__.zeros)(shape, 'float32');\n        return (0,_complex__WEBPACK_IMPORTED_MODULE_2__.complex)(real, imag);\n    }\n    const values = (0,_util__WEBPACK_IMPORTED_MODULE_3__.makeOnesTypedArray)((0,_util__WEBPACK_IMPORTED_MODULE_3__.sizeFromShape)(shape), dtype);\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=ones.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onesLike\": () => (/* binding */ onesLike)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Creates a `tf.Tensor` with all elements set to 1 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.onesLike(x).print();\n * ```\n * @param x A tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction onesLike_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'onesLike');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.OnesLike, inputs);\n}\nconst onesLike = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ onesLike_ });\n//# sourceMappingURL=ones_like.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OP_SCOPE_SUFFIX\": () => (/* binding */ OP_SCOPE_SUFFIX),\n/* harmony export */   \"op\": () => (/* binding */ op)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nconst OP_SCOPE_SUFFIX = '__op';\n/**\n * Used for wrapping functions that perform math operations on\n * Tensors. The function will be wrapped in a named scope that cleans all\n * memory usage after the function is done.\n */\nfunction op(f) {\n    const keys = Object.keys(f);\n    if (keys.length !== 1) {\n        throw new Error(`Please provide an object with a single key ` +\n            `(operation name) mapping to a function. Got an object with ` +\n            `${keys.length} keys.`);\n    }\n    let opName = keys[0];\n    const fn = f[opName];\n    // Strip the underscore from the end of the function name.\n    if (opName.endsWith('_')) {\n        opName = opName.substring(0, opName.length - 1);\n    }\n    // add an __op suffix to distinguish ops from kernels in tf.profile\n    opName = opName + OP_SCOPE_SUFFIX;\n    // tslint:disable-next-line:no-any\n    const f2 = (...args) => {\n        _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.startScope(opName);\n        try {\n            const result = fn(...args);\n            if ((0,_util__WEBPACK_IMPORTED_MODULE_1__.isPromise)(result)) {\n                console.error('Cannot return a Promise inside of tidy.');\n            }\n            _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.endScope(result);\n            return result;\n        }\n        catch (ex) {\n            _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.endScope(null);\n            throw ex;\n        }\n    };\n    Object.defineProperty(f2, 'name', { value: opName, configurable: true });\n    // tslint:disable-next-line:no-any\n    return f2;\n}\n//# sourceMappingURL=operation.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"abs\": () => (/* reexport safe */ _abs__WEBPACK_IMPORTED_MODULE_0__.abs),\n/* harmony export */   \"acos\": () => (/* reexport safe */ _acos__WEBPACK_IMPORTED_MODULE_1__.acos),\n/* harmony export */   \"acosh\": () => (/* reexport safe */ _acosh__WEBPACK_IMPORTED_MODULE_2__.acosh),\n/* harmony export */   \"add\": () => (/* reexport safe */ _add__WEBPACK_IMPORTED_MODULE_3__.add),\n/* harmony export */   \"addN\": () => (/* reexport safe */ _add_n__WEBPACK_IMPORTED_MODULE_4__.addN),\n/* harmony export */   \"all\": () => (/* reexport safe */ _all__WEBPACK_IMPORTED_MODULE_5__.all),\n/* harmony export */   \"any\": () => (/* reexport safe */ _any__WEBPACK_IMPORTED_MODULE_6__.any),\n/* harmony export */   \"argMax\": () => (/* reexport safe */ _arg_max__WEBPACK_IMPORTED_MODULE_7__.argMax),\n/* harmony export */   \"argMin\": () => (/* reexport safe */ _arg_min__WEBPACK_IMPORTED_MODULE_8__.argMin),\n/* harmony export */   \"asin\": () => (/* reexport safe */ _asin__WEBPACK_IMPORTED_MODULE_9__.asin),\n/* harmony export */   \"asinh\": () => (/* reexport safe */ _asinh__WEBPACK_IMPORTED_MODULE_10__.asinh),\n/* harmony export */   \"atan\": () => (/* reexport safe */ _atan__WEBPACK_IMPORTED_MODULE_11__.atan),\n/* harmony export */   \"atan2\": () => (/* reexport safe */ _atan2__WEBPACK_IMPORTED_MODULE_12__.atan2),\n/* harmony export */   \"atanh\": () => (/* reexport safe */ _atanh__WEBPACK_IMPORTED_MODULE_13__.atanh),\n/* harmony export */   \"avgPool\": () => (/* reexport safe */ _avg_pool__WEBPACK_IMPORTED_MODULE_14__.avgPool),\n/* harmony export */   \"avgPool3d\": () => (/* reexport safe */ _avg_pool_3d__WEBPACK_IMPORTED_MODULE_15__.avgPool3d),\n/* harmony export */   \"basicLSTMCell\": () => (/* reexport safe */ _basic_lstm_cell__WEBPACK_IMPORTED_MODULE_16__.basicLSTMCell),\n/* harmony export */   \"batchToSpaceND\": () => (/* reexport safe */ _batch_to_space_nd__WEBPACK_IMPORTED_MODULE_17__.batchToSpaceND),\n/* harmony export */   \"batchNorm\": () => (/* reexport safe */ _batchnorm__WEBPACK_IMPORTED_MODULE_18__.batchNorm),\n/* harmony export */   \"batchNorm2d\": () => (/* reexport safe */ _batchnorm2d__WEBPACK_IMPORTED_MODULE_19__.batchNorm2d),\n/* harmony export */   \"batchNorm3d\": () => (/* reexport safe */ _batchnorm3d__WEBPACK_IMPORTED_MODULE_20__.batchNorm3d),\n/* harmony export */   \"batchNorm4d\": () => (/* reexport safe */ _batchnorm4d__WEBPACK_IMPORTED_MODULE_21__.batchNorm4d),\n/* harmony export */   \"bincount\": () => (/* reexport safe */ _bincount__WEBPACK_IMPORTED_MODULE_22__.bincount),\n/* harmony export */   \"broadcastTo\": () => (/* reexport safe */ _broadcast_to__WEBPACK_IMPORTED_MODULE_23__.broadcastTo),\n/* harmony export */   \"buffer\": () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_24__.buffer),\n/* harmony export */   \"cast\": () => (/* reexport safe */ _cast__WEBPACK_IMPORTED_MODULE_25__.cast),\n/* harmony export */   \"ceil\": () => (/* reexport safe */ _ceil__WEBPACK_IMPORTED_MODULE_26__.ceil),\n/* harmony export */   \"clipByValue\": () => (/* reexport safe */ _clip_by_value__WEBPACK_IMPORTED_MODULE_27__.clipByValue),\n/* harmony export */   \"clone\": () => (/* reexport safe */ _clone__WEBPACK_IMPORTED_MODULE_28__.clone),\n/* harmony export */   \"complex\": () => (/* reexport safe */ _complex__WEBPACK_IMPORTED_MODULE_29__.complex),\n/* harmony export */   \"concat\": () => (/* reexport safe */ _concat__WEBPACK_IMPORTED_MODULE_30__.concat),\n/* harmony export */   \"concat1d\": () => (/* reexport safe */ _concat_1d__WEBPACK_IMPORTED_MODULE_31__.concat1d),\n/* harmony export */   \"concat2d\": () => (/* reexport safe */ _concat_2d__WEBPACK_IMPORTED_MODULE_32__.concat2d),\n/* harmony export */   \"concat3d\": () => (/* reexport safe */ _concat_3d__WEBPACK_IMPORTED_MODULE_33__.concat3d),\n/* harmony export */   \"concat4d\": () => (/* reexport safe */ _concat_4d__WEBPACK_IMPORTED_MODULE_34__.concat4d),\n/* harmony export */   \"conv1d\": () => (/* reexport safe */ _conv1d__WEBPACK_IMPORTED_MODULE_35__.conv1d),\n/* harmony export */   \"conv2d\": () => (/* reexport safe */ _conv2d__WEBPACK_IMPORTED_MODULE_36__.conv2d),\n/* harmony export */   \"conv2dTranspose\": () => (/* reexport safe */ _conv2d_transpose__WEBPACK_IMPORTED_MODULE_37__.conv2dTranspose),\n/* harmony export */   \"conv3d\": () => (/* reexport safe */ _conv3d__WEBPACK_IMPORTED_MODULE_38__.conv3d),\n/* harmony export */   \"conv3dTranspose\": () => (/* reexport safe */ _conv3d_transpose__WEBPACK_IMPORTED_MODULE_39__.conv3dTranspose),\n/* harmony export */   \"cos\": () => (/* reexport safe */ _cos__WEBPACK_IMPORTED_MODULE_40__.cos),\n/* harmony export */   \"cosh\": () => (/* reexport safe */ _cosh__WEBPACK_IMPORTED_MODULE_41__.cosh),\n/* harmony export */   \"cumsum\": () => (/* reexport safe */ _cumsum__WEBPACK_IMPORTED_MODULE_42__.cumsum),\n/* harmony export */   \"denseBincount\": () => (/* reexport safe */ _dense_bincount__WEBPACK_IMPORTED_MODULE_43__.denseBincount),\n/* harmony export */   \"depthToSpace\": () => (/* reexport safe */ _depth_to_space__WEBPACK_IMPORTED_MODULE_44__.depthToSpace),\n/* harmony export */   \"depthwiseConv2d\": () => (/* reexport safe */ _depthwise_conv2d__WEBPACK_IMPORTED_MODULE_45__.depthwiseConv2d),\n/* harmony export */   \"diag\": () => (/* reexport safe */ _diag__WEBPACK_IMPORTED_MODULE_46__.diag),\n/* harmony export */   \"dilation2d\": () => (/* reexport safe */ _dilation2d__WEBPACK_IMPORTED_MODULE_47__.dilation2d),\n/* harmony export */   \"div\": () => (/* reexport safe */ _div__WEBPACK_IMPORTED_MODULE_48__.div),\n/* harmony export */   \"divNoNan\": () => (/* reexport safe */ _div_no_nan__WEBPACK_IMPORTED_MODULE_49__.divNoNan),\n/* harmony export */   \"dot\": () => (/* reexport safe */ _dot__WEBPACK_IMPORTED_MODULE_50__.dot),\n/* harmony export */   \"einsum\": () => (/* reexport safe */ _einsum__WEBPACK_IMPORTED_MODULE_51__.einsum),\n/* harmony export */   \"elu\": () => (/* reexport safe */ _elu__WEBPACK_IMPORTED_MODULE_52__.elu),\n/* harmony export */   \"equal\": () => (/* reexport safe */ _equal__WEBPACK_IMPORTED_MODULE_53__.equal),\n/* harmony export */   \"erf\": () => (/* reexport safe */ _erf__WEBPACK_IMPORTED_MODULE_54__.erf),\n/* harmony export */   \"exp\": () => (/* reexport safe */ _exp__WEBPACK_IMPORTED_MODULE_55__.exp),\n/* harmony export */   \"expandDims\": () => (/* reexport safe */ _expand_dims__WEBPACK_IMPORTED_MODULE_56__.expandDims),\n/* harmony export */   \"expm1\": () => (/* reexport safe */ _expm1__WEBPACK_IMPORTED_MODULE_57__.expm1),\n/* harmony export */   \"eye\": () => (/* reexport safe */ _eye__WEBPACK_IMPORTED_MODULE_58__.eye),\n/* harmony export */   \"fill\": () => (/* reexport safe */ _fill__WEBPACK_IMPORTED_MODULE_59__.fill),\n/* harmony export */   \"floor\": () => (/* reexport safe */ _floor__WEBPACK_IMPORTED_MODULE_60__.floor),\n/* harmony export */   \"floorDiv\": () => (/* reexport safe */ _floorDiv__WEBPACK_IMPORTED_MODULE_61__.floorDiv),\n/* harmony export */   \"gather\": () => (/* reexport safe */ _gather__WEBPACK_IMPORTED_MODULE_62__.gather),\n/* harmony export */   \"greater\": () => (/* reexport safe */ _greater__WEBPACK_IMPORTED_MODULE_63__.greater),\n/* harmony export */   \"greaterEqual\": () => (/* reexport safe */ _greater_equal__WEBPACK_IMPORTED_MODULE_64__.greaterEqual),\n/* harmony export */   \"imag\": () => (/* reexport safe */ _imag__WEBPACK_IMPORTED_MODULE_65__.imag),\n/* harmony export */   \"isFinite\": () => (/* reexport safe */ _is_finite__WEBPACK_IMPORTED_MODULE_66__.isFinite),\n/* harmony export */   \"isInf\": () => (/* reexport safe */ _is_inf__WEBPACK_IMPORTED_MODULE_67__.isInf),\n/* harmony export */   \"isNaN\": () => (/* reexport safe */ _is_nan__WEBPACK_IMPORTED_MODULE_68__.isNaN),\n/* harmony export */   \"leakyRelu\": () => (/* reexport safe */ _leaky_relu__WEBPACK_IMPORTED_MODULE_69__.leakyRelu),\n/* harmony export */   \"less\": () => (/* reexport safe */ _less__WEBPACK_IMPORTED_MODULE_70__.less),\n/* harmony export */   \"lessEqual\": () => (/* reexport safe */ _less_equal__WEBPACK_IMPORTED_MODULE_71__.lessEqual),\n/* harmony export */   \"linspace\": () => (/* reexport safe */ _linspace__WEBPACK_IMPORTED_MODULE_72__.linspace),\n/* harmony export */   \"localResponseNormalization\": () => (/* reexport safe */ _local_response_normalization__WEBPACK_IMPORTED_MODULE_73__.localResponseNormalization),\n/* harmony export */   \"log\": () => (/* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_74__.log),\n/* harmony export */   \"log1p\": () => (/* reexport safe */ _log1p__WEBPACK_IMPORTED_MODULE_75__.log1p),\n/* harmony export */   \"logSigmoid\": () => (/* reexport safe */ _log_sigmoid__WEBPACK_IMPORTED_MODULE_76__.logSigmoid),\n/* harmony export */   \"logSoftmax\": () => (/* reexport safe */ _log_softmax__WEBPACK_IMPORTED_MODULE_77__.logSoftmax),\n/* harmony export */   \"logSumExp\": () => (/* reexport safe */ _log_sum_exp__WEBPACK_IMPORTED_MODULE_78__.logSumExp),\n/* harmony export */   \"logicalAnd\": () => (/* reexport safe */ _logical_and__WEBPACK_IMPORTED_MODULE_79__.logicalAnd),\n/* harmony export */   \"logicalNot\": () => (/* reexport safe */ _logical_not__WEBPACK_IMPORTED_MODULE_80__.logicalNot),\n/* harmony export */   \"logicalOr\": () => (/* reexport safe */ _logical_or__WEBPACK_IMPORTED_MODULE_81__.logicalOr),\n/* harmony export */   \"logicalXor\": () => (/* reexport safe */ _logical_xor__WEBPACK_IMPORTED_MODULE_82__.logicalXor),\n/* harmony export */   \"matMul\": () => (/* reexport safe */ _mat_mul__WEBPACK_IMPORTED_MODULE_83__.matMul),\n/* harmony export */   \"max\": () => (/* reexport safe */ _max__WEBPACK_IMPORTED_MODULE_84__.max),\n/* harmony export */   \"maxPool\": () => (/* reexport safe */ _max_pool__WEBPACK_IMPORTED_MODULE_85__.maxPool),\n/* harmony export */   \"maxPool3d\": () => (/* reexport safe */ _max_pool_3d__WEBPACK_IMPORTED_MODULE_86__.maxPool3d),\n/* harmony export */   \"maxPoolWithArgmax\": () => (/* reexport safe */ _max_pool_with_argmax__WEBPACK_IMPORTED_MODULE_87__.maxPoolWithArgmax),\n/* harmony export */   \"maximum\": () => (/* reexport safe */ _maximum__WEBPACK_IMPORTED_MODULE_88__.maximum),\n/* harmony export */   \"mean\": () => (/* reexport safe */ _mean__WEBPACK_IMPORTED_MODULE_89__.mean),\n/* harmony export */   \"meshgrid\": () => (/* reexport safe */ _meshgrid__WEBPACK_IMPORTED_MODULE_90__.meshgrid),\n/* harmony export */   \"min\": () => (/* reexport safe */ _min__WEBPACK_IMPORTED_MODULE_91__.min),\n/* harmony export */   \"minimum\": () => (/* reexport safe */ _minimum__WEBPACK_IMPORTED_MODULE_92__.minimum),\n/* harmony export */   \"mirrorPad\": () => (/* reexport safe */ _mirror_pad__WEBPACK_IMPORTED_MODULE_93__.mirrorPad),\n/* harmony export */   \"mod\": () => (/* reexport safe */ _mod__WEBPACK_IMPORTED_MODULE_94__.mod),\n/* harmony export */   \"moments\": () => (/* reexport safe */ _moments__WEBPACK_IMPORTED_MODULE_95__.moments),\n/* harmony export */   \"mul\": () => (/* reexport safe */ _mul__WEBPACK_IMPORTED_MODULE_96__.mul),\n/* harmony export */   \"multiRNNCell\": () => (/* reexport safe */ _multi_rnn_cell__WEBPACK_IMPORTED_MODULE_97__.multiRNNCell),\n/* harmony export */   \"multinomial\": () => (/* reexport safe */ _multinomial__WEBPACK_IMPORTED_MODULE_98__.multinomial),\n/* harmony export */   \"neg\": () => (/* reexport safe */ _neg__WEBPACK_IMPORTED_MODULE_99__.neg),\n/* harmony export */   \"notEqual\": () => (/* reexport safe */ _not_equal__WEBPACK_IMPORTED_MODULE_100__.notEqual),\n/* harmony export */   \"oneHot\": () => (/* reexport safe */ _one_hot__WEBPACK_IMPORTED_MODULE_101__.oneHot),\n/* harmony export */   \"ones\": () => (/* reexport safe */ _ones__WEBPACK_IMPORTED_MODULE_102__.ones),\n/* harmony export */   \"onesLike\": () => (/* reexport safe */ _ones_like__WEBPACK_IMPORTED_MODULE_103__.onesLike),\n/* harmony export */   \"outerProduct\": () => (/* reexport safe */ _outer_product__WEBPACK_IMPORTED_MODULE_104__.outerProduct),\n/* harmony export */   \"pad\": () => (/* reexport safe */ _pad__WEBPACK_IMPORTED_MODULE_105__.pad),\n/* harmony export */   \"pad1d\": () => (/* reexport safe */ _pad1d__WEBPACK_IMPORTED_MODULE_106__.pad1d),\n/* harmony export */   \"pad2d\": () => (/* reexport safe */ _pad2d__WEBPACK_IMPORTED_MODULE_107__.pad2d),\n/* harmony export */   \"pad3d\": () => (/* reexport safe */ _pad3d__WEBPACK_IMPORTED_MODULE_108__.pad3d),\n/* harmony export */   \"pad4d\": () => (/* reexport safe */ _pad4d__WEBPACK_IMPORTED_MODULE_109__.pad4d),\n/* harmony export */   \"pool\": () => (/* reexport safe */ _pool__WEBPACK_IMPORTED_MODULE_110__.pool),\n/* harmony export */   \"pow\": () => (/* reexport safe */ _pow__WEBPACK_IMPORTED_MODULE_111__.pow),\n/* harmony export */   \"prelu\": () => (/* reexport safe */ _prelu__WEBPACK_IMPORTED_MODULE_112__.prelu),\n/* harmony export */   \"print\": () => (/* reexport safe */ _print__WEBPACK_IMPORTED_MODULE_113__.print),\n/* harmony export */   \"prod\": () => (/* reexport safe */ _prod__WEBPACK_IMPORTED_MODULE_114__.prod),\n/* harmony export */   \"rand\": () => (/* reexport safe */ _rand__WEBPACK_IMPORTED_MODULE_115__.rand),\n/* harmony export */   \"randomGamma\": () => (/* reexport safe */ _random_gamma__WEBPACK_IMPORTED_MODULE_116__.randomGamma),\n/* harmony export */   \"randomNormal\": () => (/* reexport safe */ _random_normal__WEBPACK_IMPORTED_MODULE_117__.randomNormal),\n/* harmony export */   \"randomUniform\": () => (/* reexport safe */ _random_uniform__WEBPACK_IMPORTED_MODULE_118__.randomUniform),\n/* harmony export */   \"range\": () => (/* reexport safe */ _range__WEBPACK_IMPORTED_MODULE_119__.range),\n/* harmony export */   \"real\": () => (/* reexport safe */ _real__WEBPACK_IMPORTED_MODULE_120__.real),\n/* harmony export */   \"reciprocal\": () => (/* reexport safe */ _reciprocal__WEBPACK_IMPORTED_MODULE_121__.reciprocal),\n/* harmony export */   \"relu\": () => (/* reexport safe */ _relu__WEBPACK_IMPORTED_MODULE_122__.relu),\n/* harmony export */   \"relu6\": () => (/* reexport safe */ _relu6__WEBPACK_IMPORTED_MODULE_123__.relu6),\n/* harmony export */   \"reshape\": () => (/* reexport safe */ _reshape__WEBPACK_IMPORTED_MODULE_124__.reshape),\n/* harmony export */   \"reverse\": () => (/* reexport safe */ _reverse__WEBPACK_IMPORTED_MODULE_125__.reverse),\n/* harmony export */   \"reverse1d\": () => (/* reexport safe */ _reverse_1d__WEBPACK_IMPORTED_MODULE_126__.reverse1d),\n/* harmony export */   \"reverse2d\": () => (/* reexport safe */ _reverse_2d__WEBPACK_IMPORTED_MODULE_127__.reverse2d),\n/* harmony export */   \"reverse3d\": () => (/* reexport safe */ _reverse_3d__WEBPACK_IMPORTED_MODULE_128__.reverse3d),\n/* harmony export */   \"reverse4d\": () => (/* reexport safe */ _reverse_4d__WEBPACK_IMPORTED_MODULE_129__.reverse4d),\n/* harmony export */   \"round\": () => (/* reexport safe */ _round__WEBPACK_IMPORTED_MODULE_130__.round),\n/* harmony export */   \"rsqrt\": () => (/* reexport safe */ _rsqrt__WEBPACK_IMPORTED_MODULE_131__.rsqrt),\n/* harmony export */   \"scalar\": () => (/* reexport safe */ _scalar__WEBPACK_IMPORTED_MODULE_132__.scalar),\n/* harmony export */   \"selu\": () => (/* reexport safe */ _selu__WEBPACK_IMPORTED_MODULE_133__.selu),\n/* harmony export */   \"separableConv2d\": () => (/* reexport safe */ _separable_conv2d__WEBPACK_IMPORTED_MODULE_134__.separableConv2d),\n/* harmony export */   \"setdiff1dAsync\": () => (/* reexport safe */ _setdiff1d_async__WEBPACK_IMPORTED_MODULE_135__.setdiff1dAsync),\n/* harmony export */   \"sigmoid\": () => (/* reexport safe */ _sigmoid__WEBPACK_IMPORTED_MODULE_136__.sigmoid),\n/* harmony export */   \"sign\": () => (/* reexport safe */ _sign__WEBPACK_IMPORTED_MODULE_137__.sign),\n/* harmony export */   \"sin\": () => (/* reexport safe */ _sin__WEBPACK_IMPORTED_MODULE_138__.sin),\n/* harmony export */   \"sinh\": () => (/* reexport safe */ _sinh__WEBPACK_IMPORTED_MODULE_139__.sinh),\n/* harmony export */   \"slice\": () => (/* reexport safe */ _slice__WEBPACK_IMPORTED_MODULE_140__.slice),\n/* harmony export */   \"slice1d\": () => (/* reexport safe */ _slice1d__WEBPACK_IMPORTED_MODULE_141__.slice1d),\n/* harmony export */   \"slice2d\": () => (/* reexport safe */ _slice2d__WEBPACK_IMPORTED_MODULE_142__.slice2d),\n/* harmony export */   \"slice3d\": () => (/* reexport safe */ _slice3d__WEBPACK_IMPORTED_MODULE_143__.slice3d),\n/* harmony export */   \"slice4d\": () => (/* reexport safe */ _slice4d__WEBPACK_IMPORTED_MODULE_144__.slice4d),\n/* harmony export */   \"softmax\": () => (/* reexport safe */ _softmax__WEBPACK_IMPORTED_MODULE_145__.softmax),\n/* harmony export */   \"softplus\": () => (/* reexport safe */ _softplus__WEBPACK_IMPORTED_MODULE_146__.softplus),\n/* harmony export */   \"spaceToBatchND\": () => (/* reexport safe */ _space_to_batch_nd__WEBPACK_IMPORTED_MODULE_147__.spaceToBatchND),\n/* harmony export */   \"fft\": () => (/* reexport safe */ _spectral_fft__WEBPACK_IMPORTED_MODULE_148__.fft),\n/* harmony export */   \"ifft\": () => (/* reexport safe */ _spectral_ifft__WEBPACK_IMPORTED_MODULE_149__.ifft),\n/* harmony export */   \"irfft\": () => (/* reexport safe */ _spectral_irfft__WEBPACK_IMPORTED_MODULE_150__.irfft),\n/* harmony export */   \"rfft\": () => (/* reexport safe */ _spectral_rfft__WEBPACK_IMPORTED_MODULE_151__.rfft),\n/* harmony export */   \"split\": () => (/* reexport safe */ _split__WEBPACK_IMPORTED_MODULE_152__.split),\n/* harmony export */   \"sqrt\": () => (/* reexport safe */ _sqrt__WEBPACK_IMPORTED_MODULE_153__.sqrt),\n/* harmony export */   \"square\": () => (/* reexport safe */ _square__WEBPACK_IMPORTED_MODULE_154__.square),\n/* harmony export */   \"squaredDifference\": () => (/* reexport safe */ _squared_difference__WEBPACK_IMPORTED_MODULE_155__.squaredDifference),\n/* harmony export */   \"squeeze\": () => (/* reexport safe */ _squeeze__WEBPACK_IMPORTED_MODULE_156__.squeeze),\n/* harmony export */   \"stack\": () => (/* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_157__.stack),\n/* harmony export */   \"step\": () => (/* reexport safe */ _step__WEBPACK_IMPORTED_MODULE_158__.step),\n/* harmony export */   \"stridedSlice\": () => (/* reexport safe */ _strided_slice__WEBPACK_IMPORTED_MODULE_159__.stridedSlice),\n/* harmony export */   \"sub\": () => (/* reexport safe */ _sub__WEBPACK_IMPORTED_MODULE_160__.sub),\n/* harmony export */   \"sum\": () => (/* reexport safe */ _sum__WEBPACK_IMPORTED_MODULE_161__.sum),\n/* harmony export */   \"tan\": () => (/* reexport safe */ _tan__WEBPACK_IMPORTED_MODULE_162__.tan),\n/* harmony export */   \"tanh\": () => (/* reexport safe */ _tanh__WEBPACK_IMPORTED_MODULE_163__.tanh),\n/* harmony export */   \"tensor\": () => (/* reexport safe */ _tensor__WEBPACK_IMPORTED_MODULE_164__.tensor),\n/* harmony export */   \"tensor1d\": () => (/* reexport safe */ _tensor1d__WEBPACK_IMPORTED_MODULE_165__.tensor1d),\n/* harmony export */   \"tensor2d\": () => (/* reexport safe */ _tensor2d__WEBPACK_IMPORTED_MODULE_166__.tensor2d),\n/* harmony export */   \"tensor3d\": () => (/* reexport safe */ _tensor3d__WEBPACK_IMPORTED_MODULE_167__.tensor3d),\n/* harmony export */   \"tensor4d\": () => (/* reexport safe */ _tensor4d__WEBPACK_IMPORTED_MODULE_168__.tensor4d),\n/* harmony export */   \"tensor5d\": () => (/* reexport safe */ _tensor5d__WEBPACK_IMPORTED_MODULE_169__.tensor5d),\n/* harmony export */   \"tensor6d\": () => (/* reexport safe */ _tensor6d__WEBPACK_IMPORTED_MODULE_170__.tensor6d),\n/* harmony export */   \"tile\": () => (/* reexport safe */ _tile__WEBPACK_IMPORTED_MODULE_171__.tile),\n/* harmony export */   \"topk\": () => (/* reexport safe */ _topk__WEBPACK_IMPORTED_MODULE_172__.topk),\n/* harmony export */   \"truncatedNormal\": () => (/* reexport safe */ _truncated_normal__WEBPACK_IMPORTED_MODULE_173__.truncatedNormal),\n/* harmony export */   \"unique\": () => (/* reexport safe */ _unique__WEBPACK_IMPORTED_MODULE_174__.unique),\n/* harmony export */   \"unsortedSegmentSum\": () => (/* reexport safe */ _unsorted_segment_sum__WEBPACK_IMPORTED_MODULE_175__.unsortedSegmentSum),\n/* harmony export */   \"unstack\": () => (/* reexport safe */ _unstack__WEBPACK_IMPORTED_MODULE_176__.unstack),\n/* harmony export */   \"variable\": () => (/* reexport safe */ _variable__WEBPACK_IMPORTED_MODULE_177__.variable),\n/* harmony export */   \"where\": () => (/* reexport safe */ _where__WEBPACK_IMPORTED_MODULE_178__.where),\n/* harmony export */   \"whereAsync\": () => (/* reexport safe */ _where_async__WEBPACK_IMPORTED_MODULE_179__.whereAsync),\n/* harmony export */   \"zeros\": () => (/* reexport safe */ _zeros__WEBPACK_IMPORTED_MODULE_180__.zeros),\n/* harmony export */   \"zerosLike\": () => (/* reexport safe */ _zeros_like__WEBPACK_IMPORTED_MODULE_181__.zerosLike),\n/* harmony export */   \"booleanMaskAsync\": () => (/* reexport safe */ _boolean_mask__WEBPACK_IMPORTED_MODULE_182__.booleanMaskAsync),\n/* harmony export */   \"transpose\": () => (/* reexport safe */ _transpose__WEBPACK_IMPORTED_MODULE_183__.transpose),\n/* harmony export */   \"norm\": () => (/* reexport safe */ _norm__WEBPACK_IMPORTED_MODULE_184__.norm),\n/* harmony export */   \"movingAverage\": () => (/* reexport safe */ _moving_average__WEBPACK_IMPORTED_MODULE_185__.movingAverage),\n/* harmony export */   \"scatterND\": () => (/* reexport safe */ _scatter_nd__WEBPACK_IMPORTED_MODULE_186__.scatterND),\n/* harmony export */   \"sparseToDense\": () => (/* reexport safe */ _sparse_to_dense__WEBPACK_IMPORTED_MODULE_187__.sparseToDense),\n/* harmony export */   \"gatherND\": () => (/* reexport safe */ _gather_nd__WEBPACK_IMPORTED_MODULE_188__.gatherND),\n/* harmony export */   \"dropout\": () => (/* reexport safe */ _dropout__WEBPACK_IMPORTED_MODULE_189__.dropout),\n/* harmony export */   \"cosineWindow\": () => (/* reexport safe */ _signal_ops_util__WEBPACK_IMPORTED_MODULE_190__.cosineWindow),\n/* harmony export */   \"enclosingPowerOfTwo\": () => (/* reexport safe */ _signal_ops_util__WEBPACK_IMPORTED_MODULE_190__.enclosingPowerOfTwo),\n/* harmony export */   \"inTopKAsync\": () => (/* reexport safe */ _in_top_k__WEBPACK_IMPORTED_MODULE_191__.inTopKAsync),\n/* harmony export */   \"op\": () => (/* reexport safe */ _operation__WEBPACK_IMPORTED_MODULE_192__.op),\n/* harmony export */   \"OP_SCOPE_SUFFIX\": () => (/* reexport safe */ _operation__WEBPACK_IMPORTED_MODULE_192__.OP_SCOPE_SUFFIX),\n/* harmony export */   \"image\": () => (/* binding */ image),\n/* harmony export */   \"linalg\": () => (/* binding */ linalg),\n/* harmony export */   \"losses\": () => (/* binding */ losses),\n/* harmony export */   \"spectral\": () => (/* binding */ spectral),\n/* harmony export */   \"fused\": () => (/* reexport module object */ _fused_ops__WEBPACK_IMPORTED_MODULE_229__),\n/* harmony export */   \"signal\": () => (/* binding */ signal),\n/* harmony export */   \"sparse\": () => (/* binding */ sparse),\n/* harmony export */   \"string\": () => (/* binding */ string)\n/* harmony export */ });\n/* harmony import */ var _abs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _acos__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./acos */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js\");\n/* harmony import */ var _acosh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./acosh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _add_n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./add_n */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js\");\n/* harmony import */ var _all__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./all */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/all.js\");\n/* harmony import */ var _any__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./any */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/any.js\");\n/* harmony import */ var _arg_max__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./arg_max */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js\");\n/* harmony import */ var _arg_min__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./arg_min */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js\");\n/* harmony import */ var _asin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./asin */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js\");\n/* harmony import */ var _asinh__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./asinh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js\");\n/* harmony import */ var _atan__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./atan */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js\");\n/* harmony import */ var _atan2__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./atan2 */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js\");\n/* harmony import */ var _atanh__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./atanh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js\");\n/* harmony import */ var _avg_pool__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./avg_pool */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js\");\n/* harmony import */ var _avg_pool_3d__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./avg_pool_3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js\");\n/* harmony import */ var _basic_lstm_cell__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./basic_lstm_cell */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js\");\n/* harmony import */ var _batch_to_space_nd__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./batch_to_space_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js\");\n/* harmony import */ var _batchnorm__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./batchnorm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js\");\n/* harmony import */ var _batchnorm2d__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./batchnorm2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js\");\n/* harmony import */ var _batchnorm3d__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./batchnorm3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js\");\n/* harmony import */ var _batchnorm4d__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./batchnorm4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js\");\n/* harmony import */ var _bincount__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./bincount */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js\");\n/* harmony import */ var _broadcast_to__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./broadcast_to */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js\");\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _ceil__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./ceil */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js\");\n/* harmony import */ var _clip_by_value__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./clip_by_value */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js\");\n/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./clone */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js\");\n/* harmony import */ var _complex__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _concat_1d__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./concat_1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js\");\n/* harmony import */ var _concat_2d__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./concat_2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js\");\n/* harmony import */ var _concat_3d__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./concat_3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js\");\n/* harmony import */ var _concat_4d__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./concat_4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js\");\n/* harmony import */ var _conv1d__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./conv1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js\");\n/* harmony import */ var _conv2d__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js\");\n/* harmony import */ var _conv2d_transpose__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./conv2d_transpose */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js\");\n/* harmony import */ var _conv3d__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./conv3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js\");\n/* harmony import */ var _conv3d_transpose__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./conv3d_transpose */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js\");\n/* harmony import */ var _cos__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./cos */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js\");\n/* harmony import */ var _cosh__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./cosh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js\");\n/* harmony import */ var _cumsum__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./cumsum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js\");\n/* harmony import */ var _dense_bincount__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./dense_bincount */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js\");\n/* harmony import */ var _depth_to_space__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./depth_to_space */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js\");\n/* harmony import */ var _depthwise_conv2d__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./depthwise_conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js\");\n/* harmony import */ var _diag__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./diag */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js\");\n/* harmony import */ var _dilation2d__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./dilation2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _div_no_nan__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./div_no_nan */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js\");\n/* harmony import */ var _dot__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./dot */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js\");\n/* harmony import */ var _einsum__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./einsum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/einsum.js\");\n/* harmony import */ var _elu__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./elu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js\");\n/* harmony import */ var _equal__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js\");\n/* harmony import */ var _erf__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./erf */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js\");\n/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _expand_dims__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./expand_dims */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js\");\n/* harmony import */ var _expm1__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./expm1 */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js\");\n/* harmony import */ var _eye__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./eye */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js\");\n/* harmony import */ var _fill__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./fill */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js\");\n/* harmony import */ var _floor__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./floor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js\");\n/* harmony import */ var _floorDiv__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./floorDiv */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js\");\n/* harmony import */ var _gather__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./gather */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js\");\n/* harmony import */ var _greater__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./greater */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js\");\n/* harmony import */ var _greater_equal__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./greater_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js\");\n/* harmony import */ var _imag__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./imag */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js\");\n/* harmony import */ var _is_finite__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./is_finite */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js\");\n/* harmony import */ var _is_inf__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./is_inf */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js\");\n/* harmony import */ var _is_nan__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./is_nan */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js\");\n/* harmony import */ var _leaky_relu__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./leaky_relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js\");\n/* harmony import */ var _less__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./less */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/less.js\");\n/* harmony import */ var _less_equal__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./less_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js\");\n/* harmony import */ var _linspace__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./linspace */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js\");\n/* harmony import */ var _local_response_normalization__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./local_response_normalization */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./log */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log.js\");\n/* harmony import */ var _log1p__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./log1p */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js\");\n/* harmony import */ var _log_sigmoid__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./log_sigmoid */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js\");\n/* harmony import */ var _log_softmax__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./log_softmax */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js\");\n/* harmony import */ var _log_sum_exp__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./log_sum_exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js\");\n/* harmony import */ var _logical_and__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./logical_and */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js\");\n/* harmony import */ var _logical_not__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./logical_not */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js\");\n/* harmony import */ var _logical_or__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./logical_or */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js\");\n/* harmony import */ var _logical_xor__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./logical_xor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./max */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max.js\");\n/* harmony import */ var _max_pool__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./max_pool */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js\");\n/* harmony import */ var _max_pool_3d__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./max_pool_3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js\");\n/* harmony import */ var _max_pool_with_argmax__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./max_pool_with_argmax */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js\");\n/* harmony import */ var _maximum__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./maximum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js\");\n/* harmony import */ var _mean__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./mean */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js\");\n/* harmony import */ var _meshgrid__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./meshgrid */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/meshgrid.js\");\n/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./min */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/min.js\");\n/* harmony import */ var _minimum__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./minimum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js\");\n/* harmony import */ var _mirror_pad__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./mirror_pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js\");\n/* harmony import */ var _mod__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./mod */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js\");\n/* harmony import */ var _moments__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./moments */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _multi_rnn_cell__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./multi_rnn_cell */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js\");\n/* harmony import */ var _multinomial__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./multinomial */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _not_equal__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./not_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js\");\n/* harmony import */ var _one_hot__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./one_hot */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js\");\n/* harmony import */ var _ones__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./ones */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js\");\n/* harmony import */ var _ones_like__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./ones_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js\");\n/* harmony import */ var _outer_product__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./outer_product */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js\");\n/* harmony import */ var _pad__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n/* harmony import */ var _pad1d__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./pad1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js\");\n/* harmony import */ var _pad2d__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./pad2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js\");\n/* harmony import */ var _pad3d__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./pad3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js\");\n/* harmony import */ var _pad4d__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./pad4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js\");\n/* harmony import */ var _pool__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./pool */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js\");\n/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./pow */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js\");\n/* harmony import */ var _prelu__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./prelu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js\");\n/* harmony import */ var _print__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./print */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/print.js\");\n/* harmony import */ var _prod__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./prod */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js\");\n/* harmony import */ var _rand__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./rand */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js\");\n/* harmony import */ var _random_gamma__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./random_gamma */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js\");\n/* harmony import */ var _random_normal__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./random_normal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js\");\n/* harmony import */ var _random_uniform__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./random_uniform */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js\");\n/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./range */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/range.js\");\n/* harmony import */ var _real__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./real */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/real.js\");\n/* harmony import */ var _reciprocal__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./reciprocal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js\");\n/* harmony import */ var _relu__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js\");\n/* harmony import */ var _relu6__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./relu6 */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/* harmony import */ var _reverse_1d__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./reverse_1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js\");\n/* harmony import */ var _reverse_2d__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./reverse_2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js\");\n/* harmony import */ var _reverse_3d__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./reverse_3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js\");\n/* harmony import */ var _reverse_4d__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./reverse_4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js\");\n/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./round */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/round.js\");\n/* harmony import */ var _rsqrt__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./rsqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _selu__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./selu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js\");\n/* harmony import */ var _separable_conv2d__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./separable_conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js\");\n/* harmony import */ var _setdiff1d_async__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./setdiff1d_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js\");\n/* harmony import */ var _sigmoid__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./sigmoid */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js\");\n/* harmony import */ var _sign__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./sign */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js\");\n/* harmony import */ var _sin__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./sin */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js\");\n/* harmony import */ var _sinh__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./sinh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _slice1d__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./slice1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js\");\n/* harmony import */ var _slice2d__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./slice2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js\");\n/* harmony import */ var _slice3d__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./slice3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js\");\n/* harmony import */ var _slice4d__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./slice4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js\");\n/* harmony import */ var _softmax__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./softmax */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js\");\n/* harmony import */ var _softplus__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./softplus */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js\");\n/* harmony import */ var _space_to_batch_nd__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./space_to_batch_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js\");\n/* harmony import */ var _spectral_fft__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./spectral/fft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js\");\n/* harmony import */ var _spectral_ifft__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./spectral/ifft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js\");\n/* harmony import */ var _spectral_irfft__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./spectral/irfft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js\");\n/* harmony import */ var _spectral_rfft__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./spectral/rfft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js\");\n/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./split */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/split.js\");\n/* harmony import */ var _sqrt__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./sqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _square__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _squared_difference__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ./squared_difference */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js\");\n/* harmony import */ var _squeeze__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ./squeeze */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js\");\n/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ./stack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js\");\n/* harmony import */ var _step__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ./step */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/step.js\");\n/* harmony import */ var _strided_slice__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ./strided_slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ./sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ./sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/* harmony import */ var _tan__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ./tan */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js\");\n/* harmony import */ var _tanh__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ./tanh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js\");\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ./tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/* harmony import */ var _tensor2d__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ./tensor2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js\");\n/* harmony import */ var _tensor3d__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ./tensor3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js\");\n/* harmony import */ var _tensor4d__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ./tensor4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js\");\n/* harmony import */ var _tensor5d__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ./tensor5d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js\");\n/* harmony import */ var _tensor6d__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ./tensor6d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js\");\n/* harmony import */ var _tile__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ./tile */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js\");\n/* harmony import */ var _topk__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ./topk */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js\");\n/* harmony import */ var _truncated_normal__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ./truncated_normal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js\");\n/* harmony import */ var _unique__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ./unique */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js\");\n/* harmony import */ var _unsorted_segment_sum__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ./unsorted_segment_sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js\");\n/* harmony import */ var _unstack__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ./unstack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js\");\n/* harmony import */ var _variable__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ./variable */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js\");\n/* harmony import */ var _where__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ./where */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where.js\");\n/* harmony import */ var _where_async__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ./where_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js\");\n/* harmony import */ var _zeros__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ./zeros */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js\");\n/* harmony import */ var _zeros_like__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ./zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _boolean_mask__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ./boolean_mask */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js\");\n/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ./transpose */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js\");\n/* harmony import */ var _norm__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ./norm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js\");\n/* harmony import */ var _moving_average__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ./moving_average */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js\");\n/* harmony import */ var _scatter_nd__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ./scatter_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js\");\n/* harmony import */ var _sparse_to_dense__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ./sparse_to_dense */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js\");\n/* harmony import */ var _gather_nd__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ./gather_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js\");\n/* harmony import */ var _dropout__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ./dropout */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js\");\n/* harmony import */ var _signal_ops_util__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ./signal_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js\");\n/* harmony import */ var _in_top_k__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ./in_top_k */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _fused_ops__WEBPACK_IMPORTED_MODULE_229__ = __webpack_require__(/*! ./fused_ops */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js\");\n/* harmony import */ var _signal_hamming_window__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ./signal/hamming_window */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hamming_window.js\");\n/* harmony import */ var _signal_hann_window__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ./signal/hann_window */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js\");\n/* harmony import */ var _signal_frame__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ./signal/frame */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js\");\n/* harmony import */ var _signal_stft__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ./signal/stft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/stft.js\");\n/* harmony import */ var _image_crop_and_resize__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(/*! ./image/crop_and_resize */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js\");\n/* harmony import */ var _image_flip_left_right__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ./image/flip_left_right */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js\");\n/* harmony import */ var _image_rotate_with_offset__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(/*! ./image/rotate_with_offset */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js\");\n/* harmony import */ var _image_non_max_suppression__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(/*! ./image/non_max_suppression */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js\");\n/* harmony import */ var _image_non_max_suppression_async__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(/*! ./image/non_max_suppression_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js\");\n/* harmony import */ var _image_non_max_suppression_with_score__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(/*! ./image/non_max_suppression_with_score */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js\");\n/* harmony import */ var _image_non_max_suppression_with_score_async__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(/*! ./image/non_max_suppression_with_score_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js\");\n/* harmony import */ var _image_non_max_suppression_padded__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(/*! ./image/non_max_suppression_padded */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js\");\n/* harmony import */ var _image_non_max_suppression_padded_async__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(/*! ./image/non_max_suppression_padded_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js\");\n/* harmony import */ var _image_resize_bilinear__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ./image/resize_bilinear */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js\");\n/* harmony import */ var _image_resize_nearest_neighbor__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ./image/resize_nearest_neighbor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js\");\n/* harmony import */ var _image_threshold__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(/*! ./image/threshold */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/threshold.js\");\n/* harmony import */ var _image_transform__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(/*! ./image/transform */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/transform.js\");\n/* harmony import */ var _linalg_band_part__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(/*! ./linalg/band_part */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/band_part.js\");\n/* harmony import */ var _linalg_gram_schmidt__WEBPACK_IMPORTED_MODULE_211__ = __webpack_require__(/*! ./linalg/gram_schmidt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/gram_schmidt.js\");\n/* harmony import */ var _linalg_qr__WEBPACK_IMPORTED_MODULE_212__ = __webpack_require__(/*! ./linalg/qr */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/qr.js\");\n/* harmony import */ var _losses_absolute_difference__WEBPACK_IMPORTED_MODULE_213__ = __webpack_require__(/*! ./losses/absolute_difference */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/absolute_difference.js\");\n/* harmony import */ var _losses_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_214__ = __webpack_require__(/*! ./losses/compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/* harmony import */ var _losses_cosine_distance__WEBPACK_IMPORTED_MODULE_215__ = __webpack_require__(/*! ./losses/cosine_distance */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/cosine_distance.js\");\n/* harmony import */ var _losses_hinge_loss__WEBPACK_IMPORTED_MODULE_216__ = __webpack_require__(/*! ./losses/hinge_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/hinge_loss.js\");\n/* harmony import */ var _losses_huber_loss__WEBPACK_IMPORTED_MODULE_217__ = __webpack_require__(/*! ./losses/huber_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/huber_loss.js\");\n/* harmony import */ var _losses_log_loss__WEBPACK_IMPORTED_MODULE_218__ = __webpack_require__(/*! ./losses/log_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/log_loss.js\");\n/* harmony import */ var _losses_mean_squared_error__WEBPACK_IMPORTED_MODULE_219__ = __webpack_require__(/*! ./losses/mean_squared_error */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/mean_squared_error.js\");\n/* harmony import */ var _losses_sigmoid_cross_entropy__WEBPACK_IMPORTED_MODULE_220__ = __webpack_require__(/*! ./losses/sigmoid_cross_entropy */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/sigmoid_cross_entropy.js\");\n/* harmony import */ var _losses_softmax_cross_entropy__WEBPACK_IMPORTED_MODULE_221__ = __webpack_require__(/*! ./losses/softmax_cross_entropy */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/softmax_cross_entropy.js\");\n/* harmony import */ var _sparse_sparse_fill_empty_rows__WEBPACK_IMPORTED_MODULE_222__ = __webpack_require__(/*! ./sparse/sparse_fill_empty_rows */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_fill_empty_rows.js\");\n/* harmony import */ var _sparse_sparse_reshape__WEBPACK_IMPORTED_MODULE_223__ = __webpack_require__(/*! ./sparse/sparse_reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_reshape.js\");\n/* harmony import */ var _sparse_sparse_segment_mean__WEBPACK_IMPORTED_MODULE_224__ = __webpack_require__(/*! ./sparse/sparse_segment_mean */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_segment_mean.js\");\n/* harmony import */ var _sparse_sparse_segment_sum__WEBPACK_IMPORTED_MODULE_225__ = __webpack_require__(/*! ./sparse/sparse_segment_sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_segment_sum.js\");\n/* harmony import */ var _string_string_n_grams__WEBPACK_IMPORTED_MODULE_226__ = __webpack_require__(/*! ./string/string_n_grams */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_n_grams.js\");\n/* harmony import */ var _string_string_split__WEBPACK_IMPORTED_MODULE_227__ = __webpack_require__(/*! ./string/string_split */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_split.js\");\n/* harmony import */ var _string_string_to_hash_bucket_fast__WEBPACK_IMPORTED_MODULE_228__ = __webpack_require__(/*! ./string/string_to_hash_bucket_fast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_to_hash_bucket_fast.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Modularized ops.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst spectral = {\n    fft: _spectral_fft__WEBPACK_IMPORTED_MODULE_148__.fft,\n    ifft: _spectral_ifft__WEBPACK_IMPORTED_MODULE_149__.ifft,\n    rfft: _spectral_rfft__WEBPACK_IMPORTED_MODULE_151__.rfft,\n    irfft: _spectral_irfft__WEBPACK_IMPORTED_MODULE_150__.irfft\n};\n\n\n\n\n\nconst signal = {\n    hammingWindow: _signal_hamming_window__WEBPACK_IMPORTED_MODULE_193__.hammingWindow,\n    hannWindow: _signal_hann_window__WEBPACK_IMPORTED_MODULE_194__.hannWindow,\n    frame: _signal_frame__WEBPACK_IMPORTED_MODULE_195__.frame,\n    stft: _signal_stft__WEBPACK_IMPORTED_MODULE_196__.stft,\n};\n// Image Ops namespace\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst image = {\n    flipLeftRight: _image_flip_left_right__WEBPACK_IMPORTED_MODULE_197__.flipLeftRight,\n    resizeNearestNeighbor: _image_resize_nearest_neighbor__WEBPACK_IMPORTED_MODULE_198__.resizeNearestNeighbor,\n    resizeBilinear: _image_resize_bilinear__WEBPACK_IMPORTED_MODULE_199__.resizeBilinear,\n    rotateWithOffset: _image_rotate_with_offset__WEBPACK_IMPORTED_MODULE_200__.rotateWithOffset,\n    cropAndResize: _image_crop_and_resize__WEBPACK_IMPORTED_MODULE_201__.cropAndResize,\n    nonMaxSuppression: _image_non_max_suppression__WEBPACK_IMPORTED_MODULE_202__.nonMaxSuppression,\n    nonMaxSuppressionAsync: _image_non_max_suppression_async__WEBPACK_IMPORTED_MODULE_203__.nonMaxSuppressionAsync,\n    nonMaxSuppressionWithScore: _image_non_max_suppression_with_score__WEBPACK_IMPORTED_MODULE_204__.nonMaxSuppressionWithScore,\n    nonMaxSuppressionWithScoreAsync: _image_non_max_suppression_with_score_async__WEBPACK_IMPORTED_MODULE_205__.nonMaxSuppressionWithScoreAsync,\n    nonMaxSuppressionPadded: _image_non_max_suppression_padded__WEBPACK_IMPORTED_MODULE_206__.nonMaxSuppressionPadded,\n    nonMaxSuppressionPaddedAsync: _image_non_max_suppression_padded_async__WEBPACK_IMPORTED_MODULE_207__.nonMaxSuppressionPaddedAsync,\n    threshold: _image_threshold__WEBPACK_IMPORTED_MODULE_208__.threshold,\n    transform: _image_transform__WEBPACK_IMPORTED_MODULE_209__.transform\n};\n// linalg namespace\n\n\n\nconst linalg = {\n    bandPart: _linalg_band_part__WEBPACK_IMPORTED_MODULE_210__.bandPart,\n    gramSchmidt: _linalg_gram_schmidt__WEBPACK_IMPORTED_MODULE_211__.gramSchmidt,\n    qr: _linalg_qr__WEBPACK_IMPORTED_MODULE_212__.qr\n};\n// losses namespace;\n\n\n\n\n\n\n\n\n\nconst losses = {\n    absoluteDifference: _losses_absolute_difference__WEBPACK_IMPORTED_MODULE_213__.absoluteDifference,\n    computeWeightedLoss: _losses_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_214__.computeWeightedLoss,\n    cosineDistance: _losses_cosine_distance__WEBPACK_IMPORTED_MODULE_215__.cosineDistance,\n    hingeLoss: _losses_hinge_loss__WEBPACK_IMPORTED_MODULE_216__.hingeLoss,\n    huberLoss: _losses_huber_loss__WEBPACK_IMPORTED_MODULE_217__.huberLoss,\n    logLoss: _losses_log_loss__WEBPACK_IMPORTED_MODULE_218__.logLoss,\n    meanSquaredError: _losses_mean_squared_error__WEBPACK_IMPORTED_MODULE_219__.meanSquaredError,\n    sigmoidCrossEntropy: _losses_sigmoid_cross_entropy__WEBPACK_IMPORTED_MODULE_220__.sigmoidCrossEntropy,\n    softmaxCrossEntropy: _losses_softmax_cross_entropy__WEBPACK_IMPORTED_MODULE_221__.softmaxCrossEntropy\n};\n\n\n\n\nconst sparse = {\n    sparseFillEmptyRows: _sparse_sparse_fill_empty_rows__WEBPACK_IMPORTED_MODULE_222__.sparseFillEmptyRows,\n    sparseReshape: _sparse_sparse_reshape__WEBPACK_IMPORTED_MODULE_223__.sparseReshape,\n    sparseSegmentMean: _sparse_sparse_segment_mean__WEBPACK_IMPORTED_MODULE_224__.sparseSegmentMean,\n    sparseSegmentSum: _sparse_sparse_segment_sum__WEBPACK_IMPORTED_MODULE_225__.sparseSegmentSum\n};\n\n\n\n// tslint:disable-next-line:variable-name\nconst string = {\n    stringNGrams: _string_string_n_grams__WEBPACK_IMPORTED_MODULE_226__.stringNGrams,\n    stringSplit: _string_string_split__WEBPACK_IMPORTED_MODULE_227__.stringSplit,\n    stringToHashBucketFast: _string_string_to_hash_bucket_fast__WEBPACK_IMPORTED_MODULE_228__.stringToHashBucketFast\n};\n// Second level exports.\n\n//# sourceMappingURL=ops.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"outerProduct\": () => (/* binding */ outerProduct)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n\n\n\n\n\n/**\n * Computes the outer product of two vectors, `v1` and `v2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([3, 4, 5]);\n *\n * tf.outerProduct(a, b).print();\n * ```\n * @param v1 The first vector in the outer product operation.\n * @param v2 The second vector in the outer product operation.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction outerProduct_(v1, v2) {\n    const $v1 = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(v1, 'v1', 'outerProduct');\n    const $v2 = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(v2, 'v2', 'outerProduct');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($v1.rank === 1 && $v2.rank === 1, () => `Error in outerProduct: inputs must be rank 1, but got ranks ` +\n        `${$v1.rank} and ${$v2.rank}.`);\n    const v12D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($v1, [-1, 1]);\n    const v22D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($v2, [1, -1]);\n    return (0,_mat_mul__WEBPACK_IMPORTED_MODULE_3__.matMul)(v12D, v22D);\n}\nconst outerProduct = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ outerProduct_ });\n//# sourceMappingURL=outer_product.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pad\": () => (/* binding */ pad)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Pads a `tf.Tensor` with a given value and paddings.\n *\n * This operation implements `CONSTANT` mode. For `REFLECT` and `SYMMETRIC`,\n * refer to `tf.mirrorPad`\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `paddings` is of given length.\n *   - `tf.pad1d`\n *   - `tf.pad2d`\n *   - `tf.pad3d`\n *   - `tf.pad4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.pad([[1, 2]]).print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * @param constantValue The pad value to use. Defaults to 0.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction pad_(x, paddings, constantValue = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'pad');\n    if ($x.rank === 0) {\n        throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n    }\n    const attrs = { paddings, constantValue };\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.PadV2, inputs, attrs);\n}\nconst pad = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ pad_ });\n//# sourceMappingURL=pad.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pad1d\": () => (/* binding */ pad1d)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n\n\n\n/**\n * Pads a `tf.Tensor1D` with a given value and paddings. See `pad` for details.\n */\nfunction pad1d_(x, paddings, constantValue = 0) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(paddings.length === 2, () => 'Invalid number of paddings. Must be length of 2.');\n    return (0,_pad__WEBPACK_IMPORTED_MODULE_1__.pad)(x, [paddings], constantValue);\n}\nconst pad1d = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ pad1d_ });\n//# sourceMappingURL=pad1d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pad2d\": () => (/* binding */ pad2d)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n\n\n\n/**\n * Pads a `tf.Tensor2D` with a given value and paddings. See `pad` for details.\n */\nfunction pad2d_(x, paddings, constantValue = 0) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(paddings.length === 2 && paddings[0].length === 2 &&\n        paddings[1].length === 2, () => 'Invalid number of paddings. Must be length of 2 each.');\n    return (0,_pad__WEBPACK_IMPORTED_MODULE_1__.pad)(x, paddings, constantValue);\n}\nconst pad2d = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ pad2d_ });\n//# sourceMappingURL=pad2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pad3d\": () => (/* binding */ pad3d)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n\n\n\n/**\n * Pads a `tf.Tensor3D` with a given value and paddings. See `pad` for details.\n */\nfunction pad3d_(x, paddings, constantValue = 0) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(paddings.length === 3 && paddings[0].length === 2 &&\n        paddings[1].length === 2 && paddings[2].length === 2, () => 'Invalid number of paddings. Must be length of 2 each.');\n    return (0,_pad__WEBPACK_IMPORTED_MODULE_1__.pad)(x, paddings, constantValue);\n}\nconst pad3d = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ pad3d_ });\n//# sourceMappingURL=pad3d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pad4d\": () => (/* binding */ pad4d)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n\n\n\n/**\n * Pads a `tf.Tensor4D` with a given value and paddings. See `pad` for details.\n */\nfunction pad4d_(x, paddings, constantValue = 0) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(paddings.length === 4 && paddings[0].length === 2 &&\n        paddings[1].length === 2 && paddings[2].length === 2 &&\n        paddings[3].length === 2, () => 'Invalid number of paddings. Must be length of 2 each.');\n    return (0,_pad__WEBPACK_IMPORTED_MODULE_1__.pad)(x, paddings, constantValue);\n}\nconst pad4d = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ pad4d_ });\n//# sourceMappingURL=pad4d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pool\": () => (/* binding */ pool)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _avg_pool__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./avg_pool */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js\");\n/* harmony import */ var _batch_to_space_nd__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./batch_to_space_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _max_pool__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./max_pool */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _space_to_batch_nd__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./space_to_batch_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n/**\n * Performs an N-D pooling operation\n *\n * @param input The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param windowShape The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param poolingType The type of pooling, either 'max' or 'avg'.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilationRate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction pool_(input, windowShape, poolingType, pad, dilations, strides) {\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    if (strides == null) {\n        strides = 1;\n    }\n    if (pad === 0) {\n        pad = 'valid';\n    }\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(input, 'x', 'maxPool');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_3__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in pool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = _conv_util__WEBPACK_IMPORTED_MODULE_3__.computePool2DInfo(x4D.shape, windowShape, strides, dilations, pad);\n    const dilation = [convInfo.dilationHeight, convInfo.dilationWidth];\n    // The following implementation does batchToSpace(pool(spaceToBatch(x)))\n    // whenever dilation > 1 since the TF kernels do not support dilation > 1.\n    // tslint:disable-next-line:max-line-length\n    // https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L1037\n    let basePadding;\n    if (pad === 'same') {\n        basePadding = withSpaceToBatchBasePaddings([convInfo.filterHeight, convInfo.filterWidth], dilation);\n    }\n    else {\n        basePadding = [[0, 0], [0, 0]];\n    }\n    const isDilationOne = dilation[0] === 1 && dilation[1] === 1;\n    const [adjustedPadding, adjustedCrops] = requiredSpaceToBatchPaddings([convInfo.inHeight, convInfo.inWidth], dilation, basePadding);\n    const convertedPad = isDilationOne ? pad : 'valid';\n    const convertedX = isDilationOne ? x4D : (0,_space_to_batch_nd__WEBPACK_IMPORTED_MODULE_4__.spaceToBatchND)(x4D, dilation, adjustedPadding);\n    const forwardOp = poolingType === 'avg' ?\n        () => (0,_avg_pool__WEBPACK_IMPORTED_MODULE_5__.avgPool)(convertedX, windowShape, strides, convertedPad) :\n        () => (0,_max_pool__WEBPACK_IMPORTED_MODULE_6__.maxPool)(convertedX, windowShape, strides, convertedPad);\n    const y = forwardOp();\n    const res = isDilationOne ? y : (0,_batch_to_space_nd__WEBPACK_IMPORTED_MODULE_7__.batchToSpaceND)(y, dilation, adjustedCrops);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\n// Helper function to compute crops and paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/array_ops.py#L2184\nfunction requiredSpaceToBatchPaddings(inputShape, blockShape, basePadding) {\n    const padStart = basePadding.map(b => b[0]);\n    const origPadEnd = basePadding.map(b => b[1]);\n    const fullInputShape = inputShape.concat(padStart, origPadEnd);\n    const padEndExtra = blockShape.map((b, i) => (b - fullInputShape[i] % b) % b);\n    const padEnd = origPadEnd.map((s, i) => s + padEndExtra[i]);\n    const paddings = blockShape.map((_, i) => [padStart[i], padEnd[i]]);\n    const crops = blockShape.map((_, i) => [0, padEndExtra[i]]);\n    return [paddings, crops];\n}\n// Helper function to compute base paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L524\nfunction withSpaceToBatchBasePaddings(filterShape, dilation) {\n    // Spatial dimensions of the filters and the upsampled filters in which we\n    // introduce (rate - 1) zeros between consecutive filter values.\n    const dilatedFilterShape = filterShape.map((s, i) => {\n        return s + (s - 1) * (dilation[i] - 1);\n    });\n    const padExtraShape = dilatedFilterShape.map(s => s - 1);\n    // When padding is odd, we pad more at end, following the same\n    // convention as conv2d.\n    const padExtraStart = padExtraShape.map(s => Math.floor(s / 2));\n    const padExtraEnd = padExtraShape.map((s, i) => s - padExtraStart[i]);\n    return padExtraShape.map((_, i) => {\n        return [padExtraStart[i], padExtraEnd[i]];\n    });\n}\nconst pool = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ pool_ });\n//# sourceMappingURL=pool.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pow\": () => (/* binding */ pow)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Computes the power of one `tf.Tensor` to another. Supports broadcasting.\n *\n * Given a `tf.Tensor` x and a `tf.Tensor` y, this operation computes x^y for\n * corresponding elements in x and y. The result's dtype will be the upcasted\n * type of the `base` and `exp` dtypes.\n *\n * ```js\n * const a = tf.tensor([[2, 3], [4, 5]])\n * const b = tf.tensor([[1, 2], [3, 0]]).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n *\n * ```js\n * const a = tf.tensor([[1, 2], [3, 4]])\n * const b = tf.tensor(2).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n * We also expose `powStrict` which has the same signature as this op and\n * asserts that `base` and `exp` are the same shape (does not broadcast).\n *\n * @param base The base `tf.Tensor` to pow element-wise.\n * @param exp The exponent `tf.Tensor` to pow element-wise.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction pow_(base, exp) {\n    let $base = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(base, 'base', 'pow');\n    let $exp = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(exp, 'exp', 'pow');\n    [$base, $exp] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($base, $exp);\n    const inputs = { a: $base, b: $exp };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Pow, inputs);\n}\nconst pow = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ pow_ });\n//# sourceMappingURL=pow.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prelu\": () => (/* binding */ prelu)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes leaky rectified linear element-wise with parametric alphas.\n *\n * `x < 0 ? alpha * x : f(x) = x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n * const alpha = tf.scalar(0.1);\n *\n * x.prelu(alpha).print();  // or tf.prelu(x, alpha)\n * ```\n * @param x The input tensor.\n * @param alpha Scaling factor for negative values.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction prelu_(x, alpha) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'prelu');\n    const $alpha = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(alpha, 'alpha', 'prelu');\n    const inputs = { x: $x, alpha: $alpha };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Prelu, inputs);\n}\nconst prelu = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ prelu_ });\n//# sourceMappingURL=prelu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/print.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/print.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"print\": () => (/* binding */ print)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction print(x, verbose = false) {\n    console.log(x.toString(verbose));\n}\n//# sourceMappingURL=print.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/print.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prod\": () => (/* binding */ prod)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Computes the product of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.prod().print();  // or tf.prod(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.prod(axis).print();  // or tf.prod(x, axis)\n * ```\n *\n * @param x The input tensor to compute the product over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction prod_(x, axis = null, keepDims = false) {\n    let $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'prod');\n    if ($x.dtype === 'bool') {\n        // bool is not an allowed type for the underlying kernel.\n        $x = (0,_cast__WEBPACK_IMPORTED_MODULE_2__.cast)($x, 'int32');\n    }\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Prod, inputs, attrs);\n}\nconst prod = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ prod_ });\n//# sourceMappingURL=prod.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rand\": () => (/* binding */ rand)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates a `tf.Tensor` with values sampled from a random number generator\n * function defined by the user.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param randFunction A random number generator function which is called\n * for each element in the output tensor.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction rand_(shape, randFunction, dtype) {\n    const size = (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(shape);\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    for (let i = 0; i < size; i++) {\n        values[i] = randFunction();\n    }\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeTensor(values, shape, dtype);\n}\nconst rand = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ rand_ });\n//# sourceMappingURL=rand.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MPRandGauss\": () => (/* binding */ MPRandGauss),\n/* harmony export */   \"RandGamma\": () => (/* binding */ RandGamma),\n/* harmony export */   \"UniformRandom\": () => (/* binding */ UniformRandom),\n/* harmony export */   \"jarqueBeraNormalityTest\": () => (/* binding */ jarqueBeraNormalityTest),\n/* harmony export */   \"expectArrayInMeanStdRange\": () => (/* binding */ expectArrayInMeanStdRange)\n/* harmony export */ });\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! seedrandom */ \"./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/index.js\");\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(seedrandom__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _test_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../test_util */ \"./node_modules/@tensorflow/tfjs-core/dist/test_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n// https://en.wikipedia.org/wiki/Marsaglia_polar_method\nclass MPRandGauss {\n    constructor(mean, stdDeviation, dtype, truncated, seed) {\n        this.mean = mean;\n        this.stdDev = stdDeviation;\n        this.dtype = dtype;\n        this.nextVal = NaN;\n        this.truncated = truncated;\n        if (this.truncated) {\n            this.upper = this.mean + this.stdDev * 2;\n            this.lower = this.mean - this.stdDev * 2;\n        }\n        const seedValue = seed ? seed : Math.random();\n        this.random = seedrandom__WEBPACK_IMPORTED_MODULE_0__.alea(seedValue.toString());\n    }\n    /** Returns next sample from a Gaussian distribution. */\n    nextValue() {\n        if (!isNaN(this.nextVal)) {\n            const value = this.nextVal;\n            this.nextVal = NaN;\n            return value;\n        }\n        let resultX, resultY;\n        let isValid = false;\n        while (!isValid) {\n            let v1, v2, s;\n            do {\n                v1 = 2 * this.random() - 1;\n                v2 = 2 * this.random() - 1;\n                s = v1 * v1 + v2 * v2;\n            } while (s >= 1 || s === 0);\n            const mul = Math.sqrt(-2.0 * Math.log(s) / s);\n            resultX = this.mean + this.stdDev * v1 * mul;\n            resultY = this.mean + this.stdDev * v2 * mul;\n            if (!this.truncated || this.isValidTruncated(resultX)) {\n                isValid = true;\n            }\n        }\n        if (!this.truncated || this.isValidTruncated(resultY)) {\n            this.nextVal = this.convertValue(resultY);\n        }\n        return this.convertValue(resultX);\n    }\n    /** Handles proper rounding for non-floating-point numbers. */\n    convertValue(value) {\n        if (this.dtype == null || this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    }\n    /** Returns true if less than 2-standard-deviations from the mean. */\n    isValidTruncated(value) {\n        return value <= this.upper && value >= this.lower;\n    }\n}\n// Marsaglia, George, and Wai Wan Tsang. 2000. \"A Simple Method for Generating\n// Gamma Variables.\"\nclass RandGamma {\n    constructor(alpha, beta, dtype, seed) {\n        this.alpha = alpha;\n        this.beta = 1 / beta; // convert rate to scale parameter\n        this.dtype = dtype;\n        const seedValue = seed ? seed : Math.random();\n        this.randu = seedrandom__WEBPACK_IMPORTED_MODULE_0__.alea(seedValue.toString());\n        this.randn = new MPRandGauss(0, 1, dtype, false, this.randu());\n        if (alpha < 1) {\n            this.d = alpha + (2 / 3);\n        }\n        else {\n            this.d = alpha - (1 / 3);\n        }\n        this.c = 1 / Math.sqrt(9 * this.d);\n    }\n    /** Returns next sample from a gamma distribution. */\n    nextValue() {\n        let x2, v0, v1, x, u, v;\n        while (true) {\n            do {\n                x = this.randn.nextValue();\n                v = 1 + (this.c * x);\n            } while (v <= 0);\n            v *= v * v;\n            x2 = x * x;\n            v0 = 1 - (0.331 * x2 * x2);\n            v1 = (0.5 * x2) + (this.d * (1 - v + Math.log(v)));\n            u = this.randu();\n            if (u < v0 || Math.log(u) < v1) {\n                break;\n            }\n        }\n        v = (1 / this.beta) * this.d * v;\n        if (this.alpha < 1) {\n            v *= Math.pow(this.randu(), 1 / this.alpha);\n        }\n        return this.convertValue(v);\n    }\n    /** Handles proper rounding for non-floating-point numbers. */\n    convertValue(value) {\n        if (this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    }\n}\nclass UniformRandom {\n    constructor(min = 0, max = 1, dtype, seed) {\n        /** Handles proper rounding for non floating point numbers. */\n        this.canReturnFloat = () => (this.dtype == null || this.dtype === 'float32');\n        this.min = min;\n        this.range = max - min;\n        this.dtype = dtype;\n        if (seed == null) {\n            seed = Math.random();\n        }\n        if (typeof seed === 'number') {\n            seed = seed.toString();\n        }\n        if (!this.canReturnFloat() && this.range <= 1) {\n            throw new Error(`The difference between ${min} - ${max} <= 1 and dtype is not float`);\n        }\n        this.random = seedrandom__WEBPACK_IMPORTED_MODULE_0__.alea(seed);\n    }\n    convertValue(value) {\n        if (this.canReturnFloat()) {\n            return value;\n        }\n        return Math.round(value);\n    }\n    nextValue() {\n        return this.convertValue(this.min + this.range * this.random());\n    }\n}\nfunction jarqueBeraNormalityTest(values) {\n    // https://en.wikipedia.org/wiki/Jarque%E2%80%93Bera_test\n    const n = values.length;\n    const s = skewness(values);\n    const k = kurtosis(values);\n    const jb = n / 6 * (Math.pow(s, 2) + 0.25 * Math.pow(k - 3, 2));\n    // JB test requires 2-degress of freedom from Chi-Square @ 0.95:\n    // http://www.itl.nist.gov/div898/handbook/eda/section3/eda3674.htm\n    const CHI_SQUARE_2DEG = 5.991;\n    if (jb > CHI_SQUARE_2DEG) {\n        throw new Error(`Invalid p-value for JB: ${jb}`);\n    }\n}\nfunction expectArrayInMeanStdRange(actual, expectedMean, expectedStdDev, epsilon) {\n    if (epsilon == null) {\n        epsilon = (0,_test_util__WEBPACK_IMPORTED_MODULE_1__.testEpsilon)();\n    }\n    const actualMean = mean(actual);\n    (0,_test_util__WEBPACK_IMPORTED_MODULE_1__.expectNumbersClose)(actualMean, expectedMean, epsilon);\n    (0,_test_util__WEBPACK_IMPORTED_MODULE_1__.expectNumbersClose)(standardDeviation(actual, actualMean), expectedStdDev, epsilon);\n}\nfunction mean(values) {\n    let sum = 0;\n    for (let i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum / values.length;\n}\nfunction standardDeviation(values, mean) {\n    let squareDiffSum = 0;\n    for (let i = 0; i < values.length; i++) {\n        const diff = values[i] - mean;\n        squareDiffSum += diff * diff;\n    }\n    return Math.sqrt(squareDiffSum / values.length);\n}\nfunction kurtosis(values) {\n    // https://en.wikipedia.org/wiki/Kurtosis\n    const valuesMean = mean(values);\n    const n = values.length;\n    let sum2 = 0;\n    let sum4 = 0;\n    for (let i = 0; i < n; i++) {\n        const v = values[i] - valuesMean;\n        sum2 += Math.pow(v, 2);\n        sum4 += Math.pow(v, 4);\n    }\n    return (1 / n) * sum4 / Math.pow((1 / n) * sum2, 2);\n}\nfunction skewness(values) {\n    // https://en.wikipedia.org/wiki/Skewness\n    const valuesMean = mean(values);\n    const n = values.length;\n    let sum2 = 0;\n    let sum3 = 0;\n    for (let i = 0; i < n; i++) {\n        const v = values[i] - valuesMean;\n        sum2 += Math.pow(v, 2);\n        sum3 += Math.pow(v, 3);\n    }\n    return (1 / n) * sum3 / Math.pow((1 / (n - 1)) * sum2, 3 / 2);\n}\n//# sourceMappingURL=rand_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"randomGamma\": () => (/* binding */ randomGamma)\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _rand_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rand_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates a `tf.Tensor` with values sampled from a gamma distribution.\n *\n * ```js\n * tf.randomGamma([2, 2], 1).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param alpha The shape parameter of the gamma distribution.\n * @param beta The inverse scale parameter of the gamma distribution. Defaults\n *     to 1.\n * @param dtype The data type of the output. Defaults to float32.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomGamma_(shape, alpha, beta = 1, dtype = 'float32', seed) {\n    if (beta == null) {\n        beta = 1;\n    }\n    if (dtype == null) {\n        dtype = 'float32';\n    }\n    if (dtype !== 'float32' && dtype !== 'int32') {\n        throw new Error(`Unsupported data type ${dtype}`);\n    }\n    const rgamma = new _rand_util__WEBPACK_IMPORTED_MODULE_0__.RandGamma(alpha, beta, dtype, seed);\n    const res = (0,_buffer__WEBPACK_IMPORTED_MODULE_1__.buffer)(shape, dtype);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = rgamma.nextValue();\n    }\n    return res.toTensor();\n}\nconst randomGamma = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ randomGamma_ });\n//# sourceMappingURL=random_gamma.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"randomNormal\": () => (/* binding */ randomNormal)\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _rand_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rand_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates a `tf.Tensor` with values sampled from a normal distribution.\n *\n * ```js\n * tf.randomNormal([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomNormal_(shape, mean = 0, stdDev = 1, dtype, seed) {\n    if (dtype != null && dtype === 'bool') {\n        throw new Error(`Unsupported data type ${dtype}`);\n    }\n    const randGauss = new _rand_util__WEBPACK_IMPORTED_MODULE_0__.MPRandGauss(mean, stdDev, dtype, false /* truncated */, seed);\n    const res = (0,_buffer__WEBPACK_IMPORTED_MODULE_1__.buffer)(shape, dtype);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = randGauss.nextValue();\n    }\n    return res.toTensor();\n}\nconst randomNormal = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ randomNormal_ });\n//# sourceMappingURL=random_normal.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"randomUniform\": () => (/* binding */ randomUniform)\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _rand_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rand_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates a `tf.Tensor` with values sampled from a uniform distribution.\n *\n * The generated values follow a uniform distribution in the range [minval,\n * maxval). The lower bound minval is included in the range, while the upper\n * bound maxval is excluded.\n *\n * ```js\n * tf.randomUniform([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param minval The lower bound on the range of random values to generate.\n *   Defaults to 0.\n * @param maxval The upper bound on the range of random values to generate.\n *   Defaults to 1.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomUniform_(shape, minval = 0, maxval = 1, dtype = 'float32', seed) {\n    const res = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__.buffer)(shape, dtype);\n    const random = new _rand_util__WEBPACK_IMPORTED_MODULE_1__.UniformRandom(minval, maxval, null, seed);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = random.nextValue();\n    }\n    return res.toTensor();\n}\nconst randomUniform = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ randomUniform_ });\n//# sourceMappingURL=random_uniform.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/range.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/range.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"range\": () => (/* binding */ range)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Creates a new `tf.Tensor1D` filled with the numbers in the range provided.\n *\n * The tensor is a is half-open interval meaning it includes start, but\n * excludes stop. Decrementing ranges and negative step values are also\n * supported.sv\n *\n *\n * ```js\n * tf.range(0, 9, 2).print();\n * ```\n *\n * @param start An integer start value\n * @param stop An integer stop value\n * @param step An integer increment (will default to 1 or -1)\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction range(start, stop, step = 1, dtype = 'float32') {\n    if (step === 0) {\n        throw new Error('Cannot have a step of zero');\n    }\n    const attrs = { start, stop, step, dtype };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_1__.Range, {} /* inputs */, attrs);\n}\n//# sourceMappingURL=range.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/range.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/real.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/real.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"real\": () => (/* binding */ real)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Returns the real part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the real part of each element in input considered as a complex number.\n *\n * If the input is real, it simply makes a clone.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.real(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction real_(input) {\n    const $input = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(input, 'input', 'real');\n    const inputs = { input: $input };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Real, inputs);\n}\nconst real = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ real_ });\n//# sourceMappingURL=real.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/real.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reciprocal\": () => (/* binding */ reciprocal)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes reciprocal of x element-wise: `1 / x`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, 2]);\n *\n * x.reciprocal().print();  // or tf.reciprocal(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction reciprocal_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'reciprocal');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Reciprocal, inputs);\n}\nconst reciprocal = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reciprocal_ });\n//# sourceMappingURL=reciprocal.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PARALLELIZE_THRESHOLD\": () => (/* binding */ PARALLELIZE_THRESHOLD),\n/* harmony export */   \"computeOptimalWindowSize\": () => (/* binding */ computeOptimalWindowSize)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Inputs of size above this threshold will be parallelized by calling multiple\n * shader programs.\n */\n\nconst PARALLELIZE_THRESHOLD = 30;\nfunction computeOptimalWindowSize(inSize) {\n    if (inSize <= PARALLELIZE_THRESHOLD) {\n        return inSize;\n    }\n    return (0,_util__WEBPACK_IMPORTED_MODULE_0__.nearestDivisor)(inSize, Math.floor(Math.sqrt(inSize)));\n}\n//# sourceMappingURL=reduce_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"relu\": () => (/* binding */ relu)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes rectified linear element-wise: `max(x, 0)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.relu().print();  // or tf.relu(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'relu');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Relu, inputs);\n}\nconst relu = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ relu_ });\n//# sourceMappingURL=relu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"relu6\": () => (/* binding */ relu6)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes rectified linear 6 element-wise: `min(max(x, 0), 6)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 8]);\n *\n * x.relu6().print();  // or tf.relu6(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu6_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'relu6');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Relu6, inputs);\n}\nconst relu6 = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ relu6_ });\n//# sourceMappingURL=relu6.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reshape\": () => (/* binding */ reshape)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Reshapes a `tf.Tensor` to a given shape.\n *\n * Given an input tensor, returns a new tensor with the same values as the\n * input tensor with shape `shape`.\n *\n * If one component of shape is the special value -1, the size of that\n * dimension is computed so that the total size remains constant. In\n * particular, a shape of [-1] flattens into 1-D. At most one component of\n * shape can be -1.\n *\n * If shape is 1-D or higher, then the operation returns a tensor with shape\n * shape filled with the values of tensor. In this case, the number of\n * elements implied by shape must be the same as the number of elements in\n * tensor.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.reshape([2, 2]).print();\n * ```\n *\n * @param x The input tensor to be reshaped.\n * @param shape An array of integers defining the output tensor shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction reshape_(x, shape) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'reshape', 'string_or_numeric');\n    const inputs = { x: $x };\n    const attrs = { shape };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Reshape, inputs, attrs);\n}\nconst reshape = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reshape_ });\n//# sourceMappingURL=reshape.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse\": () => (/* binding */ reverse)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Reverses a `tf.Tensor` along a specified axis.\n *\n * Also available are stricter rank-specific methods that assert that `x` is\n * of the given rank:\n *   - `tf.reverse1d`\n *   - `tf.reverse2d`\n *   - `tf.reverse3d`\n *   - `tf.reverse4d`\n *\n * Except `tf.reverse1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.reverse().print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.reverse(axis).print();\n * ```\n * @param x The input tensor to be reversed.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction reverse_(x, axis) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'reverse');\n    const inputs = { x: $x };\n    const attrs = { dims: axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Reverse, inputs, attrs);\n}\nconst reverse = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reverse_ });\n//# sourceMappingURL=reverse.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse1d\": () => (/* binding */ reverse1d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Reverses a `tf.Tensor1D`.\n *\n * @param x The input tensor.\n */\nfunction reverse1d_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'reverse');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 1, () => `Error in reverse1D: x must be rank 1 but got rank ${$x.rank}.`);\n    return (0,_reverse__WEBPACK_IMPORTED_MODULE_2__.reverse)($x, 0);\n}\nconst reverse1d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reverse1d_ });\n//# sourceMappingURL=reverse_1d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse2d\": () => (/* binding */ reverse2d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Reverses a `tf.Tensor2D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse2d_(x, axis) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'reverse');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 2, () => `Error in reverse2D: x must be rank 2 but got rank ${$x.rank}.`);\n    return (0,_reverse__WEBPACK_IMPORTED_MODULE_2__.reverse)($x, axis);\n}\nconst reverse2d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reverse2d_ });\n//# sourceMappingURL=reverse_2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse3d\": () => (/* binding */ reverse3d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Reverses a `tf.Tensor3D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse3d_(x, axis) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'reverse');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 3, () => `Error in reverse3D: x must be rank 3 but got rank ${$x.rank}.`);\n    return (0,_reverse__WEBPACK_IMPORTED_MODULE_2__.reverse)($x, axis);\n}\nconst reverse3d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reverse3d_ });\n//# sourceMappingURL=reverse_3d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse4d\": () => (/* binding */ reverse4d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Reverses a `tf.Tensor4D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse4d_(x, axis) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'reverse');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 4, () => `Error in reverse4D: x must be rank 4 but got rank ${$x.rank}.`);\n    return (0,_reverse__WEBPACK_IMPORTED_MODULE_2__.reverse)($x, axis);\n}\nconst reverse4d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reverse4d_ });\n//# sourceMappingURL=reverse_4d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getImageCenter\": () => (/* binding */ getImageCenter)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Returns the image center in pixels.\nfunction getImageCenter(center, imageHeight, imageWidth) {\n    const centerX = imageWidth * (typeof center === 'number' ? center : center[0]);\n    const centerY = imageHeight * (typeof center === 'number' ? center : center[1]);\n    return [centerX, centerY];\n}\n//# sourceMappingURL=rotate_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/round.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/round.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"round\": () => (/* binding */ round)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes round of input `tf.Tensor` element-wise: `round(x)`.\n * It implements banker's rounding.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.round().print();  // or tf.round(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction round_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'round');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Round, inputs);\n}\nconst round = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ round_ });\n//# sourceMappingURL=round.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/round.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rsqrt\": () => (/* binding */ rsqrt)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes reciprocal of square root of the input `tf.Tensor` element-wise:\n * `y = 1 / sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.rsqrt().print();  // or tf.rsqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction rsqrt_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'rsqrt');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Rsqrt, inputs);\n}\nconst rsqrt = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ rsqrt_ });\n//# sourceMappingURL=rsqrt.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scalar\": () => (/* binding */ scalar)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Creates rank-0 `tf.Tensor` (scalar) with the provided value and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.scalar` as it makes the code more readable.\n *\n * ```js\n * tf.scalar(3.14).print();\n * ```\n *\n * @param value The value of the scalar.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction scalar(value, dtype) {\n    if ((((0,_util__WEBPACK_IMPORTED_MODULE_0__.isTypedArray)(value) && dtype !== 'string') || Array.isArray(value)) &&\n        dtype !== 'complex64') {\n        throw new Error('Error creating a new Scalar: value must be a primitive ' +\n            '(number|boolean|string)');\n    }\n    if (dtype === 'string' && (0,_util__WEBPACK_IMPORTED_MODULE_0__.isTypedArray)(value) &&\n        !(value instanceof Uint8Array)) {\n        throw new Error('When making a scalar from encoded string, ' +\n            'the value must be `Uint8Array`.');\n    }\n    const shape = [];\n    const inferredShape = [];\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_1__.makeTensor)(value, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=scalar.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scatterND\": () => (/* binding */ scatterND)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _scatter_nd_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scatter_nd_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Creates a new tensor by applying sparse updates to individual\n * values or slices within a zero tensor of the given shape tensor according to\n * indices. This operator is the inverse of the `tf.gatherND` operator which\n * extracts values or slices from a given tensor.\n *\n * ```js\n * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');\n * const updates = tf.tensor1d([9, 10, 11, 12]);\n * const shape = [8];\n * tf.scatterND(indices, updates, shape).print() //[0, 11, 0, 10, 9, 0, 0, 12]\n * ```\n *\n * @param indices The tensor contains the indices into the output tensor.\n * @param updates The tensor contains the value for the indices.\n * @param shape: The shape of the output tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction scatterND_(indices, updates, shape) {\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'scatterND', 'int32');\n    const $updates = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(updates, 'updates', 'scatterND');\n    _scatter_nd_util__WEBPACK_IMPORTED_MODULE_2__.validateInput($updates, $indices, shape);\n    const inputs = { indices: $indices, updates: $updates };\n    const attrs = { shape };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.ScatterNd, inputs, attrs);\n}\nconst scatterND = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ scatterND_ });\n//# sourceMappingURL=scatter_nd.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validateUpdateShape\": () => (/* binding */ validateUpdateShape),\n/* harmony export */   \"validateInput\": () => (/* binding */ validateInput),\n/* harmony export */   \"calculateShapes\": () => (/* binding */ calculateShapes)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n\n/**\n * Check whether updates.shape = indices.shape[:batchDim] +\n * shape[sliceDim:]\n *\n * @param x The input tensor.\n */\nfunction validateUpdateShape(shape, indices, updates) {\n    const sliceDim = (indices.rank > 1) ? indices.shape[indices.rank - 1] : 1;\n    const batchDim = (indices.rank > 1) ? indices.rank - 1 : 1;\n    const shapeError = 'Must have updates.shape = indices.shape[:batchDim] + ' +\n        `shape[sliceDim:], got updates.shape: ${updates.shape}` +\n        `, indices.shape: ${indices.shape}, shape: ${shape}` +\n        `, sliceDim: ${sliceDim}, and batchDim: ${batchDim}.`;\n    if (updates.rank < batchDim) {\n        throw new Error(shapeError + ` update.rank < ${batchDim}. `);\n    }\n    if (shape.length < sliceDim + (updates.rank - batchDim)) {\n        throw new Error(shapeError +\n            ` Output shape length < ${sliceDim + (updates.rank - batchDim)}`);\n    }\n    if (updates.rank !== batchDim + shape.length - sliceDim) {\n        throw new Error(shapeError + ` update.rank != ${batchDim + shape.length - sliceDim}`);\n    }\n    for (let d = 0; d < batchDim; ++d) {\n        if (updates.shape[d] !== indices.shape[d]) {\n            throw new Error(shapeError +\n                ` updates.shape[${d}] (${updates.shape[d]}) != indices.shape[${d}] (${indices.shape[d]}).`);\n        }\n    }\n    for (let d = 0; d < updates.rank - batchDim; ++d) {\n        if (updates.shape[d + batchDim] !== shape[d + sliceDim]) {\n            throw new Error(shapeError +\n                ` updates.shape[${d + batchDim}] (${updates.shape[d + batchDim]}) != shape[${d + batchDim}] (${shape[d + batchDim]})`);\n        }\n    }\n}\n/**\n * Validate scatter nd inputs.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n */\nfunction validateInput(updates, indices, shape) {\n    if (indices.rank < 1) {\n        throw new Error('tf.scatterND() expects the indices to be rank 1 or higher,' +\n            ` but the rank was ${indices.rank}.`);\n    }\n    if (updates.rank < 1) {\n        throw new Error('tf.scatterND() expects the updates to be rank 1 or higher,' +\n            ` but the rank was ${updates.rank}.`);\n    }\n    if (indices.dtype !== 'int32') {\n        throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${indices.dtype}`);\n    }\n    if (shape.length < 1) {\n        throw new Error(`Output rank must be greater or equal to 1, but got shape: ${shape}`);\n    }\n    if (shape.length === 0) {\n        if (indices.size === 0) {\n            throw new Error(`Indices specified for empty output. indices shape: ${indices.shape}`);\n        }\n        if (updates.size === 0) {\n            throw new Error(`Updates specified for empty output. updates shape: ${updates.shape}`);\n        }\n    }\n    validateUpdateShape(shape, indices, updates);\n}\n/**\n * Calculate the shape information for the output.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n *\n * @returns ScatterShapeInfo\n */\nfunction calculateShapes(updates, indices, shape) {\n    // Calculate the number of dimensions in indices\n    const indicesRank = indices.shape.length;\n    const sliceRank = (indicesRank > 1) ? indices.shape[indicesRank - 1] : 1;\n    // Calculate the number of elements that make up each slice of our updated\n    // tensor. This allows us to work with flattened tensors and copy over whole\n    // slices at a time.\n    const totalNd = shape.length;\n    let sliceSize = 1;\n    for (let i = sliceRank; i < totalNd; ++i) {\n        sliceSize *= shape[i];\n    }\n    const safeSliceDim = (sliceRank < 1) ? 1 : sliceRank;\n    const numUpdates = (0,_util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape)(indices.shape) / safeSliceDim;\n    const strides = [...(0,_util__WEBPACK_IMPORTED_MODULE_0__.computeStrides)(shape.slice(0, sliceRank)), 1];\n    const outputSize = (0,_util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape)(shape);\n    return { sliceRank, numUpdates, sliceSize, strides, outputSize };\n}\n//# sourceMappingURL=scatter_nd_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"segOpComputeOptimalWindowSize\": () => (/* binding */ segOpComputeOptimalWindowSize),\n/* harmony export */   \"computeOutShape\": () => (/* binding */ computeOutShape),\n/* harmony export */   \"collectGatherOpShapeInfo\": () => (/* binding */ collectGatherOpShapeInfo)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _reduce_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nfunction segOpComputeOptimalWindowSize(inSize, numSegments) {\n    let done = false;\n    let res;\n    if (inSize <= _reduce_util__WEBPACK_IMPORTED_MODULE_0__.PARALLELIZE_THRESHOLD) {\n        res = inSize;\n        done = true;\n    }\n    else {\n        res = (0,_util__WEBPACK_IMPORTED_MODULE_1__.nearestDivisor)(inSize, Math.floor(Math.sqrt(inSize)));\n    }\n    while (!done) {\n        if (res > numSegments || res === inSize) {\n            done = true;\n        }\n        else {\n            res = (0,_util__WEBPACK_IMPORTED_MODULE_1__.nearestDivisor)(inSize, res + 1);\n        }\n    }\n    return res;\n}\nfunction computeOutShape(aShape, axis, numSegments) {\n    const outShape = [];\n    const rank = aShape.length;\n    for (let dim = 0; dim < rank; dim++) {\n        if (dim !== axis) {\n            outShape.push(aShape[dim]);\n        }\n        else {\n            outShape.push(numSegments);\n        }\n    }\n    return outShape;\n}\nfunction collectGatherOpShapeInfo(x, indices, axis, batchDims) {\n    const indicesRank = indices.shape.length;\n    const xRank = x.shape.length;\n    if (batchDims !== 0) {\n        if (batchDims < -indicesRank || batchDims > indicesRank) {\n            throw new Error(`Expect batchDims in the range of [-${indicesRank}, ${indicesRank}], but got ${batchDims}`);\n        }\n    }\n    if (batchDims < 0) {\n        batchDims += indicesRank;\n    }\n    if (batchDims > xRank) {\n        throw new Error(`batchDims (${batchDims}) must be less than rank(x) (\n    ${xRank}).`);\n    }\n    if (axis < batchDims) {\n        throw new Error(`batchDims (${batchDims}) must be less than or equal to axis (${axis}).`);\n    }\n    for (let i = 0; i < batchDims; ++i) {\n        if (x.shape[i] !== indices.shape[i]) {\n            throw new Error(`x.shape[${i}]: ${x.shape[i]} should be equal to indices.shape[${i}]: ${indices.shape[i]}.`);\n        }\n    }\n    const dimSize = x.shape[axis];\n    const outputShape = [];\n    let batchSize = 1;\n    let outerSize = 1;\n    let sliceSize = 1;\n    for (let i = 0; i < batchDims; ++i) {\n        outputShape.push(x.shape[i]);\n        batchSize *= x.shape[i];\n    }\n    for (let i = batchDims; i < axis; i++) {\n        outputShape.push(x.shape[i]);\n        outerSize *= x.shape[i];\n    }\n    for (let i = batchDims; i < indicesRank; i++) {\n        outputShape.push(indices.shape[i]);\n    }\n    for (let i = axis + 1; i < xRank; i++) {\n        outputShape.push(x.shape[i]);\n        sliceSize *= x.shape[i];\n    }\n    return { batchSize, sliceSize, outerSize, dimSize, outputShape };\n}\n//# sourceMappingURL=segment_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"selu\": () => (/* binding */ selu)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes scaled exponential linear element-wise.\n *\n * `x < 0 ? scale * alpha * (exp(x) - 1) : x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.selu().print();  // or tf.selu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction selu_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'selu');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Selu, inputs);\n}\nconst selu = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ selu_ });\n//# sourceMappingURL=selu.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SELU_SCALEALPHA\": () => (/* binding */ SELU_SCALEALPHA),\n/* harmony export */   \"SELU_SCALE\": () => (/* binding */ SELU_SCALE)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst SELU_SCALEALPHA = 1.7580993408473768599402175208123;\nconst SELU_SCALE = 1.0507009873554804934193349852946;\n//# sourceMappingURL=selu_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"separableConv2d\": () => (/* binding */ separableConv2d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _conv2d__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js\");\n/* harmony import */ var _depthwise_conv2d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./depthwise_conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n\n\n\n\n\n\n/**\n * 2-D convolution with separable filters.\n *\n * Performs a depthwise convolution that acts separately on channels followed\n * by a pointwise convolution that mixes channels. Note that this is\n * separability between dimensions [1, 2] and 3, not spatial separability\n * between dimensions 1 and 2.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param depthwiseFilter The depthwise filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`. This is\n *     the filter used in the first step.\n * @param pointwiseFilter The pointwise filter tensor, rank 4, of shape\n *     `[1, 1, inChannels * channelMultiplier, outChannels]`. This is\n *     the filter used in the second step.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction separableConv2d_(x, depthwiseFilter, pointwiseFilter, strides, pad, dilation = [1, 1], dataFormat = 'NHWC') {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'separableConv2d');\n    const $depthwiseFilter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(depthwiseFilter, 'depthwiseFilter', 'separableConv2d');\n    const $pointwiseFilter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(pointwiseFilter, 'pointwiseFilter', 'separableConv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    if (dataFormat === 'NCHW') {\n        throw new Error('separableConv2d currently does not support dataFormat NCHW; only ' +\n            'NHWC is supported');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(x4D.rank === 4, () => `Error in separableConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($depthwiseFilter.rank === 4, () => `Error in separableConv2d: depthwise filter must be rank 4, but ` +\n        `got rank ${$depthwiseFilter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($pointwiseFilter.rank === 4, () => `Error in separableConv2d: pointwise filter must be rank 4, but ` +\n        `got rank ${$depthwiseFilter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($pointwiseFilter.shape[0] === 1, () => `Error in separableConv2d: the first dimension of pointwise filter ` +\n        ` must be 1, but got ${$pointwiseFilter.shape[0]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($pointwiseFilter.shape[1] === 1, () => `Error in separableConv2d: the second dimension of pointwise ` +\n        `filter must be 1, but got ${$pointwiseFilter.shape[1]}.`);\n    const inChannels = $depthwiseFilter.shape[2];\n    const channelMultiplier = $depthwiseFilter.shape[3];\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($pointwiseFilter.shape[2] === inChannels * channelMultiplier, () => `Error in separableConv2d: the third dimension of pointwise filter ` +\n        `must be ${inChannels * channelMultiplier}, ` +\n        `but got ${$pointwiseFilter.shape[2]}.`);\n    const depthwise = (0,_depthwise_conv2d__WEBPACK_IMPORTED_MODULE_3__.depthwiseConv2d)(x4D, $depthwiseFilter, strides, pad, dataFormat, dilation);\n    const pointwiseStride = 1;\n    const res = (0,_conv2d__WEBPACK_IMPORTED_MODULE_4__.conv2d)(depthwise, $pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst separableConv2d = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ separableConv2d_ });\n//# sourceMappingURL=separable_conv2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setdiff1dAsync\": () => (/* binding */ setdiff1dAsync)\n/* harmony export */ });\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Computes the difference between two lists of numbers.\n *\n * Given a Tensor `x` and a Tensor `y`, this operation returns a Tensor `out`\n * that represents all values that are in `x` but not in `y`. The returned\n * Tensor `out` is sorted in the same order that the numbers appear in `x`\n * (duplicates are preserved). This operation also returns a Tensor indices that\n * represents the position of each out element in `x`. In other words:\n *\n * `out[i] = x[idx[i]] for i in [0, 1, ..., out.length - 1]`\n *\n * ```js\n * const x = [1, 2, 3, 4, 5, 6];\n * const y = [1, 3, 5];\n *\n * const [out, indices] = await tf.setdiff1dAsync(x, y);\n * out.print(); // [2, 4, 6]\n * indices.print(); // [1, 3, 5]\n * ```\n *\n * @param x 1-D Tensor. Values to keep.\n * @param y 1-D Tensor. Must have the same type as x. Values to exclude in the\n *     output.\n * @returns Promise of Tensor tuple [out, indices].\n *  out: Tensor with the same type as x.\n *  indices: A Tensor of type int32.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nasync function setdiff1dAsync_(x, y) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'setdiff1d');\n    const $y = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(y, 'y', 'setdiff1d');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.dtype === $y.dtype, () => `x and y should have the same dtype, but got x (${$x.dtype}) and y (${$y.dtype}).`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank === 1, () => `x should be 1D tensor, but got x (${$x.shape}).`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($y.rank === 1, () => `y should be 1D tensor, but got y (${$y.shape}).`);\n    const xVals = await $x.data();\n    const yVals = await $y.data();\n    const ySet = new Set(yVals);\n    let outputSize = 0;\n    for (let i = 0; i < xVals.length; i++) {\n        if (!ySet.has(xVals[i])) {\n            outputSize++;\n        }\n    }\n    const buffer = new _tensor__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer([outputSize], $x.dtype);\n    const indices = new _tensor__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer([outputSize], 'int32');\n    for (let i = 0, p = 0; i < xVals.length; i++) {\n        if (!ySet.has(xVals[i])) {\n            buffer.values[p] = xVals[i];\n            indices.values[p] = i;\n            p++;\n        }\n    }\n    return [buffer.toTensor(), indices.toTensor()];\n}\nconst setdiff1dAsync = setdiff1dAsync_;\n//# sourceMappingURL=setdiff1d_async.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sigmoid\": () => (/* binding */ sigmoid)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\n *\n * ```js\n * const x = tf.tensor1d([0, -1, 2, -3]);\n *\n * x.sigmoid().print();  // or tf.sigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sigmoid_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sigmoid');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Sigmoid, inputs);\n}\nconst sigmoid = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sigmoid_ });\n//# sourceMappingURL=sigmoid.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sign\": () => (/* binding */ sign)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Returns an element-wise indication of the sign of a number.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3, NaN, 0]);\n *\n * x.sign().print();  // or tf.sign(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sign_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sign');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Sign, inputs);\n}\nconst sign = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sign_ });\n//# sourceMappingURL=sign.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"frame\": () => (/* binding */ frame)\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _fill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fill */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _tensor2d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tensor2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Expands input into frames of frameLength.\n * Slides a window size with frameStep.\n *\n * ```js\n * tf.signal.frame([1, 2, 3], 2, 1).print();\n * ```\n * @param signal The input tensor to be expanded\n * @param frameLength Length of each frame\n * @param frameStep The frame hop size in samples.\n * @param padEnd Whether to pad the end of signal with padValue.\n * @param padValue An number to use where the input signal does\n *     not exist when padEnd is True.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction frame_(signal, frameLength, frameStep, padEnd = false, padValue = 0) {\n    let start = 0;\n    const output = [];\n    while (start + frameLength <= signal.size) {\n        output.push((0,_slice__WEBPACK_IMPORTED_MODULE_0__.slice)(signal, start, frameLength));\n        start += frameStep;\n    }\n    if (padEnd) {\n        while (start < signal.size) {\n            const padLen = (start + frameLength) - signal.size;\n            const pad = (0,_concat__WEBPACK_IMPORTED_MODULE_1__.concat)([\n                (0,_slice__WEBPACK_IMPORTED_MODULE_0__.slice)(signal, start, frameLength - padLen), (0,_fill__WEBPACK_IMPORTED_MODULE_2__.fill)([padLen], padValue)\n            ]);\n            output.push(pad);\n            start += frameStep;\n        }\n    }\n    if (output.length === 0) {\n        return (0,_tensor2d__WEBPACK_IMPORTED_MODULE_3__.tensor2d)([], [0, frameLength]);\n    }\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_4__.reshape)((0,_concat__WEBPACK_IMPORTED_MODULE_1__.concat)(output), [output.length, frameLength]);\n}\nconst frame = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ frame_ });\n//# sourceMappingURL=frame.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hamming_window.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hamming_window.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hammingWindow\": () => (/* binding */ hammingWindow)\n/* harmony export */ });\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _signal_ops_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../signal_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Generate a hamming window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hammingWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hammingWindow_(windowLength) {\n    return (0,_signal_ops_util__WEBPACK_IMPORTED_MODULE_0__.cosineWindow)(windowLength, 0.54, 0.46);\n}\nconst hammingWindow = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ hammingWindow_ });\n//# sourceMappingURL=hamming_window.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hamming_window.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hannWindow\": () => (/* binding */ hannWindow)\n/* harmony export */ });\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _signal_ops_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../signal_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Generate a Hann window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hannWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hannWindow_(windowLength) {\n    return (0,_signal_ops_util__WEBPACK_IMPORTED_MODULE_0__.cosineWindow)(windowLength, 0.5, 0.5);\n}\nconst hannWindow = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ hannWindow_ });\n//# sourceMappingURL=hann_window.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/signal/stft.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/signal/stft.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stft\": () => (/* binding */ stft)\n/* harmony export */ });\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _signal_ops_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js\");\n/* harmony import */ var _spectral_rfft__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../spectral/rfft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js\");\n/* harmony import */ var _frame__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./frame */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js\");\n/* harmony import */ var _hann_window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hann_window */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Computes the Short-time Fourier Transform of signals\n * See: https://en.wikipedia.org/wiki/Short-time_Fourier_transform\n *\n * ```js\n * const input = tf.tensor1d([1, 1, 1, 1, 1])\n * tf.signal.stft(input, 3, 1).print();\n * ```\n * @param signal 1-dimensional real value tensor.\n * @param frameLength The window length of samples.\n * @param frameStep The number of samples to step.\n * @param fftLength The size of the FFT to apply.\n * @param windowFn A callable that takes a window length and returns 1-d tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction stft_(signal, frameLength, frameStep, fftLength, windowFn = _hann_window__WEBPACK_IMPORTED_MODULE_0__.hannWindow) {\n    if (fftLength == null) {\n        fftLength = (0,_signal_ops_util__WEBPACK_IMPORTED_MODULE_1__.enclosingPowerOfTwo)(frameLength);\n    }\n    const framedSignal = (0,_frame__WEBPACK_IMPORTED_MODULE_2__.frame)(signal, frameLength, frameStep);\n    const windowedSignal = (0,_mul__WEBPACK_IMPORTED_MODULE_3__.mul)(framedSignal, windowFn(frameLength));\n    return (0,_spectral_rfft__WEBPACK_IMPORTED_MODULE_4__.rfft)(windowedSignal, fftLength);\n}\nconst stft = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ stft_ });\n//# sourceMappingURL=stft.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/stft.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enclosingPowerOfTwo\": () => (/* binding */ enclosingPowerOfTwo),\n/* harmony export */   \"cosineWindow\": () => (/* binding */ cosineWindow)\n/* harmony export */ });\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction enclosingPowerOfTwo(value) {\n    // Return 2**N for integer N such that 2**N >= value.\n    return Math.floor(Math.pow(2, Math.ceil(Math.log(value) / Math.log(2.0))));\n}\nfunction cosineWindow(windowLength, a, b) {\n    const even = 1 - windowLength % 2;\n    const newValues = new Float32Array(windowLength);\n    for (let i = 0; i < windowLength; ++i) {\n        const cosArg = (2.0 * Math.PI * i) / (windowLength + even - 1);\n        newValues[i] = a - b * Math.cos(cosArg);\n    }\n    return (0,_tensor1d__WEBPACK_IMPORTED_MODULE_0__.tensor1d)(newValues, 'float32');\n}\n//# sourceMappingURL=signal_ops_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sin\": () => (/* binding */ sin)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes sin of the input Tensor element-wise: `sin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.sin().print();  // or tf.sin(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sin_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sin');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Sin, inputs);\n}\nconst sin = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sin_ });\n//# sourceMappingURL=sin.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sinh\": () => (/* binding */ sinh)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes hyperbolic sin of the input `tf.Tensor` element-wise: `sinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.sinh().print();  // or tf.sinh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sinh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sinh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Sinh, inputs);\n}\nconst sinh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sinh_ });\n//# sourceMappingURL=sinh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice\": () => (/* binding */ slice)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Extracts a slice from a `tf.Tensor` starting at coordinates `begin`\n * and is of size `size`.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `x` is of the given rank:\n *   - `tf.slice1d`\n *   - `tf.slice2d`\n *   - `tf.slice3d`\n *   - `tf.slice4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.slice([1], [2]).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * x.slice([1, 0], [1, 2]).print();\n * ```\n * @param x The input `tf.Tensor` to slice from.\n * @param begin The coordinates to start the slice from. The length can be\n *     less than the rank of x - the rest of the axes will have implicit 0 as\n *     start. Can also be a single number, in which case it specifies the\n *     first axis.\n * @param size The size of the slice. The length can be less than the rank of\n *     x - the rest of the axes will have implicit -1. A value of -1 requests\n *     the rest of the dimensions in the axis. Can also be a single number,\n *     in which case it specifies the size of the first axis.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction slice_(x, begin, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'slice', 'string_or_numeric');\n    if ($x.rank === 0) {\n        throw new Error('Slicing scalar is not possible');\n    }\n    const inputs = { x: $x };\n    const attrs = { begin, size };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Slice, inputs, attrs);\n}\nconst slice = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ slice_ });\n//# sourceMappingURL=slice.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice1d\": () => (/* binding */ slice1d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Extracts a 1D slice from 1D array starting at coordinates `begin` and is\n * of length `size`. See `slice` for details.\n */\nfunction slice1d_(x, begin, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'slice1d');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 1, () => `slice1d expects a rank-1 tensor, but got a rank-${$x.rank} tensor`);\n    return (0,_slice__WEBPACK_IMPORTED_MODULE_2__.slice)($x, [begin], [size]);\n}\nconst slice1d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ slice1d_ });\n//# sourceMappingURL=slice1d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice2d\": () => (/* binding */ slice2d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Extracts a 2D slice from a 2D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice2d_(x, begin, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'slice2d');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 2, () => `slice2d expects a rank-2 tensor, but got a rank-${$x.rank} tensor`);\n    return (0,_slice__WEBPACK_IMPORTED_MODULE_2__.slice)($x, begin, size);\n}\nconst slice2d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ slice2d_ });\n//# sourceMappingURL=slice2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice3d\": () => (/* binding */ slice3d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice3d_(x, begin, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'slice3d');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 3, () => `slice3d expects a rank-3 tensor, but got a rank-${$x.rank} tensor`);\n    return (0,_slice__WEBPACK_IMPORTED_MODULE_2__.slice)($x, begin, size);\n}\nconst slice3d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ slice3d_ });\n//# sourceMappingURL=slice3d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice4d\": () => (/* binding */ slice4d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Extracts a 4D slice from a 4D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice4d_(x, begin, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'slice4d');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 4, () => `slice4d expects a rank-4 tensor, but got a rank-${$x.rank} tensor`);\n    return (0,_slice__WEBPACK_IMPORTED_MODULE_2__.slice)($x, begin, size);\n}\nconst slice4d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ slice4d_ });\n//# sourceMappingURL=slice4d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"assertParamsValid\": () => (/* binding */ assertParamsValid),\n/* harmony export */   \"maskToAxes\": () => (/* binding */ maskToAxes),\n/* harmony export */   \"computeOutShape\": () => (/* binding */ computeOutShape),\n/* harmony export */   \"stridesWithElidedDims\": () => (/* binding */ stridesWithElidedDims),\n/* harmony export */   \"getNormalizedAxes\": () => (/* binding */ getNormalizedAxes),\n/* harmony export */   \"startIndicesWithElidedDims\": () => (/* binding */ startIndicesWithElidedDims),\n/* harmony export */   \"stopIndicesWithElidedDims\": () => (/* binding */ stopIndicesWithElidedDims),\n/* harmony export */   \"stridesForAxis\": () => (/* binding */ stridesForAxis),\n/* harmony export */   \"startForAxis\": () => (/* binding */ startForAxis),\n/* harmony export */   \"stopForAxis\": () => (/* binding */ stopForAxis),\n/* harmony export */   \"isSliceContinous\": () => (/* binding */ isSliceContinous),\n/* harmony export */   \"computeFlatOffset\": () => (/* binding */ computeFlatOffset),\n/* harmony export */   \"parseSliceParams\": () => (/* binding */ parseSliceParams),\n/* harmony export */   \"sliceInfo\": () => (/* binding */ sliceInfo)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nfunction assertParamsValid(input, begin, size) {\n    const inputRank = input.shape.length;\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(inputRank === begin.length, () => `Error in slice${inputRank}D: Length of begin ${begin} must ` +\n        `match the rank of the array (${inputRank}).`);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(inputRank === size.length, () => `Error in slice${inputRank}D: Length of size ${size} must ` +\n        `match the rank of the array (${inputRank}).`);\n    for (let i = 0; i < inputRank; ++i) {\n        _util__WEBPACK_IMPORTED_MODULE_0__.assert(begin[i] + size[i] <= input.shape[i], () => `Error in slice${inputRank}D: begin[${i}] + size[${i}] ` +\n            `(${begin[i] + size[i]}) would overflow input.shape[${i}] (${input.shape[i]})`);\n    }\n}\n/** Converts a binary mask to an array of axes. Used in stridedSlice(). */\nfunction maskToAxes(mask) {\n    const axes = [];\n    let axis = 0;\n    while (mask > 0) {\n        if (mask & 1) {\n            axes.push(axis);\n        }\n        mask /= 2;\n        axis++;\n    }\n    return axes;\n}\n/** Computes the output shape given the strided slice params. */\nfunction computeOutShape(begin, end, strides) {\n    const size = [];\n    for (let axis = 0; axis < begin.length; axis++) {\n        size[axis] = Math.ceil((end[axis] - begin[axis]) / strides[axis]);\n    }\n    return size;\n}\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current stride value. Otherwise, insert.\nfunction stridesWithElidedDims(strides, ellipsisInsertionIndex, numElidedAxes, inputShape) {\n    const newStrides = [...strides];\n    for (let i = newStrides.length; i < inputShape.length; i++) {\n        newStrides.push(1);\n    }\n    for (let i = 0; i < numElidedAxes; i++) {\n        if (i === 0) {\n            newStrides[ellipsisInsertionIndex] = 1;\n        }\n        else {\n            newStrides.splice(ellipsisInsertionIndex, 0 /* num elements to delete */, 1 /* element to add */);\n            newStrides.pop();\n        }\n    }\n    return newStrides;\n}\nfunction unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, normalizedAxis) {\n    if (normalizedAxis <= ellipsisInsertionIndex) {\n        return normalizedAxis;\n    }\n    return normalizedAxis - (numElidedAxes - 1);\n}\nfunction getElidedAxes(numElidedAxes, ellipsisInsertionIndex) {\n    const elidedAxes = [];\n    for (let i = 0; i < numElidedAxes; i++) {\n        elidedAxes.push(ellipsisInsertionIndex + i);\n    }\n    return elidedAxes;\n}\n// Normalize the start, end and strides.\nfunction getNormalizedAxes(inputShape, ellipsisAxes, numInterpolatedAxes, begin, end, strides, beginMask, endMask, ellipsisMask) {\n    const inputRank = inputShape.length;\n    let normalizedBegin = new Array(inputRank), normalizedEnd = new Array(inputRank), normalizedStrides = new Array(inputRank);\n    if (ellipsisAxes.length && numInterpolatedAxes > 0) {\n        const fullIndex = ellipsisAxes[0];\n        // The ellipsis applies to the masked index as well as any dimensions\n        // that are interpolated.\n        const numElidedAxes = numInterpolatedAxes + 1;\n        normalizedBegin = startIndicesWithElidedDims(beginMask, fullIndex, numElidedAxes, begin, inputShape);\n        normalizedEnd = stopIndicesWithElidedDims(endMask, fullIndex, numElidedAxes, end, inputShape);\n        normalizedStrides =\n            stridesWithElidedDims(strides, fullIndex, numElidedAxes, inputShape);\n    }\n    else {\n        for (let axis = 0; axis < inputRank; axis++) {\n            normalizedBegin[axis] = startForAxis(beginMask, begin, strides, inputShape, axis, ellipsisMask);\n            normalizedEnd[axis] =\n                stopForAxis(endMask, end, strides, inputShape, axis, ellipsisMask);\n            normalizedStrides[axis] = stridesForAxis(strides, axis, ellipsisMask);\n        }\n    }\n    return {\n        begin: normalizedBegin,\n        end: normalizedEnd,\n        strides: normalizedStrides\n    };\n}\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current start value. Otherwise, insert.\nfunction startIndicesWithElidedDims(beginMask, ellipsisInsertionIndex, numElidedAxes, originalBegin, inputShape) {\n    const newIndices = [...inputShape];\n    const elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);\n    for (let axis = 0; axis < newIndices.length; axis++) {\n        if (elidedAxes.indexOf(axis) > -1) {\n            newIndices[axis] = 0;\n        }\n        else {\n            const originalAxis = unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);\n            let originalValue = originalBegin[originalAxis];\n            if (beginMask & 1 << originalAxis) {\n                originalValue = 0;\n            }\n            newIndices[axis] = originalValue;\n        }\n    }\n    return newIndices;\n}\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current stop value. Otherwise, insert.\nfunction stopIndicesWithElidedDims(endMask, ellipsisInsertionIndex, numElidedAxes, originalEnd, inputShape) {\n    const newIndices = [...inputShape];\n    const elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);\n    for (let axis = 0; axis < newIndices.length; axis++) {\n        if (elidedAxes.indexOf(axis) > -1) {\n            newIndices[axis] = Number.MAX_SAFE_INTEGER;\n        }\n        else {\n            const originalAxis = unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);\n            let originalValue = originalEnd[originalAxis];\n            if (endMask & 1 << originalAxis) {\n                originalValue = Number.MAX_SAFE_INTEGER;\n            }\n            newIndices[axis] = originalValue;\n        }\n    }\n    for (let i = 0; i < newIndices.length; i++) {\n        // Handle negative indices\n        const axisSize = inputShape[i];\n        if (newIndices[i] < 0) {\n            newIndices[i] += axisSize;\n        }\n        newIndices[i] = _util__WEBPACK_IMPORTED_MODULE_0__.clamp(0, newIndices[i], inputShape[i]);\n    }\n    return newIndices;\n}\nfunction stridesForAxis(strides, axis, ellipsisMask) {\n    let stride = strides[axis];\n    if (ellipsisMask & (1 << axis) || stride == null) {\n        stride = 1;\n    }\n    return stride;\n}\nfunction startForAxis(beginMask, startIndices, strides, inputShape, axis, ellipsisMask) {\n    // Begin with the specified index\n    let start = startIndices[axis];\n    const stride = strides[axis] || 1;\n    // Check the axis bit from right of masked axes, or the begin index is not set\n    // for the axis.\n    if (beginMask & 1 << axis || ellipsisMask & 1 << axis || start == null) {\n        if (stride > 0) {\n            // Forward iteration - use the first element. These values will get\n            // clamped below (Note: We could have set them to 0 and axis_size-1, but\n            // use lowest() and max() to maintain symmetry with StopForAxis())\n            start = Number.MIN_SAFE_INTEGER;\n        }\n        else {\n            // Backward iteration - use the last element.\n            start = Number.MAX_SAFE_INTEGER;\n        }\n    }\n    // Handle negative indices\n    const axisSize = inputShape[axis];\n    if (start < 0) {\n        start += axisSize;\n    }\n    // Clamping\n    start = _util__WEBPACK_IMPORTED_MODULE_0__.clamp(0, start, axisSize - 1);\n    return start;\n}\nfunction stopForAxis(endMask, stopIndices, strides, inputShape, axis, ellipsisMask) {\n    // Begin with the specified index\n    let stop = stopIndices[axis];\n    const stride = strides[axis] || 1;\n    // Check the axis bit from right of masked axes, or if the stop index is not\n    // set for this axis.\n    if (endMask & (1 << axis) || ellipsisMask & (1 << axis) || stop == null) {\n        if (stride > 0) {\n            // Forward iteration - use the last element. These values will get\n            // clamped below\n            stop = Number.MAX_SAFE_INTEGER;\n        }\n        else {\n            // Backward iteration - use the first element.\n            stop = Number.MIN_SAFE_INTEGER;\n        }\n    }\n    // Handle negative indices\n    const axisSize = inputShape[axis];\n    if (stop < 0) {\n        stop += axisSize;\n    }\n    // Clamping\n    // Because the end index points one past the last element, we need slightly\n    // different clamping ranges depending on the direction.\n    if (stride > 0) {\n        // Forward iteration\n        stop = _util__WEBPACK_IMPORTED_MODULE_0__.clamp(0, stop, axisSize);\n    }\n    else {\n        // Backward iteration\n        stop = _util__WEBPACK_IMPORTED_MODULE_0__.clamp(-1, stop, axisSize - 1);\n    }\n    return stop;\n}\n/**\n * Returns true if the slice occupies a continous set of elements in the\n * 'flat' space.\n */\nfunction isSliceContinous(shape, begin, size) {\n    // Index of the first axis that has size > 1.\n    let firstNonOneAxis = size.length;\n    for (let i = 0; i < size.length; i++) {\n        if (size[i] > 1) {\n            firstNonOneAxis = i;\n            break;\n        }\n    }\n    for (let i = firstNonOneAxis + 1; i < size.length; i++) {\n        if (begin[i] > 0 || size[i] !== shape[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction computeFlatOffset(begin, strides) {\n    let flatOffset = begin.length > 0 ? begin[begin.length - 1] : 1;\n    for (let i = 0; i < begin.length - 1; i++) {\n        flatOffset += begin[i] * strides[i];\n    }\n    return flatOffset;\n}\nfunction parseSliceParams(x, begin, size) {\n    // The following logic allows for more ergonomic calls.\n    let begin_;\n    const xRank = x.shape.length;\n    if (typeof begin === 'number') {\n        begin_ = [begin, ...new Array(xRank - 1).fill(0)];\n    }\n    else if (begin.length < xRank) {\n        begin_ = begin.concat(new Array(xRank - begin.length).fill(0));\n    }\n    else {\n        begin_ = begin.slice();\n    }\n    begin_.forEach(d => {\n        _util__WEBPACK_IMPORTED_MODULE_0__.assert(d !== -1, () => 'slice() does not support negative begin indexing.');\n    });\n    let size_;\n    if (size == null) {\n        size_ = new Array(xRank).fill(-1);\n    }\n    else if (typeof size === 'number') {\n        size_ = [size, ...new Array(xRank - 1).fill(-1)];\n    }\n    else if (size.length < xRank) {\n        size_ = size.concat(new Array(xRank - size.length).fill(-1));\n    }\n    else {\n        size_ = size;\n    }\n    size_ = size_.map((d, i) => {\n        if (d >= 0) {\n            return d;\n        }\n        else {\n            _util__WEBPACK_IMPORTED_MODULE_0__.assert(d === -1, () => `Negative size values should be exactly -1 but got ` +\n                `${d} for the slice() size at index ${i}.`);\n            return x.shape[i] - begin_[i];\n        }\n    });\n    return [begin_, size_];\n}\nfunction sliceInfo(xShape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\n    // make a copy because it may be modified further down.\n    let $begin = begin.slice();\n    let $end = end.slice();\n    let $strides = strides;\n    if (strides == null) {\n        $strides = new Array($begin.length);\n    }\n    const ellipsisAxes = maskToAxes(ellipsisMask);\n    if (ellipsisAxes.length > 1) {\n        throw new Error('Multiple ellipses in slice is not allowed.');\n    }\n    if (ellipsisMask !== 0 && newAxisMask !== 0) {\n        throw new Error('Using both ellipsisMask and newAxisMask is not yet supported.');\n    }\n    if (ellipsisMask !== 0 && shrinkAxisMask !== 0) {\n        throw new Error('Using both ellipsisMask and shrinkAxisMask is not yet supported.');\n    }\n    const numInterpolatedAxes = xShape.length - $begin.length;\n    // Expand the dims of x based on the newAxisMask.\n    const expandAxes = maskToAxes(newAxisMask);\n    const newShape = xShape.slice();\n    expandAxes.forEach(axis => {\n        $begin[axis] = 0;\n        $end[axis] = 1;\n        newShape.splice(axis, 0, 1);\n    });\n    const { begin: normalizedBegin, end: normalizedEnd, strides: normalizedStrides } = getNormalizedAxes(newShape, ellipsisAxes, numInterpolatedAxes, $begin, $end, $strides, beginMask, endMask, ellipsisMask);\n    $begin = normalizedBegin;\n    $end = normalizedEnd;\n    $strides = normalizedStrides;\n    const shrinkAxes = maskToAxes(shrinkAxisMask);\n    // Adjust the ends based on the shrink mask.\n    shrinkAxes.forEach(axis => {\n        $end[axis] = $begin[axis] + 1;\n        $strides[axis] = 1;\n    });\n    // Figure out the output shape.\n    const size = computeOutShape($begin, $end, $strides);\n    // Remove the axes based on shrinkMask.\n    const outShape = size.filter((_, axis) => shrinkAxes.indexOf(axis) === -1);\n    const nonStrided = $strides.every(v => v === 1);\n    return { nonStrided, $begin, $end, $strides, size, newShape, outShape };\n}\n//# sourceMappingURL=slice_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"softmax\": () => (/* binding */ softmax)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the softmax normalized vector given the logits.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction softmax_(logits, dim = -1) {\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(logits, 'logits', 'softmax', 'float32');\n    if (dim === -1) {\n        dim = $logits.rank - 1;\n    }\n    if (dim !== $logits.rank - 1) {\n        throw Error('Softmax along a non-last dimension is not yet supported. ' +\n            `Logits was rank ${$logits.rank} and dim was ${dim}`);\n    }\n    const inputs = { logits: $logits };\n    const attrs = { dim };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Softmax, inputs, attrs);\n}\nconst softmax = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ softmax_ });\n//# sourceMappingURL=softmax.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"softplus\": () => (/* binding */ softplus)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes softplus of the input `tf.Tensor` element-wise: `log(exp(x) + 1)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.softplus().print();  // or tf.softplus(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction softplus_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'softplus');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Softplus, inputs);\n}\nconst softplus = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ softplus_ });\n//# sourceMappingURL=softplus.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"spaceToBatchND\": () => (/* binding */ spaceToBatchND)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * This operation divides \"spatial\" dimensions `[1, ..., M]` of the input into\n * a grid of blocks of shape `blockShape`, and interleaves these blocks with\n * the \"batch\" dimension (0) such that in the output, the spatial\n * dimensions `[1, ..., M]` correspond to the position within the grid,\n * and the batch dimension combines both the position within a spatial block\n * and the original batch position. Prior to division into blocks,\n * the spatial dimensions of the input are optionally zero padded\n * according to `paddings`. See below for a precise description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]);\n * const blockShape = [2, 2];\n * const paddings = [[0, 0], [0, 0]];\n *\n * x.spaceToBatchND(blockShape, paddings).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param paddings A 2-D array. Must have shape `[M, 2]`, all values must be >=\n *     0. `paddings[i] = [padStart, padEnd]` specifies the amount to zero-pad\n * from input dimension `i + 1`, which corresponds to spatial dimension `i`. It\n * is required that\n * `(inputShape[i + 1] + padStart + padEnd) % blockShape[i] === 0`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Zero-pad the start and end of dimensions `[1, ..., M]` of the input\n * according to `paddings` to produce `padded` of shape paddedShape.\n *\n * 2. Reshape `padded` to `reshapedPadded` of shape:\n * `[batch] + [paddedShape[1] / blockShape[0], blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1], blockShape[M-1]] + remainingShape`\n *\n * 3. Permute dimensions of `reshapedPadded` to produce `permutedReshapedPadded`\n * of shape: `blockShape + [batch] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * 4. Reshape `permutedReshapedPadded` to flatten `blockShape` into the\n * batch dimension, producing an output tensor of shape:\n * `[batch * prod(blockShape)] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction spaceToBatchND_(x, blockShape, paddings) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'spaceToBatchND');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank >= 1 + blockShape.length, () => `input rank ${$x.rank} should be > than [blockShape] ${blockShape.length}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(paddings.length === blockShape.length, () => `paddings.shape[0] ${paddings.length} must be equal to [blockShape] ${blockShape.length}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.shape.reduce((a, b, i) => {\n        if (i > 0 && i <= blockShape.length) {\n            return a &&\n                ((b + paddings[i - 1][0] + paddings[i - 1][1]) %\n                    blockShape[i - 1] ===\n                    0);\n        }\n        return a;\n    }, true), () => `input spatial dimensions ${$x.shape.slice(1)} with paddings ${paddings.toString()} must be divisible by blockShapes ${blockShape.toString()}`);\n    const inputs = { x: $x };\n    const attrs = { blockShape, paddings };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.SpaceToBatchND, inputs, attrs);\n}\nconst spaceToBatchND = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ spaceToBatchND_ });\n//# sourceMappingURL=space_to_batch_nd.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_fill_empty_rows.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_fill_empty_rows.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseFillEmptyRows\": () => (/* binding */ sparseFillEmptyRows)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * The input SparseTensor is represented via the map of inputs {`indices`,\n * `values`, `denseShape`}. The output SparseTensor has the same `denseShape`\n * but with indices `outputIndices` and values `outputValues`. This op inserts a\n * single entry for every row that doesn't have any values. The index is created\n * as `[row, 0, ..., 0]` and the inserted value is `defaultValue`.\n *\n * For example, suppose `spInput` has shape [5, 6] and non-empty values:\n * [0, 1]: a\n * [0, 3]: b\n * [2, 0]: c\n * [3, 1]: d\n *\n * Rows 1 and 4 are empty, so the output will be of shape [5, 6] with values:\n * [0, 1]: a\n * [0, 3]: b\n * [1, 0]: `defaultValue`\n * [2, 0]: c\n * [3, 1]: d\n * [4, 0]: `defaultValue`\n *\n * The output SparseTensor will be in row-major order and will have the same\n * shape as the input.\n *\n * This op also returns an indicator vector shaped [dense_shape[0]] such that\n * emptyRowIndicator[i] = True iff row i was an empty row.\n *\n * And a reverse index map vector shaped [indices.shape[0]] that is used during\n * backpropagation, reverseIndexMap[i] = outi s.t. indices[i, j] ==\n * outputIndices[outi, j] for all j\n *\n * ```js\n * const result = tf.sparse.sparseFillEmptyRows(\n *   [[0, 0], [1, 0], [1, 3], [1, 4], [3, 2], [3, 3]],\n *   [0, 10, 13, 14, 32, 33], [5, 6], -1);\n * console.log(result);\n * result['outputIndices'].print(); // [[0, 0], [1, 0], [1, 3], [1, 4],\n *                                  //  [2, 0], [3, 2], [3, 3], [4, 0]]\n * result['outputValues'].print(); // [0, 10, 13, 14,-1, 32, 33, -1]\n * result['emptyRowIndicator'].print(); // [false, false, true, false, true]\n * result['reverseIndexMap'].print(); // [0, 1, 2, 3, 5, 6]\n * ```\n * @param indices: 2-D. the indices of the sparse tensor.\n * @param values: 1-D. the values of the sparse tensor.\n * @param denseShape: 1-D. the shape of the sparse tensor.\n * @param defaultValue: 0-D. default value to insert into location [row, 0, ...,\n *     0] for rows missing from the input sparse tensor.\n * @return A map with the following properties:\n *     - outputIndices\n *     - outputValues: 1-D. the values of the filled sparse tensor.\n *     - emptyRowIndicator: 1-D. whether the dense row was missing in the input\n * sparse tensor.\n *     - reverseIndexMap: 1-D. a map from the input indices to the output\n * indices.\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseFillEmptyRows_(indices, values, denseShape, defaultValue) {\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'sparseFillEmptyRows');\n    const $values = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(values, 'values', 'sparseFillEmptyRows');\n    const $denseShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(denseShape, 'denseShape', 'sparseFillEmptyRows');\n    const $defaultValue = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(defaultValue, 'defaultValue', 'sparseFillEmptyRows', $values.dtype);\n    if ($indices.rank !== 2) {\n        throw new Error(`Indices should be Tensor2D but received shape\n        ${$indices.shape}`);\n    }\n    if ($values.rank !== 1) {\n        throw new Error(`Values should be Tensor1D but received shape ${$values.shape}`);\n    }\n    if ($denseShape.rank !== 1) {\n        throw new Error(`Dense shape should be Tensor1D but received shape ${$denseShape.shape}`);\n    }\n    if ($defaultValue.rank !== 0) {\n        throw new Error(`Default value should be a scalar but received shape ${$defaultValue.shape}`);\n    }\n    const inputs = {\n        indices: $indices,\n        values: $values,\n        denseShape: $denseShape,\n        defaultValue: $defaultValue\n    };\n    const result = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.SparseFillEmptyRows, inputs);\n    return {\n        outputIndices: result[0],\n        outputValues: result[1],\n        emptyRowIndicator: result[2],\n        reverseIndexMap: result[3]\n    };\n}\nconst sparseFillEmptyRows = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sparseFillEmptyRows_ });\n//# sourceMappingURL=sparse_fill_empty_rows.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_fill_empty_rows.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_reshape.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_reshape.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseReshape\": () => (/* binding */ sparseReshape)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * This operation has the same semantics as reshape on the represented dense\n * tensor. The `inputIndices` are recomputed based on the requested `newShape`.\n * If one component of `newShape` is the special value -1, the size of that\n * dimension is computed so that the total dense size remains constant. At most\n * one component of `newShape` can be -1. The number of dense elements implied\n * by `newShape` must be the same as the number of dense elements originally\n * implied by `inputShape`. Reshaping does not affect the order of values in the\n * SparseTensor. If the input tensor has rank R_in and N non-empty values, and\n * `newShape` has length R_out, then `inputIndices` has shape [N, R_in],\n * `inputShape` has length R_in, `outputIndices` has shape [N, R_out], and\n * `outputShape` has length R_out.\n *\n * ```js\n * const result = tf.sparse.sparseReshape(\n *   [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 2, 3]],\n *   [2, 3, 6], [9, -1]);\n * console.log(result);\n * result['outputIndices'].print(); //[[0, 0], [0, 1], [1, 2], [4, 2], [8, 1]]\n * result['outputShape'].print(); // [9, 4]\n * ```\n * @param inputIndices: 2-D. N x R_in matrix with the indices of non-empty\n * values in a SparseTensor.\n * @param inputShape: 1-D. R_in Tensor1D with the input SparseTensor's dense\n * shape.\n * @param newShape: 1-D. R_out Tensor1D with the requested new dense shape.\n * @return A map with the following properties:\n *     - outputIndices: 2-D. N x R_out matrix with the updated indices of\n *       non-empty values in the output SparseTensor.\n *     - outputShape: 1-D. R_out vector with the full dense shape of the output\n *       SparseTensor. This is the same as newShape but with any -1 dimensions\n *        filled in.\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseReshape_(inputIndices, inputShape, newShape) {\n    const $inputIndices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(inputIndices, 'inputIndices', 'sparseReshape');\n    const $inputShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(inputShape, 'inputShape', 'sparseReshape');\n    const $newShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(newShape, 'newShape', 'sparseReshape');\n    if ($inputIndices.rank !== 2) {\n        throw new Error(`Input indices should be Tensor2D but received shape\n        ${$inputIndices.shape}`);\n    }\n    if ($inputShape.rank !== 1) {\n        throw new Error(`Input shape should be Tensor1D but received shape ${$inputShape.shape}`);\n    }\n    if ($newShape.rank !== 1) {\n        throw new Error(`New shape should be Tensor1D but received shape ${$newShape.shape}`);\n    }\n    const inputs = {\n        inputIndices: $inputIndices,\n        inputShape: $inputShape,\n        newShape: $newShape\n    };\n    const result = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.SparseReshape, inputs);\n    return { outputIndices: result[0], outputShape: result[1] };\n}\nconst sparseReshape = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sparseReshape_ });\n//# sourceMappingURL=sparse_reshape.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_reshape.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_segment_mean.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_segment_mean.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseSegmentMean\": () => (/* binding */ sparseSegmentMean)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the mean along sparse segments of a tensor.\n *\n * ```js\n * const c = tf.tensor2d([[1,2,3,4], [-1,-2,-3,-4], [6,7,8,9]]);\n * // Select two rows, one segment.\n * const result1 = tf.sparse.sparseSegmentMean(c,\n *                                           tf.tensor1d([0, 1], 'int32'),\n *                                           tf.tensor1d([0, 0], 'int32'));\n * result1.print(); // [[0, 0, 0, 0]]\n *\n * // Select two rows, two segments.\n * const result2 = tf.sparse.sparseSegmentMean(c,\n *                                             tf.tensor1d([0, 1], 'int32'),\n *                                             tf.tensor1d([0, 1], 'int32'));\n * result2.print(); // [[1, 2, 3, 4], [-1, -2, -3, -4]]\n *\n * // Select all rows, two segments.\n * const result3 = tf.sparse.sparseSegmentMean(c,\n *                                             tf.tensor1d([0, 1, 2], 'int32'),\n *                                             tf.tensor1d([0, 1, 1], 'int32'));\n * result3.print(); // [[1.0, 2.0, 3.0, 4.0], [2.5, 2.5, 2.5, 2.5]]\n * ```\n * @param data: A Tensor of at least one dimension with data that will be\n *     assembled in the output.\n * @param indices: A 1-D Tensor with indices into data. Has same rank as\n *     segmentIds.\n * @param segmentIds: A 1-D Tensor with indices into the output Tensor. Values\n *     should be sorted and can be repeated.\n * @return Has same shape as data, except for dimension 0 which has equal to\n *         the number of segments.\n *\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseSegmentMean_(data, indices, segmentIds) {\n    const $data = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(data, 'data', 'sparseSegmentMean');\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'sparseSegmentMean');\n    const $segmentIds = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(segmentIds, 'segmentIds', 'sparseSegmentMean');\n    if ($data.rank < 1) {\n        throw new Error(`Data should be at least 1 dimensional but received scalar`);\n    }\n    if ($indices.rank !== 1) {\n        throw new Error(`Indices should be Tensor1D but received shape\n          ${$indices.shape}`);\n    }\n    if ($segmentIds.rank !== 1) {\n        throw new Error(`Segment ids should be Tensor1D but received shape\n          ${$segmentIds.shape}`);\n    }\n    const inputs = {\n        data: $data,\n        indices: $indices,\n        segmentIds: $segmentIds\n    };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.SparseSegmentMean, inputs);\n}\nconst sparseSegmentMean = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sparseSegmentMean_ });\n//# sourceMappingURL=sparse_segment_mean.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_segment_mean.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_segment_sum.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_segment_sum.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseSegmentSum\": () => (/* binding */ sparseSegmentSum)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes the sum along sparse segments of a tensor.\n *\n * ```js\n * const c = tf.tensor2d([[1,2,3,4], [-1,-2,-3,-4], [5,6,7,8]]);\n * // Select two rows, one segment.\n * const result1 = tf.sparse.sparseSegmentSum(c,\n *                                           tf.tensor1d([0, 1], 'int32'),\n *                                           tf.tensor1d([0, 0], 'int32'));\n * result1.print(); // [[0, 0, 0, 0]]\n *\n * // Select two rows, two segment.\n * const result2 = tf.sparse.sparseSegmentSum(c,\n *                                           tf.tensor1d([0, 1], 'int32'),\n *                                           tf.tensor1d([0, 1], 'int32'));\n * result2.print(); // [[1, 2, 3, 4], [-1, -2, -3, -4]]\n *\n * // Select all rows, two segments.\n * const result3 = tf.sparse.sparseSegmentSum(c,\n *                                           tf.tensor1d([0, 1, 2], 'int32'),\n *                                           tf.tensor1d([0, 0, 1], 'int32'));\n * result3.print(); // [[0, 0, 0, 0], [5, 6, 7, 8]]\n * ```\n * @param data: A Tensor of at least one dimension with data that will be\n *     assembled in the output.\n * @param indices: A 1-D Tensor with indices into data. Has same rank as\n *     segmentIds.\n * @param segmentIds: A 1-D Tensor with indices into the output Tensor. Values\n *     should be sorted and can be repeated.\n * @return Has same shape as data, except for dimension 0 which has equal to\n *         the number of segments.\n *\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseSegmentSum_(data, indices, segmentIds) {\n    const $data = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(data, 'data', 'sparseSegmentSum');\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'sparseSegmentSum');\n    const $segmentIds = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(segmentIds, 'segmentIds', 'sparseSegmentSum');\n    if ($data.rank < 1) {\n        throw new Error(`Data should be at least 1 dimensional but received scalar`);\n    }\n    if ($indices.rank !== 1) {\n        throw new Error(`Indices should be Tensor1D but received shape\n         ${$indices.shape}`);\n    }\n    if ($segmentIds.rank !== 1) {\n        throw new Error(`Segment ids should be Tensor1D but received shape\n         ${$segmentIds.shape}`);\n    }\n    const inputs = {\n        data: $data,\n        indices: $indices,\n        segmentIds: $segmentIds\n    };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.SparseSegmentSum, inputs);\n}\nconst sparseSegmentSum = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sparseSegmentSum_ });\n//# sourceMappingURL=sparse_segment_sum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_segment_sum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseToDense\": () => (/* binding */ sparseToDense)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _ops_sparse_to_dense_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ops/sparse_to_dense_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. the type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction sparseToDense_(sparseIndices, sparseValues, outputShape, defaultValue = 0) {\n    const $sparseIndices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n    const $sparseValues = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(sparseValues, 'sparseValues', 'sparseToDense');\n    const $defaultValue = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n    _ops_sparse_to_dense_util__WEBPACK_IMPORTED_MODULE_2__.validateInput($sparseIndices, $sparseValues, outputShape, $defaultValue);\n    const inputs = {\n        sparseIndices: $sparseIndices,\n        sparseValues: $sparseValues,\n        defaultValue: $defaultValue\n    };\n    const attrs = { outputShape };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.SparseToDense, inputs, attrs);\n}\nconst sparseToDense = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ sparseToDense_ });\n//# sourceMappingURL=sparse_to_dense.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validateInput\": () => (/* binding */ validateInput)\n/* harmony export */ });\n/**\n * Validate sparseToDense inputs.\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape number[]. Shape of the dense output tensor.\n * @param validateIndices boolean. indice validation is not supported, error\n * will be thrown if it is set.\n */\nfunction validateInput(sparseIndices, sparseValues, outputShape, defaultValues) {\n    if (sparseIndices.dtype !== 'int32') {\n        throw new Error('tf.sparseToDense() expects the indices to be int32 type,' +\n            ` but the dtype was ${sparseIndices.dtype}.`);\n    }\n    if (sparseIndices.rank > 2) {\n        throw new Error('sparseIndices should be a scalar, vector, or matrix,' +\n            ` but got shape ${sparseIndices.shape}.`);\n    }\n    const numElems = sparseIndices.rank > 0 ? sparseIndices.shape[0] : 1;\n    const numDims = sparseIndices.rank > 1 ? sparseIndices.shape[1] : 1;\n    if (outputShape.length !== numDims) {\n        throw new Error('outputShape has incorrect number of elements:,' +\n            ` ${outputShape.length}, should be: ${numDims}.`);\n    }\n    const numValues = sparseValues.size;\n    if (!(sparseValues.rank === 0 ||\n        sparseValues.rank === 1 && numValues === numElems)) {\n        throw new Error('sparseValues has incorrect shape ' +\n            `${sparseValues.shape}, should be [] or [${numElems}]`);\n    }\n    if (sparseValues.dtype !== defaultValues.dtype) {\n        throw new Error('sparseValues.dtype must match defaultValues.dtype');\n    }\n}\n//# sourceMappingURL=sparse_to_dense_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fft\": () => (/* binding */ fft)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the inner-most\n * dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.fft().print();  // tf.spectral.fft(x).print();\n * ```\n * @param input The complex input to compute an fft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction fft_(input) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(input.dtype === 'complex64', () => `The dtype for tf.spectral.fft() must be complex64 ` +\n        `but got ${input.dtype}.`);\n    const inputs = { input };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.FFT, inputs);\n}\nconst fft = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ fft_ });\n//# sourceMappingURL=fft.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ifft\": () => (/* binding */ ifft)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Inverse fast Fourier transform.\n *\n * Computes the inverse 1-dimensional discrete Fourier transform over the\n * inner-most dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.ifft().print();  // tf.spectral.ifft(x).print();\n * ```\n * @param input The complex input to compute an ifft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction ifft_(input) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(input.dtype === 'complex64', () => `The dtype for tf.spectral.ifft() must be complex64 ` +\n        `but got ${input.dtype}.`);\n    const inputs = { input };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.IFFT, inputs);\n}\nconst ifft = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ ifft_ });\n//# sourceMappingURL=ifft.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"irfft\": () => (/* binding */ irfft)\n/* harmony export */ });\n/* harmony import */ var _complex__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _imag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../imag */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _real__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../real */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/real.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _ifft__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ifft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Inversed real value input fast Fourier transform.\n *\n * Computes the 1-dimensional inversed discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([0, 0, 0]);\n * const x = tf.complex(real, imag);\n *\n * x.irfft().print();\n * ```\n * @param input The real value input to compute an irfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction irfft_(input) {\n    const innerDimensionSize = input.shape[input.shape.length - 1];\n    const batch = input.size / innerDimensionSize;\n    let ret;\n    if (innerDimensionSize <= 2) {\n        const complexInput = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)(input, [batch, innerDimensionSize]);\n        ret = (0,_ifft__WEBPACK_IMPORTED_MODULE_1__.ifft)(complexInput);\n    }\n    else {\n        // The length of unique components of the DFT of a real-valued signal\n        // is 2 * (input_len - 1)\n        const outputShape = [batch, 2 * (innerDimensionSize - 1)];\n        const realInput = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)((0,_real__WEBPACK_IMPORTED_MODULE_2__.real)(input), [batch, innerDimensionSize]);\n        const imagInput = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)((0,_imag__WEBPACK_IMPORTED_MODULE_3__.imag)(input), [batch, innerDimensionSize]);\n        const realConjugate = (0,_reverse__WEBPACK_IMPORTED_MODULE_4__.reverse)((0,_slice__WEBPACK_IMPORTED_MODULE_5__.slice)(realInput, [0, 1], [batch, innerDimensionSize - 2]), 1);\n        const imagConjugate = (0,_mul__WEBPACK_IMPORTED_MODULE_6__.mul)((0,_reverse__WEBPACK_IMPORTED_MODULE_4__.reverse)((0,_slice__WEBPACK_IMPORTED_MODULE_5__.slice)(imagInput, [0, 1], [batch, innerDimensionSize - 2]), 1), (0,_scalar__WEBPACK_IMPORTED_MODULE_7__.scalar)(-1));\n        const r = (0,_concat__WEBPACK_IMPORTED_MODULE_8__.concat)([realInput, realConjugate], 1);\n        const i = (0,_concat__WEBPACK_IMPORTED_MODULE_8__.concat)([imagInput, imagConjugate], 1);\n        const complexInput = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)((0,_complex__WEBPACK_IMPORTED_MODULE_9__.complex)(r, i), [outputShape[0], outputShape[1]]);\n        ret = (0,_ifft__WEBPACK_IMPORTED_MODULE_1__.ifft)(complexInput);\n    }\n    ret = (0,_real__WEBPACK_IMPORTED_MODULE_2__.real)(ret);\n    // reshape the result if the input is 3D tensor.\n    if (input.rank === 3 && input.shape[0] !== 0) {\n        const temp = ret;\n        const batch = input.shape[0];\n        ret = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)(ret, [batch, ret.shape[0] / batch, ret.shape[1]]);\n        temp.dispose();\n    }\n    return ret;\n}\nconst irfft = (0,_operation__WEBPACK_IMPORTED_MODULE_10__.op)({ irfft_ });\n//# sourceMappingURL=irfft.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rfft\": () => (/* binding */ rfft)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _complex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _imag__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../imag */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _real__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../real */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/real.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../split */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/split.js\");\n/* harmony import */ var _zeros__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../zeros */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js\");\n/* harmony import */ var _zeros_like__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _fft__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Real value input fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n *\n * real.rfft().print();\n * ```\n * @param input The real value input to compute an rfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction rfft_(input, fftLength) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(input.dtype === 'float32', () => `The dtype for rfft() must be real value but got ${input.dtype}`);\n    let innerDimensionSize = input.shape[input.shape.length - 1];\n    const batch = input.size / innerDimensionSize;\n    let adjustedInput;\n    if (fftLength != null && fftLength < innerDimensionSize) {\n        // Need to crop\n        const begin = input.shape.map(v => 0);\n        const size = input.shape.map(v => v);\n        size[input.shape.length - 1] = fftLength;\n        adjustedInput = (0,_slice__WEBPACK_IMPORTED_MODULE_1__.slice)(input, begin, size);\n        innerDimensionSize = fftLength;\n    }\n    else if (fftLength != null && fftLength > innerDimensionSize) {\n        // Need to pad with zeros\n        const zerosShape = input.shape.map(v => v);\n        zerosShape[input.shape.length - 1] = fftLength - innerDimensionSize;\n        adjustedInput = (0,_concat__WEBPACK_IMPORTED_MODULE_2__.concat)([input, (0,_zeros__WEBPACK_IMPORTED_MODULE_3__.zeros)(zerosShape)], input.shape.length - 1);\n        innerDimensionSize = fftLength;\n    }\n    else {\n        adjustedInput = input;\n    }\n    // Complement the input with zero imaginary numbers.\n    const zerosInput = (0,_zeros_like__WEBPACK_IMPORTED_MODULE_4__.zerosLike)(adjustedInput);\n    const complexInput = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)((0,_complex__WEBPACK_IMPORTED_MODULE_6__.complex)(adjustedInput, zerosInput), [batch, innerDimensionSize]);\n    const ret = (0,_fft__WEBPACK_IMPORTED_MODULE_7__.fft)(complexInput);\n    // Exclude complex conjugations. These conjugations are put symmetrically.\n    const half = Math.floor(innerDimensionSize / 2) + 1;\n    const realValues = (0,_real__WEBPACK_IMPORTED_MODULE_8__.real)(ret);\n    const imagValues = (0,_imag__WEBPACK_IMPORTED_MODULE_9__.imag)(ret);\n    const realComplexConjugate = (0,_split__WEBPACK_IMPORTED_MODULE_10__.split)(realValues, [half, innerDimensionSize - half], realValues.shape.length - 1);\n    const imagComplexConjugate = (0,_split__WEBPACK_IMPORTED_MODULE_10__.split)(imagValues, [half, innerDimensionSize - half], imagValues.shape.length - 1);\n    const outputShape = adjustedInput.shape.slice();\n    outputShape[adjustedInput.shape.length - 1] = half;\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)((0,_complex__WEBPACK_IMPORTED_MODULE_6__.complex)(realComplexConjugate[0], imagComplexConjugate[0]), outputShape);\n}\nconst rfft = (0,_operation__WEBPACK_IMPORTED_MODULE_11__.op)({ rfft_ });\n//# sourceMappingURL=rfft.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/split.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/split.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"split\": () => (/* binding */ split)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * Can contain one -1 indicating that dimension is to be inferred.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction split_(x, numOrSizeSplits, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'split');\n    const inputs = { x: $x };\n    const attr = { numOrSizeSplits, axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.SplitV, inputs, attr);\n}\nconst split = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ split_ });\n//# sourceMappingURL=split.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/split.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prepareSplitSize\": () => (/* binding */ prepareSplitSize)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n\n/**\n * Prepare the split size array. When the input is a number, the axis is evenly\n * divided among the split size. When the input contains the negative value, the\n * rest of the axis is allocated toward that.\n */\nfunction prepareSplitSize(x, numOrSizeSplits, axis = 0) {\n    let splitSizes = [];\n    if (typeof (numOrSizeSplits) === 'number') {\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(x.shape[axis] % numOrSizeSplits === 0, () => 'Number of splits must evenly divide the axis.');\n        splitSizes =\n            new Array(numOrSizeSplits).fill(x.shape[axis] / numOrSizeSplits);\n    }\n    else {\n        const numOfNegs = numOrSizeSplits.reduce((count, value) => {\n            if (value === -1) {\n                count += 1;\n            }\n            return count;\n        }, 0);\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(numOfNegs <= 1, () => 'There should be only one negative value in split array.');\n        const negIndex = numOrSizeSplits.indexOf(-1);\n        // Allow the number of split array to be -1, which indicates the rest\n        // of dimension is allocated to that split.\n        if (negIndex !== -1) {\n            const total = numOrSizeSplits.reduce((a, b) => b > 0 ? a + b : a);\n            numOrSizeSplits[negIndex] = x.shape[axis] - total;\n        }\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(x.shape[axis] === numOrSizeSplits.reduce((a, b) => a + b), () => 'The sum of sizes must match the size of the axis dimension.');\n        splitSizes = numOrSizeSplits;\n    }\n    return splitSizes;\n}\n//# sourceMappingURL=split_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sqrt\": () => (/* binding */ sqrt)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes square root of the input `tf.Tensor` element-wise: `y = sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.sqrt().print();  // or tf.sqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sqrt_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sqrt');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Sqrt, inputs);\n}\nconst sqrt = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sqrt_ });\n//# sourceMappingURL=sqrt.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/square.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/square.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"square\": () => (/* binding */ square)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Computes square of `x` element-wise: `x ^ 2`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);\n *\n * x.square().print();  // or tf.square(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction square_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'square');\n    const attrs = {};\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel('Square', { x: $x }, attrs);\n}\nconst square = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ square_ });\n//# sourceMappingURL=square.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/square.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"squaredDifference\": () => (/* binding */ squaredDifference)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Returns (a - b) * (a - b) element-wise.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * ```js\n * // Broadcast squared difference  a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction squaredDifference_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'squaredDifference');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'squaredDifference');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    const attrs = {};\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.SquaredDifference, inputs, attrs);\n}\nconst squaredDifference = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ squaredDifference_ });\n//# sourceMappingURL=squared_difference.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"squeeze\": () => (/* binding */ squeeze)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Removes dimensions of size 1 from the shape of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4], [1, 1, 4]);\n * x.squeeze().print();\n * ```\n *\n * @param x The input tensor to be squeezed.\n * @param axis An optional list of numbers. If specified, only\n *     squeezes the dimensions listed. The dimension index starts at 0. It\n * is an error to squeeze a dimension that is not 1.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction squeeze_(x, axis) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'squeeze');\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)($x, (0,_util__WEBPACK_IMPORTED_MODULE_2__.squeezeShape)($x.shape, axis).newShape);\n}\nconst squeeze = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ squeeze_ });\n//# sourceMappingURL=squeeze.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stack\": () => (/* binding */ stack)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Stacks a list of rank-`R` `tf.Tensor`s into one rank-`(R+1)` `tf.Tensor`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.stack([a, b, c]).print();\n * ```\n *\n * @param tensors A list of tensor objects with the same shape and dtype.\n * @param axis The axis to stack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction stack_(tensors, axis = 0) {\n    const $tensors = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensorArray)(tensors, 'tensors', 'stack', 'string_or_numeric');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($tensors.length >= 1, () => 'Pass at least one tensor to tf.stack');\n    if ($tensors.length > 0) {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(axis <= $tensors[0].rank, () => 'Axis must be <= rank of the tensor');\n    }\n    const inputs = $tensors;\n    const attrs = { axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Pack, inputs, attrs);\n}\nconst stack = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ stack_ });\n//# sourceMappingURL=stack.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/step.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/step.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"step\": () => (/* binding */ step)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes step of the input `tf.Tensor` element-wise: `x > 0 ? 1 : alpha * x`\n *\n * ```js\n * const x = tf.tensor1d([0, 2, -1, -3]);\n *\n * x.step(.5).print();  // or tf.step(x, .5)\n * ```\n * @param x The input tensor.\n * @param alpha The gradient when input is negative.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction step_(x, alpha = 0.0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'step');\n    const inputs = { x: $x };\n    const attrs = { alpha };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Step, inputs, attrs);\n}\nconst step = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ step_ });\n//# sourceMappingURL=step.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/step.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stridedSlice\": () => (/* binding */ stridedSlice)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Extracts a strided slice of a tensor.\n *\n * Roughly speaking, this op extracts a slice of size (end-begin)/stride from\n * the given input tensor (x). Starting at the location specified by begin the\n * slice continues by adding stride to the index until all dimensions are not\n * less than end. Note that a stride can be negative, which causes a reverse\n * slice.\n *\n * ```js\n * const t = tf.tensor3d([1, 1, 1 ,2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6],\n *    [3, 2, 3]);\n * t.stridedSlice([1, 0, 0], [2, 1, 3], [1, 1, 1]).print()  // [[[3, 3, 3]]]\n * t.stridedSlice([1, 0, 0], [2, 2, 3], [1, 1, 1]).print()  // [[[3, 3, 3],\n *                                                     // [4, 4, 4]]]\n * t.stridedSlice([1, -1, 0], [2, -3, 3], [1, -1, 1]).print() // [[[4, 4, 4],\n *                                                     // [3, 3, 3]]]\n * ```\n *\n * @param x The tensor to stride slice.\n * @param begin The coordinates to start the slice from.\n * @param end: The coordinates to end the slice at.\n * @param strides: The size of the slice.\n * @param beginMask: If the ith bit of beginMask is set, begin[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param endMask: If the ith bit of endMask is set, end[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param shrinkAxisMask: a bitmask where bit i implies that\n * the ith specification should shrink the dimensionality. begin and end must\n * imply a slice of size 1 in the dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction stridedSlice_(x, begin, end, strides, beginMask = 0, endMask = 0, ellipsisMask = 0, newAxisMask = 0, shrinkAxisMask = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'stridedSlice', 'string_or_numeric');\n    const inputs = { x: $x };\n    const attrs = {\n        begin,\n        end,\n        strides,\n        beginMask,\n        endMask,\n        ellipsisMask,\n        newAxisMask,\n        shrinkAxisMask\n    };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.StridedSlice, inputs, attrs);\n}\nconst stridedSlice = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ stridedSlice_ });\n//# sourceMappingURL=strided_slice.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_n_grams.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_n_grams.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringNGrams\": () => (/* binding */ stringNGrams)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Creates ngrams from ragged string data.\n *\n * This op accepts a ragged tensor with 1 ragged dimension containing only\n * strings and outputs a ragged tensor with 1 ragged dimension containing ngrams\n * of that string, joined along the innermost axis.\n *\n * ```js\n * const result = tf.string.stringNGrams(\n *   ['a', 'b', 'c', 'd'], tf.tensor1d([0, 2, 4], 'int32'),\n *   '|', [1, 2], 'LP', 'RP', -1, false);\n * result['nGrams'].print(); // ['a', 'b', 'LP|a', 'a|b', 'b|RP',\n *                           //  'c', 'd', 'LP|c', 'c|d', 'd|RP']\n * result['nGramsSplits'].print(); // [0, 5, 10]\n * ```\n * @param data: The values tensor of the ragged string tensor to make ngrams out\n *     of. Must be a 1D string tensor.\n * @param dataSplits: The splits tensor of the ragged string tensor to make\n *     ngrams out of.\n * @param separator: The string to append between elements of the token. Use \"\"\n *     for no separator.\n * @param nGramWidths: The sizes of the ngrams to create.\n * @param leftPad: The string to use to pad the left side of the ngram sequence.\n *     Only used if pad_width !== 0.\n * @param rightPad: The string to use to pad the right side of the ngram\n *     sequence. Only used if pad_width !== 0.\n * @param padWidth: The number of padding elements to add to each side of each\n *     sequence. Note that padding will never be greater than `nGramWidths`-1\n *     regardless of this value. If `padWidth`=-1 , then add max(`nGramWidths)-1\n *     elements.\n * @param preserveShortSequences: If true, then ensure that at least one ngram\n *     is generated for each input sequence. In particular, if an input sequence\n *     is shorter than min(ngramWidth) + 2*padWidth, then generate a single\n *     ngram containing the entire sequence. If false, then no ngrams are\n *     generated for these short input sequences.\n * @return A map with the following properties:\n *     - nGrams: The values tensor of the output ngrams ragged tensor.\n *     - nGramsSplits: The splits tensor of the output ngrams ragged tensor.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringNGrams_(data, dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences) {\n    const $data = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(data, 'data', 'stringNGrams', 'string');\n    if ($data.dtype !== 'string') {\n        throw new Error('Data must be of datatype string');\n    }\n    if ($data.shape.length !== 1) {\n        throw new Error(`Data must be a vector, saw: ${$data.shape}`);\n    }\n    const $dataSplits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(dataSplits, 'dataSplits', 'stringNGrams');\n    if ($dataSplits.dtype !== 'int32') {\n        throw new Error('Data splits must be of datatype int32');\n    }\n    const attrs = {\n        separator,\n        nGramWidths,\n        leftPad,\n        rightPad,\n        padWidth,\n        preserveShortSequences\n    };\n    const inputs = { data: $data, dataSplits: $dataSplits };\n    const result = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.StringNGrams, inputs, attrs);\n    return { nGrams: result[0], nGramsSplits: result[1] };\n}\nconst stringNGrams = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ stringNGrams_ });\n//# sourceMappingURL=string_n_grams.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_n_grams.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_split.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_split.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringSplit\": () => (/* binding */ stringSplit)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Split elements of `input` based on `delimiter` into a SparseTensor .\n *\n * Let N be the size of source (typically N will be the batch size). Split each\n * element of `input` based on `delimiter` and return a SparseTensor containing\n * the splitted tokens. Empty tokens are ignored if `skipEmpty` is set to True.\n *\n * `delimiter` can be empty, or a string of split characters. If `delimiter` is\n * an empty string, each element of `input` is split into individual\n * character strings. Otherwise every character of `delimiter` is a potential\n * split point.\n *\n * ```js\n * const result = tf.string.stringSplit(['hello world',  'a b c'], ' ');\n * result['indices'].print(); // [[0, 0], [0, 1], [1, 0], [1, 1], [1, 2]]\n * result['values'].print(); // ['hello', 'world', 'a', 'b', 'c']\n * result['shape'].print(); // [2, 3]\n * ```\n * @param input: 1-D. Strings to split.\n * @param delimiter: 0-D. Delimiter characters, or empty string.\n * @param skipEmpty: Optional. If true, skip the empty strings from the result.\n *     Defaults to true.\n * @return A map with the following properties:\n *     - indices: A dense matrix of int32 representing the indices of the sparse\n *       tensor.\n *     - values: A vector of strings corresponding to the splited values.\n *     - shape: a length-2 vector of int32 representing the shape of the sparse\n * tensor, where the first value is N and the second value is the maximum number\n * of tokens in a single input entry.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringSplit_(input, delimiter, skipEmpty = true) {\n    const $input = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(input, 'input', 'stringSplit', 'string');\n    const $delimiter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(delimiter, 'delimiter', 'stringSplit', 'string');\n    if ($input.rank !== 1) {\n        throw new Error(`Input should be Tensor1D but received shape ${$input.shape}`);\n    }\n    if ($delimiter.rank !== 0) {\n        throw new Error(`Delimiter should be a scalar but received shape ${$delimiter.shape}`);\n    }\n    const attrs = { skipEmpty };\n    const inputs = { input: $input, delimiter: $delimiter };\n    const result = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.StringSplit, inputs, attrs);\n    return { indices: result[0], values: result[1], shape: result[2] };\n}\nconst stringSplit = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ stringSplit_ });\n//# sourceMappingURL=string_split.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_split.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_to_hash_bucket_fast.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_to_hash_bucket_fast.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringToHashBucketFast\": () => (/* binding */ stringToHashBucketFast)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Converts each string in the input Tensor to its hash mod by a number of\n * buckets.\n *\n * The hash function is deterministic on the content of the string within the\n * process and will never change. However, it is not suitable for cryptography.\n * This function may be used when CPU time is scarce and inputs are trusted or\n * unimportant. There is a risk of adversaries constructing inputs that all hash\n * to the same bucket.\n *\n * ```js\n * const result = tf.string.stringToHashBucketFast(\n *   ['Hello', 'TensorFlow', '2.x'], 3);\n * result.print(); // [0, 2, 2]\n * ```\n * @param input: The strings to assign a hash bucket.\n * @param numBuckets: The number of buckets.\n * @return A Tensor of the same shape as the input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringToHashBucketFast_(input, numBuckets) {\n    const $input = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(input, 'input', 'stringToHashBucketFast', 'string');\n    const attrs = { numBuckets };\n    if (numBuckets <= 0) {\n        throw new Error(`Number of buckets must be at least 1`);\n    }\n    const inputs = { input: $input };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.StringToHashBucketFast, inputs, attrs);\n}\nconst stringToHashBucketFast = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ stringToHashBucketFast_ });\n//# sourceMappingURL=string_to_hash_bucket_fast.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/string/string_to_hash_bucket_fast.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sub\": () => (/* binding */ sub)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n *\n * ```js\n * // Broadcast subtract a with b.\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.scalar(5);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n * @param a The first `tf.Tensor` to subtract from.\n * @param b The second `tf.Tensor` to be subtracted. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction sub_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'sub');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'sub');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Sub, inputs);\n}\nconst sub = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ sub_ });\n//# sourceMappingURL=sub.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sum\": () => (/* binding */ sum)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Computes the sum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If axes has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.sum().print();  // or tf.sum(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.sum(axis).print();  // or tf.sum(x, axis)\n * ```\n *\n * @param x The input tensor to compute the sum over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction sum_(x, axis = null, keepDims = false) {\n    let $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sum');\n    if ($x.dtype === 'bool') {\n        $x = (0,_cast__WEBPACK_IMPORTED_MODULE_2__.cast)($x, 'int32');\n    }\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Sum, inputs, attrs);\n}\nconst sum = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ sum_ });\n//# sourceMappingURL=sum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tan\": () => (/* binding */ tan)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes tan of the input `tf.Tensor` element-wise, `tan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.tan().print();  // or tf.tan(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction tan_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'tan');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Tan, inputs);\n}\nconst tan = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ tan_ });\n//# sourceMappingURL=tan.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tanh\": () => (/* binding */ tanh)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Computes hyperbolic tangent of the input `tf.Tensor` element-wise: `tanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, 70]);\n *\n * x.tanh().print();  // or tf.tanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction tanh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'tanh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Tanh, inputs);\n}\nconst tanh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ tanh_ });\n//# sourceMappingURL=tanh.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor\": () => (/* binding */ tensor)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`. If the values are strings,\n *     they will be encoded as utf-8 and kept as `Uint8Array[]`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor(values, shape, dtype) {\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.inferShape)(values, dtype);\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_1__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor1d\": () => (/* binding */ tensor1d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates rank-1 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor1d` as it makes the code more readable.\n *\n * ```js\n * tf.tensor1d([1, 2, 3]).print();\n * ```\n *\n * @param values The values of the tensor. Can be array of numbers,\n *     or a `TypedArray`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor1d(values, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 1) {\n        throw new Error('tensor1d() requires values to be a flat/TypedArray');\n    }\n    const shape = null;\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor1d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor2d\": () => (/* binding */ tensor2d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates rank-2 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor2d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor2d([[1, 2], [3, 4]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided, it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor2d(values, shape, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    if (shape != null && shape.length !== 2) {\n        throw new Error('tensor2d() requires shape to have two numbers');\n    }\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n        throw new Error('tensor2d() requires values to be number[][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor2d() requires shape to be provided when `values` ' +\n            'are a flat/TypedArray');\n    }\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor2d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor3d\": () => (/* binding */ tensor3d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates rank-3 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor3d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor3d([[[1], [2]], [[3], [4]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor3d([1, 2, 3, 4], [2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided,  it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor3d(values, shape, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    if (shape != null && shape.length !== 3) {\n        throw new Error('tensor3d() requires shape to have three numbers');\n    }\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 3 && inferredShape.length !== 1) {\n        throw new Error('tensor3d() requires values to be number[][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor3d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor3d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor4d\": () => (/* binding */ tensor4d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates rank-4 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor4d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor4d([[[[1], [2]], [[3], [4]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor4d(values, shape, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    if (shape != null && shape.length !== 4) {\n        throw new Error('tensor4d() requires shape to have four numbers');\n    }\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 4 && inferredShape.length !== 1) {\n        throw new Error('tensor4d() requires values to be number[][][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor4d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor4d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor5d\": () => (/* binding */ tensor5d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates rank-5 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor5d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor5d([[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor5d(values, shape, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    if (shape != null && shape.length !== 5) {\n        throw new Error('tensor5d() requires shape to have five numbers');\n    }\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 5 && inferredShape.length !== 1) {\n        throw new Error('tensor5d() requires values to be ' +\n            'number[][][][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor5d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor5d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor6d\": () => (/* binding */ tensor6d)\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates rank-6 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor6d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor6d([[[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor6d([1, 2, 3, 4, 5, 6, 7, 8], [1, 1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor6d(values, shape, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    if (shape != null && shape.length !== 6) {\n        throw new Error('tensor6d() requires shape to have six numbers');\n    }\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 6 && inferredShape.length !== 1) {\n        throw new Error('tensor6d() requires values to be number[][][][][][] or ' +\n            'flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor6d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    shape = shape ||\n        inferredShape;\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor6d.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeTensor\": () => (/* binding */ makeTensor)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/** This is shared code across all tensor creation methods. */\nfunction makeTensor(values, shape, inferredShape, dtype) {\n    if (dtype == null) {\n        dtype = (0,_util__WEBPACK_IMPORTED_MODULE_1__.inferDtype)(values);\n    }\n    if (dtype === 'complex64') {\n        throw new Error(`Cannot construct a complex64 tensor directly. ` +\n            `Please use tf.complex(real, imag).`);\n    }\n    if (!(0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(values) && !Array.isArray(values) &&\n        typeof values !== 'number' && typeof values !== 'boolean' &&\n        typeof values !== 'string') {\n        throw new Error('values passed to tensor(values) must be a number/boolean/string or ' +\n            'an array of numbers/booleans/strings, or a TypedArray');\n    }\n    if (shape != null) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assertNonNegativeIntegerDimensions)(shape);\n        const providedSize = (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(shape);\n        const inferredSize = (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(inferredShape);\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(providedSize === inferredSize, () => `Based on the provided shape, [${shape}], the tensor should have ` +\n            `${providedSize} values but has ${inferredSize}`);\n        for (let i = 0; i < inferredShape.length; ++i) {\n            const inferred = inferredShape[i];\n            const flatDimsDontMatch = i === inferredShape.length - 1 ?\n                inferred !== (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(shape.slice(i)) :\n                true;\n            (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(inferredShape[i] === shape[i] || !flatDimsDontMatch, () => `Error creating a new Tensor. Inferred shape ` +\n                `(${inferredShape}) does not match the provided ` +\n                `shape (${shape}). `);\n        }\n    }\n    if (!(0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(values) && !Array.isArray(values)) {\n        values = [values];\n    }\n    shape = shape || inferredShape;\n    values = dtype !== 'string' ?\n        (0,_util__WEBPACK_IMPORTED_MODULE_2__.toTypedArray)(values, dtype) :\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.flatten)(values, [], true);\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=tensor_ops_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tile\": () => (/* binding */ tile)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Construct a tensor by repeating it the number of times given by reps.\n *\n * This operation creates a new tensor by replicating `input` `reps`\n * times. The output tensor's i'th dimension has `input.shape[i] *\n * reps[i]` elements, and the values of `input` are replicated\n * `reps[i]` times along the i'th dimension. For example, tiling\n * `[a, b, c, d]` by `[2]` produces `[a, b, c, d, a, b, c, d]`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n *\n * a.tile([2]).print();    // or a.tile([2])\n * ```\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.tile([1, 2]).print();  // or a.tile([1, 2])\n * ```\n * @param x The tensor to tile.\n * @param reps Determines the number of replications per dimension.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction tile_(x, reps) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'tile', 'string_or_numeric');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank === reps.length, () => `Error in transpose: rank of input ${$x.rank} ` +\n        `must match length of reps ${reps}.`);\n    const inputs = { x: $x };\n    const attrs = { reps };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Tile, inputs, attrs);\n}\nconst tile = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ tile_ });\n//# sourceMappingURL=tile.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"topk\": () => (/* binding */ topk)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Finds the values and indices of the `k` largest entries along the last\n * dimension.\n *\n * If the input is a vector (rank=1), finds the k largest entries in the vector\n * and outputs their values and indices as vectors. Thus values[j] is the j-th\n * largest entry in input, and its index is indices[j].\n * For higher rank inputs, computes the top k entries along the last dimension.\n *\n * If two elements are equal, the lower-index element appears first.\n *\n * ```js\n * const a = tf.tensor2d([[1, 5], [4, 3]]);\n * const {values, indices} = tf.topk(a);\n * values.print();\n * indices.print();\n * ```\n * @param x 1-D or higher `tf.Tensor` with last dimension being at least `k`.\n * @param k Number of top elements to look for along the last dimension.\n * @param sorted If true, the resulting `k` elements will be sorted by the\n *     values in descending order.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nfunction topk_(x, k = 1, sorted = true) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'topk');\n    if ($x.rank === 0) {\n        throw new Error('topk() expects the input to be of rank 1 or higher');\n    }\n    const lastDim = $x.shape[$x.shape.length - 1];\n    if (k < 0) {\n        throw new Error(`'k' passed to topk() must be >= 0 but got ${k}`);\n    }\n    if (k > lastDim) {\n        throw new Error(`'k' passed to topk() must be <= the last dimension (${lastDim}) ` +\n            `but got ${k}`);\n    }\n    const inputs = { x: $x };\n    const attrs = { k, sorted };\n    const [values, indices] = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.TopK, inputs, attrs);\n    return { values, indices };\n}\nconst topk = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ topk_ });\n//# sourceMappingURL=topk.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transpose\": () => (/* binding */ transpose)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Transposes the `tf.Tensor`. Permutes the dimensions according to `perm`.\n *\n * The returned `tf.Tensor`'s dimension `i` will correspond to the input\n * dimension `perm[i]`. If `perm` is not given, it is set to `[n-1...0]`,\n * where `n` is the rank of the input `tf.Tensor`. Hence by default, this\n * operation performs a regular matrix transpose on 2-D input `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n *\n * a.transpose().print();  // or tf.transpose(a)\n * ```\n *\n * @param x The tensor to transpose.\n * @param perm The permutation of the dimensions of a.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction transpose_(x, perm) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'transpose');\n    if (perm == null) {\n        perm = $x.shape.map((s, i) => i).reverse();\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank === perm.length, () => `Error in transpose: rank of input ${$x.rank} ` +\n        `must match length of perm ${perm}.`);\n    perm.forEach(axis => {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(axis >= 0 && axis < $x.rank, () => `All entries in 'perm' must be between 0 and ${$x.rank - 1}` +\n            ` but got ${perm}`);\n    });\n    if ($x.rank <= 1) {\n        return $x.clone();\n    }\n    const inputs = { x: $x };\n    const attrs = { perm };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Transpose, inputs, attrs);\n}\nconst transpose = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ transpose_ });\n//# sourceMappingURL=transpose.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"truncatedNormal\": () => (/* binding */ truncatedNormal)\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _rand_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rand_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates a `tf.Tensor` with values sampled from a truncated normal\n * distribution.\n *\n * ```js\n * tf.truncatedNormal([2, 2]).print();\n * ```\n *\n * The generated values follow a normal distribution with specified mean and\n * standard deviation, except that values whose magnitude is more than 2\n * standard deviations from the mean are dropped and re-picked.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output tensor.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction truncatedNormal_(shape, mean = 0, stdDev = 1, dtype, seed) {\n    if (dtype != null && dtype === 'bool') {\n        throw new Error(`Unsupported data type $ { dtype }`);\n    }\n    const randGauss = new _rand_util__WEBPACK_IMPORTED_MODULE_0__.MPRandGauss(mean, stdDev, dtype, true /* truncated */, seed);\n    const res = (0,_buffer__WEBPACK_IMPORTED_MODULE_1__.buffer)(shape, dtype);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = randGauss.nextValue();\n    }\n    return res.toTensor();\n}\nconst truncatedNormal = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ truncatedNormal_ });\n//# sourceMappingURL=truncated_normal.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unique\": () => (/* binding */ unique)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Finds unique elements along an axis of a tensor.\n *\n * It returns a tensor `values` containing all of the unique elements along the\n * `axis` of the given tensor `x` in the same order that they occur along the\n * `axis` in `x`; `x` does not need to be sorted. It also returns a tensor\n * `indices` the same size as the number of the elements in `x` along the `axis`\n * dimension. It contains the index in the unique output `values`.\n *\n * ```js\n * // A 1-D tensor\n * const a = tf.tensor1d([1, 1, 2, 4, 4, 4, 7, 8, 8]);\n * const {values, indices} = tf.unique(a);\n * values.print();   // [1, 2, 4, 7, 8,]\n * indices.print();  // [0, 0, 1, 2, 2, 2, 3, 4, 4]\n * ```\n *\n * ```js\n * // A 2-D tensor with axis=0\n * //\n * // 'a' is: [[1, 0, 0],\n * //          [1, 0, 0],\n * //          [2, 0, 0]]\n * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);\n * const {values, indices} = tf.unique(a, 0)\n * values.print();   // [[1, 0, 0],\n *                   //  [2, 0, 0]]\n * indices.print();  // [0, 0, 1]\n * ```\n *\n * ```js\n * // A 2-D tensor with axis=1\n * //\n * // 'a' is: [[1, 0, 0],\n * //          [1, 0, 0],\n * //          [2, 0, 0]]\n * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);\n * const {values, indices} = tf.unique(a, 1)\n * values.print();   // [[1, 0],\n *                   //  [1, 0],\n *                   //  [2, 0]]\n * indices.print();  // [0, 1, 1]\n * ```\n * @param x A tensor (int32, string, bool).\n * @param axis The axis of the tensor to find the unique elements.\n * @returns [uniqueElements, indices] (see above for details)\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nfunction unique_(x, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'unique', 'string_or_numeric');\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)($x.rank > 0, () => 'The input tensor must be at least 1D');\n    const inputs = { x: $x };\n    const attrs = { axis };\n    const [values, indices] = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Unique, inputs, attrs);\n    return { values, indices };\n}\nconst unique = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ unique_ });\n//# sourceMappingURL=unique.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unsortedSegmentSum\": () => (/* binding */ unsortedSegmentSum)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Computes the sum along segments of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const segmentIds = tf.tensor1d([1, 2, 0, 1], 'int32');\n * const numSegments = 3;\n *\n * x.unsortedSegmentSum(segmentIds, numSegments).print()\n * //or tf.unsortedSegmentSum(x, segmentIds, numSegments)\n * ```\n * @param x The `tf.Tensor` that will be summed along its segments.\n * @param segmentIds A `tf.Tensor1D` whose rank is equal to the rank of `x`'s\n * dimension along the `axis`.  Maps each element of `x` to a segment.\n * @param numSegments The number of distinct `segmentIds`.\n *\n * @doc {heading: 'Operations', subheading: 'Segment'}\n */\nfunction unsortedSegmentSum_(x, segmentIds, numSegments) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'unsortedSegmentSum');\n    const $segmentIds = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(segmentIds, 'segmentIds', 'unsortedSegmentSum', 'int32');\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_util__WEBPACK_IMPORTED_MODULE_2__.isInt)(numSegments), () => 'numSegments must be of dtype int');\n    const inputs = { x: $x, segmentIds: $segmentIds };\n    const attrs = { numSegments };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.UnsortedSegmentSum, inputs, attrs);\n}\nconst unsortedSegmentSum = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ unsortedSegmentSum_ });\n//# sourceMappingURL=unsorted_segment_sum.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unstack\": () => (/* binding */ unstack)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n/**\n * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * tf.unstack(a).forEach(tensor => tensor.print());\n * ```\n *\n * @param x A tensor object.\n * @param axis The axis to unstack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction unstack_(x, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'unstack', 'string_or_numeric');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(axis >= -$x.shape.length && axis < $x.shape.length, () => `Axis = ${axis} is not in [-${$x.shape.length}, ${$x.shape.length})`);\n    const inputs = { value: $x };\n    const attrs = { axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Unpack, inputs, attrs);\n}\nconst unstack = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ unstack_ });\n//# sourceMappingURL=unstack.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"variable\": () => (/* binding */ variable)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Creates a new variable with the provided initial value.\n * ```js\n * const x = tf.variable(tf.tensor([1, 2, 3]));\n * x.assign(tf.tensor([4, 5, 6]));\n *\n * x.print();\n * ```\n *\n * @param initialValue Initial value for the tensor.\n * @param trainable If true, optimizers are allowed to update it.\n * @param name Name of the variable. Defaults to a unique id.\n * @param dtype If set, initialValue will be converted to the given type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction variable(initialValue, trainable = true, name, dtype) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeVariable(initialValue, trainable, name, dtype);\n}\n//# sourceMappingURL=variable.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/where.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/where.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"where\": () => (/* binding */ where)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_to__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_to */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n/**\n * Returns the elements, either `a` or `b` depending on the `condition`.\n *\n * If the condition is true, select from `a`, otherwise select from `b`.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const a = tf.tensor1d([1 , 2, 3]);\n * const b = tf.tensor1d([-1, -2, -3]);\n *\n * a.where(cond, b).print();\n * ```\n *\n * @param condition The input condition. Must be of dtype bool.\n * @param a If `condition` is rank 1, `a` may have a higher rank but\n *     its first dimension must match the size of `condition`.\n * @param b A tensor with the same dtype as `a` and with shape that is\n *     compatible with `a`.\n * @return A tensor with same dtype as `a` and `b`, and shape that is\n *     broadcastable from `a` and `b`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction where_(condition, a, b) {\n    const $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'where');\n    const $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'where');\n    const $condition = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(condition, 'condition', 'where', 'bool');\n    // TODO: move this logic to forward function when the broadcastTo op is\n    // implemented in WASM.\n    // Find the broadcastable shape for $condition, $a, and $b.\n    const broadcastShape = (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_2__.assertAndGetBroadcastShape)((0,_broadcast_util__WEBPACK_IMPORTED_MODULE_2__.assertAndGetBroadcastShape)($condition.shape, $a.shape), $b.shape);\n    const $broadcastedCondition = (0,_broadcast_to__WEBPACK_IMPORTED_MODULE_3__.broadcastTo)($condition, broadcastShape);\n    const $broadcastedA = (0,_broadcast_to__WEBPACK_IMPORTED_MODULE_3__.broadcastTo)($a, broadcastShape);\n    const $broadcastedB = (0,_broadcast_to__WEBPACK_IMPORTED_MODULE_3__.broadcastTo)($b, broadcastShape);\n    const inputs = {\n        condition: $broadcastedCondition,\n        t: $broadcastedA,\n        e: $broadcastedB\n    };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Select, inputs);\n}\nconst where = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ where_ });\n//# sourceMappingURL=where.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/where.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"whereAsync\": () => (/* binding */ whereAsync)\n/* harmony export */ });\n/* harmony import */ var _backends_where_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../backends/where_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n/**\n * Returns the coordinates of true elements of condition.\n *\n * The coordinates are returned in a 2-D tensor where the first dimension (rows)\n * represents the number of true elements, and the second dimension (columns)\n * represents the coordinates of the true elements. Keep in mind, the shape of\n * the output tensor can vary depending on how many true values there are in\n * input. Indices are output in row-major order. The resulting tensor has the\n * shape `[numTrueElems, condition.rank]`.\n *\n * This is analogous to calling the python `tf.where(cond)` without an x or y.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const result = await tf.whereAsync(cond);\n * result.print();\n * ```\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nasync function whereAsync_(condition) {\n    const $condition = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(condition, 'condition', 'whereAsync', 'bool');\n    const vals = await $condition.data();\n    const res = (0,_backends_where_impl__WEBPACK_IMPORTED_MODULE_1__.whereImpl)($condition.shape, vals);\n    if (condition !== $condition) {\n        $condition.dispose();\n    }\n    return res;\n}\nconst whereAsync = whereAsync_;\n//# sourceMappingURL=where_async.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"zeros\": () => (/* binding */ zeros)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _complex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0.\n *\n * ```js\n * tf.zeros([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Can\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction zeros(shape, dtype = 'float32') {\n    if (dtype === 'complex64') {\n        const real = zeros(shape, 'float32');\n        const imag = zeros(shape, 'float32');\n        return (0,_complex__WEBPACK_IMPORTED_MODULE_1__.complex)(real, imag);\n    }\n    const values = (0,_util__WEBPACK_IMPORTED_MODULE_2__.makeZerosTypedArray)((0,_util__WEBPACK_IMPORTED_MODULE_2__.sizeFromShape)(shape), dtype);\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=zeros.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"zerosLike\": () => (/* binding */ zerosLike)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.zerosLike(x).print();\n * ```\n *\n * @param x The tensor of required shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction zerosLike_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'zerosLike');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.ZerosLike, inputs);\n}\nconst zerosLike = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ zerosLike_ });\n//# sourceMappingURL=zeros_like.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdadeltaOptimizer\": () => (/* binding */ AdadeltaOptimizer)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_div__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ops/div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_ops__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/ops */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _ops_square__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n/** @doclink Optimizer */\nclass AdadeltaOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate, rho, epsilon = null) {\n        super();\n        this.learningRate = learningRate;\n        this.rho = rho;\n        this.epsilon = epsilon;\n        this.accumulatedGrads = [];\n        this.accumulatedUpdates = [];\n        if (epsilon == null) {\n            this.epsilon = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.epsilon();\n        }\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n            const trainable = false;\n            if (this.accumulatedGrads[i] == null) {\n                this.accumulatedGrads[i] = {\n                    originalName: `${name}/accum_grad`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(value).variable(trainable))\n                };\n            }\n            if (this.accumulatedUpdates[i] == null) {\n                this.accumulatedUpdates[i] = {\n                    originalName: `${name}/accum_var`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(value).variable(trainable))\n                };\n            }\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const accumulatedGrad = this.accumulatedGrads[i].variable;\n            const accumulatedUpdate = this.accumulatedUpdates[i].variable;\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n                const newAccumulatedGrad = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedGrad, this.rho), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_ops_square__WEBPACK_IMPORTED_MODULE_6__.square)(gradient), 1 - this.rho));\n                const updates = (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_ops_div__WEBPACK_IMPORTED_MODULE_7__.div)((0,_ops_ops__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)(accumulatedUpdate, this.epsilon)), (0,_ops_ops__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)(accumulatedGrad, this.epsilon))), gradient);\n                const newAccumulatedUpdate = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedUpdate, this.rho), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_ops_square__WEBPACK_IMPORTED_MODULE_6__.square)(updates), 1 - this.rho));\n                accumulatedGrad.assign(newAccumulatedGrad);\n                accumulatedUpdate.assign(newAccumulatedUpdate);\n                const newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(updates, -this.learningRate), value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        if (this.accumulatedUpdates != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedGrads.map(v => v.variable));\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedUpdates.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        const variables = [...this.accumulatedGrads, ...this.accumulatedUpdates];\n        return [await this.saveIterations()].concat(variables.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const variableCount = weightValues.length / 2;\n        const trainable = false;\n        this.accumulatedGrads =\n            weightValues.slice(0, variableCount).map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        this.accumulatedUpdates =\n            weightValues.slice(variableCount, variableCount * 2)\n                .map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'rho': this.rho,\n            'epsilon': this.epsilon\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['rho'], config['epsilon']);\n    }\n}\n/** @nocollapse */\nAdadeltaOptimizer.className = 'Adadelta'; // Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_9__.registerClass)(AdadeltaOptimizer);\n//# sourceMappingURL=adadelta_optimizer.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdagradOptimizer\": () => (/* binding */ AdagradOptimizer)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_div__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ops/div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _ops_fill__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/fill */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_sqrt__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/sqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _ops_square__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n/** @doclink Optimizer */\nclass AdagradOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate, initialAccumulatorValue = 0.1) {\n        super();\n        this.learningRate = learningRate;\n        this.initialAccumulatorValue = initialAccumulatorValue;\n        this.accumulatedGrads = [];\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n            if (this.accumulatedGrads[i] == null) {\n                const trainable = false;\n                this.accumulatedGrads[i] = {\n                    originalName: `${name}/accumulator`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_fill__WEBPACK_IMPORTED_MODULE_3__.fill)(value.shape, this.initialAccumulatorValue)\n                        .variable(trainable))\n                };\n            }\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const accumulatedGrad = this.accumulatedGrads[i].variable;\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n                const newAccumulatedGrad = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)(accumulatedGrad, (0,_ops_square__WEBPACK_IMPORTED_MODULE_5__.square)(gradient));\n                accumulatedGrad.assign(newAccumulatedGrad);\n                const newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_6__.mul)((0,_ops_div__WEBPACK_IMPORTED_MODULE_7__.div)(gradient, (0,_ops_sqrt__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)(newAccumulatedGrad, _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.epsilon()))), -this.learningRate), value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        if (this.accumulatedGrads != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedGrads.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        return [await this.saveIterations()].concat(this.accumulatedGrads.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const trainable = false;\n        this.accumulatedGrads = weightValues.map(v => ({ originalName: v.name, variable: v.tensor.variable(trainable) }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'initialAccumulatorValue': this.initialAccumulatorValue,\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['initialAccumulatorValue']);\n    }\n}\n/** @nocollapse */\nAdagradOptimizer.className = 'Adagrad'; // Note: Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_9__.registerClass)(AdagradOptimizer);\n//# sourceMappingURL=adagrad_optimizer.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdamOptimizer\": () => (/* binding */ AdamOptimizer)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_div__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ops/div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_pow__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ops/pow */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js\");\n/* harmony import */ var _ops_scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _ops_sqrt__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ops/sqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _ops_square__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _ops_sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _ops_zeros_like__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass AdamOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate, beta1, beta2, epsilon = null) {\n        super();\n        this.learningRate = learningRate;\n        this.beta1 = beta1;\n        this.beta2 = beta2;\n        this.epsilon = epsilon;\n        this.accumulatedFirstMoment = [];\n        this.accumulatedSecondMoment = [];\n        (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n            // accB* will be updated by batch.\n            this.accBeta1 = (0,_ops_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(beta1).variable();\n            this.accBeta2 = (0,_ops_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(beta2).variable();\n        });\n        if (epsilon == null) {\n            this.epsilon = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.epsilon();\n        }\n    }\n    applyGradients(variableGradients) {\n        const varNames = Array.isArray(variableGradients) ?\n            variableGradients.map(v => v.name) :\n            Object.keys(variableGradients);\n        (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n            const oneMinusAccBeta1 = (0,_ops_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(1, this.accBeta1);\n            const oneMinusAccBeta2 = (0,_ops_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(1, this.accBeta2);\n            varNames.forEach((name, i) => {\n                const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n                const trainable = false;\n                if (this.accumulatedFirstMoment[i] == null) {\n                    this.accumulatedFirstMoment[i] = {\n                        originalName: `${name}/m`,\n                        variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_5__.zerosLike)(value).variable(trainable))\n                    };\n                }\n                if (this.accumulatedSecondMoment[i] == null) {\n                    this.accumulatedSecondMoment[i] = {\n                        originalName: `${name}/v`,\n                        variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_5__.zerosLike)(value).variable(trainable))\n                    };\n                }\n                const gradient = Array.isArray(variableGradients) ?\n                    variableGradients[i].tensor :\n                    variableGradients[name];\n                if (gradient == null) {\n                    return;\n                }\n                const firstMoment = this.accumulatedFirstMoment[i].variable;\n                const secondMoment = this.accumulatedSecondMoment[i].variable;\n                const newFirstMoment = (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(firstMoment, this.beta1), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(gradient, 1 - this.beta1));\n                const newSecondMoment = (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(secondMoment, this.beta2), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)((0,_ops_square__WEBPACK_IMPORTED_MODULE_8__.square)(gradient), 1 - this.beta2));\n                const biasCorrectedFirstMoment = (0,_ops_div__WEBPACK_IMPORTED_MODULE_9__.div)(newFirstMoment, oneMinusAccBeta1);\n                const biasCorrectedSecondMoment = (0,_ops_div__WEBPACK_IMPORTED_MODULE_9__.div)(newSecondMoment, oneMinusAccBeta2);\n                firstMoment.assign(newFirstMoment);\n                secondMoment.assign(newSecondMoment);\n                const newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)((0,_ops_div__WEBPACK_IMPORTED_MODULE_9__.div)(biasCorrectedFirstMoment, (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_sqrt__WEBPACK_IMPORTED_MODULE_10__.sqrt)(biasCorrectedSecondMoment), this.epsilon)), -this.learningRate), value);\n                value.assign(newValue);\n            });\n            this.accBeta1.assign((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(this.accBeta1, this.beta1));\n            this.accBeta2.assign((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(this.accBeta2, this.beta2));\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        this.accBeta1.dispose();\n        this.accBeta2.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedFirstMoment.map(v => v.variable));\n        }\n        if (this.accumulatedSecondMoment != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedSecondMoment.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        const variables = [...this.accumulatedFirstMoment, ...this.accumulatedSecondMoment];\n        return [await this.saveIterations()].concat(variables.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n            this.accBeta1.assign((0,_ops_pow__WEBPACK_IMPORTED_MODULE_11__.pow)(this.beta1, this.iterations_ + 1));\n            this.accBeta2.assign((0,_ops_pow__WEBPACK_IMPORTED_MODULE_11__.pow)(this.beta2, this.iterations_ + 1));\n        });\n        const variableCount = weightValues.length / 2;\n        const trainable = false;\n        this.accumulatedFirstMoment =\n            weightValues.slice(0, variableCount).map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        this.accumulatedSecondMoment =\n            weightValues.slice(variableCount, variableCount * 2)\n                .map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'beta1': this.beta1,\n            'beta2': this.beta2,\n            'epsilon': this.epsilon,\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['beta1'], config['beta2'], config['epsilon']);\n    }\n}\n/** @nocollapse */\nAdamOptimizer.className = 'Adam'; // Note: Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_12__.registerClass)(AdamOptimizer);\n//# sourceMappingURL=adam_optimizer.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdamaxOptimizer\": () => (/* binding */ AdamaxOptimizer)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_abs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ops/abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_div__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _ops_maximum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ops/maximum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _ops_sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _ops_zeros_like__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n\nclass AdamaxOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate, beta1, beta2, epsilon = null, decay = 0.0) {\n        super();\n        this.learningRate = learningRate;\n        this.beta1 = beta1;\n        this.beta2 = beta2;\n        this.epsilon = epsilon;\n        this.decay = decay;\n        this.accumulatedFirstMoment = [];\n        this.accumulatedWeightedInfNorm = [];\n        (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n            this.iteration = (0,_ops_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(0).variable();\n            this.accBeta1 = (0,_ops_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(beta1).variable();\n        });\n        if (epsilon == null) {\n            this.epsilon = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.epsilon();\n        }\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n            const oneMinusAccBeta1 = (0,_ops_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(1, this.accBeta1);\n            const lr = (0,_ops_div__WEBPACK_IMPORTED_MODULE_5__.div)(-this.learningRate, (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(this.iteration, this.decay), 1));\n            variableNames.forEach((name, i) => {\n                const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n                const trainable = false;\n                if (this.accumulatedFirstMoment[i] == null) {\n                    this.accumulatedFirstMoment[i] = {\n                        originalName: `${name}/m`,\n                        variable: (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_8__.zerosLike)(value).variable(trainable)\n                    };\n                }\n                if (this.accumulatedWeightedInfNorm[i] == null) {\n                    this.accumulatedWeightedInfNorm[i] = {\n                        originalName: `${name}/v`,\n                        variable: (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_8__.zerosLike)(value).variable(trainable)\n                    };\n                }\n                const gradient = Array.isArray(variableGradients) ?\n                    variableGradients[i].tensor :\n                    variableGradients[name];\n                if (gradient == null) {\n                    return;\n                }\n                const firstMoment = this.accumulatedFirstMoment[i].variable;\n                const weightedInfNorm = this.accumulatedWeightedInfNorm[i].variable;\n                const newFirstMoment = (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(firstMoment, this.beta1), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(gradient, 1 - this.beta1));\n                const ut0 = (0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(weightedInfNorm, this.beta2);\n                const ut1 = (0,_ops_abs__WEBPACK_IMPORTED_MODULE_9__.abs)(gradient);\n                const newWeightedInfNorm = (0,_ops_maximum__WEBPACK_IMPORTED_MODULE_10__.maximum)(ut0, ut1);\n                firstMoment.assign(newFirstMoment);\n                weightedInfNorm.assign(newWeightedInfNorm);\n                const newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)((0,_ops_div__WEBPACK_IMPORTED_MODULE_5__.div)(lr, oneMinusAccBeta1), (0,_ops_div__WEBPACK_IMPORTED_MODULE_5__.div)(newFirstMoment, (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)(newWeightedInfNorm, this.epsilon))), value);\n                value.assign(newValue);\n            });\n            this.iteration.assign((0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)(this.iteration, 1));\n            this.accBeta1.assign((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(this.accBeta1, this.beta1));\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        this.accBeta1.dispose();\n        this.iteration.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedFirstMoment.map(v => v.variable));\n        }\n        if (this.accumulatedWeightedInfNorm != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedWeightedInfNorm.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        throw new Error('getWeights() is not implemented for Adamax yet.');\n    }\n    async setWeights(weightValues) {\n        throw new Error('setWeights() is not implemented for Adamax yet.');\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'beta1': this.beta1,\n            'beta2': this.beta2,\n            'epsilon': this.epsilon,\n            'decay': this.decay\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['beta1'], config['beta2'], config['epsilon'], config['decay']);\n    }\n}\n/** @nocollapse */\nAdamaxOptimizer.className = 'Adamax'; // Note: Name matters for Python compatbility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_11__.registerClass)(AdamaxOptimizer);\n//# sourceMappingURL=adamax_optimizer.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MomentumOptimizer\": () => (/* binding */ MomentumOptimizer)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_scalar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ops/scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _ops_zeros_like__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _sgd_optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sgd_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n/** @doclink Optimizer */\nclass MomentumOptimizer extends _sgd_optimizer__WEBPACK_IMPORTED_MODULE_1__.SGDOptimizer {\n    constructor(learningRate, momentum, useNesterov = false) {\n        super(learningRate);\n        this.learningRate = learningRate;\n        this.momentum = momentum;\n        this.useNesterov = useNesterov;\n        this.accumulations = [];\n        this.m = (0,_ops_scalar__WEBPACK_IMPORTED_MODULE_2__.scalar)(this.momentum);\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n            if (this.accumulations[i] == null) {\n                const trainable = false;\n                this.accumulations[i] = {\n                    originalName: `${name}/momentum`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_3__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_4__.zerosLike)(value).variable(trainable))\n                };\n            }\n            const accumulation = this.accumulations[i].variable;\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            (0,_globals__WEBPACK_IMPORTED_MODULE_3__.tidy)(() => {\n                let newValue;\n                const newAccumulation = (0,_ops_add__WEBPACK_IMPORTED_MODULE_5__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_6__.mul)(this.m, accumulation), gradient);\n                if (this.useNesterov) {\n                    newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_5__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_6__.mul)(this.c, (0,_ops_add__WEBPACK_IMPORTED_MODULE_5__.add)(gradient, (0,_ops_mul__WEBPACK_IMPORTED_MODULE_6__.mul)(newAccumulation, this.m))), value);\n                }\n                else {\n                    newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_5__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_6__.mul)(this.c, newAccumulation), value);\n                }\n                accumulation.assign(newAccumulation);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        this.m.dispose();\n        if (this.accumulations != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_3__.dispose)(this.accumulations.map(v => v.variable));\n        }\n    }\n    /**\n     * Sets the momentum of the optimizer.\n     *\n     * @param momentum\n     */\n    setMomentum(momentum) {\n        this.momentum = momentum;\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        return [await this.saveIterations()].concat(this.accumulations.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const trainable = false;\n        this.accumulations = weightValues.map(v => ({ originalName: v.name, variable: v.tensor.variable(trainable) }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'momentum': this.momentum,\n            'useNesterov': this.useNesterov\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['momentum'], config['useNesterov']);\n    }\n}\n/** @nocollapse */\nMomentumOptimizer.className = 'Momentum'; // Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_7__.registerClass)(MomentumOptimizer);\n//# sourceMappingURL=momentum_optimizer.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Optimizer\": () => (/* binding */ Optimizer)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _ops_ops__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/ops */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/** @doc {heading: 'Training', subheading: 'Classes', namespace: 'train'} */\nclass Optimizer extends _serialization__WEBPACK_IMPORTED_MODULE_0__.Serializable {\n    /**\n     * Executes `f()` and minimizes the scalar output of `f()` by computing\n     * gradients of y with respect to the list of trainable variables provided by\n     * `varList`. If no list is provided, it defaults to all trainable variables.\n     *\n     * @param f The function to execute and whose output to minimize.\n     * @param returnCost Whether to return the scalar cost value produced by\n     * executing `f()`.\n     * @param varList An optional list of variables to update. If specified, only\n     * the trainable variables in varList will be updated by minimize. Defaults to\n     * all trainable variables.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers'}\n     */\n    minimize(f, returnCost = false, varList) {\n        const { value, grads } = this.computeGradients(f, varList);\n        if (varList != null) {\n            const gradArray = varList.map(v => ({ name: v.name, tensor: grads[v.name] }));\n            this.applyGradients(gradArray);\n        }\n        else {\n            this.applyGradients(grads);\n        }\n        // Dispose gradients.\n        (0,_globals__WEBPACK_IMPORTED_MODULE_1__.dispose)(grads);\n        if (returnCost) {\n            return value;\n        }\n        else {\n            value.dispose();\n            return null;\n        }\n    }\n    /**\n     * The number of iterations that this optimizer instance has been invoked for.\n     */\n    get iterations() {\n        if (this.iterations_ == null) {\n            this.iterations_ = 0;\n        }\n        return this.iterations_;\n    }\n    incrementIterations() {\n        this.iterations_ = this.iterations + 1;\n    }\n    /**\n     * Executes f() and computes the gradient of the scalar output of f() with\n     * respect to the list of trainable variables provided by `varList`. If no\n     * list is provided, it defaults to all trainable variables.\n     *\n     * @param f The function to execute and whose output to use for computing\n     * gradients with respect to variables.\n     * @param varList An optional list of variables to compute gradients with\n     * respect to. If specified, only the trainable variables in varList will have\n     * gradients computed with respect to. Defaults to all trainable variables.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers'}\n     */\n    computeGradients(f, varList) {\n        return (0,_gradients__WEBPACK_IMPORTED_MODULE_2__.variableGrads)(f, varList);\n    }\n    /**\n     * Dispose the variables (if any) owned by this optimizer instance.\n     */\n    dispose() {\n        if (this.iterations_ != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_1__.dispose)(this.iterations_);\n        }\n    }\n    async saveIterations() {\n        if (this.iterations_ == null) {\n            this.iterations_ = 0;\n        }\n        return {\n            name: 'iter',\n            // TODO(cais): Use 'int64' type when available.\n            tensor: (0,_ops_ops__WEBPACK_IMPORTED_MODULE_3__.scalar)(this.iterations_, 'int32')\n        };\n    }\n    async getWeights() {\n        throw new Error('getWeights() is not implemented for this optimizer yet.');\n    }\n    async setWeights(weightValues) {\n        throw new Error(`setWeights() is not implemented for this optimizer class ` +\n            `${this.getClassName()}`);\n    }\n    /**\n     * Extract the first element of the weight values and set it\n     * as the iterations counter variable of this instance of optimizer.\n     *\n     * @param weightValues\n     * @returns Weight values with the first element consumed and excluded.\n     */\n    async extractIterations(weightValues) {\n        this.iterations_ = (await weightValues[0].tensor.data())[0];\n        return weightValues.slice(1);\n    }\n}\nObject.defineProperty(Optimizer, Symbol.hasInstance, {\n    value: (instance) => {\n        return instance.minimize != null && instance.computeGradients != null &&\n            instance.applyGradients != null;\n    }\n});\n//# sourceMappingURL=optimizer.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OptimizerConstructors\": () => (/* binding */ OptimizerConstructors)\n/* harmony export */ });\n/* harmony import */ var _adadelta_optimizer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./adadelta_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js\");\n/* harmony import */ var _adagrad_optimizer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./adagrad_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js\");\n/* harmony import */ var _adam_optimizer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./adam_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js\");\n/* harmony import */ var _adamax_optimizer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./adamax_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js\");\n/* harmony import */ var _momentum_optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./momentum_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js\");\n/* harmony import */ var _rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rmsprop_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js\");\n/* harmony import */ var _sgd_optimizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sgd_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\nclass OptimizerConstructors {\n    /**\n     * Constructs a `tf.SGDOptimizer` that uses stochastic gradient descent.\n     *\n     * ```js\n     * // Fit a quadratic function by learning the coefficients a, b, c.\n     * const xs = tf.tensor1d([0, 1, 2, 3]);\n     * const ys = tf.tensor1d([1.1, 5.9, 16.8, 33.9]);\n     *\n     * const a = tf.scalar(Math.random()).variable();\n     * const b = tf.scalar(Math.random()).variable();\n     * const c = tf.scalar(Math.random()).variable();\n     *\n     * // y = a * x^2 + b * x + c.\n     * const f = x => a.mul(x.square()).add(b.mul(x)).add(c);\n     * const loss = (pred, label) => pred.sub(label).square().mean();\n     *\n     * const learningRate = 0.01;\n     * const optimizer = tf.train.sgd(learningRate);\n     *\n     * // Train the model.\n     * for (let i = 0; i < 10; i++) {\n     *   optimizer.minimize(() => loss(f(xs), ys));\n     * }\n     *\n     * // Make predictions.\n     * console.log(\n     *     `a: ${a.dataSync()}, b: ${b.dataSync()}, c: ${c.dataSync()}`);\n     * const preds = f(xs).dataSync();\n     * preds.forEach((pred, i) => {\n     *   console.log(`x: ${i}, pred: ${pred}`);\n     * });\n     * ```\n     *\n     * @param learningRate The learning rate to use for the SGD algorithm.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static sgd(learningRate) {\n        return new _sgd_optimizer__WEBPACK_IMPORTED_MODULE_0__.SGDOptimizer(learningRate);\n    }\n    /**\n     * Constructs a `tf.MomentumOptimizer` that uses momentum gradient\n     * descent.\n     *\n     * See\n     * [http://proceedings.mlr.press/v28/sutskever13.pdf](\n     * http://proceedings.mlr.press/v28/sutskever13.pdf)\n     *\n     * @param learningRate The learning rate to use for the Momentum gradient\n     * descent algorithm.\n     * @param momentum The momentum to use for the momentum gradient descent\n     * algorithm.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static momentum(learningRate, momentum, useNesterov = false) {\n        return new _momentum_optimizer__WEBPACK_IMPORTED_MODULE_1__.MomentumOptimizer(learningRate, momentum, useNesterov);\n    }\n    /**\n     * Constructs a `tf.RMSPropOptimizer` that uses RMSProp gradient\n     * descent. This implementation uses plain momentum and is not centered\n     * version of RMSProp.\n     *\n     * See\n     * [http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf](\n     * http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf)\n     *\n     * @param learningRate The learning rate to use for the RMSProp gradient\n     * descent algorithm.\n     * @param decay The discounting factor for the history/coming gradient.\n     * @param momentum The momentum to use for the RMSProp gradient descent\n     * algorithm.\n     * @param epsilon Small value to avoid zero denominator.\n     * @param centered If true, gradients are normalized by the estimated\n     * variance of the gradient.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static rmsprop(learningRate, decay = .9, momentum = 0.0, epsilon = null, centered = false) {\n        return new _rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_2__.RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered);\n    }\n    /**\n     * Constructs a `tf.AdamOptimizer` that uses the Adam algorithm.\n     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n     *\n     * @param learningRate The learning rate to use for the Adam gradient\n     * descent algorithm.\n     * @param beta1 The exponential decay rate for the 1st moment estimates.\n     * @param beta2 The exponential decay rate for the 2nd moment estimates.\n     * @param epsilon A small constant for numerical stability.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adam(learningRate = 0.001, beta1 = 0.9, beta2 = 0.999, epsilon = null) {\n        return new _adam_optimizer__WEBPACK_IMPORTED_MODULE_3__.AdamOptimizer(learningRate, beta1, beta2, epsilon);\n    }\n    /**\n     * Constructs a `tf.AdadeltaOptimizer` that uses the Adadelta algorithm.\n     * See [https://arxiv.org/abs/1212.5701](https://arxiv.org/abs/1212.5701)\n     *\n     * @param learningRate The learning rate to use for the Adadelta gradient\n     * descent algorithm.\n     * @param rho The learning rate decay over each update.\n     * @param epsilon A constant epsilon used to better condition the grad\n     * update.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adadelta(learningRate = .001, rho = .95, epsilon = null) {\n        return new _adadelta_optimizer__WEBPACK_IMPORTED_MODULE_4__.AdadeltaOptimizer(learningRate, rho, epsilon);\n    }\n    /**\n     * Constructs a `tf.AdamaxOptimizer` that uses the Adamax algorithm.\n     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n     *\n     * @param learningRate The learning rate to use for the Adamax gradient\n     * descent algorithm.\n     * @param beta1 The exponential decay rate for the 1st moment estimates.\n     * @param beta2 The exponential decay rate for the 2nd moment estimates.\n     * @param epsilon A small constant for numerical stability.\n     * @param decay The learning rate decay over each update.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adamax(learningRate = 0.002, beta1 = 0.9, beta2 = 0.999, epsilon = null, decay = 0.0) {\n        return new _adamax_optimizer__WEBPACK_IMPORTED_MODULE_5__.AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay);\n    }\n    /**\n     * Constructs a `tf.AdagradOptimizer` that uses the Adagrad algorithm.\n     * See\n     * [http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf](\n     * http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf)\n     * or\n     * [http://ruder.io/optimizing-gradient-descent/index.html#adagrad](\n     * http://ruder.io/optimizing-gradient-descent/index.html#adagrad)\n     *\n     * @param learningRate The learning rate to use for the Adagrad gradient\n     * descent algorithm.\n     * @param initialAccumulatorValue Starting value for the accumulators, must be\n     * positive.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adagrad(learningRate, initialAccumulatorValue = 0.1) {\n        return new _adagrad_optimizer__WEBPACK_IMPORTED_MODULE_6__.AdagradOptimizer(learningRate, initialAccumulatorValue);\n    }\n}\n//# sourceMappingURL=optimizer_constructors.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RMSPropOptimizer\": () => (/* binding */ RMSPropOptimizer)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_div__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ops/div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_sqrt__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/sqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _ops_square__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _ops_sub__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ops/sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n\n\n\n\n/** @doclink Optimizer */\nclass RMSPropOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate, decay = 0.9, momentum = 0.0, epsilon = null, centered = false) {\n        super();\n        this.learningRate = learningRate;\n        this.decay = decay;\n        this.momentum = momentum;\n        this.epsilon = epsilon;\n        this.accumulatedMeanSquares = [];\n        this.accumulatedMoments = [];\n        this.accumulatedMeanGrads = [];\n        this.centered = centered;\n        if (epsilon == null) {\n            this.epsilon = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.epsilon();\n        }\n        if (learningRate == null) {\n            throw new Error(`learningRate for RMSPropOptimizer must be defined.`);\n        }\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n            const trainable = false;\n            if (this.accumulatedMeanSquares[i] == null) {\n                this.accumulatedMeanSquares[i] = {\n                    originalName: `${name}/rms`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(value).variable(trainable))\n                };\n            }\n            if (this.accumulatedMoments[i] == null) {\n                this.accumulatedMoments[i] = {\n                    originalName: `${name}/momentum`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(value).variable(trainable))\n                };\n            }\n            if (this.accumulatedMeanGrads[i] == null && this.centered) {\n                this.accumulatedMeanGrads[i] = {\n                    originalName: `${name}/mg`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(value).variable(trainable))\n                };\n            }\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const accumulatedMeanSquare = this.accumulatedMeanSquares[i].variable;\n            const accumulatedMoments = this.accumulatedMoments[i].variable;\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n                const newAccumulatedMeanSquare = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedMeanSquare, this.decay), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_ops_square__WEBPACK_IMPORTED_MODULE_6__.square)(gradient), 1 - this.decay));\n                if (this.centered) {\n                    const accumulatedMeanGrad = this.accumulatedMeanGrads[i].variable;\n                    // Centered gradient\n                    const newAccumulatedMeanGrad = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedMeanGrad, this.decay), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(gradient, 1 - this.decay));\n                    const gradContribution = (0,_ops_div__WEBPACK_IMPORTED_MODULE_7__.div)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(gradient, this.learningRate), (0,_ops_sqrt__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_ops_sub__WEBPACK_IMPORTED_MODULE_9__.sub)(newAccumulatedMeanSquare, (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_square__WEBPACK_IMPORTED_MODULE_6__.square)(newAccumulatedMeanGrad), this.epsilon))));\n                    const newAccumulatedMoments = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedMoments, this.momentum), gradContribution);\n                    accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n                    accumulatedMeanGrad.assign(newAccumulatedMeanGrad);\n                    accumulatedMoments.assign(newAccumulatedMoments);\n                    const newValue = (0,_ops_sub__WEBPACK_IMPORTED_MODULE_9__.sub)(value, newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n                else {\n                    // Plain gradient\n                    const newAccumulatedMeanSquare = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedMeanSquare, this.decay), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_ops_square__WEBPACK_IMPORTED_MODULE_6__.square)(gradient), 1 - this.decay));\n                    const newAccumulatedMoments = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedMoments, this.momentum), (0,_ops_div__WEBPACK_IMPORTED_MODULE_7__.div)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(gradient, this.learningRate), (0,_ops_sqrt__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)(newAccumulatedMeanSquare, this.epsilon))));\n                    accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n                    accumulatedMoments.assign(newAccumulatedMoments);\n                    const newValue = (0,_ops_sub__WEBPACK_IMPORTED_MODULE_9__.sub)(value, newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        if (this.accumulatedMeanSquares != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedMeanSquares.map(v => v.variable));\n        }\n        if (this.accumulatedMeanGrads != null && this.centered) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedMeanGrads.map(v => v.variable));\n        }\n        if (this.accumulatedMoments != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedMoments.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        const variables = [...this.accumulatedMeanSquares, ...this.accumulatedMoments];\n        if (this.centered) {\n            variables.push(...this.accumulatedMeanGrads);\n        }\n        return [await this.saveIterations()].concat(variables.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const variableCount = this.centered ? weightValues.length / 3 : weightValues.length / 2;\n        const trainable = false;\n        this.accumulatedMeanSquares =\n            weightValues.slice(0, variableCount).map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        this.accumulatedMoments =\n            weightValues.slice(variableCount, variableCount * 2)\n                .map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        if (this.centered) {\n            this.accumulatedMeanGrads =\n                weightValues.slice(variableCount * 2, variableCount * 3)\n                    .map(v => ({\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                }));\n        }\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'decay': this.decay,\n            'momentum': this.momentum,\n            'epsilon': this.epsilon,\n            'centered': this.centered\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['decay'], config['momentum'], config['epsilon'], config['centered']);\n    }\n}\n/** @nocollapse */\nRMSPropOptimizer.className = 'RMSProp'; // Note: Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_10__.registerClass)(RMSPropOptimizer);\n//# sourceMappingURL=rmsprop_optimizer.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SGDOptimizer\": () => (/* binding */ SGDOptimizer)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_scalar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\n\n\n/** @doclink Optimizer */\nclass SGDOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate) {\n        super();\n        this.learningRate = learningRate;\n        this.setLearningRate(learningRate);\n    }\n    applyGradients(variableGradients) {\n        const varNames = Array.isArray(variableGradients) ?\n            variableGradients.map(v => v.name) :\n            Object.keys(variableGradients);\n        varNames.forEach((name, i) => {\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n                const newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_3__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_4__.mul)(this.c, gradient), value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    /**\n     * Sets the learning rate of the optimizer.\n     */\n    setLearningRate(learningRate) {\n        this.learningRate = learningRate;\n        if (this.c != null) {\n            this.c.dispose();\n        }\n        this.c = (0,_globals__WEBPACK_IMPORTED_MODULE_2__.keep)((0,_ops_scalar__WEBPACK_IMPORTED_MODULE_5__.scalar)(-learningRate));\n    }\n    dispose() {\n        this.c.dispose();\n    }\n    async getWeights() {\n        return [await this.saveIterations()];\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        if (weightValues.length !== 0) {\n            throw new Error('SGD optimizer does not have settable weights.');\n        }\n    }\n    getConfig() {\n        return { 'learningRate': this.learningRate };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate']);\n    }\n}\n/** @nocollapse */\nSGDOptimizer.className = 'SGD'; // Note: Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_6__.registerClass)(SGDOptimizer);\n//# sourceMappingURL=sgd_optimizer.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PlatformBrowser\": () => (/* binding */ PlatformBrowser)\n/* harmony export */ });\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flags */ \"./node_modules/@tensorflow/tfjs-core/dist/flags.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _io_indexed_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../io/indexed_db */ \"./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js\");\n/* harmony import */ var _io_local_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../io/local_storage */ \"./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js\");\n/* harmony import */ var _io_model_management__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../io/model_management */ \"./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n\nclass PlatformBrowser {\n    fetch(path, init) {\n        return fetch(path, init);\n    }\n    now() {\n        return performance.now();\n    }\n    encode(text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(`Browser's encoder only supports utf-8, but got ${encoding}`);\n        }\n        if (this.textEncoder == null) {\n            this.textEncoder = new TextEncoder();\n        }\n        return this.textEncoder.encode(text);\n    }\n    decode(bytes, encoding) {\n        return new TextDecoder(encoding).decode(bytes);\n    }\n}\nif ((0,_environment__WEBPACK_IMPORTED_MODULE_4__.env)().get('IS_BROWSER')) {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_4__.env)().setPlatform('browser', new PlatformBrowser());\n    // Register LocalStorage IOHandler\n    try {\n        _io_model_management__WEBPACK_IMPORTED_MODULE_3__.ModelStoreManagerRegistry.registerManager(_io_local_storage__WEBPACK_IMPORTED_MODULE_2__.BrowserLocalStorage.URL_SCHEME, new _io_local_storage__WEBPACK_IMPORTED_MODULE_2__.BrowserLocalStorageManager());\n    }\n    catch (err) {\n    }\n    // Register IndexedDB IOHandler\n    try {\n        _io_model_management__WEBPACK_IMPORTED_MODULE_3__.ModelStoreManagerRegistry.registerManager(_io_indexed_db__WEBPACK_IMPORTED_MODULE_1__.BrowserIndexedDB.URL_SCHEME, new _io_indexed_db__WEBPACK_IMPORTED_MODULE_1__.BrowserIndexedDBManager());\n    }\n    catch (err) {\n    }\n}\n//# sourceMappingURL=platform_browser.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNodeFetch\": () => (/* binding */ getNodeFetch),\n/* harmony export */   \"resetSystemFetch\": () => (/* binding */ resetSystemFetch),\n/* harmony export */   \"setSystemFetch\": () => (/* binding */ setSystemFetch),\n/* harmony export */   \"getSystemFetch\": () => (/* binding */ getSystemFetch),\n/* harmony export */   \"PlatformNode\": () => (/* binding */ PlatformNode)\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// We are wrapping this within an object so it can be stubbed by Jasmine.\nconst getNodeFetch = {\n    // tslint:disable-next-line:no-require-imports\n    importFetch: () => __webpack_require__(/*! node-fetch */ \"./node_modules/node-fetch/lib/index.mjs\")\n};\nlet systemFetch;\n// These getters and setters are for testing so we don't export a mutable\n// variable.\nfunction resetSystemFetch() {\n    systemFetch = null;\n}\nfunction setSystemFetch(fetchFn) {\n    systemFetch = fetchFn;\n}\nfunction getSystemFetch() {\n    return systemFetch;\n}\nclass PlatformNode {\n    constructor() {\n        // tslint:disable-next-line:no-require-imports\n        this.util = __webpack_require__(/*! util */ \"util\");\n        // According to the spec, the built-in encoder can do only UTF-8 encoding.\n        // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n        this.textEncoder = new this.util.TextEncoder();\n    }\n    fetch(path, requestInits) {\n        if ((0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().global.fetch != null) {\n            return (0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().global.fetch(path, requestInits);\n        }\n        if (systemFetch == null) {\n            systemFetch = getNodeFetch.importFetch();\n        }\n        return systemFetch(path, requestInits);\n    }\n    now() {\n        const time = process.hrtime();\n        return time[0] * 1000 + time[1] / 1000000;\n    }\n    encode(text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(`Node built-in encoder only supports utf-8, but got ${encoding}`);\n        }\n        return this.textEncoder.encode(text);\n    }\n    decode(bytes, encoding) {\n        if (bytes.length === 0) {\n            return '';\n        }\n        return new this.util.TextDecoder(encoding).decode(bytes);\n    }\n}\nif ((0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().get('IS_NODE')) {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().setPlatform('node', new PlatformNode());\n}\n//# sourceMappingURL=platform_node.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/profiler.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/profiler.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Profiler\": () => (/* binding */ Profiler),\n/* harmony export */   \"checkComputationForErrors\": () => (/* binding */ checkComputationForErrors),\n/* harmony export */   \"Logger\": () => (/* binding */ Logger)\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\nclass Profiler {\n    constructor(backendTimer, logger) {\n        this.backendTimer = backendTimer;\n        this.logger = logger;\n        if (logger == null) {\n            this.logger = new Logger();\n        }\n    }\n    profileKernel(kernelName, inputs, f) {\n        let outputs;\n        const holdResultWrapperFn = () => {\n            outputs = f();\n        };\n        let timer;\n        const start = _util__WEBPACK_IMPORTED_MODULE_0__.now();\n        if (this.backendTimer.timerAvailable()) {\n            timer = this.backendTimer.time(holdResultWrapperFn);\n        }\n        else {\n            holdResultWrapperFn();\n            for (const output of outputs) {\n                output.dataSync();\n            }\n            timer = Promise.resolve({ kernelMs: _util__WEBPACK_IMPORTED_MODULE_0__.now() - start });\n        }\n        if ((0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('CHECK_COMPUTATION_FOR_ERRORS')) {\n            for (let i = 0; i < outputs.length; i++) {\n                const output = outputs[i];\n                // Dangling promise here because we don't want to propagate up\n                // asynchronicity.\n                output.data().then(tensorVals => {\n                    checkComputationForErrors(tensorVals, output.dtype, kernelName);\n                });\n            }\n        }\n        const kernelProfile = {\n            kernelName,\n            outputs,\n            inputs,\n            timeMs: timer.then(timing => timing.kernelMs),\n            extraInfo: timer.then(timing => timing.getExtraProfileInfo != null ?\n                timing.getExtraProfileInfo() :\n                '')\n        };\n        return kernelProfile;\n    }\n    logKernelProfile(kernelProfile) {\n        const { kernelName, outputs, timeMs, inputs, extraInfo } = kernelProfile;\n        outputs.forEach(result => {\n            Promise.all([result.data(), timeMs, extraInfo]).then(valueContainer => {\n                this.logger.logKernelProfile(kernelName, result, valueContainer[0], valueContainer[1], inputs, valueContainer[2]);\n            });\n        });\n    }\n}\nfunction checkComputationForErrors(vals, dtype, kernelName) {\n    if (dtype !== 'float32') {\n        // Only floating point computations will generate NaN values\n        return false;\n    }\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            // Throwing custom exception so behavior is testable.\n            console.warn(`Found ${num} in the result of '${kernelName}'`);\n            return true;\n        }\n    }\n    return false;\n}\nclass Logger {\n    logKernelProfile(name, result, vals, timeMs, inputs, extraInfo) {\n        const time = typeof timeMs === 'number' ? _util__WEBPACK_IMPORTED_MODULE_2__.rightPad(`${timeMs}ms`, 9) :\n            timeMs['error'];\n        const paddedName = _util__WEBPACK_IMPORTED_MODULE_2__.rightPad(name, 25);\n        const rank = result.rank;\n        const size = result.size;\n        const shape = _util__WEBPACK_IMPORTED_MODULE_2__.rightPad(result.shape.toString(), 14);\n        let inputShapesDescription = '';\n        for (const name in inputs) {\n            const input = inputs[name];\n            if (input != null) {\n                // The input might be a non-tensor (e.g HTMLImageElement), in which case\n                // we claim the output shape as input shape.\n                const inputShape = input.shape || result.shape;\n                const inputRank = inputShape.length;\n                inputShapesDescription +=\n                    `${name}: ${inputRank}D ${inputRank > 0 ? inputShape : ''} `;\n            }\n        }\n        console.log(`%c${paddedName}\\t%c${time}\\t%c${rank}D ${shape}\\t%c${size}\\t%c${inputShapesDescription}\\t%c${extraInfo}`, 'font-weight:bold', 'color:red', 'color:blue', 'color: orange', 'color: green', 'color: steelblue');\n    }\n}\n//# sourceMappingURL=profiler.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/profiler.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/serialization.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/serialization.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Serializable\": () => (/* binding */ Serializable),\n/* harmony export */   \"SerializationMap\": () => (/* binding */ SerializationMap),\n/* harmony export */   \"registerClass\": () => (/* binding */ registerClass)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nclass Serializable {\n    /**\n     * Return the class name for this class to use in serialization contexts.\n     *\n     * Generally speaking this will be the same thing that constructor.name\n     * would have returned.  However, the class name needs to be robust\n     * against minification for serialization/deserialization to work properly.\n     *\n     * There's also places such as initializers.VarianceScaling, where\n     * implementation details between different languages led to different\n     * class hierarchies and a non-leaf node is used for serialization purposes.\n     */\n    getClassName() {\n        return this.constructor\n            .className;\n    }\n    /**\n     * Creates an instance of T from a ConfigDict.\n     *\n     * This works for most descendants of serializable.  A few need to\n     * provide special handling.\n     * @param cls A Constructor for the class to instantiate.\n     * @param config The Configuration for the object.\n     */\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config);\n    }\n}\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\nclass SerializationMap {\n    constructor() {\n        this.classNameMap = {};\n    }\n    /**\n     * Returns the singleton instance of the map.\n     */\n    static getMap() {\n        if (SerializationMap.instance == null) {\n            SerializationMap.instance = new SerializationMap();\n        }\n        return SerializationMap.instance;\n    }\n    /**\n     * Registers the class as serializable.\n     */\n    static register(cls) {\n        SerializationMap.getMap().classNameMap[cls.className] =\n            [cls, cls.fromConfig];\n    }\n}\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n *\n * @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true}\n */\nfunction registerClass(cls) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(cls.className != null, () => `Class being registered does not have the static className ` +\n        `property defined.`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof cls.className === 'string', () => `className is required to be a string, but got type ` +\n        typeof cls.className);\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(cls.className.length > 0, () => `Class being registered has an empty-string as its className, ` +\n        `which is disallowed.`);\n    SerializationMap.register(cls);\n}\n//# sourceMappingURL=serialization.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/serialization.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/tape.js":
/*!*********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/tape.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getFilteredNodesXToY\": () => (/* binding */ getFilteredNodesXToY),\n/* harmony export */   \"backpropagateGradients\": () => (/* binding */ backpropagateGradients)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nfunction getFilteredNodesXToY(tape, xs, y) {\n    // Forward pass to compute all the nodes and Tensors that are transitively a\n    // function of x.\n    const tensorsFromX = {};\n    const nodesFromX = {};\n    for (let i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        for (const inputName in nodeInputs) {\n            const input = nodeInputs[inputName];\n            let anyInputFromX = false;\n            for (let j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    node.outputs.forEach(output => tensorsFromX[output.id] = true);\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    // Backward pass to find all of the nodes and Tensors that lead to y.\n    const tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    const nodesToY = {};\n    for (let i = tape.length - 1; i >= 0; i--) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        // If any of the outputs lead to y, mark all of the inputs as leading to y.\n        for (let j = 0; j < node.outputs.length; j++) {\n            if (tensorsLeadToY[node.outputs[j].id]) {\n                for (const inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    // Return the paths that come from x and lead to y.\n    const filteredTape = [];\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            // Prune the inputs from the node that aren't a function of x.\n            const prunedInputs = {};\n            for (const inputName in node.inputs) {\n                const nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            // Copy the node and overwrite inputsAndArgs to the pruned version.\n            const prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.outputs = node.outputs;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nfunction backpropagateGradients(tensorAccumulatedGradientMap, filteredTape, tidy, add) {\n    // Walk the tape backward and keep a map of Tensor to its gradient.\n    for (let i = filteredTape.length - 1; i >= 0; i--) {\n        const node = filteredTape[i];\n        const dys = [];\n        node.outputs.forEach(o => {\n            const gradTensor = tensorAccumulatedGradientMap[o.id];\n            if (gradTensor != null) {\n                dys.push(gradTensor);\n            }\n            else {\n                // This particular output is not in the back-propagation subgraph, so it\n                // does not affect the final output, thus we put null for its dy.\n                dys.push(null);\n            }\n        });\n        if (node.gradient == null) {\n            throw new Error(`Cannot compute gradient: gradient function not found ` +\n                `for ${node.kernelName}.`);\n        }\n        // Backprop dy through this node and accumulate gradients over the inputs.\n        const inputGradients = node.gradient(dys);\n        for (const inputName in node.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(`Cannot backprop through input ${inputName}. ` +\n                    `Available gradients found: ${Object.keys(inputGradients)}.`);\n            }\n            // Call the gradient function.\n            const dx = tidy(() => inputGradients[inputName]());\n            if (dx.dtype !== 'float32') {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);\n            }\n            const x = node.inputs[inputName];\n            if (!_util__WEBPACK_IMPORTED_MODULE_0__.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `'${inputName}' has shape '${dx.shape}', which does not match ` +\n                    `the shape of the input '${x.shape}'`);\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                const curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = add(curGradient, dx);\n                curGradient.dispose();\n            }\n        }\n    }\n}\n//# sourceMappingURL=tape.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/tape.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/tensor.js":
/*!***********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/tensor.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TensorBuffer\": () => (/* binding */ TensorBuffer),\n/* harmony export */   \"setTensorTracker\": () => (/* binding */ setTensorTracker),\n/* harmony export */   \"setOpHandler\": () => (/* binding */ setOpHandler),\n/* harmony export */   \"setDeprecationWarningFn\": () => (/* binding */ setDeprecationWarningFn),\n/* harmony export */   \"Tensor\": () => (/* binding */ Tensor),\n/* harmony export */   \"getGlobalTensorClass\": () => (/* binding */ getGlobalTensorClass),\n/* harmony export */   \"Variable\": () => (/* binding */ Variable)\n/* harmony export */ });\n/* harmony import */ var _global_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./global_util */ \"./node_modules/@tensorflow/tfjs-core/dist/global_util.js\");\n/* harmony import */ var _tensor_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_format */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nclass TensorBuffer {\n    constructor(shape, dtype, values) {\n        this.dtype = dtype;\n        this.shape = shape.slice();\n        this.size = _util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape(shape);\n        if (values != null) {\n            const n = values.length;\n            _util__WEBPACK_IMPORTED_MODULE_0__.assert(n === this.size, () => `Length of values '${n}' does not match the size ` +\n                `inferred by the shape '${this.size}'.`);\n        }\n        if (dtype === 'complex64') {\n            throw new Error(`complex64 dtype TensorBuffers are not supported. Please create ` +\n                `a TensorBuffer for the real and imaginary parts separately and ` +\n                `call tf.complex(real, imag).`);\n        }\n        this.values = values || _util__WEBPACK_IMPORTED_MODULE_0__.getArrayFromDType(dtype, this.size);\n        this.strides = (0,_util__WEBPACK_IMPORTED_MODULE_0__.computeStrides)(shape);\n    }\n    /**\n     * Sets a value in the buffer at a given location.\n     *\n     * @param value The value to set.\n     * @param locs  The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    set(value, ...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        _util__WEBPACK_IMPORTED_MODULE_0__.assert(locs.length === this.rank, () => `The number of provided coordinates (${locs.length}) must ` +\n            `match the rank (${this.rank})`);\n        const index = this.locToIndex(locs);\n        this.values[index] = value;\n    }\n    /**\n     * Returns the value in the buffer at the provided location.\n     *\n     * @param locs The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    get(...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        let i = 0;\n        for (const loc of locs) {\n            if (loc < 0 || loc >= this.shape[i]) {\n                const msg = `Requested out of range element at ${locs}. ` +\n                    `  Buffer shape=${this.shape}`;\n                throw new Error(msg);\n            }\n            i++;\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.values[index];\n    }\n    locToIndex(locs) {\n        if (this.rank === 0) {\n            return 0;\n        }\n        else if (this.rank === 1) {\n            return locs[0];\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    }\n    indexToLoc(index) {\n        if (this.rank === 0) {\n            return [];\n        }\n        else if (this.rank === 1) {\n            return [index];\n        }\n        const locs = new Array(this.shape.length);\n        for (let i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Creates an immutable `tf.Tensor` object from the buffer.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    toTensor() {\n        return trackerFn().makeTensor(this.values, this.shape, this.dtype);\n    }\n}\n// For tracking tensor creation and disposal.\nlet trackerFn = null;\n// Used by chaining methods to call into ops.\nlet opHandler = null;\n// Used to warn about deprecated methods.\nlet deprecationWarningFn = null;\n// This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n[deprecationWarningFn];\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\nfunction setTensorTracker(fn) {\n    trackerFn = fn;\n}\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op\n * handler.\n */\nfunction setOpHandler(handler) {\n    opHandler = handler;\n}\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\nfunction setDeprecationWarningFn(fn) {\n    deprecationWarningFn = fn;\n}\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * For performance reasons, functions that create tensors do not necessarily\n * perform a copy of the data passed to them (e.g. if the data is passed as a\n * `Float32Array`), and changes to the data will change the tensor. This is not\n * a feature and is not supported. To avoid this behavior, use the tensor before\n * changing the input data or create a copy with `copy = tf.add(yourTensor, 0)`.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nclass Tensor {\n    constructor(shape, dtype, dataId, id) {\n        /** Whether this tensor has been globally kept. */\n        this.kept = false;\n        this.isDisposedInternal = false;\n        this.shape = shape.slice();\n        this.dtype = dtype || 'float32';\n        this.size = _util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape(shape);\n        this.strides = (0,_util__WEBPACK_IMPORTED_MODULE_0__.computeStrides)(shape);\n        this.dataId = dataId;\n        this.id = id;\n        this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher');\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Returns a promise of `tf.TensorBuffer` that holds the underlying data.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async buffer() {\n        const vals = await this.data();\n        return opHandler.buffer(this.shape, this.dtype, vals);\n    }\n    /**\n     * Returns a `tf.TensorBuffer` that holds the underlying data.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    bufferSync() {\n        return opHandler.buffer(this.shape, this.dtype, this.dataSync());\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * asynchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async array() {\n        const vals = await this.data();\n        return (0,_util__WEBPACK_IMPORTED_MODULE_0__.toNestedArray)(this.shape, vals, this.dtype === 'complex64');\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * synchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    arraySync() {\n        return (0,_util__WEBPACK_IMPORTED_MODULE_0__.toNestedArray)(this.shape, this.dataSync(), this.dtype === 'complex64');\n    }\n    /**\n     * Asynchronously downloads the values from the `tf.Tensor`. Returns a\n     * promise of `TypedArray` that resolves when the computation has finished.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async data() {\n        this.throwIfDisposed();\n        const data = trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            const bytes = await data;\n            try {\n                return bytes.map(b => _util__WEBPACK_IMPORTED_MODULE_1__.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /**\n     * Synchronously downloads the values from the `tf.Tensor`. This blocks the\n     * UI thread until the values are ready, which can cause performance issues.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dataSync() {\n        this.throwIfDisposed();\n        const data = trackerFn().readSync(this.dataId);\n        if (this.dtype === 'string') {\n            try {\n                return data.map(b => _util__WEBPACK_IMPORTED_MODULE_1__.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /** Returns the underlying bytes of the tensor's data. */\n    async bytes() {\n        this.throwIfDisposed();\n        const data = await trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            return data;\n        }\n        else {\n            return new Uint8Array(data.buffer);\n        }\n    }\n    /**\n     * Disposes `tf.Tensor` from memory.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        trackerFn().disposeTensor(this);\n        this.isDisposedInternal = true;\n    }\n    get isDisposed() {\n        return this.isDisposedInternal;\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error(`Tensor is disposed.`);\n        }\n    }\n    /**\n     * Prints the `tf.Tensor`. See `tf.print` for details.\n     *\n     * @param verbose Whether to print verbose information about the tensor,\n     *    including dtype and size.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    print(verbose = false) {\n        return opHandler.print(this, verbose);\n    }\n    /**\n     * Returns a copy of the tensor. See `tf.clone` for details.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    clone() {\n        this.throwIfDisposed();\n        return opHandler.clone(this);\n    }\n    /**\n     * Returns a human-readable description of the tensor. Useful for logging.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    toString(verbose = false) {\n        const vals = this.dataSync();\n        return (0,_tensor_format__WEBPACK_IMPORTED_MODULE_2__.tensorToString)(vals, this.shape, this.dtype, verbose);\n    }\n    cast(dtype) {\n        this.throwIfDisposed();\n        return opHandler.cast(this, dtype);\n    }\n    variable(trainable = true, name, dtype) {\n        this.throwIfDisposed();\n        return trackerFn().makeVariable(this, trainable, name, dtype);\n    }\n}\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n    value: (instance) => {\n        // Implementation note: we should use properties of the object that will be\n        // defined before the constructor body has finished executing (methods).\n        // This is because when this code is transpiled by babel, babel will call\n        // classCallCheck before the constructor body is run.\n        // See https://github.com/tensorflow/tfjs/issues/3384 for backstory.\n        return !!instance && instance.data != null && instance.dataSync != null &&\n            instance.throwIfDisposed != null;\n    }\n});\nfunction getGlobalTensorClass() {\n    // Use getGlobal so that we can augment the Tensor class across package\n    // boundaries becase the node resolution alg may result in different modules\n    // being returned for this file depending on the path they are loaded from.\n    return (0,_global_util__WEBPACK_IMPORTED_MODULE_3__.getGlobal)('Tensor', () => {\n        return Tensor;\n    });\n}\n// Global side effect. Cache global reference to Tensor class\ngetGlobalTensorClass();\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nclass Variable extends Tensor {\n    constructor(initialValue, trainable, name, tensorId) {\n        super(initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId);\n        this.trainable = trainable;\n        this.name = name;\n    }\n    /**\n     * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n     * the same shape and dtype as the old `tf.Tensor`.\n     *\n     * @param newValue New tensor to be assigned to this variable.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    assign(newValue) {\n        if (newValue.dtype !== this.dtype) {\n            throw new Error(`dtype of the new value (${newValue.dtype}) and ` +\n                `previous value (${this.dtype}) must match`);\n        }\n        if (!_util__WEBPACK_IMPORTED_MODULE_0__.arraysEqual(newValue.shape, this.shape)) {\n            throw new Error(`shape of the new value (${newValue.shape}) and ` +\n                `previous value (${this.shape}) must match`);\n        }\n        trackerFn().disposeTensor(this);\n        this.dataId = newValue.dataId;\n        trackerFn().incRef(this, null /* backend */);\n    }\n    dispose() {\n        trackerFn().disposeVariable(this);\n        this.isDisposedInternal = true;\n    }\n}\nObject.defineProperty(Variable, Symbol.hasInstance, {\n    value: (instance) => {\n        return instance instanceof Tensor && instance.assign != null &&\n            instance.assign instanceof Function;\n    }\n});\n//# sourceMappingURL=tensor.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/tensor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensorToString\": () => (/* binding */ tensorToString)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Maximum number of values before we decide to show ellipsis.\nconst FORMAT_LIMIT_NUM_VALS = 20;\n// Number of first and last values to show when displaying a, b,...,y, z.\nconst FORMAT_NUM_FIRST_LAST_VALS = 3;\n// Number of significant digits to show.\nconst FORMAT_NUM_SIG_DIGITS = 7;\nfunction tensorToString(vals, shape, dtype, verbose) {\n    const strides = (0,_util__WEBPACK_IMPORTED_MODULE_0__.computeStrides)(shape);\n    const padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n    const rank = shape.length;\n    const valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n    const lines = ['Tensor'];\n    if (verbose) {\n        lines.push(`  dtype: ${dtype}`);\n        lines.push(`  rank: ${rank}`);\n        lines.push(`  shape: [${shape}]`);\n        lines.push(`  values:`);\n    }\n    lines.push(valsLines.map(l => '    ' + l).join('\\n'));\n    return lines.join('\\n');\n}\nfunction computeMaxSizePerColumn(vals, shape, dtype, strides) {\n    const n = (0,_util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape)(shape);\n    const numCols = strides[strides.length - 1];\n    const padPerCol = new Array(numCols).fill(0);\n    const rank = shape.length;\n    const valuesOrTuples = dtype === 'complex64' ? createComplexTuples(vals) : vals;\n    if (rank > 1) {\n        for (let row = 0; row < n / numCols; row++) {\n            const offset = row * numCols;\n            for (let j = 0; j < numCols; j++) {\n                padPerCol[j] = Math.max(padPerCol[j], valToString(valuesOrTuples[offset + j], 0, dtype).length);\n            }\n        }\n    }\n    return padPerCol;\n}\nfunction valToString(val, pad, dtype) {\n    let valStr;\n    if (Array.isArray(val)) {\n        valStr = `${parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ` +\n            `${parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`;\n    }\n    else if ((0,_util__WEBPACK_IMPORTED_MODULE_0__.isString)(val)) {\n        valStr = `'${val}'`;\n    }\n    else if (dtype === 'bool') {\n        valStr = boolNumToString(val);\n    }\n    else {\n        valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n    }\n    return (0,_util__WEBPACK_IMPORTED_MODULE_0__.rightPad)(valStr, pad);\n}\nfunction boolNumToString(v) {\n    return v === 0 ? 'false' : 'true';\n}\nfunction subTensorToString(vals, shape, dtype, strides, padPerCol, isLast = true) {\n    const storagePerElement = dtype === 'complex64' ? 2 : 1;\n    const size = shape[0];\n    const rank = shape.length;\n    if (rank === 0) {\n        if (dtype === 'complex64') {\n            const complexTuple = createComplexTuples(vals);\n            return [valToString(complexTuple[0], 0, dtype)];\n        }\n        if (dtype === 'bool') {\n            return [boolNumToString(vals[0])];\n        }\n        return [vals[0].toString()];\n    }\n    if (rank === 1) {\n        if (size > FORMAT_LIMIT_NUM_VALS) {\n            const firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n            let firstVals = Array.from(vals.slice(0, firstValsSize));\n            let lastVals = Array.from(vals.slice((size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement, size * storagePerElement));\n            if (dtype === 'complex64') {\n                firstVals = createComplexTuples(firstVals);\n                lastVals = createComplexTuples(lastVals);\n            }\n            return [\n                '[' +\n                    firstVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                        .join(', ') +\n                    ', ..., ' +\n                    lastVals\n                        .map((x, i) => valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype))\n                        .join(', ') +\n                    ']'\n            ];\n        }\n        const displayVals = dtype === 'complex64' ? createComplexTuples(vals) :\n            Array.from(vals);\n        return [\n            '[' +\n                displayVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                    .join(', ') +\n                ']'\n        ];\n    }\n    // The array is rank 2 or more.\n    const subshape = shape.slice(1);\n    const substrides = strides.slice(1);\n    const stride = strides[0] * storagePerElement;\n    const lines = [];\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n        for (let i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, false /* isLast */));\n        }\n        lines.push('...');\n        for (let i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    else {\n        for (let i = 0; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    const sep = rank === 2 ? ',' : '';\n    lines[0] = '[' + lines[0] + sep;\n    for (let i = 1; i < lines.length - 1; i++) {\n        lines[i] = ' ' + lines[i] + sep;\n    }\n    let newLineSep = ',\\n';\n    for (let i = 2; i < rank; i++) {\n        newLineSep += '\\n';\n    }\n    lines[lines.length - 1] =\n        ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n    return lines;\n}\nfunction createComplexTuples(vals) {\n    const complexTuples = [];\n    for (let i = 0; i < vals.length; i += 2) {\n        complexTuples.push([vals[i], vals[i + 1]]);\n    }\n    return complexTuples;\n}\n//# sourceMappingURL=tensor_format.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeTypesMatch\": () => (/* binding */ makeTypesMatch),\n/* harmony export */   \"assertTypesMatch\": () => (/* binding */ assertTypesMatch),\n/* harmony export */   \"isTensorInList\": () => (/* binding */ isTensorInList),\n/* harmony export */   \"getTensorsInContainer\": () => (/* binding */ getTensorsInContainer)\n/* harmony export */ });\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./node_modules/@tensorflow/tfjs-core/dist/types.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nfunction makeTypesMatch(a, b) {\n    if (a.dtype === b.dtype) {\n        return [a, b];\n    }\n    const dtype = (0,_types__WEBPACK_IMPORTED_MODULE_1__.upcastType)(a.dtype, b.dtype);\n    return [a.cast(dtype), b.cast(dtype)];\n}\nfunction assertTypesMatch(a, b) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)(a.dtype === b.dtype, () => `The dtypes of the first(${a.dtype}) and` +\n        ` second(${b.dtype}) input must match`);\n}\nfunction isTensorInList(tensor, tensorList) {\n    return tensorList.some(x => x.id === tensor.id);\n}\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\nfunction getTensorsInContainer(result) {\n    const list = [];\n    const seen = new Set();\n    walkTensorContainer(result, list, seen);\n    return list;\n}\nfunction walkTensorContainer(container, list, seen) {\n    if (container == null) {\n        return;\n    }\n    if (container instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor) {\n        list.push(container);\n        return;\n    }\n    if (!isIterable(container)) {\n        return;\n    }\n    // Iteration over keys works also for arrays.\n    const iterable = container;\n    for (const k in iterable) {\n        const val = iterable[k];\n        if (!seen.has(val)) {\n            seen.add(val);\n            walkTensorContainer(val, list, seen);\n        }\n    }\n}\n// tslint:disable-next-line:no-any\nfunction isIterable(obj) {\n    return Array.isArray(obj) || typeof obj === 'object';\n}\n//# sourceMappingURL=tensor_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inferShape\": () => (/* binding */ inferShape),\n/* harmony export */   \"convertToTensor\": () => (/* binding */ convertToTensor),\n/* harmony export */   \"convertToTensorArray\": () => (/* binding */ convertToTensorArray)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\nfunction inferShape(val, dtype) {\n    let firstElem = val;\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_2__.isTypedArray)(val)) {\n        return dtype === 'string' ? [] : [val.length];\n    }\n    if (!Array.isArray(val)) {\n        return []; // Scalar.\n    }\n    const shape = [];\n    while (Array.isArray(firstElem) ||\n        (0,_util__WEBPACK_IMPORTED_MODULE_2__.isTypedArray)(firstElem) && dtype !== 'string') {\n        shape.push(firstElem.length);\n        firstElem = firstElem[0];\n    }\n    if (Array.isArray(val) &&\n        (0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n        deepAssertShapeConsistency(val, shape, []);\n    }\n    return shape;\n}\nfunction deepAssertShapeConsistency(val, shape, indices) {\n    indices = indices || [];\n    if (!(Array.isArray(val)) && !(0,_util__WEBPACK_IMPORTED_MODULE_2__.isTypedArray)(val)) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)(shape.length === 0, () => `Element arr[${indices.join('][')}] is a primitive, ` +\n            `but should be an array/TypedArray of ${shape[0]} elements`);\n        return;\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)(shape.length > 0, () => `Element arr[${indices.join('][')}] should be a primitive, ` +\n        `but is an array of ${val.length} elements`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)(val.length === shape[0], () => `Element arr[${indices.join('][')}] should have ${shape[0]} ` +\n        `elements, but has ${val.length} elements`);\n    const subShape = shape.slice(1);\n    for (let i = 0; i < val.length; ++i) {\n        deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n    }\n}\nfunction assertDtype(expectedDtype, actualDType, argName, functionName) {\n    if (expectedDtype === 'string_or_numeric') {\n        return;\n    }\n    if (expectedDtype == null) {\n        throw new Error(`Expected dtype cannot be null.`);\n    }\n    if (expectedDtype !== 'numeric' && expectedDtype !== actualDType ||\n        expectedDtype === 'numeric' && actualDType === 'string') {\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must ` +\n            `be ${expectedDtype} tensor, but got ${actualDType} tensor`);\n    }\n}\nfunction convertToTensor(x, argName, functionName, parseAsDtype = 'numeric') {\n    if (x instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor) {\n        assertDtype(parseAsDtype, x.dtype, argName, functionName);\n        return x;\n    }\n    let inferredDtype = (0,_util__WEBPACK_IMPORTED_MODULE_2__.inferDtype)(x);\n    // If the user expects a bool/int/float, use that info to update the\n    // inferredDtype when it is not a string.\n    if (inferredDtype !== 'string' &&\n        ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n        inferredDtype = parseAsDtype;\n    }\n    assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n    if ((x == null) ||\n        (!(0,_util__WEBPACK_IMPORTED_MODULE_2__.isTypedArray)(x) && !Array.isArray(x) && typeof x !== 'number' &&\n            typeof x !== 'boolean' && typeof x !== 'string')) {\n        const type = x == null ? 'null' : x.constructor.name;\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must be a ` +\n            `Tensor or TensorLike, but got '${type}'`);\n    }\n    const inferredShape = inferShape(x, inferredDtype);\n    if (!(0,_util__WEBPACK_IMPORTED_MODULE_2__.isTypedArray)(x) && !Array.isArray(x)) {\n        x = [x];\n    }\n    const skipTypedArray = true;\n    const values = inferredDtype !== 'string' ?\n        (0,_util__WEBPACK_IMPORTED_MODULE_4__.toTypedArray)(x, inferredDtype) :\n        (0,_util__WEBPACK_IMPORTED_MODULE_2__.flatten)(x, [], skipTypedArray);\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeTensor(values, inferredShape, inferredDtype);\n}\nfunction convertToTensorArray(arg, argName, functionName, parseAsDtype = 'numeric') {\n    if (!Array.isArray(arg)) {\n        throw new Error(`Argument ${argName} passed to ${functionName} must be a ` +\n            '`Tensor[]` or `TensorLike[]`');\n    }\n    const tensors = arg;\n    return tensors.map((t, i) => convertToTensor(t, `${argName}[${i}]`, functionName, parseAsDtype));\n}\n//# sourceMappingURL=tensor_util_env.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/test_util.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/test_util.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TEST_EPSILON_FLOAT16\": () => (/* binding */ TEST_EPSILON_FLOAT16),\n/* harmony export */   \"expectArraysClose\": () => (/* binding */ expectArraysClose),\n/* harmony export */   \"testEpsilon\": () => (/* binding */ testEpsilon),\n/* harmony export */   \"expectPromiseToFail\": () => (/* binding */ expectPromiseToFail),\n/* harmony export */   \"expectArraysEqual\": () => (/* binding */ expectArraysEqual),\n/* harmony export */   \"expectNumbersClose\": () => (/* binding */ expectNumbersClose),\n/* harmony export */   \"expectValuesInRange\": () => (/* binding */ expectValuesInRange),\n/* harmony export */   \"expectArrayBuffersEqual\": () => (/* binding */ expectArrayBuffersEqual),\n/* harmony export */   \"encodeStrings\": () => (/* binding */ encodeStrings)\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\nconst TEST_EPSILON_FLOAT32 = 1e-3;\nconst TEST_EPSILON_FLOAT16 = 1e-1;\nfunction expectArraysClose(actual, expected, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    return expectArraysPredicate(actual, expected, (a, b) => areClose(a, b, epsilon));\n}\nfunction testEpsilon() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.floatPrecision() === 32 ? TEST_EPSILON_FLOAT32 :\n        TEST_EPSILON_FLOAT16;\n}\nfunction expectArraysPredicate(actual, expected, predicate) {\n    let checkClassType = true;\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(actual) || (0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(expected)) {\n        checkClassType = false;\n    }\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(actual) && (0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(expected)) {\n        checkClassType = true;\n    }\n    if (checkClassType) {\n        const aType = actual.constructor.name;\n        const bType = expected.constructor.name;\n        if (aType !== bType) {\n            throw new Error(`Arrays are of different type. Actual: ${aType}. ` +\n                `Expected: ${bType}`);\n        }\n    }\n    if (Array.isArray(actual) && Array.isArray(expected)) {\n        const actualShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_2__.inferShape)(actual);\n        const expectedShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_2__.inferShape)(expected);\n        if (!(0,_util__WEBPACK_IMPORTED_MODULE_1__.arraysEqual)(actualShape, expectedShape)) {\n            throw new Error(`Arrays have different shapes. ` +\n                `Actual: [${actualShape}]. Expected: [${expectedShape}]`);\n        }\n    }\n    const actualFlat = (0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(actual) ? actual : (0,_util__WEBPACK_IMPORTED_MODULE_1__.flatten)(actual);\n    const expectedFlat = (0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(expected) ?\n        expected :\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.flatten)(expected);\n    if (actualFlat.length !== expectedFlat.length) {\n        throw new Error(`Arrays have different lengths actual: ${actualFlat.length} vs ` +\n            `expected: ${expectedFlat.length}.\\n` +\n            `Actual:   ${actualFlat}.\\n` +\n            `Expected: ${expectedFlat}.`);\n    }\n    for (let i = 0; i < expectedFlat.length; ++i) {\n        const a = actualFlat[i];\n        const e = expectedFlat[i];\n        if (!predicate(a, e)) {\n            throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${e}.\\n` +\n                `Actual:   ${actualFlat}.\\n` +\n                `Expected: ${expectedFlat}.`);\n        }\n    }\n}\nfunction expectPromiseToFail(fn, done) {\n    fn().then(() => done.fail(), () => done());\n}\nfunction expectArraysEqual(actual, expected) {\n    const exp = typeof expected === 'string' || typeof expected === 'number' ||\n        typeof expected === 'boolean' ?\n        [expected] :\n        expected;\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_1__.isString)(actual) || (0,_util__WEBPACK_IMPORTED_MODULE_1__.isString)(actual[0]) ||\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.isString)(expected) || (0,_util__WEBPACK_IMPORTED_MODULE_1__.isString)(expected[0])) {\n        // tslint:disable-next-line: triple-equals\n        return expectArraysPredicate(actual, exp, (a, b) => a == b);\n    }\n    return expectArraysPredicate(actual, expected, (a, b) => areClose(a, b, 0));\n}\nfunction expectNumbersClose(a, e, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    if (!areClose(a, e, epsilon)) {\n        throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`);\n    }\n}\nfunction areClose(a, e, epsilon) {\n    if (!isFinite(a) && !isFinite(e)) {\n        return true;\n    }\n    if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n        return false;\n    }\n    return true;\n}\nfunction expectValuesInRange(actual, low, high) {\n    for (let i = 0; i < actual.length; i++) {\n        if (actual[i] < low || actual[i] > high) {\n            throw new Error(`Value out of range:${actual[i]} low: ${low}, high: ${high}`);\n        }\n    }\n}\nfunction expectArrayBuffersEqual(actual, expected) {\n    // Safari & Jasmine don't like comparing ArrayBuffers directly. Wrapping in\n    // a Float32Array solves this issue.\n    expect(new Float32Array(actual)).toEqual(new Float32Array(expected));\n}\n/** Encodes strings into utf-8 bytes. */\nfunction encodeStrings(a) {\n    for (let i = 0; i < a.length; i++) {\n        const val = a[i];\n        if (Array.isArray(val)) {\n            encodeStrings(val);\n        }\n        else {\n            a[i] = (0,_util__WEBPACK_IMPORTED_MODULE_3__.encodeString)(val);\n        }\n    }\n    return a;\n}\n//# sourceMappingURL=test_util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/test_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/train.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/train.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"train\": () => (/* binding */ train)\n/* harmony export */ });\n/* harmony import */ var _optimizers_adadelta_optimizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./optimizers/adadelta_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js\");\n/* harmony import */ var _optimizers_adagrad_optimizer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./optimizers/adagrad_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js\");\n/* harmony import */ var _optimizers_adam_optimizer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./optimizers/adam_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js\");\n/* harmony import */ var _optimizers_adamax_optimizer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./optimizers/adamax_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js\");\n/* harmony import */ var _optimizers_momentum_optimizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./optimizers/momentum_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js\");\n/* harmony import */ var _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./optimizers/optimizer_constructors */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js\");\n/* harmony import */ var _optimizers_rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./optimizers/rmsprop_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js\");\n/* harmony import */ var _optimizers_sgd_optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizers/sgd_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// So typings can propagate.\n\n\n\n\n\n\n\n\n// tslint:disable-next-line:no-unused-expression\n[_optimizers_momentum_optimizer__WEBPACK_IMPORTED_MODULE_0__.MomentumOptimizer, _optimizers_sgd_optimizer__WEBPACK_IMPORTED_MODULE_1__.SGDOptimizer, _optimizers_adadelta_optimizer__WEBPACK_IMPORTED_MODULE_2__.AdadeltaOptimizer, _optimizers_adagrad_optimizer__WEBPACK_IMPORTED_MODULE_3__.AdagradOptimizer,\n    _optimizers_rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_4__.RMSPropOptimizer, _optimizers_adamax_optimizer__WEBPACK_IMPORTED_MODULE_5__.AdamaxOptimizer, _optimizers_adam_optimizer__WEBPACK_IMPORTED_MODULE_6__.AdamOptimizer];\nconst train = {\n    sgd: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.sgd,\n    momentum: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.momentum,\n    adadelta: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.adadelta,\n    adagrad: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.adagrad,\n    rmsprop: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.rmsprop,\n    adamax: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.adamax,\n    adam: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.adam\n};\n//# sourceMappingURL=train.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/train.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/types.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/types.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Rank\": () => (/* binding */ Rank),\n/* harmony export */   \"upcastType\": () => (/* binding */ upcastType),\n/* harmony export */   \"sumOutType\": () => (/* binding */ sumOutType)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar Rank;\n(function (Rank) {\n    Rank[\"R0\"] = \"R0\";\n    Rank[\"R1\"] = \"R1\";\n    Rank[\"R2\"] = \"R2\";\n    Rank[\"R3\"] = \"R3\";\n    Rank[\"R4\"] = \"R4\";\n    Rank[\"R5\"] = \"R5\";\n    Rank[\"R6\"] = \"R6\";\n})(Rank || (Rank = {}));\n// Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n    UpcastInt32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n    UpcastBoolAndMap[\"complex64\"] = \"complex64\";\n})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n    UpcastFloat32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));\nvar UpcastComplex64AndMap;\n(function (UpcastComplex64AndMap) {\n    UpcastComplex64AndMap[\"float32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"int32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"bool\"] = \"complex64\";\n    UpcastComplex64AndMap[\"complex64\"] = \"complex64\";\n})(UpcastComplex64AndMap || (UpcastComplex64AndMap = {}));\nconst upcastTypeMap = {\n    'float32': UpcastFloat32AndMap,\n    'int32': UpcastInt32AndMap,\n    'bool': UpcastBoolAndMap,\n    'complex64': UpcastComplex64AndMap\n};\nfunction upcastType(typeA, typeB) {\n    if (typeA === 'string' || typeB === 'string') {\n        if (typeA === 'string' && typeB === 'string') {\n            return 'string';\n        }\n        throw new Error(`Can not upcast ${typeA} with ${typeB}`);\n    }\n    return upcastTypeMap[typeA][typeB];\n}\n/** Returns the output type after summation. */\nfunction sumOutType(type) {\n    return upcastType(type, 'int32');\n}\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/types.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/util.js":
/*!*********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/util.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"arraysEqual\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.arraysEqual),\n/* harmony export */   \"assert\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.assert),\n/* harmony export */   \"assertNonNegativeIntegerDimensions\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.assertNonNegativeIntegerDimensions),\n/* harmony export */   \"assertNonNull\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.assertNonNull),\n/* harmony export */   \"assertShapesMatch\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.assertShapesMatch),\n/* harmony export */   \"bytesFromStringArray\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.bytesFromStringArray),\n/* harmony export */   \"bytesPerElement\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.bytesPerElement),\n/* harmony export */   \"checkConversionForErrors\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.checkConversionForErrors),\n/* harmony export */   \"clamp\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.clamp),\n/* harmony export */   \"computeStrides\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.computeStrides),\n/* harmony export */   \"createShuffledIndices\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.createShuffledIndices),\n/* harmony export */   \"distSquared\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.distSquared),\n/* harmony export */   \"flatten\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.flatten),\n/* harmony export */   \"getArrayFromDType\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.getArrayFromDType),\n/* harmony export */   \"getTypedArrayFromDType\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.getTypedArrayFromDType),\n/* harmony export */   \"hasEncodingLoss\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.hasEncodingLoss),\n/* harmony export */   \"indexToLoc\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.indexToLoc),\n/* harmony export */   \"inferDtype\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.inferDtype),\n/* harmony export */   \"inferFromImplicitShape\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.inferFromImplicitShape),\n/* harmony export */   \"isBoolean\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isBoolean),\n/* harmony export */   \"isFunction\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isFunction),\n/* harmony export */   \"isInt\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isInt),\n/* harmony export */   \"isNumber\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isNumber),\n/* harmony export */   \"isPromise\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isPromise),\n/* harmony export */   \"isScalarShape\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isScalarShape),\n/* harmony export */   \"isString\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isString),\n/* harmony export */   \"isTypedArray\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isTypedArray),\n/* harmony export */   \"isValidDtype\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isValidDtype),\n/* harmony export */   \"locToIndex\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.locToIndex),\n/* harmony export */   \"makeOnesTypedArray\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.makeOnesTypedArray),\n/* harmony export */   \"makeZerosNestedTypedArray\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.makeZerosNestedTypedArray),\n/* harmony export */   \"makeZerosTypedArray\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.makeZerosTypedArray),\n/* harmony export */   \"nearestDivisor\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.nearestDivisor),\n/* harmony export */   \"nearestLargerEven\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.nearestLargerEven),\n/* harmony export */   \"parseAxisParam\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.parseAxisParam),\n/* harmony export */   \"randUniform\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.randUniform),\n/* harmony export */   \"repeatedTry\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.repeatedTry),\n/* harmony export */   \"rightPad\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.rightPad),\n/* harmony export */   \"shuffle\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.shuffle),\n/* harmony export */   \"shuffleCombo\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.shuffleCombo),\n/* harmony export */   \"sizeFromShape\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape),\n/* harmony export */   \"sizeToSquarishShape\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.sizeToSquarishShape),\n/* harmony export */   \"squeezeShape\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.squeezeShape),\n/* harmony export */   \"sum\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.sum),\n/* harmony export */   \"swap\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.swap),\n/* harmony export */   \"tanh\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.tanh),\n/* harmony export */   \"toNestedArray\": () => (/* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.toNestedArray),\n/* harmony export */   \"fingerPrint64\": () => (/* reexport safe */ _hash_util__WEBPACK_IMPORTED_MODULE_1__.fingerPrint64),\n/* harmony export */   \"hexToLong\": () => (/* reexport safe */ _hash_util__WEBPACK_IMPORTED_MODULE_1__.hexToLong),\n/* harmony export */   \"createScalarValue\": () => (/* binding */ createScalarValue),\n/* harmony export */   \"toTypedArray\": () => (/* binding */ toTypedArray),\n/* harmony export */   \"now\": () => (/* binding */ now),\n/* harmony export */   \"fetch\": () => (/* binding */ fetch),\n/* harmony export */   \"encodeString\": () => (/* binding */ encodeString),\n/* harmony export */   \"decodeString\": () => (/* binding */ decodeString)\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _util_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util_base */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _hash_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hash_util */ \"./node_modules/@tensorflow/tfjs-core/dist/hash_util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n\n/**\n * Create typed array for scalar value. Used for storing in `DataStorage`.\n */\nfunction createScalarValue(value, dtype) {\n    if (dtype === 'string') {\n        return encodeString(value);\n    }\n    return toTypedArray([value], dtype);\n}\nfunction noConversionNeeded(a, dtype) {\n    return (a instanceof Float32Array && dtype === 'float32') ||\n        (a instanceof Int32Array && dtype === 'int32') ||\n        (a instanceof Uint8Array && dtype === 'bool');\n}\nfunction toTypedArray(a, dtype) {\n    if (dtype === 'string') {\n        throw new Error('Cannot convert a string[] to a TypedArray');\n    }\n    if (Array.isArray(a)) {\n        a = _util_base__WEBPACK_IMPORTED_MODULE_0__.flatten(a);\n    }\n    if ((0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().getBool('DEBUG')) {\n        _util_base__WEBPACK_IMPORTED_MODULE_0__.checkConversionForErrors(a, dtype);\n    }\n    if (noConversionNeeded(a, dtype)) {\n        return a;\n    }\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(a);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(a);\n    }\n    else if (dtype === 'bool') {\n        const bool = new Uint8Array(a.length);\n        for (let i = 0; i < bool.length; ++i) {\n            if (Math.round(a[i]) !== 0) {\n                bool[i] = 1;\n            }\n        }\n        return bool;\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Returns the current high-resolution time in milliseconds relative to an\n * arbitrary time in the past. It works across different platforms (node.js,\n * browsers).\n *\n * ```js\n * console.log(tf.util.now());\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction now() {\n    return (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().platform.now();\n}\n/**\n * Returns a platform-specific implementation of\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n *\n * If `fetch` is defined on the global object (`window`, `process`, etc.),\n * `tf.util.fetch` returns that function.\n *\n * If not, `tf.util.fetch` returns a platform-specific solution.\n *\n * ```js\n * const resource = await tf.util.fetch('https://unpkg.com/@tensorflow/tfjs');\n * // handle response\n * ```\n *\n * @doc {heading: 'Util'}\n */\nfunction fetch(path, requestInits) {\n    return (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().platform.fetch(path, requestInits);\n}\n/**\n * Encodes the provided string into bytes using the provided encoding scheme.\n *\n * @param s The string to encode.\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nfunction encodeString(s, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().platform.encode(s, encoding);\n}\n/**\n * Decodes the provided bytes into a string using the provided encoding scheme.\n * @param bytes The bytes to decode.\n *\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nfunction decodeString(bytes, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().platform.decode(bytes, encoding);\n}\n//# sourceMappingURL=util.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/util_base.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/util_base.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"shuffle\": () => (/* binding */ shuffle),\n/* harmony export */   \"shuffleCombo\": () => (/* binding */ shuffleCombo),\n/* harmony export */   \"clamp\": () => (/* binding */ clamp),\n/* harmony export */   \"nearestLargerEven\": () => (/* binding */ nearestLargerEven),\n/* harmony export */   \"swap\": () => (/* binding */ swap),\n/* harmony export */   \"sum\": () => (/* binding */ sum),\n/* harmony export */   \"randUniform\": () => (/* binding */ randUniform),\n/* harmony export */   \"distSquared\": () => (/* binding */ distSquared),\n/* harmony export */   \"assert\": () => (/* binding */ assert),\n/* harmony export */   \"assertShapesMatch\": () => (/* binding */ assertShapesMatch),\n/* harmony export */   \"assertNonNull\": () => (/* binding */ assertNonNull),\n/* harmony export */   \"flatten\": () => (/* binding */ flatten),\n/* harmony export */   \"sizeFromShape\": () => (/* binding */ sizeFromShape),\n/* harmony export */   \"isScalarShape\": () => (/* binding */ isScalarShape),\n/* harmony export */   \"arraysEqual\": () => (/* binding */ arraysEqual),\n/* harmony export */   \"isInt\": () => (/* binding */ isInt),\n/* harmony export */   \"tanh\": () => (/* binding */ tanh),\n/* harmony export */   \"sizeToSquarishShape\": () => (/* binding */ sizeToSquarishShape),\n/* harmony export */   \"createShuffledIndices\": () => (/* binding */ createShuffledIndices),\n/* harmony export */   \"rightPad\": () => (/* binding */ rightPad),\n/* harmony export */   \"repeatedTry\": () => (/* binding */ repeatedTry),\n/* harmony export */   \"inferFromImplicitShape\": () => (/* binding */ inferFromImplicitShape),\n/* harmony export */   \"parseAxisParam\": () => (/* binding */ parseAxisParam),\n/* harmony export */   \"squeezeShape\": () => (/* binding */ squeezeShape),\n/* harmony export */   \"getTypedArrayFromDType\": () => (/* binding */ getTypedArrayFromDType),\n/* harmony export */   \"getArrayFromDType\": () => (/* binding */ getArrayFromDType),\n/* harmony export */   \"checkConversionForErrors\": () => (/* binding */ checkConversionForErrors),\n/* harmony export */   \"isValidDtype\": () => (/* binding */ isValidDtype),\n/* harmony export */   \"hasEncodingLoss\": () => (/* binding */ hasEncodingLoss),\n/* harmony export */   \"isTypedArray\": () => (/* binding */ isTypedArray),\n/* harmony export */   \"bytesPerElement\": () => (/* binding */ bytesPerElement),\n/* harmony export */   \"bytesFromStringArray\": () => (/* binding */ bytesFromStringArray),\n/* harmony export */   \"isString\": () => (/* binding */ isString),\n/* harmony export */   \"isBoolean\": () => (/* binding */ isBoolean),\n/* harmony export */   \"isNumber\": () => (/* binding */ isNumber),\n/* harmony export */   \"inferDtype\": () => (/* binding */ inferDtype),\n/* harmony export */   \"isFunction\": () => (/* binding */ isFunction),\n/* harmony export */   \"nearestDivisor\": () => (/* binding */ nearestDivisor),\n/* harmony export */   \"computeStrides\": () => (/* binding */ computeStrides),\n/* harmony export */   \"toNestedArray\": () => (/* binding */ toNestedArray),\n/* harmony export */   \"makeOnesTypedArray\": () => (/* binding */ makeOnesTypedArray),\n/* harmony export */   \"makeZerosTypedArray\": () => (/* binding */ makeZerosTypedArray),\n/* harmony export */   \"makeZerosNestedTypedArray\": () => (/* binding */ makeZerosNestedTypedArray),\n/* harmony export */   \"assertNonNegativeIntegerDimensions\": () => (/* binding */ assertNonNegativeIntegerDimensions),\n/* harmony export */   \"locToIndex\": () => (/* binding */ locToIndex),\n/* harmony export */   \"indexToLoc\": () => (/* binding */ indexToLoc),\n/* harmony export */   \"isPromise\": () => (/* binding */ isPromise)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Shuffles the array in-place using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1, 2, 3, 4, 5];\n * tf.util.shuffle(a);\n * console.log(a);\n * ```\n *\n * @param array The array to shuffle in-place.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n// tslint:disable-next-line:no-any\nfunction shuffle(array) {\n    let counter = array.length;\n    let index = 0;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        index = (Math.random() * counter) | 0;\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        swap(array, counter, index);\n    }\n}\n/**\n * Shuffles two arrays in-place the same way using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1,2,3,4,5];\n * const b = [11,22,33,44,55];\n * tf.util.shuffleCombo(a, b);\n * console.log(a, b);\n * ```\n *\n * @param array The first array to shuffle in-place.\n * @param array2 The second array to shuffle in-place with the same permutation\n *     as the first array.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction shuffleCombo(\n// tslint:disable-next-line:no-any\narray, \n// tslint:disable-next-line:no-any\narray2) {\n    if (array.length !== array2.length) {\n        throw new Error(`Array sizes must match to be shuffled together ` +\n            `First array length was ${array.length}` +\n            `Second array length was ${array2.length}`);\n    }\n    let counter = array.length;\n    let index = 0;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        index = (Math.random() * counter) | 0;\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element of each array with it\n        swap(array, counter, index);\n        swap(array2, counter, index);\n    }\n}\n/** Clamps a value to a specified range. */\nfunction clamp(min, x, max) {\n    return Math.max(min, Math.min(x, max));\n}\nfunction nearestLargerEven(val) {\n    return val % 2 === 0 ? val : val + 1;\n}\nfunction swap(object, left, right) {\n    const temp = object[left];\n    object[left] = object[right];\n    object[right] = temp;\n}\nfunction sum(arr) {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n    }\n    return sum;\n}\n/**\n * Returns a sample from a uniform [a, b) distribution.\n *\n * @param a The minimum support (inclusive).\n * @param b The maximum support (exclusive).\n * @return A pseudorandom number on the half-open interval [a,b).\n */\nfunction randUniform(a, b) {\n    const r = Math.random();\n    return (b * r) + (1 - r) * a;\n}\n/** Returns the squared Euclidean distance between two vectors. */\nfunction distSquared(a, b) {\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        const diff = Number(a[i]) - Number(b[i]);\n        result += diff * diff;\n    }\n    return result;\n}\n/**\n * Asserts that the expression is true. Otherwise throws an error with the\n * provided message.\n *\n * ```js\n * const x = 2;\n * tf.util.assert(x === 2, 'x is not 2');\n * ```\n *\n * @param expr The expression to assert (as a boolean).\n * @param msg A function that returns the message to report when throwing an\n *     error. We use a function for performance reasons.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction assert(expr, msg) {\n    if (!expr) {\n        throw new Error(typeof msg === 'string' ? msg : msg());\n    }\n}\nfunction assertShapesMatch(shapeA, shapeB, errorMessagePrefix = '') {\n    assert(arraysEqual(shapeA, shapeB), () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\nfunction assertNonNull(a) {\n    assert(a != null, () => `The input to the tensor constructor must be a non-null value.`);\n}\n// NOTE: We explicitly type out what T extends instead of any so that\n// util.flatten on a nested array of number doesn't try to infer T as a\n// number[][], causing us to explicitly type util.flatten<number>().\n/**\n *  Flattens an arbitrarily nested array.\n *\n * ```js\n * const a = [[1, 2], [3, 4], [5, [6, [7]]]];\n * const flat = tf.util.flatten(a);\n * console.log(flat);\n * ```\n *\n *  @param arr The nested array to flatten.\n *  @param result The destination array which holds the elements.\n *  @param skipTypedArray If true, avoids flattening the typed arrays. Defaults\n *      to false.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction flatten(arr, result = [], skipTypedArray = false) {\n    if (result == null) {\n        result = [];\n    }\n    if (Array.isArray(arr) || isTypedArray(arr) && !skipTypedArray) {\n        for (let i = 0; i < arr.length; ++i) {\n            flatten(arr[i], result, skipTypedArray);\n        }\n    }\n    else {\n        result.push(arr);\n    }\n    return result;\n}\n/**\n * Returns the size (number of elements) of the tensor given its shape.\n *\n * ```js\n * const shape = [3, 4, 2];\n * const size = tf.util.sizeFromShape(shape);\n * console.log(size);\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction sizeFromShape(shape) {\n    if (shape.length === 0) {\n        // Scalar.\n        return 1;\n    }\n    let size = shape[0];\n    for (let i = 1; i < shape.length; i++) {\n        size *= shape[i];\n    }\n    return size;\n}\nfunction isScalarShape(shape) {\n    return shape.length === 0;\n}\nfunction arraysEqual(n1, n2) {\n    if (n1 === n2) {\n        return true;\n    }\n    if (n1 == null || n2 == null) {\n        return false;\n    }\n    if (n1.length !== n2.length) {\n        return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n        if (n1[i] !== n2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isInt(a) {\n    return a % 1 === 0;\n}\nfunction tanh(x) {\n    // tslint:disable-next-line:no-any\n    if (Math.tanh != null) {\n        // tslint:disable-next-line:no-any\n        return Math.tanh(x);\n    }\n    if (x === Infinity) {\n        return 1;\n    }\n    else if (x === -Infinity) {\n        return -1;\n    }\n    else {\n        const e2x = Math.exp(2 * x);\n        return (e2x - 1) / (e2x + 1);\n    }\n}\nfunction sizeToSquarishShape(size) {\n    const width = Math.ceil(Math.sqrt(size));\n    return [width, Math.ceil(size / width)];\n}\n/**\n * Creates a new array with randomized indicies to a given quantity.\n *\n * ```js\n * const randomTen = tf.util.createShuffledIndices(10);\n * console.log(randomTen);\n * ```\n *\n * @param number Quantity of how many shuffled indicies to create.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction createShuffledIndices(n) {\n    const shuffledIndices = new Uint32Array(n);\n    for (let i = 0; i < n; ++i) {\n        shuffledIndices[i] = i;\n    }\n    shuffle(shuffledIndices);\n    return shuffledIndices;\n}\nfunction rightPad(a, size) {\n    if (size <= a.length) {\n        return a;\n    }\n    return a + ' '.repeat(size - a.length);\n}\nfunction repeatedTry(checkFn, delayFn = (counter) => 0, maxCounter) {\n    return new Promise((resolve, reject) => {\n        let tryCount = 0;\n        const tryFn = () => {\n            if (checkFn()) {\n                resolve();\n                return;\n            }\n            tryCount++;\n            const nextBackoff = delayFn(tryCount);\n            if (maxCounter != null && tryCount >= maxCounter) {\n                reject();\n                return;\n            }\n            setTimeout(tryFn, nextBackoff);\n        };\n        tryFn();\n    });\n}\n/**\n * Given the full size of the array and a shape that may contain -1 as the\n * implicit dimension, returns the inferred shape where -1 is replaced.\n * E.g. For shape=[2, -1, 3] and size=24, it will return [2, 4, 3].\n *\n * @param shape The shape, which may contain -1 in some dimension.\n * @param size The full size (number of elements) of the array.\n * @return The inferred shape where -1 is replaced with the inferred size.\n */\nfunction inferFromImplicitShape(shape, size) {\n    let shapeProd = 1;\n    let implicitIdx = -1;\n    for (let i = 0; i < shape.length; ++i) {\n        if (shape[i] >= 0) {\n            shapeProd *= shape[i];\n        }\n        else if (shape[i] === -1) {\n            if (implicitIdx !== -1) {\n                throw Error(`Shapes can only have 1 implicit size. ` +\n                    `Found -1 at dim ${implicitIdx} and dim ${i}`);\n            }\n            implicitIdx = i;\n        }\n        else if (shape[i] < 0) {\n            throw Error(`Shapes can not be < 0. Found ${shape[i]} at dim ${i}`);\n        }\n    }\n    if (implicitIdx === -1) {\n        if (size > 0 && size !== shapeProd) {\n            throw Error(`Size(${size}) must match the product of shape ${shape}`);\n        }\n        return shape;\n    }\n    if (shapeProd === 0) {\n        throw Error(`Cannot infer the missing size in [${shape}] when ` +\n            `there are 0 elements`);\n    }\n    if (size % shapeProd !== 0) {\n        throw Error(`The implicit shape can't be a fractional number. ` +\n            `Got ${size} / ${shapeProd}`);\n    }\n    const newShape = shape.slice();\n    newShape[implicitIdx] = size / shapeProd;\n    return newShape;\n}\nfunction parseAxisParam(axis, shape) {\n    const rank = shape.length;\n    // Normalize input\n    axis = axis == null ? shape.map((s, i) => i) : [].concat(axis);\n    // Check for valid range\n    assert(axis.every(ax => ax >= -rank && ax < rank), () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n        `got axis ${axis}`);\n    // Check for only integers\n    assert(axis.every(ax => isInt(ax)), () => `All values in axis param must be integers but ` +\n        `got axis ${axis}`);\n    // Handle negative axis.\n    return axis.map(a => a < 0 ? rank + a : a);\n}\n/** Reduces the shape by removing all dimensions of shape 1. */\nfunction squeezeShape(shape, axis) {\n    const newShape = [];\n    const keptDims = [];\n    const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n    const axes = (axis == null || isEmptyArray) ?\n        null :\n        parseAxisParam(axis, shape).sort();\n    let j = 0;\n    for (let i = 0; i < shape.length; ++i) {\n        if (axes != null) {\n            if (axes[j] === i && shape[i] !== 1) {\n                throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n            }\n            if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n                newShape.push(shape[i]);\n                keptDims.push(i);\n            }\n            if (axes[j] <= i) {\n                j++;\n            }\n        }\n        if (shape[i] !== 1) {\n            newShape.push(shape[i]);\n            keptDims.push(i);\n        }\n    }\n    return { newShape, keptDims };\n}\nfunction getTypedArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nfunction getArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else if (dtype === 'string') {\n        values = new Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nfunction checkConversionForErrors(vals, dtype) {\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            throw Error(`A tensor of type ${dtype} being uploaded contains ${num}.`);\n        }\n    }\n}\n/** Returns true if the dtype is valid. */\nfunction isValidDtype(dtype) {\n    return dtype === 'bool' || dtype === 'complex64' || dtype === 'float32' ||\n        dtype === 'int32' || dtype === 'string';\n}\n/**\n * Returns true if the new type can't encode the old type without loss of\n * precision.\n */\nfunction hasEncodingLoss(oldType, newType) {\n    if (newType === 'complex64') {\n        return false;\n    }\n    if (newType === 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'int32' && oldType !== 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'bool' && oldType === 'bool') {\n        return false;\n    }\n    return true;\n}\nfunction isTypedArray(a) {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n        a instanceof Uint8Array;\n}\nfunction bytesPerElement(dtype) {\n    if (dtype === 'float32' || dtype === 'int32') {\n        return 4;\n    }\n    else if (dtype === 'complex64') {\n        return 8;\n    }\n    else if (dtype === 'bool') {\n        return 1;\n    }\n    else {\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\n/**\n * Returns the approximate number of bytes allocated in the string array - 2\n * bytes per character. Computing the exact bytes for a native string in JS is\n * not possible since it depends on the encoding of the html page that serves\n * the website.\n */\nfunction bytesFromStringArray(arr) {\n    if (arr == null) {\n        return 0;\n    }\n    let bytes = 0;\n    arr.forEach(x => bytes += x.length);\n    return bytes;\n}\n/** Returns true if the value is a string. */\nfunction isString(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\nfunction inferDtype(values) {\n    if (Array.isArray(values)) {\n        return inferDtype(values[0]);\n    }\n    if (values instanceof Float32Array) {\n        return 'float32';\n    }\n    else if (values instanceof Int32Array || values instanceof Uint8Array) {\n        return 'int32';\n    }\n    else if (isNumber(values)) {\n        return 'float32';\n    }\n    else if (isString(values)) {\n        return 'string';\n    }\n    else if (isBoolean(values)) {\n        return 'bool';\n    }\n    return 'float32';\n}\nfunction isFunction(f) {\n    return !!(f && f.constructor && f.call && f.apply);\n}\nfunction nearestDivisor(size, start) {\n    for (let i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\nfunction computeStrides(shape) {\n    const rank = shape.length;\n    if (rank < 2) {\n        return [];\n    }\n    // Last dimension has implicit stride of 1, thus having D-1 (instead of D)\n    // strides.\n    const strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n        strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    return strides;\n}\nfunction createNestedArray(offset, shape, a, isComplex = false) {\n    const ret = new Array();\n    if (shape.length === 1) {\n        const d = shape[0] * (isComplex ? 2 : 1);\n        for (let i = 0; i < d; i++) {\n            ret[i] = a[offset + i];\n        }\n    }\n    else {\n        const d = shape[0];\n        const rest = shape.slice(1);\n        const len = rest.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);\n        for (let i = 0; i < d; i++) {\n            ret[i] = createNestedArray(offset + i * len, rest, a, isComplex);\n        }\n    }\n    return ret;\n}\n// Provide a nested array of TypedArray in given shape.\nfunction toNestedArray(shape, a, isComplex = false) {\n    if (shape.length === 0) {\n        // Scalar type should return a single number.\n        return a[0];\n    }\n    const size = shape.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);\n    if (size === 0) {\n        // A tensor with shape zero should be turned into empty list.\n        return [];\n    }\n    if (size !== a.length) {\n        throw new Error(`[${shape}] does not match the input size ${a.length}${isComplex ? ' for a complex tensor' : ''}.`);\n    }\n    return createNestedArray(0, shape, a, isComplex);\n}\nfunction makeOnesTypedArray(size, dtype) {\n    const array = makeZerosTypedArray(size, dtype);\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 1;\n    }\n    return array;\n}\nfunction makeZerosTypedArray(size, dtype) {\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        return new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Make nested `TypedArray` filled with zeros.\n * @param shape The shape information for the nested array.\n * @param dtype dtype of the array element.\n */\nfunction makeZerosNestedTypedArray(shape, dtype) {\n    const size = shape.reduce((prev, curr) => prev * curr, 1);\n    if (dtype == null || dtype === 'float32') {\n        return toNestedArray(shape, new Float32Array(size));\n    }\n    else if (dtype === 'int32') {\n        return toNestedArray(shape, new Int32Array(size));\n    }\n    else if (dtype === 'bool') {\n        return toNestedArray(shape, new Uint8Array(size));\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\nfunction assertNonNegativeIntegerDimensions(shape) {\n    shape.forEach(dimSize => {\n        assert(Number.isInteger(dimSize) && dimSize >= 0, () => `Tensor must have a shape comprised of positive integers but got ` +\n            `shape [${shape}].`);\n    });\n}\n/**\n * Computes flat index for a given location (multidimentionsal index) in a\n * Tensor/multidimensional array.\n *\n * @param locs Location in the tensor.\n * @param rank Rank of the tensor.\n * @param strides Tensor strides.\n */\nfunction locToIndex(locs, rank, strides) {\n    if (rank === 0) {\n        return 0;\n    }\n    else if (rank === 1) {\n        return locs[0];\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n        index += strides[i] * locs[i];\n    }\n    return index;\n}\n/**\n * Computes the location (multidimensional index) in a tensor/multidimentional\n * array for a given flat index.\n *\n * @param index Index in flat array.\n * @param rank Rank of tensor.\n * @param strides Strides of tensor.\n */\nfunction indexToLoc(index, rank, strides) {\n    if (rank === 0) {\n        return [];\n    }\n    else if (rank === 1) {\n        return [index];\n    }\n    const locs = new Array(rank);\n    for (let i = 0; i < locs.length - 1; ++i) {\n        locs[i] = Math.floor(index / strides[i]);\n        index -= locs[i] * strides[i];\n    }\n    locs[locs.length - 1] = index;\n    return locs;\n}\n/**\n * This method asserts whether an object is a Promise instance.\n * @param object\n */\n// tslint:disable-next-line: no-any\nfunction isPromise(object) {\n    //  We chose to not use 'obj instanceOf Promise' for two reasons:\n    //  1. It only reliably works for es6 Promise, not other Promise\n    //  implementations.\n    //  2. It doesn't work with framework that uses zone.js. zone.js monkey patch\n    //  the async calls, so it is possible the obj (patched) is comparing to a\n    //  pre-patched Promise.\n    return object && object.then && typeof object.then === 'function';\n}\n//# sourceMappingURL=util_base.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/util_base.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/version.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/version.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\n/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nconst version = '3.8.0';\n\n//# sourceMappingURL=version.js.map\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/dist/version.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/index.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = __webpack_require__(/*! ./lib/alea */ \"./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/alea.js\");\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = __webpack_require__(/*! ./lib/xor128 */ \"./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xor128.js\");\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = __webpack_require__(/*! ./lib/xorwow */ \"./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xorwow.js\");\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ \"./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xorshift7.js\");\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = __webpack_require__(/*! ./lib/xor4096 */ \"./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xor4096.js\");\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = __webpack_require__(/*! ./lib/tychei */ \"./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/tychei.js\");\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = __webpack_require__(/*! ./seedrandom */ \"./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/seedrandom.js\");\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/index.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/alea.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/alea.js ***!
  \********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/alea.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/tychei.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/tychei.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/tychei.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xor128.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xor128.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xor128.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xor4096.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xor4096.js ***!
  \***********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xor4096.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xorshift7.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xorshift7.js ***!
  \*************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xorshift7.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xorwow.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xorwow.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/lib/xorwow.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/seedrandom.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/seedrandom.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ( true && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = __webpack_require__(/*! crypto */ \"crypto\");\n  } catch (ex) {}\n} else if (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return seedrandom; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/@tensorflow/tfjs-core/node_modules/seedrandom/seedrandom.js?");

/***/ }),

/***/ "./node_modules/at-least-node/index.js":
/*!*********************************************!*\
  !*** ./node_modules/at-least-node/index.js ***!
  \*********************************************/
/***/ ((module) => {

eval("module.exports = r => {\n  const n = process.versions.node.split('.').map(x => parseInt(x, 10))\n  r = r.split('.').map(x => parseInt(x, 10))\n  return n[0] > r[0] || (n[0] === r[0] && (n[1] > r[1] || (n[1] === r[1] && n[2] >= r[2])))\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/at-least-node/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/copy-sync/copy-sync.js":
/*!**********************************************************!*\
  !*** ./node_modules/fs-extra/lib/copy-sync/copy-sync.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst mkdirsSync = __webpack_require__(/*! ../mkdirs */ \"./node_modules/fs-extra/lib/mkdirs/index.js\").mkdirsSync\nconst utimesMillisSync = __webpack_require__(/*! ../util/utimes */ \"./node_modules/fs-extra/lib/util/utimes.js\").utimesMillisSync\nconst stat = __webpack_require__(/*! ../util/stat */ \"./node_modules/fs-extra/lib/util/stat.js\")\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy')\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy')\n  return handleFilterAndCopy(destStat, src, dest, opts)\n}\n\nfunction handleFilterAndCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirsSync(destParent)\n  return startCopy(destStat, src, dest, opts)\n}\n\nfunction startCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  fs.copyFileSync(src, dest)\n  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest)\n  return setDestMode(dest, srcStat.mode)\n}\n\nfunction handleTimestamps (srcMode, src, dest) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode)\n  return setDestTimestamps(src, dest)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode) {\n  return setDestMode(dest, srcMode | 0o200)\n}\n\nfunction setDestMode (dest, srcMode) {\n  return fs.chmodSync(dest, srcMode)\n}\n\nfunction setDestTimestamps (src, dest) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  const updatedSrcStat = fs.statSync(src)\n  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts)\n  if (destStat && !destStat.isDirectory()) {\n    throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n  }\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return setDestMode(dest, srcMode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy')\n  return startCopy(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (fs.statSync(dest).isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\nmodule.exports = copySync\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/copy-sync/copy-sync.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/copy-sync/index.js":
/*!******************************************************!*\
  !*** ./node_modules/fs-extra/lib/copy-sync/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nmodule.exports = {\n  copySync: __webpack_require__(/*! ./copy-sync */ \"./node_modules/fs-extra/lib/copy-sync/copy-sync.js\")\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/copy-sync/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/copy/copy.js":
/*!************************************************!*\
  !*** ./node_modules/fs-extra/lib/copy/copy.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst mkdirs = __webpack_require__(/*! ../mkdirs */ \"./node_modules/fs-extra/lib/mkdirs/index.js\").mkdirs\nconst pathExists = __webpack_require__(/*! ../path-exists */ \"./node_modules/fs-extra/lib/path-exists/index.js\").pathExists\nconst utimesMillis = __webpack_require__(/*! ../util/utimes */ \"./node_modules/fs-extra/lib/util/utimes.js\").utimesMillis\nconst stat = __webpack_require__(/*! ../util/stat */ \"./node_modules/fs-extra/lib/util/stat.js\")\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  stat.checkPaths(src, dest, 'copy', (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {\n      if (err) return cb(err)\n      if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)\n      return checkParentDir(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb)\n    mkdirs(destParent, err => {\n      if (err) return cb(err)\n      return startCopy(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction handleFilter (onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) return onInclude(destStat, src, dest, opts, cb)\n    return cb()\n  }, error => cb(error))\n}\n\nfunction startCopy (destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)\n  return getStats(destStat, src, dest, opts, cb)\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  fs.copyFile(src, dest, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) return handleTimestampsAndMode(srcStat.mode, src, dest, cb)\n    return setDestMode(dest, srcStat.mode, cb)\n  })\n}\n\nfunction handleTimestampsAndMode (srcMode, src, dest, cb) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) {\n    return makeFileWritable(dest, srcMode, err => {\n      if (err) return cb(err)\n      return setDestTimestampsAndMode(srcMode, src, dest, cb)\n    })\n  }\n  return setDestTimestampsAndMode(srcMode, src, dest, cb)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode, cb) {\n  return setDestMode(dest, srcMode | 0o200, cb)\n}\n\nfunction setDestTimestampsAndMode (srcMode, src, dest, cb) {\n  setDestTimestamps(src, dest, err => {\n    if (err) return cb(err)\n    return setDestMode(dest, srcMode, cb)\n  })\n}\n\nfunction setDestMode (dest, srcMode, cb) {\n  return fs.chmod(dest, srcMode, cb)\n}\n\nfunction setDestTimestamps (src, dest, cb) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  fs.stat(src, (err, updatedSrcStat) => {\n    if (err) return cb(err)\n    return utimesMillis(dest, updatedSrcStat.atime, updatedSrcStat.mtime, cb)\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts, cb)\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n  }\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return setDestMode(dest, srcMode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  stat.checkPaths(srcItem, destItem, 'copy', (err, stats) => {\n    if (err) return cb(err)\n    const { destStat } = stats\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err)\n      return copyDirItems(items, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (!destStat) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\nmodule.exports = copy\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/copy/copy.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/copy/index.js":
/*!*************************************************!*\
  !*** ./node_modules/fs-extra/lib/copy/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromCallback\nmodule.exports = {\n  copy: u(__webpack_require__(/*! ./copy */ \"./node_modules/fs-extra/lib/copy/copy.js\"))\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/copy/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/empty/index.js":
/*!**************************************************!*\
  !*** ./node_modules/fs-extra/lib/empty/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromCallback\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst mkdir = __webpack_require__(/*! ../mkdirs */ \"./node_modules/fs-extra/lib/mkdirs/index.js\")\nconst remove = __webpack_require__(/*! ../remove */ \"./node_modules/fs-extra/lib/remove/index.js\")\n\nconst emptyDir = u(function emptyDir (dir, callback) {\n  callback = callback || function () {}\n  fs.readdir(dir, (err, items) => {\n    if (err) return mkdir.mkdirs(dir, callback)\n\n    items = items.map(item => path.join(dir, item))\n\n    deleteItem()\n\n    function deleteItem () {\n      const item = items.pop()\n      if (!item) return callback()\n      remove.remove(item, err => {\n        if (err) return callback(err)\n        deleteItem()\n      })\n    }\n  })\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/empty/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/ensure/file.js":
/*!**************************************************!*\
  !*** ./node_modules/fs-extra/lib/ensure/file.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromCallback\nconst path = __webpack_require__(/*! path */ \"path\")\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst mkdir = __webpack_require__(/*! ../mkdirs */ \"./node_modules/fs-extra/lib/mkdirs/index.js\")\n\nfunction createFile (file, callback) {\n  function makeFile () {\n    fs.writeFile(file, '', err => {\n      if (err) return callback(err)\n      callback()\n    })\n  }\n\n  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback()\n    const dir = path.dirname(file)\n    fs.stat(dir, (err, stats) => {\n      if (err) {\n        // if the directory doesn't exist, make it\n        if (err.code === 'ENOENT') {\n          return mkdir.mkdirs(dir, err => {\n            if (err) return callback(err)\n            makeFile()\n          })\n        }\n        return callback(err)\n      }\n\n      if (stats.isDirectory()) makeFile()\n      else {\n        // parent is not a directory\n        // This is just to cause an internal ENOTDIR error to be thrown\n        fs.readdir(dir, err => {\n          if (err) return callback(err)\n        })\n      }\n    })\n  })\n}\n\nfunction createFileSync (file) {\n  let stats\n  try {\n    stats = fs.statSync(file)\n  } catch {}\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n  try {\n    if (!fs.statSync(dir).isDirectory()) {\n      // parent is not a directory\n      // This is just to cause an internal ENOTDIR error to be thrown\n      fs.readdirSync(dir)\n    }\n  } catch (err) {\n    // If the stat call above failed because the directory doesn't exist, create it\n    if (err && err.code === 'ENOENT') mkdir.mkdirsSync(dir)\n    else throw err\n  }\n\n  fs.writeFileSync(file, '')\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/ensure/file.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/ensure/index.js":
/*!***************************************************!*\
  !*** ./node_modules/fs-extra/lib/ensure/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst file = __webpack_require__(/*! ./file */ \"./node_modules/fs-extra/lib/ensure/file.js\")\nconst link = __webpack_require__(/*! ./link */ \"./node_modules/fs-extra/lib/ensure/link.js\")\nconst symlink = __webpack_require__(/*! ./symlink */ \"./node_modules/fs-extra/lib/ensure/symlink.js\")\n\nmodule.exports = {\n  // file\n  createFile: file.createFile,\n  createFileSync: file.createFileSync,\n  ensureFile: file.createFile,\n  ensureFileSync: file.createFileSync,\n  // link\n  createLink: link.createLink,\n  createLinkSync: link.createLinkSync,\n  ensureLink: link.createLink,\n  ensureLinkSync: link.createLinkSync,\n  // symlink\n  createSymlink: symlink.createSymlink,\n  createSymlinkSync: symlink.createSymlinkSync,\n  ensureSymlink: symlink.createSymlink,\n  ensureSymlinkSync: symlink.createSymlinkSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/ensure/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/ensure/link.js":
/*!**************************************************!*\
  !*** ./node_modules/fs-extra/lib/ensure/link.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromCallback\nconst path = __webpack_require__(/*! path */ \"path\")\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst mkdir = __webpack_require__(/*! ../mkdirs */ \"./node_modules/fs-extra/lib/mkdirs/index.js\")\nconst pathExists = __webpack_require__(/*! ../path-exists */ \"./node_modules/fs-extra/lib/path-exists/index.js\").pathExists\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  try {\n    fs.lstatSync(srcpath)\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/ensure/link.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/ensure/symlink-paths.js":
/*!***********************************************************!*\
  !*** ./node_modules/fs-extra/lib/ensure/symlink-paths.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst path = __webpack_require__(/*! path */ \"path\")\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst pathExists = __webpack_require__(/*! ../path-exists */ \"./node_modules/fs-extra/lib/path-exists/index.js\").pathExists\n\n/**\n * Function that returns two types of paths, one relative to symlink, and one\n * relative to the current working directory. Checks if path is absolute or\n * relative. If the path is relative, this function checks if the path is\n * relative to symlink or relative to current working directory. This is an\n * initiative to find a smarter `srcpath` to supply when building symlinks.\n * This allows you to determine which path to use out of one of three possible\n * types of source paths. The first is an absolute path. This is detected by\n * `path.isAbsolute()`. When an absolute path is provided, it is checked to\n * see if it exists. If it does it's used, if not an error is returned\n * (callback)/ thrown (sync). The other two options for `srcpath` are a\n * relative url. By default Node's `fs.symlink` works by creating a symlink\n * using `dstpath` and expects the `srcpath` to be relative to the newly\n * created symlink. If you provide a `srcpath` that does not exist on the file\n * system it results in a broken symlink. To minimize this, the function\n * checks to see if the 'relative to symlink' source file exists, and if it\n * does it will use it. If it does not, it checks if there's a file that\n * exists that is relative to the current working directory, if does its used.\n * This preserves the expectations of the original fs.symlink spec and adds\n * the ability to pass in `relative to current working direcotry` paths.\n */\n\nfunction symlinkPaths (srcpath, dstpath, callback) {\n  if (path.isAbsolute(srcpath)) {\n    return fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureSymlink')\n        return callback(err)\n      }\n      return callback(null, {\n        toCwd: srcpath,\n        toDst: srcpath\n      })\n    })\n  } else {\n    const dstdir = path.dirname(dstpath)\n    const relativeToDst = path.join(dstdir, srcpath)\n    return pathExists(relativeToDst, (err, exists) => {\n      if (err) return callback(err)\n      if (exists) {\n        return callback(null, {\n          toCwd: relativeToDst,\n          toDst: srcpath\n        })\n      } else {\n        return fs.lstat(srcpath, (err) => {\n          if (err) {\n            err.message = err.message.replace('lstat', 'ensureSymlink')\n            return callback(err)\n          }\n          return callback(null, {\n            toCwd: srcpath,\n            toDst: path.relative(dstdir, srcpath)\n          })\n        })\n      }\n    })\n  }\n}\n\nfunction symlinkPathsSync (srcpath, dstpath) {\n  let exists\n  if (path.isAbsolute(srcpath)) {\n    exists = fs.existsSync(srcpath)\n    if (!exists) throw new Error('absolute srcpath does not exist')\n    return {\n      toCwd: srcpath,\n      toDst: srcpath\n    }\n  } else {\n    const dstdir = path.dirname(dstpath)\n    const relativeToDst = path.join(dstdir, srcpath)\n    exists = fs.existsSync(relativeToDst)\n    if (exists) {\n      return {\n        toCwd: relativeToDst,\n        toDst: srcpath\n      }\n    } else {\n      exists = fs.existsSync(srcpath)\n      if (!exists) throw new Error('relative srcpath does not exist')\n      return {\n        toCwd: srcpath,\n        toDst: path.relative(dstdir, srcpath)\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  symlinkPaths,\n  symlinkPathsSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/ensure/symlink-paths.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/ensure/symlink-type.js":
/*!**********************************************************!*\
  !*** ./node_modules/fs-extra/lib/ensure/symlink-type.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\n\nfunction symlinkType (srcpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n  if (type) return callback(null, type)\n  fs.lstat(srcpath, (err, stats) => {\n    if (err) return callback(null, 'file')\n    type = (stats && stats.isDirectory()) ? 'dir' : 'file'\n    callback(null, type)\n  })\n}\n\nfunction symlinkTypeSync (srcpath, type) {\n  let stats\n\n  if (type) return type\n  try {\n    stats = fs.lstatSync(srcpath)\n  } catch {\n    return 'file'\n  }\n  return (stats && stats.isDirectory()) ? 'dir' : 'file'\n}\n\nmodule.exports = {\n  symlinkType,\n  symlinkTypeSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/ensure/symlink-type.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/ensure/symlink.js":
/*!*****************************************************!*\
  !*** ./node_modules/fs-extra/lib/ensure/symlink.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromCallback\nconst path = __webpack_require__(/*! path */ \"path\")\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst _mkdirs = __webpack_require__(/*! ../mkdirs */ \"./node_modules/fs-extra/lib/mkdirs/index.js\")\nconst mkdirs = _mkdirs.mkdirs\nconst mkdirsSync = _mkdirs.mkdirsSync\n\nconst _symlinkPaths = __webpack_require__(/*! ./symlink-paths */ \"./node_modules/fs-extra/lib/ensure/symlink-paths.js\")\nconst symlinkPaths = _symlinkPaths.symlinkPaths\nconst symlinkPathsSync = _symlinkPaths.symlinkPathsSync\n\nconst _symlinkType = __webpack_require__(/*! ./symlink-type */ \"./node_modules/fs-extra/lib/ensure/symlink-type.js\")\nconst symlinkType = _symlinkType.symlinkType\nconst symlinkTypeSync = _symlinkType.symlinkTypeSync\n\nconst pathExists = __webpack_require__(/*! ../path-exists */ \"./node_modules/fs-extra/lib/path-exists/index.js\").pathExists\n\nfunction createSymlink (srcpath, dstpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    symlinkPaths(srcpath, dstpath, (err, relative) => {\n      if (err) return callback(err)\n      srcpath = relative.toDst\n      symlinkType(relative.toCwd, type, (err, type) => {\n        if (err) return callback(err)\n        const dir = path.dirname(dstpath)\n        pathExists(dir, (err, dirExists) => {\n          if (err) return callback(err)\n          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)\n          mkdirs(dir, err => {\n            if (err) return callback(err)\n            fs.symlink(srcpath, dstpath, type, callback)\n          })\n        })\n      })\n    })\n  })\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/ensure/symlink.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/fs/index.js":
/*!***********************************************!*\
  !*** ./node_modules/fs-extra/lib/fs/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromCallback\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'copyFile',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchmod',\n  'lchown',\n  'link',\n  'lstat',\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'opendir',\n  'readdir',\n  'readFile',\n  'readlink',\n  'realpath',\n  'rename',\n  'rm',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile'\n].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.opendir was added in Node.js v12.12.0\n  // fs.rm was added in Node.js v14.14.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function'\n})\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  if (key === 'promises') {\n    // fs.promises is a getter property that triggers ExperimentalWarning\n    // Don't re-export it here, the getter is defined in \"lib/index.js\"\n    return\n  }\n  exports[key] = fs[key]\n})\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n\n// fs.read(), fs.write(), & fs.writev() need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback)\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffer })\n    })\n  })\n}\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\nexports.write = function (fd, buffer, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffer })\n    })\n  })\n}\n\n// fs.writev only available in Node v12.9.0+\nif (typeof fs.writev === 'function') {\n  // Function signature is\n  // s.writev(fd, buffers[, position], callback)\n  // We need to handle the optional arg, so we use ...args\n  exports.writev = function (fd, buffers, ...args) {\n    if (typeof args[args.length - 1] === 'function') {\n      return fs.writev(fd, buffers, ...args)\n    }\n\n    return new Promise((resolve, reject) => {\n      fs.writev(fd, buffers, ...args, (err, bytesWritten, buffers) => {\n        if (err) return reject(err)\n        resolve({ bytesWritten, buffers })\n      })\n    })\n  }\n}\n\n// fs.realpath.native only available in Node v9.2+\nif (typeof fs.realpath.native === 'function') {\n  exports.realpath.native = u(fs.realpath.native)\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/fs/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/index.js":
/*!********************************************!*\
  !*** ./node_modules/fs-extra/lib/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nmodule.exports = {\n  // Export promiseified graceful-fs:\n  ...__webpack_require__(/*! ./fs */ \"./node_modules/fs-extra/lib/fs/index.js\"),\n  // Export extra methods:\n  ...__webpack_require__(/*! ./copy-sync */ \"./node_modules/fs-extra/lib/copy-sync/index.js\"),\n  ...__webpack_require__(/*! ./copy */ \"./node_modules/fs-extra/lib/copy/index.js\"),\n  ...__webpack_require__(/*! ./empty */ \"./node_modules/fs-extra/lib/empty/index.js\"),\n  ...__webpack_require__(/*! ./ensure */ \"./node_modules/fs-extra/lib/ensure/index.js\"),\n  ...__webpack_require__(/*! ./json */ \"./node_modules/fs-extra/lib/json/index.js\"),\n  ...__webpack_require__(/*! ./mkdirs */ \"./node_modules/fs-extra/lib/mkdirs/index.js\"),\n  ...__webpack_require__(/*! ./move-sync */ \"./node_modules/fs-extra/lib/move-sync/index.js\"),\n  ...__webpack_require__(/*! ./move */ \"./node_modules/fs-extra/lib/move/index.js\"),\n  ...__webpack_require__(/*! ./output */ \"./node_modules/fs-extra/lib/output/index.js\"),\n  ...__webpack_require__(/*! ./path-exists */ \"./node_modules/fs-extra/lib/path-exists/index.js\"),\n  ...__webpack_require__(/*! ./remove */ \"./node_modules/fs-extra/lib/remove/index.js\")\n}\n\n// Export fs.promises as a getter property so that we don't trigger\n// ExperimentalWarning before fs.promises is actually accessed.\nconst fs = __webpack_require__(/*! fs */ \"fs\")\nif (Object.getOwnPropertyDescriptor(fs, 'promises')) {\n  Object.defineProperty(module.exports, \"promises\", ({\n    get () { return fs.promises }\n  }))\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/json/index.js":
/*!*************************************************!*\
  !*** ./node_modules/fs-extra/lib/json/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromPromise\nconst jsonFile = __webpack_require__(/*! ./jsonfile */ \"./node_modules/fs-extra/lib/json/jsonfile.js\")\n\njsonFile.outputJson = u(__webpack_require__(/*! ./output-json */ \"./node_modules/fs-extra/lib/json/output-json.js\"))\njsonFile.outputJsonSync = __webpack_require__(/*! ./output-json-sync */ \"./node_modules/fs-extra/lib/json/output-json-sync.js\")\n// aliases\njsonFile.outputJSON = jsonFile.outputJson\njsonFile.outputJSONSync = jsonFile.outputJsonSync\njsonFile.writeJSON = jsonFile.writeJson\njsonFile.writeJSONSync = jsonFile.writeJsonSync\njsonFile.readJSON = jsonFile.readJson\njsonFile.readJSONSync = jsonFile.readJsonSync\n\nmodule.exports = jsonFile\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/json/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/json/jsonfile.js":
/*!****************************************************!*\
  !*** ./node_modules/fs-extra/lib/json/jsonfile.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst jsonFile = __webpack_require__(/*! jsonfile */ \"./node_modules/jsonfile/index.js\")\n\nmodule.exports = {\n  // jsonfile exports\n  readJson: jsonFile.readFile,\n  readJsonSync: jsonFile.readFileSync,\n  writeJson: jsonFile.writeFile,\n  writeJsonSync: jsonFile.writeFileSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/json/jsonfile.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/json/output-json-sync.js":
/*!************************************************************!*\
  !*** ./node_modules/fs-extra/lib/json/output-json-sync.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { stringify } = __webpack_require__(/*! jsonfile/utils */ \"./node_modules/jsonfile/utils.js\")\nconst { outputFileSync } = __webpack_require__(/*! ../output */ \"./node_modules/fs-extra/lib/output/index.js\")\n\nfunction outputJsonSync (file, data, options) {\n  const str = stringify(data, options)\n\n  outputFileSync(file, str, options)\n}\n\nmodule.exports = outputJsonSync\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/json/output-json-sync.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/json/output-json.js":
/*!*******************************************************!*\
  !*** ./node_modules/fs-extra/lib/json/output-json.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { stringify } = __webpack_require__(/*! jsonfile/utils */ \"./node_modules/jsonfile/utils.js\")\nconst { outputFile } = __webpack_require__(/*! ../output */ \"./node_modules/fs-extra/lib/output/index.js\")\n\nasync function outputJson (file, data, options = {}) {\n  const str = stringify(data, options)\n\n  await outputFile(file, str, options)\n}\n\nmodule.exports = outputJson\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/json/output-json.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/mkdirs/index.js":
/*!***************************************************!*\
  !*** ./node_modules/fs-extra/lib/mkdirs/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromPromise\nconst { makeDir: _makeDir, makeDirSync } = __webpack_require__(/*! ./make-dir */ \"./node_modules/fs-extra/lib/mkdirs/make-dir.js\")\nconst makeDir = u(_makeDir)\n\nmodule.exports = {\n  mkdirs: makeDir,\n  mkdirsSync: makeDirSync,\n  // alias\n  mkdirp: makeDir,\n  mkdirpSync: makeDirSync,\n  ensureDir: makeDir,\n  ensureDirSync: makeDirSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/mkdirs/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/mkdirs/make-dir.js":
/*!******************************************************!*\
  !*** ./node_modules/fs-extra/lib/mkdirs/make-dir.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Adapted from https://github.com/sindresorhus/make-dir\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst fs = __webpack_require__(/*! ../fs */ \"./node_modules/fs-extra/lib/fs/index.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst atLeastNode = __webpack_require__(/*! at-least-node */ \"./node_modules/at-least-node/index.js\")\n\nconst useNativeRecursiveOption = atLeastNode('10.12.0')\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n  if (process.platform === 'win32') {\n    const pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''))\n\n    if (pathHasInvalidWinCharacters) {\n      const error = new Error(`Path contains invalid characters: ${pth}`)\n      error.code = 'EINVAL'\n      throw error\n    }\n  }\n}\n\nconst processOptions = options => {\n  const defaults = { mode: 0o777 }\n  if (typeof options === 'number') options = { mode: options }\n  return { ...defaults, ...options }\n}\n\nconst permissionError = pth => {\n  // This replicates the exception of `fs.mkdir` with native the\n  // `recusive` option when run on an invalid drive under Windows.\n  const error = new Error(`operation not permitted, mkdir '${pth}'`)\n  error.code = 'EPERM'\n  error.errno = -4048\n  error.path = pth\n  error.syscall = 'mkdir'\n  return error\n}\n\nmodule.exports.makeDir = async (input, options) => {\n  checkPath(input)\n  options = processOptions(options)\n\n  if (useNativeRecursiveOption) {\n    const pth = path.resolve(input)\n\n    return fs.mkdir(pth, {\n      mode: options.mode,\n      recursive: true\n    })\n  }\n\n  const make = async pth => {\n    try {\n      await fs.mkdir(pth, options.mode)\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error\n      }\n\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth)\n        }\n\n        if (error.message.includes('null bytes')) {\n          throw error\n        }\n\n        await make(path.dirname(pth))\n        return make(pth)\n      }\n\n      try {\n        const stats = await fs.stat(pth)\n        if (!stats.isDirectory()) {\n          // This error is never exposed to the user\n          // it is caught below, and the original error is thrown\n          throw new Error('The path is not a directory')\n        }\n      } catch {\n        throw error\n      }\n    }\n  }\n\n  return make(path.resolve(input))\n}\n\nmodule.exports.makeDirSync = (input, options) => {\n  checkPath(input)\n  options = processOptions(options)\n\n  if (useNativeRecursiveOption) {\n    const pth = path.resolve(input)\n\n    return fs.mkdirSync(pth, {\n      mode: options.mode,\n      recursive: true\n    })\n  }\n\n  const make = pth => {\n    try {\n      fs.mkdirSync(pth, options.mode)\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error\n      }\n\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth)\n        }\n\n        if (error.message.includes('null bytes')) {\n          throw error\n        }\n\n        make(path.dirname(pth))\n        return make(pth)\n      }\n\n      try {\n        if (!fs.statSync(pth).isDirectory()) {\n          // This error is never exposed to the user\n          // it is caught below, and the original error is thrown\n          throw new Error('The path is not a directory')\n        }\n      } catch {\n        throw error\n      }\n    }\n  }\n\n  return make(path.resolve(input))\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/mkdirs/make-dir.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/move-sync/index.js":
/*!******************************************************!*\
  !*** ./node_modules/fs-extra/lib/move-sync/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nmodule.exports = {\n  moveSync: __webpack_require__(/*! ./move-sync */ \"./node_modules/fs-extra/lib/move-sync/move-sync.js\")\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/move-sync/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/move-sync/move-sync.js":
/*!**********************************************************!*\
  !*** ./node_modules/fs-extra/lib/move-sync/move-sync.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst copySync = __webpack_require__(/*! ../copy-sync */ \"./node_modules/fs-extra/lib/copy-sync/index.js\").copySync\nconst removeSync = __webpack_require__(/*! ../remove */ \"./node_modules/fs-extra/lib/remove/index.js\").removeSync\nconst mkdirpSync = __webpack_require__(/*! ../mkdirs */ \"./node_modules/fs-extra/lib/mkdirs/index.js\").mkdirpSync\nconst stat = __webpack_require__(/*! ../util/stat */ \"./node_modules/fs-extra/lib/util/stat.js\")\n\nfunction moveSync (src, dest, opts) {\n  opts = opts || {}\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat } = stat.checkPathsSync(src, dest, 'move')\n  stat.checkParentPathsSync(src, srcStat, dest, 'move')\n  mkdirpSync(path.dirname(dest))\n  return doRename(src, dest, overwrite)\n}\n\nfunction doRename (src, dest, overwrite) {\n  if (overwrite) {\n    removeSync(dest)\n    return rename(src, dest, overwrite)\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.')\n  return rename(src, dest, overwrite)\n}\n\nfunction rename (src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err\n    return moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  }\n  copySync(src, dest, opts)\n  return removeSync(src)\n}\n\nmodule.exports = moveSync\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/move-sync/move-sync.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/move/index.js":
/*!*************************************************!*\
  !*** ./node_modules/fs-extra/lib/move/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromCallback\nmodule.exports = {\n  move: u(__webpack_require__(/*! ./move */ \"./node_modules/fs-extra/lib/move/move.js\"))\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/move/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/move/move.js":
/*!************************************************!*\
  !*** ./node_modules/fs-extra/lib/move/move.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst copy = __webpack_require__(/*! ../copy */ \"./node_modules/fs-extra/lib/copy/index.js\").copy\nconst remove = __webpack_require__(/*! ../remove */ \"./node_modules/fs-extra/lib/remove/index.js\").remove\nconst mkdirp = __webpack_require__(/*! ../mkdirs */ \"./node_modules/fs-extra/lib/mkdirs/index.js\").mkdirp\nconst pathExists = __webpack_require__(/*! ../path-exists */ \"./node_modules/fs-extra/lib/path-exists/index.js\").pathExists\nconst stat = __webpack_require__(/*! ../util/stat */ \"./node_modules/fs-extra/lib/util/stat.js\")\n\nfunction move (src, dest, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  stat.checkPaths(src, dest, 'move', (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'move', err => {\n      if (err) return cb(err)\n      mkdirp(path.dirname(dest), err => {\n        if (err) return cb(err)\n        return doRename(src, dest, overwrite, cb)\n      })\n    })\n  })\n}\n\nfunction doRename (src, dest, overwrite, cb) {\n  if (overwrite) {\n    return remove(dest, err => {\n      if (err) return cb(err)\n      return rename(src, dest, overwrite, cb)\n    })\n  }\n  pathExists(dest, (err, destExists) => {\n    if (err) return cb(err)\n    if (destExists) return cb(new Error('dest already exists.'))\n    return rename(src, dest, overwrite, cb)\n  })\n}\n\nfunction rename (src, dest, overwrite, cb) {\n  fs.rename(src, dest, err => {\n    if (!err) return cb()\n    if (err.code !== 'EXDEV') return cb(err)\n    return moveAcrossDevice(src, dest, overwrite, cb)\n  })\n}\n\nfunction moveAcrossDevice (src, dest, overwrite, cb) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  }\n  copy(src, dest, opts, err => {\n    if (err) return cb(err)\n    return remove(src, cb)\n  })\n}\n\nmodule.exports = move\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/move/move.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/output/index.js":
/*!***************************************************!*\
  !*** ./node_modules/fs-extra/lib/output/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromCallback\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst mkdir = __webpack_require__(/*! ../mkdirs */ \"./node_modules/fs-extra/lib/mkdirs/index.js\")\nconst pathExists = __webpack_require__(/*! ../path-exists */ \"./node_modules/fs-extra/lib/path-exists/index.js\").pathExists\n\nfunction outputFile (file, data, encoding, callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding\n    encoding = 'utf8'\n  }\n\n  const dir = path.dirname(file)\n  pathExists(dir, (err, itDoes) => {\n    if (err) return callback(err)\n    if (itDoes) return fs.writeFile(file, data, encoding, callback)\n\n    mkdir.mkdirs(dir, err => {\n      if (err) return callback(err)\n\n      fs.writeFile(file, data, encoding, callback)\n    })\n  })\n}\n\nfunction outputFileSync (file, ...args) {\n  const dir = path.dirname(file)\n  if (fs.existsSync(dir)) {\n    return fs.writeFileSync(file, ...args)\n  }\n  mkdir.mkdirsSync(dir)\n  fs.writeFileSync(file, ...args)\n}\n\nmodule.exports = {\n  outputFile: u(outputFile),\n  outputFileSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/output/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/path-exists/index.js":
/*!********************************************************!*\
  !*** ./node_modules/fs-extra/lib/path-exists/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromPromise\nconst fs = __webpack_require__(/*! ../fs */ \"./node_modules/fs-extra/lib/fs/index.js\")\n\nfunction pathExists (path) {\n  return fs.access(path).then(() => true).catch(() => false)\n}\n\nmodule.exports = {\n  pathExists: u(pathExists),\n  pathExistsSync: fs.existsSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/path-exists/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/remove/index.js":
/*!***************************************************!*\
  !*** ./node_modules/fs-extra/lib/remove/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst u = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\").fromCallback\nconst rimraf = __webpack_require__(/*! ./rimraf */ \"./node_modules/fs-extra/lib/remove/rimraf.js\")\n\nmodule.exports = {\n  remove: u(rimraf),\n  removeSync: rimraf.sync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/remove/index.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/remove/rimraf.js":
/*!****************************************************!*\
  !*** ./node_modules/fs-extra/lib/remove/rimraf.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst assert = __webpack_require__(/*! assert */ \"assert\")\n\nconst isWindows = (process.platform === 'win32')\n\nfunction defaults (options) {\n  const methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'lstat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(m => {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n\n  options.maxBusyTries = options.maxBusyTries || 3\n}\n\nfunction rimraf (p, options, cb) {\n  let busyTries = 0\n\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  assert(p, 'rimraf: missing path')\n  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')\n  assert.strictEqual(typeof cb, 'function', 'rimraf: callback function required')\n  assert(options, 'rimraf: invalid options argument provided')\n  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')\n\n  defaults(options)\n\n  rimraf_(p, options, function CB (er) {\n    if (er) {\n      if ((er.code === 'EBUSY' || er.code === 'ENOTEMPTY' || er.code === 'EPERM') &&\n          busyTries < options.maxBusyTries) {\n        busyTries++\n        const time = busyTries * 100\n        // try again, with the same exact callback as this one.\n        return setTimeout(() => rimraf_(p, options, CB), time)\n      }\n\n      // already gone\n      if (er.code === 'ENOENT') er = null\n    }\n\n    cb(er)\n  })\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_ (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // sunos lets the root user unlink directories, which is... weird.\n  // so we have to lstat here and make sure it's not a dir.\n  options.lstat(p, (er, st) => {\n    if (er && er.code === 'ENOENT') {\n      return cb(null)\n    }\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er && er.code === 'EPERM' && isWindows) {\n      return fixWinEPERM(p, options, er, cb)\n    }\n\n    if (st && st.isDirectory()) {\n      return rmdir(p, options, er, cb)\n    }\n\n    options.unlink(p, er => {\n      if (er) {\n        if (er.code === 'ENOENT') {\n          return cb(null)\n        }\n        if (er.code === 'EPERM') {\n          return (isWindows)\n            ? fixWinEPERM(p, options, er, cb)\n            : rmdir(p, options, er, cb)\n        }\n        if (er.code === 'EISDIR') {\n          return rmdir(p, options, er, cb)\n        }\n      }\n      return cb(er)\n    })\n  })\n}\n\nfunction fixWinEPERM (p, options, er, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.chmod(p, 0o666, er2 => {\n    if (er2) {\n      cb(er2.code === 'ENOENT' ? null : er)\n    } else {\n      options.stat(p, (er3, stats) => {\n        if (er3) {\n          cb(er3.code === 'ENOENT' ? null : er)\n        } else if (stats.isDirectory()) {\n          rmdir(p, options, er, cb)\n        } else {\n          options.unlink(p, cb)\n        }\n      })\n    }\n  })\n}\n\nfunction fixWinEPERMSync (p, options, er) {\n  let stats\n\n  assert(p)\n  assert(options)\n\n  try {\n    options.chmodSync(p, 0o666)\n  } catch (er2) {\n    if (er2.code === 'ENOENT') {\n      return\n    } else {\n      throw er\n    }\n  }\n\n  try {\n    stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === 'ENOENT') {\n      return\n    } else {\n      throw er\n    }\n  }\n\n  if (stats.isDirectory()) {\n    rmdirSync(p, options, er)\n  } else {\n    options.unlinkSync(p)\n  }\n}\n\nfunction rmdir (p, options, originalEr, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, er => {\n    if (er && (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM')) {\n      rmkids(p, options, cb)\n    } else if (er && er.code === 'ENOTDIR') {\n      cb(originalEr)\n    } else {\n      cb(er)\n    }\n  })\n}\n\nfunction rmkids (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, (er, files) => {\n    if (er) return cb(er)\n\n    let n = files.length\n    let errState\n\n    if (n === 0) return options.rmdir(p, cb)\n\n    files.forEach(f => {\n      rimraf(path.join(p, f), options, er => {\n        if (errState) {\n          return\n        }\n        if (er) return cb(errState = er)\n        if (--n === 0) {\n          options.rmdir(p, cb)\n        }\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync (p, options) {\n  let st\n\n  options = options || {}\n  defaults(options)\n\n  assert(p, 'rimraf: missing path')\n  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')\n\n  try {\n    st = options.lstatSync(p)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      return\n    }\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er.code === 'EPERM' && isWindows) {\n      fixWinEPERMSync(p, options, er)\n    }\n  }\n\n  try {\n    // sunos lets the root user unlink directories, which is... weird.\n    if (st && st.isDirectory()) {\n      rmdirSync(p, options, null)\n    } else {\n      options.unlinkSync(p)\n    }\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      return\n    } else if (er.code === 'EPERM') {\n      return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n    } else if (er.code !== 'EISDIR') {\n      throw er\n    }\n    rmdirSync(p, options, er)\n  }\n}\n\nfunction rmdirSync (p, options, originalEr) {\n  assert(p)\n  assert(options)\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === 'ENOTDIR') {\n      throw originalEr\n    } else if (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM') {\n      rmkidsSync(p, options)\n    } else if (er.code !== 'ENOENT') {\n      throw er\n    }\n  }\n}\n\nfunction rmkidsSync (p, options) {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(f => rimrafSync(path.join(p, f), options))\n\n  if (isWindows) {\n    // We only end up here once we got ENOTEMPTY at least once, and\n    // at this point, we are guaranteed to have removed all the kids.\n    // So, we know that it won't be ENOENT or ENOTDIR or anything else.\n    // try really hard to delete stuff on windows, because it has a\n    // PROFOUNDLY annoying habit of not closing handles promptly when\n    // files are deleted, resulting in spurious ENOTEMPTY errors.\n    const startTime = Date.now()\n    do {\n      try {\n        const ret = options.rmdirSync(p, options)\n        return ret\n      } catch {}\n    } while (Date.now() - startTime < 500) // give up after 500ms\n  } else {\n    const ret = options.rmdirSync(p, options)\n    return ret\n  }\n}\n\nmodule.exports = rimraf\nrimraf.sync = rimrafSync\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/remove/rimraf.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/util/stat.js":
/*!************************************************!*\
  !*** ./node_modules/fs-extra/lib/util/stat.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst fs = __webpack_require__(/*! ../fs */ \"./node_modules/fs-extra/lib/fs/index.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst util = __webpack_require__(/*! util */ \"util\")\nconst atLeastNode = __webpack_require__(/*! at-least-node */ \"./node_modules/at-least-node/index.js\")\n\nconst nodeSupportsBigInt = atLeastNode('10.5.0')\nconst stat = (file) => nodeSupportsBigInt ? fs.stat(file, { bigint: true }) : fs.stat(file)\nconst statSync = (file) => nodeSupportsBigInt ? fs.statSync(file, { bigint: true }) : fs.statSync(file)\n\nfunction getStats (src, dest) {\n  return Promise.all([\n    stat(src),\n    stat(dest).catch(err => {\n      if (err.code === 'ENOENT') return null\n      throw err\n    })\n  ]).then(([srcStat, destStat]) => ({ srcStat, destStat }))\n}\n\nfunction getStatsSync (src, dest) {\n  let destStat\n  const srcStat = statSync(src)\n  try {\n    destStat = statSync(dest)\n  } catch (err) {\n    if (err.code === 'ENOENT') return { srcStat, destStat: null }\n    throw err\n  }\n  return { srcStat, destStat }\n}\n\nfunction checkPaths (src, dest, funcName, cb) {\n  util.callbackify(getStats)(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    if (destStat && areIdentical(srcStat, destStat)) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return cb(null, { srcStat, destStat })\n  })\n}\n\nfunction checkPathsSync (src, dest, funcName) {\n  const { srcStat, destStat } = getStatsSync(src, dest)\n  if (destStat && areIdentical(srcStat, destStat)) {\n    throw new Error('Source and destination must not be the same.')\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return { srcStat, destStat }\n}\n\n// recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\nfunction checkParentPaths (src, srcStat, dest, funcName, cb) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()\n  const callback = (err, destStat) => {\n    if (err) {\n      if (err.code === 'ENOENT') return cb()\n      return cb(err)\n    }\n    if (areIdentical(srcStat, destStat)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return checkParentPaths(src, srcStat, destParent, funcName, cb)\n  }\n  if (nodeSupportsBigInt) fs.stat(destParent, { bigint: true }, callback)\n  else fs.stat(destParent, callback)\n}\n\nfunction checkParentPathsSync (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n  let destStat\n  try {\n    destStat = statSync(destParent)\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName)\n}\n\nfunction areIdentical (srcStat, destStat) {\n  if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    if (nodeSupportsBigInt || destStat.ino < Number.MAX_SAFE_INTEGER) {\n      // definitive answer\n      return true\n    }\n    // Use additional heuristics if we can't use 'bigint'.\n    // Different 'ino' could be represented the same if they are >= Number.MAX_SAFE_INTEGER\n    // See issue 657\n    if (destStat.size === srcStat.size &&\n        destStat.mode === srcStat.mode &&\n        destStat.nlink === srcStat.nlink &&\n        destStat.atimeMs === srcStat.atimeMs &&\n        destStat.mtimeMs === srcStat.mtimeMs &&\n        destStat.ctimeMs === srcStat.ctimeMs &&\n        destStat.birthtimeMs === srcStat.birthtimeMs) {\n      // heuristic answer\n      return true\n    }\n  }\n  return false\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\nfunction isSrcSubdir (src, dest) {\n  const srcArr = path.resolve(src).split(path.sep).filter(i => i)\n  const destArr = path.resolve(dest).split(path.sep).filter(i => i)\n  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)\n}\n\nfunction errMsg (src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`\n}\n\nmodule.exports = {\n  checkPaths,\n  checkPathsSync,\n  checkParentPaths,\n  checkParentPathsSync,\n  isSrcSubdir\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/util/stat.js?");

/***/ }),

/***/ "./node_modules/fs-extra/lib/util/utimes.js":
/*!**************************************************!*\
  !*** ./node_modules/fs-extra/lib/util/utimes.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\n\nfunction utimesMillis (path, atime, mtime, callback) {\n  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)\n  fs.open(path, 'r+', (err, fd) => {\n    if (err) return callback(err)\n    fs.futimes(fd, atime, mtime, futimesErr => {\n      fs.close(fd, closeErr => {\n        if (callback) callback(futimesErr || closeErr)\n      })\n    })\n  })\n}\n\nfunction utimesMillisSync (path, atime, mtime) {\n  const fd = fs.openSync(path, 'r+')\n  fs.futimesSync(fd, atime, mtime)\n  return fs.closeSync(fd)\n}\n\nmodule.exports = {\n  utimesMillis,\n  utimesMillisSync\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/fs-extra/lib/util/utimes.js?");

/***/ }),

/***/ "./node_modules/graceful-fs/clone.js":
/*!*******************************************!*\
  !*** ./node_modules/graceful-fs/clone.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = clone\n\nvar getPrototypeOf = Object.getPrototypeOf || function (obj) {\n  return obj.__proto__\n}\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: getPrototypeOf(obj) }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/graceful-fs/clone.js?");

/***/ }),

/***/ "./node_modules/graceful-fs/graceful-fs.js":
/*!*************************************************!*\
  !*** ./node_modules/graceful-fs/graceful-fs.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var fs = __webpack_require__(/*! fs */ \"fs\")\nvar polyfills = __webpack_require__(/*! ./polyfills.js */ \"./node_modules/graceful-fs/polyfills.js\")\nvar legacy = __webpack_require__(/*! ./legacy-streams.js */ \"./node_modules/graceful-fs/legacy-streams.js\")\nvar clone = __webpack_require__(/*! ./clone.js */ \"./node_modules/graceful-fs/clone.js\")\n\nvar util = __webpack_require__(/*! util */ \"util\")\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          retry()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      retry()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      __webpack_require__(/*! assert */ \"assert\").equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$copyFile = fs.copyFile\n  if (fs$copyFile)\n    fs.copyFile = copyFile\n  function copyFile (src, dest, flags, cb) {\n    if (typeof flags === 'function') {\n      cb = flags\n      flags = 0\n    }\n    return fs$copyFile(src, dest, flags, function (err) {\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([fs$copyFile, [src, dest, flags, cb]])\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    })\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    var args = [path]\n    if (typeof options !== 'function') {\n      args.push(options)\n    } else {\n      cb = options\n    }\n    args.push(go$readdir$cb)\n\n    return go$readdir(args)\n\n    function go$readdir$cb (err, files) {\n      if (files && files.sort)\n        files.sort()\n\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([go$readdir, [args]])\n\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    }\n  }\n\n  function go$readdir (args) {\n    return fs$readdir.apply(fs, args)\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n}\n\nfunction retry () {\n  var elem = fs[gracefulQueue].shift()\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1])\n    elem[0].apply(null, elem[1])\n  }\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/graceful-fs/graceful-fs.js?");

/***/ }),

/***/ "./node_modules/graceful-fs/legacy-streams.js":
/*!****************************************************!*\
  !*** ./node_modules/graceful-fs/legacy-streams.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Stream = __webpack_require__(/*! stream */ \"stream\").Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/graceful-fs/legacy-streams.js?");

/***/ }),

/***/ "./node_modules/graceful-fs/polyfills.js":
/*!***********************************************!*\
  !*** ./node_modules/graceful-fs/polyfills.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var constants = __webpack_require__(/*! constants */ \"constants\")\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\n// This check is needed until node.js 12 is required\nif (typeof process.chdir === 'function') {\n  var chdir = process.chdir\n  process.chdir = function (d) {\n    cwd = null\n    chdir.call(process, d)\n  }\n  if (Object.setPrototypeOf) Object.setPrototypeOf(process.chdir, chdir)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n      var start = Date.now()\n      var backoff = 0;\n      fs$rename(from, to, function CB (er) {\n        if (er\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n            && Date.now() - start < 60000) {\n          setTimeout(function() {\n            fs.stat(to, function (stater, st) {\n              if (stater && stater.code === \"ENOENT\")\n                fs$rename(from, to, CB);\n              else\n                cb(er)\n            })\n          }, backoff)\n          if (backoff < 100)\n            backoff += 10;\n          return;\n        }\n        if (cb) cb(er)\n      })\n    }})(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = (function (fs$read) {\n    function read (fd, buffer, offset, length, position, callback_) {\n      var callback\n      if (callback_ && typeof callback_ === 'function') {\n        var eagCounter = 0\n        callback = function (er, _, __) {\n          if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n            eagCounter ++\n            return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n          }\n          callback_.apply(this, arguments)\n        }\n      }\n      return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n    }\n\n    // This ensures `util.promisify` works as it does for native `fs.read`.\n    if (Object.setPrototypeOf) Object.setPrototypeOf(read, fs$read)\n    return read\n  })(fs.read)\n\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n\n  function patchLchmod (fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open( path\n             , constants.O_WRONLY | constants.O_SYMLINK\n             , mode\n             , function (err, fd) {\n        if (err) {\n          if (callback) callback(err)\n          return\n        }\n        // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function(err2) {\n            if (callback) callback(err || err2)\n          })\n        })\n      })\n    }\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      var threw = true\n      var ret\n      try {\n        ret = fs.fchmodSync(fd, mode)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n  }\n\n  function patchLutimes (fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er)\n            return\n          }\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2)\n            })\n          })\n        })\n      }\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK)\n        var ret\n        var threw = true\n        try {\n          ret = fs.futimesSync(fd, at, mt)\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else {\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n      fs.lutimesSync = function () {}\n    }\n  }\n\n  function chmodFix (orig) {\n    if (!orig) return orig\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chmodFixSync (orig) {\n    if (!orig) return orig\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function chownFix (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chownFixSync (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n  function statFix (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options, cb) {\n      if (typeof options === 'function') {\n        cb = options\n        options = null\n      }\n      function callback (er, stats) {\n        if (stats) {\n          if (stats.uid < 0) stats.uid += 0x100000000\n          if (stats.gid < 0) stats.gid += 0x100000000\n        }\n        if (cb) cb.apply(this, arguments)\n      }\n      return options ? orig.call(fs, target, options, callback)\n        : orig.call(fs, target, callback)\n    }\n  }\n\n  function statFixSync (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options) {\n      var stats = options ? orig.call(fs, target, options)\n        : orig.call(fs, target)\n      if (stats.uid < 0) stats.uid += 0x100000000\n      if (stats.gid < 0) stats.gid += 0x100000000\n      return stats;\n    }\n  }\n\n  // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n  function chownErOk (er) {\n    if (!er)\n      return true\n\n    if (er.code === \"ENOSYS\")\n      return true\n\n    var nonroot = !process.getuid || process.getuid() !== 0\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n        return true\n    }\n\n    return false\n  }\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/graceful-fs/polyfills.js?");

/***/ }),

/***/ "./node_modules/jsonfile/index.js":
/*!****************************************!*\
  !*** ./node_modules/jsonfile/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("let _fs\ntry {\n  _fs = __webpack_require__(/*! graceful-fs */ \"./node_modules/graceful-fs/graceful-fs.js\")\n} catch (_) {\n  _fs = __webpack_require__(/*! fs */ \"fs\")\n}\nconst universalify = __webpack_require__(/*! universalify */ \"./node_modules/universalify/index.js\")\nconst { stringify, stripBom } = __webpack_require__(/*! ./utils */ \"./node_modules/jsonfile/utils.js\")\n\nasync function _readFile (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  let data = await universalify.fromCallback(fs.readFile)(file, options)\n\n  data = stripBom(data)\n\n  let obj\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n\n  return obj\n}\n\nconst readFile = universalify.fromPromise(_readFile)\n\nfunction readFileSync (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try {\n    let content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nasync function _writeFile (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n\n  await universalify.fromCallback(fs.writeFile)(file, str, options)\n}\n\nconst writeFile = universalify.fromPromise(_writeFile)\n\nfunction writeFileSync (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n}\n\nmodule.exports = jsonfile\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/jsonfile/index.js?");

/***/ }),

/***/ "./node_modules/jsonfile/utils.js":
/*!****************************************!*\
  !*** ./node_modules/jsonfile/utils.js ***!
  \****************************************/
/***/ ((module) => {

eval("function stringify (obj, { EOL = '\\n', finalEOL = true, replacer = null, spaces } = {}) {\n  const EOF = finalEOL ? EOL : ''\n  const str = JSON.stringify(obj, replacer, spaces)\n\n  return str.replace(/\\n/g, EOL) + EOF\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  return content.replace(/^\\uFEFF/, '')\n}\n\nmodule.exports = { stringify, stripBom }\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/jsonfile/utils.js?");

/***/ }),

/***/ "./node_modules/long/src/long.js":
/*!***************************************!*\
  !*** ./node_modules/long/src/long.js ***!
  \***************************************/
/***/ ((module) => {

eval("module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/long/src/long.js?");

/***/ }),

/***/ "./node_modules/node-fetch/lib/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/node-fetch/lib/index.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"Headers\": () => (/* binding */ Headers),\n/* harmony export */   \"Request\": () => (/* binding */ Request),\n/* harmony export */   \"Response\": () => (/* binding */ Response),\n/* harmony export */   \"FetchError\": () => (/* binding */ FetchError)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zlib */ \"zlib\");\n\n\n\n\n\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = stream__WEBPACK_IMPORTED_MODULE_0__.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof stream__WEBPACK_IMPORTED_MODULE_0__)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__ && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http__WEBPACK_IMPORTED_MODULE_1__.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = url__WEBPACK_IMPORTED_MODULE_2__.parse;\nconst format_url = url__WEBPACK_IMPORTED_MODULE_2__.format;\n\nconst streamDestructionSupported = 'destroy' in stream__WEBPACK_IMPORTED_MODULE_0__.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;\nconst resolve_url = url__WEBPACK_IMPORTED_MODULE_2__.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https__WEBPACK_IMPORTED_MODULE_3__ : http__WEBPACK_IMPORTED_MODULE_1__).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib__WEBPACK_IMPORTED_MODULE_4__.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib__WEBPACK_IMPORTED_MODULE_4__.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4__.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4__.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4__.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib__WEBPACK_IMPORTED_MODULE_4__.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4__.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/node-fetch/lib/index.mjs?");

/***/ }),

/***/ "./node_modules/universalify/index.js":
/*!********************************************!*\
  !*** ./node_modules/universalify/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.fromCallback = function (fn) {\n  return Object.defineProperty(function (...args) {\n    if (typeof args[args.length - 1] === 'function') fn.apply(this, args)\n    else {\n      return new Promise((resolve, reject) => {\n        fn.call(\n          this,\n          ...args,\n          (err, res) => (err != null) ? reject(err) : resolve(res)\n        )\n      })\n    }\n  }, 'name', { value: fn.name })\n}\n\nexports.fromPromise = function (fn) {\n  return Object.defineProperty(function (...args) {\n    const cb = args[args.length - 1]\n    if (typeof cb !== 'function') return fn.apply(this, args)\n    else fn.apply(this, args.slice(0, -1)).then(r => cb(null, r), cb)\n  }, 'name', { value: fn.name })\n}\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./node_modules/universalify/index.js?");

/***/ }),

/***/ "./src/model.js":
/*!**********************!*\
  !*** ./src/model.js ***!
  \**********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { load, cut } = __webpack_require__(/*! @node-rs/jieba */ \"@node-rs/jieba\");\nconst { DataCook } = __webpack_require__(/*! @pipcook/core */ \"@pipcook/core\");\nconst { cn, en } = __webpack_require__(/*! ./stopwords */ \"./src/stopwords.js\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst fs = __webpack_require__(/*! fs-extra */ \"./node_modules/fs-extra/lib/index.js\");\n__webpack_require__(/*! @tensorflow/tfjs-backend-cpu */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/index.js\");\nconst { MultinomialNB } = DataCook.Model.NaiveBayes;\nconst { CountVectorizer } = DataCook.Text;\nconst { accuracyScore  } = DataCook.Metrics;\n\nlet classifier;\nlet vectorizer;\n\nconst textProcessing = (row_data, mode='cn') => {\n    let words_list = [];\n    load();\n    row_data.forEach((data, i) => {\n      if (mode == 'cn'){\n        const word_cut = cut(data);\n        words_list.push(word_cut);\n      } else {\n        words_list.push(data)\n      }\n    });\n    return words_list\n}\n\nconst train = async (runtime, options, context) => {\n  const { mode = 'cn' } = options;\n  const { modelDir } = context.workspace;\n  const classifier = new MultinomialNB();\n  const vectorizer = new CountVectorizer();\n\n  const trainData = [];\n  const trainClass = [];\n  // access train samples\n  const trainSamples = await runtime.dataset.train.nextBatch(-1);\n  trainSamples.forEach((d) => {\n    trainData.push(d.data);\n    trainClass.push(d.label.toString());\n  });\n  // process text dataset\n  const trainWordsList = textProcessing(trainData);\n  let stopWords = mode === 'en' ? en : cn;\n  vectorizer.initDict(trainWordsList, stopWords);\n  const trainVector = vectorizer.transform(trainWordsList);\n  // train model\n  await classifier.train(trainVector, trainClass);\n  // predict\n  const predClass = classifier.predict(trainVector);\n  const acc = accuracyScore(trainClass, predClass);\n  console.log(`train accuracy: ${acc}`);\n  // save model file \n  await fs.writeFile(path.join(modelDir, 'model.json'), classifier.toJson());\n  await fs.writeFile(path.join(modelDir, 'vectorizer.json'), vectorizer.toJson());\n  await runtime.saveModel(modelDir);\n};\n\nconst modelLoad = async (context) => {\n  const { modelDir } = context.workspace;\n  const classifier = new MultinomialNB();\n  const vectorizer = new CountVectorizer();\n\n  const modelFs = await fs.readFile(path.join(modelDir, 'model.json'));\n  \n  const modelJson = modelFs.toString();\n  const vectorizerFs =  await fs.readFile(path.join(modelDir, 'vectorizer.json'));\n  const vectorizerJson = vectorizerFs.toString();\n  if (modelJson) classifier.load(modelJson);\n  if (vectorizerJson) vectorizer.load(vectorizerJson);\n  return [ classifier, vectorizer ];\n};\n\nconst predict = async (runtime, options, context) => {\n  if (!classifier || !vectorizer) {\n    [ classifier, vectorizer ] = await modelLoad(context);\n  }\n  // access predict samples\n  const predictData = [];\n  const predictSamples = await runtime.dataset.predicted.nextBatch(-1);\n  predictSamples.forEach((d) => {\n    predictData.push(d.data);\n  });\n  // process text dataset\n  const predictWordsList = textProcessing(predictData);\n  const predictVector = vectorizer.transform(predictWordsList);\n  const predClasses = classifier.predict(predictVector).dataSync();\n  const predIds = predClasses.map((predClass) => classifier.classMap[predClass])\n  const predProbs = classifier.predictProba(predictVector).arraySync();\n  const predictResult = predClasses.map((predClass, i)=>{\n    const res = {id: predIds[i], category: predClass, score: predProbs[i][predIds[i]]}\n    return res\n  })\n  console.log(predictResult);\n  return predictResult\n}\n\nmodule.exports = {\n  train,\n  predict\n}\n\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./src/model.js?");

/***/ }),

/***/ "./src/stopwords.js":
/*!**************************!*\
  !*** ./src/stopwords.js ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {

eval("const cn = '的\\n一\\n不\\n在\\n人\\n有\\n是\\n为\\n以\\n于\\n上\\n他\\n而\\n后\\n之\\n来\\n及\\n了\\n因\\n下\\n可\\n到\\n由\\n这\\n与\\n也\\n此\\n但\\n并\\n个\\n其\\n已\\n无\\n小\\n我\\n们\\n起\\n最\\n再\\n今\\n去\\n好\\n只\\n又\\n或\\n很\\n亦\\n某\\n把\\n那\\n你\\n乃\\n它\\n怎么\\n任何\\n连同\\n开外\\n再有\\n哪些\\n甚至于\\n又及\\n当然\\n就是\\n遵照\\n以来\\n赖以\\n否则\\n此间\\n后者\\n按照\\n才是\\n自身\\n再则\\n就算\\n即便\\n有些\\n例如\\n它们\\n虽然\\n为此\\n以免\\n别处\\n我们\\n依据\\n趁着\\n就要\\n各位\\n别的\\n前者\\n不外乎\\n虽说\\n除此\\n个别\\n的话\\n甚而\\n那般\\n譬如\\n作为\\n谁人\\n进而\\n那边\\n首先\\n因此\\n怎么样\\n果然\\n除非\\n以上\\n为何\\n要么\\n随时\\n如果说\\n诸如\\n还是\\n一旦\\n基于\\n本人\\n因而\\n继而\\n不单\\n此时\\n等等\\n截至\\n不但\\n故而\\n全体\\n从此\\n对于\\n朝着\\n怎样\\n以为\\n那儿\\n或是\\n本身\\n况且\\n处在\\n吧\\n不至于\\n那个\\n被\\n诸位\\n从而\\n比\\n各自\\n针对\\n此外\\n何处\\n为了\\n这般\\n别\\n仍旧\\n既然\\n反而\\n关于\\n较之\\n不管\\n趁\\n彼时\\n这边\\n不光\\n宁可\\n要是\\n其他\\n其它\\n由于\\n还要\\n经过\\n不过\\n来说\\n当\\n从\\n除了\\n到\\n既是\\n的确\\n得\\n说来\\n打\\n据此\\n只限于\\n什么的\\n还有\\n只怕\\n不尽\\n多会\\n正巧\\n凡\\n为什么\\n以至\\n以致\\n某个\\n与否\\n凭借\\n儿\\n不仅\\n尔\\n两者\\n该\\n另外\\n一来\\n正如\\n那里\\n不尽然\\n毋宁\\n这儿\\n嘿嘿\\n就是说\\n正是\\n既往\\n随着\\n于是\\n各\\n给\\n跟\\n那么\\n而后\\n和\\n何\\n似的\\n不料\\n其余\\n或者\\n介于\\n别人\\n还\\n这个\\n受到\\n只是\\n即使\\n即\\n几\\n不论\\n本着\\n既\\n及至\\n加以\\n多么\\n其中\\n别说\\n这会\\n依照\\n人们\\n如此\\n个人\\n出来\\n看\\n另一方面\\n唯有\\n据\\n距\\n靠\\n接着\\n何况\\n啦\\n加之\\n至今\\n凡是\\n他们\\n一切\\n那时\\n只限\\n不然\\n许多\\n在于\\n了\\n某某\\n除外\\n来自\\n便于\\n同时\\n只消\\n只需\\n不如\\n只要\\n另\\n并不\\n不仅仅\\n这里\\n么\\n总之\\n因为\\n每\\n固然\\n们\\n不是\\n嘛\\n或者说\\n然而\\n假如\\n如何\\n这么\\n可见\\n如果\\n拿\\n简言之\\n多少\\n哪\\n那\\n光是\\n非但\\n呵呵\\n只有\\n只因\\n连带\\n正值\\n沿着\\n哪儿\\n他人\\n若非\\n怎么办\\n她们\\n您\\n凭\\n而且\\n与其\\n如同下\\n有的\\n那些\\n甚至\\n为止\\n无论\\n鉴于\\n嘻嘻\\n哪个\\n然后\\n直到\\n且\\n却\\n并非\\n对比\\n为着\\n一些\\n让\\n何时\\n仍\\n啥\\n而是\\n自从\\n比如\\n之所以\\n如\\n你们\\n若\\n使\\n那样\\n所以\\n得了\\n谁\\n当地\\n有关\\n所有\\n因之\\n用来\\n虽\\n随\\n所在\\n同\\n对待\\n而外\\n分别\\n所\\n她\\n某些\\n对方\\n哇\\n嗡\\n往\\n哪\\n不只\\n但是\\n全部\\n尽管\\n些\\n大家\\n以便\\n自己\\n可是\\n反之\\n这些\\n向\\n什么\\n由此\\n万一\\n而已\\n何以\\n咱们\\n沿\\n值此\\n向着\\n哪怕\\n倘若\\n出于\\n哟\\n如上\\n如若\\n替代\\n用\\n什么样\\n如是\\n照着\\n此处\\n于\\n这样\\n每当\\n咱\\n此次\\n至于\\n则\\n怎\\n曾\\n至\\n致\\n此地\\n要不然\\n逐步\\n格里斯\\n本地\\n着\\n诸\\n要不\\n自\\n其次\\n尽管如此\\n遵循\\n乃至\\n若是\\n并且\\n如下\\n可以\\n才能\\n以及\\n彼此\\n根据\\n随后\\n有时';\nconst en = 'i\\nme\\nmy\\nmyself\\nwe\\nour\\nours\\nourselves\\nyou\\nyour\\nyours\\nyourself\\nyourselves\\nhe\\nhim\\nhis\\nhimself\\nshe\\nher\\nhers\\nherself\\nit\\nits\\nitself\\nthey\\nthem\\ntheir\\ntheirs\\nthemselves\\nwhat\\nwhich\\nwho\\nwhom\\nthis\\nthat\\nthese\\nthose\\nam\\nis\\nare\\nwas\\nwere\\nbe\\nbeen\\nbeing\\nhave\\nhas\\nhad\\nhaving\\ndo\\ndoes\\ndid\\ndoing\\na\\nan\\nthe\\nand\\nbut\\nif\\nor\\nbecause\\nas\\nuntil\\nwhile\\nof\\nat\\nby\\nfor\\nwith\\nabout\\nagainst\\nbetween\\ninto\\nthrough\\nduring\\nbefore\\nafter\\nabove\\nbelow\\nto\\nfrom\\nup\\ndown\\nin\\nout\\non\\noff\\nover\\nunder\\nagain\\nfurther\\nthen\\nonce\\nhere\\nthere\\nwhen\\nwhere\\nwhy\\nhow\\nall\\nany\\nboth\\neach\\nfew\\nmore\\nmost\\nother\\nsome\\nsuch\\nno\\nnor\\nnot\\nonly\\nown\\nsame\\nso\\nthan\\ntoo\\nvery\\ns\\nt\\ncan\\nwill\\njust\\ndon\\nshould\\nnow';\n\nexports = {\n  cn,\n  en\n};\n\n\n//# sourceURL=webpack://@pipcook/plugins-bayesian-model-define/./src/stopwords.js?");

/***/ }),

/***/ "@node-rs/jieba":
/*!*********************************!*\
  !*** external "@node-rs/jieba" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@node-rs/jieba");;

/***/ }),

/***/ "@pipcook/core":
/*!********************************!*\
  !*** external "@pipcook/core" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@pipcook/core");;

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");;

/***/ }),

/***/ "constants":
/*!****************************!*\
  !*** external "constants" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("constants");;

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");;

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");;

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");;

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");;

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");;

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");;

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");;

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	(() => {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/model.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});